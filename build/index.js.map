{
  "version": 3,
  "sources": ["empty-module:./QueAnim.client", "empty-module:./SwipeButton.client", "empty-module:./TextEditor.client", "empty-module:./utils/gtags.client", "empty-module:~/components/common/TextEditorNoTools.client", "<stdin>", "../app/entry.server.tsx", "../app/i18next.server.ts", "../public/locales/th/common.json", "../public/locales/en/common.json", "../app/i18n.ts", "../app/session.server.ts", "../app/utils/redis-session-storage.server.ts", "../app/utils/redis.server.ts", "../app/root.tsx", "../app/contexts/AppContext.tsx", "../app/contexts/AuthContext.tsx", "../app/contexts/PartyContext.tsx", "../app/components/common/index.ts", "../app/components/common/Author.tsx", "../app/components/common/BackButton.tsx", "../app/components/common/BannerWithText.tsx", "../app/components/common/BuySellAgreement.tsx", "../app/components/common/TiltButton.tsx", "../app/components/common/CardWithLabel.tsx", "../app/components/common/DndBox.tsx", "../node_modules/react-dnd/src/core/DndContext.ts", "../node_modules/dnd-core/src/createDragDropManager.ts", "../node_modules/@react-dnd/invariant/src/index.ts", "../node_modules/dnd-core/src/utils/js_utils.ts", "../node_modules/dnd-core/src/actions/dragDrop/types.ts", "../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts", "../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts", "../node_modules/dnd-core/src/actions/dragDrop/drop.ts", "../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts", "../node_modules/dnd-core/src/utils/matchesType.ts", "../node_modules/dnd-core/src/actions/dragDrop/hover.ts", "../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts", "../node_modules/dnd-core/src/actions/dragDrop/index.ts", "../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts", "../node_modules/dnd-core/src/utils/coords.ts", "../node_modules/dnd-core/src/utils/dirtiness.ts", "../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts", "../node_modules/@react-dnd/asap/src/makeRequestCall.ts", "../node_modules/@react-dnd/asap/src/AsapQueue.ts", "../node_modules/@react-dnd/asap/src/RawTask.ts", "../node_modules/@react-dnd/asap/src/TaskFactory.ts", "../node_modules/@react-dnd/asap/src/asap.ts", "../node_modules/dnd-core/src/actions/registry.ts", "../node_modules/dnd-core/src/contracts.ts", "../node_modules/dnd-core/src/interfaces.ts", "../node_modules/dnd-core/src/utils/getNextUniqueId.ts", "../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts", "../node_modules/dnd-core/src/utils/equality.ts", "../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts", "../node_modules/dnd-core/src/reducers/dragOffset.ts", "../node_modules/dnd-core/src/reducers/dragOperation.ts", "../node_modules/dnd-core/src/reducers/refCount.ts", "../node_modules/dnd-core/src/reducers/stateId.ts", "../node_modules/dnd-core/src/reducers/index.ts", "../node_modules/react-dnd/src/core/DndProvider.tsx", "../node_modules/react-dnd/src/core/DragPreviewImage.ts", "../node_modules/react-dnd/src/hooks/useCollector.ts", "../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts", "../node_modules/react-dnd/src/hooks/useMonitorOutput.ts", "../node_modules/react-dnd/src/hooks/useCollectedProps.ts", "../node_modules/react-dnd/src/hooks/useOptionalFactory.ts", "../node_modules/react-dnd/src/hooks/useDrag/connectors.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts", "../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts", "../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts", "../node_modules/react-dnd/src/internals/registration.ts", "../node_modules/@react-dnd/shallowequal/src/index.ts", "../node_modules/react-dnd/src/internals/isRef.ts", "../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts", "../node_modules/react-dnd/src/internals/SourceConnector.ts", "../node_modules/react-dnd/src/internals/TargetConnector.ts", "../node_modules/react-dnd/src/hooks/useDragDropManager.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts", "../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts", "../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts", "../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts", "../node_modules/react-dnd/src/hooks/useDragLayer.ts", "../node_modules/react-dnd/src/hooks/useDrop/connectors.ts", "../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts", "../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts", "../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts", "../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts", "../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts", "../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts", "../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts", "../app/components/common/DroppedBox.tsx", "../app/components/common/dummy.tsx", "../app/components/common/ErrorResults.tsx", "../app/components/common/FileUploader.tsx", "../app/components/common/FileUploaderMultiple.tsx", "../app/components/common/GameCard.tsx", "../app/components/common/OverlayBg.tsx", "../app/components/common/GameSelect.tsx", "../app/components/common/ImageSelector.tsx", "../app/components/common/IndexFilter.tsx", "../app/components/common/InlineAvatar.tsx", "../app/components/common/KycBenefits.tsx", "../app/components/common/KycForm.tsx", "../app/utils/helper.tsx", "../app/components/common/KycWizard.tsx", "../app/components/common/Loading.tsx", "../app/components/common/LoginForm.tsx", "../app/components/common/Media.tsx", "../app/components/common/Menus.tsx", "../app/components/common/QuotedComment.tsx", "../app/components/pages/Webboard/WebboardEntry.tsx", "../app/components/pages/Webboard/WebboardEntryAuthor.tsx", "../app/components/pages/Webboard/WebboardEntryControl.tsx", "../app/components/common/ShareDropDown.tsx", "../app/components/pages/Webboard/WebboardEntryMeta.tsx", "../app/components/pages/Webboard/WebboardEntryTags.tsx", "../app/components/pages/Webboard/WebboardForm.tsx", "../app/components/pages/Webboard/WebboardIndexHeader.tsx", "../app/components/pages/Webboard/WebboardIndexSlider.tsx", "../app/components/pages/Webboard/WebboardLists.tsx", "../app/components/pages/Webboard/WebboardReaction.tsx", "../app/components/pages/Webboard/WebboardSingleComment.tsx", "../app/components/pages/Webboard/WebboardSingleCommentBox.tsx", "../app/components/pages/Webboard/WebboardSingleComments.tsx", "../app/components/pages/Webboard/WebboardSinglePost.tsx", "../app/components/pages/Webboard/WebboardTags.tsx", "../app/components/common/Pagination.tsx", "../app/components/common/PasswordMustContain.tsx", "../app/components/common/Poll.tsx", "../app/components/common/PrivateFieldSelection.tsx", "../app/components/common/ReactionsBox.tsx", "../app/components/common/ResponsiveImageCard.tsx", "../app/components/common/SvgText.tsx", "../app/components/common/TiltCheck.tsx", "../app/components/common/TiltMenus.tsx", "../app/components/common/ToCopyField.tsx", "../app/components/common/UserAvatar.tsx", "../app/components/common/WebboardUsageRules.tsx", "../app/components/forms/AcceptCookiesForm.tsx", "../app/components/themes/ThemeProvider.tsx", "../app/api/api.tsx", "../app/api/auth.tsx", "../app/api/organizer.tsx", "../app/api/public.tsx", "../app/api/user.tsx", "../app/api/utilities.tsx", "../app/api/campaign.tsx", "../app/routes/_app.users.$uuid.my-conversations.comments.tsx", "../app/routes/_app.users.$uuid.my-conversations._index.tsx", "../app/routes/_app.settings.personal-detailsOriginal.tsx", "../app/routes/resources.sorting-my-achievement-title.tsx", "../app/routes/resources.sorting-my-experience-title.tsx", "../app/routes/_app.users.$uuid.joined-tournaments.tsx", "../app/components/pages/Tournament/TournamentDate.tsx", "../app/components/pages/Tournament/TournamentEntry.tsx", "../app/components/pages/Tournament/TournamentEntryHeader.tsx", "../app/components/pages/Tournament/TournamentEntryLabel.tsx", "../app/components/pages/Tournament/TournamentForm.tsx", "../app/components/pages/Tournament/TournamentHero.tsx", "../app/components/pages/Tournament/TournamentIndexHeader.tsx", "../app/components/pages/Tournament/TournamentInvitationAlert.tsx", "../app/components/pages/Tournament/TournamentGame.tsx", "../app/components/pages/Tournament/TournamentGrid.tsx", "../app/components/pages/Tournament/TournamentReward.tsx", "../app/components/pages/Tournament/TournamentSingleMenu.tsx", "../app/components/pages/Tournament/TournamentSingleRewards.tsx", "../app/components/pages/Tournament/TournamentSlider.tsx", "../app/components/pages/Tournament/TournamentSliderItem.tsx", "../app/components/pages/Tournament/TournamentTeam.tsx", "../app/components/pages/Tournament/TournamentTeamForm.tsx", "../app/components/pages/Tournament/TournamentTeamMemberForm.tsx", "../app/routes/resources.accept-buy-sell-agreement.tsx", "../app/routes/resources.upload.user-display-image.tsx", "../app/routes/_app.users.$uuid.my-conversations.tsx", "../app/routes/resources.create-experience-title.tsx", "../app/routes/resources.delete-experience-title.tsx", "../app/routes/resources.get-unread-notification.tsx", "../app/routes/resources.upload.user-cover-image.tsx", "../app/routes/_app.users.$uuid.my-album._index.tsx", "../app/components/pages/User/AlbumForm.tsx", "../app/components/pages/Sorting/SortableList.tsx", "../app/components/pages/Sorting/SortableOverlay.tsx", "../app/components/pages/Sorting/SortableItem.tsx", "../app/components/pages/User/AlbumIndexEntry.tsx", "../app/routes/resources.edit-achievement-title.tsx", "../app/routes/resources.sorting-my-achievement.tsx", "../app/routes/_app.users.$uuid.my-tournaments.tsx", "../app/routes/resources.approve-party-request.tsx", "../app/routes/resources.edit-experience-title.tsx", "../app/routes/_app.settings.personal-details.tsx", "../app/routes/resources.create-party-request.tsx", "../app/routes/resources.delete-party-request.tsx", "../app/routes/resources.featured-tournaments.tsx", "../app/routes/resources.reject-party-request.tsx", "../app/routes/resources.send-party-a-message.tsx", "../app/routes/_app.tournaments.$id.schedule.tsx", "../app/routes/_app.tournaments.$id.webboard.tsx", "../app/routes/_app.users.$uuid.my-album.$id.tsx", "../app/components/pages/User/AlbumSingle.tsx", "../app/components/pages/User/AlbumEntryControl.tsx", "../app/routes/resources.create-party-member.tsx", "../app/routes/resources.create-user-in-game.tsx", "../app/routes/resources.delete-party-member.tsx", "../app/routes/resources.delete-user-in-game.tsx", "../app/routes/resources.update-party-member.tsx", "../app/routes/_app.settings.my-achievement.tsx", "../app/components/pages/User/MyAchievementEntry.tsx", "../app/components/pages/User/MyArchievementEntryControl.tsx", "../app/components/pages/User/AchievementForm.tsx", "../app/components/pages/User/AchievementTitleForm.tsx", "../app/routes/resources.create-achievement.tsx", "../app/routes/resources.delete-achievement.tsx", "../app/routes/resources.delete-photo-album.tsx", "../app/routes/resources.upload-album-paths.tsx", "../app/routes/_app.tournaments.$id._index.tsx", "../app/routes/resources.create-experience.tsx", "../app/routes/resources.delete-experience.tsx", "../app/routes/resources.delete-tournament.tsx", "../app/routes/resources.edit-user-in-game.tsx", "../app/routes/_app.settings.my-games-old.tsx", "../app/routes/_app.tournaments.$id.teams.tsx", "../app/routes/resources.comment-position.tsx", "../app/routes/resources.edit-achievement.tsx", "../app/routes/resources.sorting-my-games.tsx", "../app/routes/_app.auth.google.callback.tsx", "../app/configs/oAuth2.server.ts", "../lib/oauth2-strategy/line.ts", "../lib/oauth2-strategy/google.ts", "../app/configs/auth-session-server.ts", "../app/routes/_app.settings.experiences.tsx", "../app/components/pages/User/ExperiencesForm.tsx", "../app/components/pages/User/ExpereinceEntry.tsx", "../app/components/pages/User/ExperienceEntryControl.tsx", "../app/components/pages/User/ExperiencesTitleForm.tsx", "../app/routes/_app.tournaments.$id.edit.tsx", "../app/routes/_app.users.$uuid.messages.tsx", "../app/components/layouts/AffixMenu.tsx", "../app/components/layouts/LayoutDashboard.tsx", "../app/components/layouts/LayoutFooter.tsx", "../app/components/layouts/Navbar.tsx", "../app/components/common/NotificationIcon.tsx", "../app/components/layouts/NavbartDropdown.tsx", "../app/components/layouts/NavbarMobileContent.tsx", "../app/components/pages/User/UserNotificationEntry.tsx", "../app/routes/_app.webboards.$id._index.tsx", "../app/routes/resources.create-webboard.tsx", "../app/routes/resources.edit-experience.tsx", "../app/routes/resources.forgot-password.tsx", "../app/routes/resources.sorting-profile.tsx", "../app/routes/resources.create-comment.tsx", "../app/routes/resources.party-requests.tsx", "../app/routes/resources.peopleWhoLiked.tsx", "../app/routes/resources.sorting-albums.tsx", "../app/routes/resources.update-comment.tsx", "../app/routes/resources.uploadMultiple.tsx", "../app/routes/_app.auth.line.callback.tsx", "../app/routes/_app.tournaments._index.tsx", "../app/routes/_app.users.$uuid._index.tsx", "../app/components/pages/User/MyGameProfileSection.tsx", "../app/components/pages/User/MyGameProfileEntry.tsx", "../app/components/pages/User/MyDetailsSection.tsx", "../app/components/pages/User/MyAlbumsSection.tsx", "../app/components/pages/User/MyExperiencesSection.tsx", "../app/components/pages/User/MyAcheivementProfileSection.tsx", "../app/components/pages/User/MyAchievementProfileEntry.tsx", "../app/routes/_app.webboards.$id.edit.tsx", "../app/routes/resources.party-request.tsx", "../app/routes/resources.reaction-post.tsx", "../app/routes/resources.reset-fetcher.tsx", "../app/routes/_app.settings.my-games.tsx", "../app/components/pages/User/MyGameEntry.tsx", "../app/components/pages/User/MyGameEntryControl.tsx", "../app/components/pages/User/UserGameForm.tsx", "../app/components/pages/User/GameUserSelect.tsx", "../app/routes/_app.settings.webboard.tsx", "../app/routes/resources.create-album.tsx", "../app/routes/resources.create-party.tsx", "../app/routes/resources.delete-album.tsx", "../app/routes/resources.get-the-gift.tsx", "../app/routes/resources.home-banners.tsx", "../app/routes/resources.login-social.tsx", "../app/routes/resources.login-verify.tsx", "../app/routes/resources.update-party.tsx", "../app/routes/_app.privacy-policies.tsx", "../app/routes/_app.teams.$uuid.join.tsx", "../app/routes/_app.terms-of-service.tsx", "../app/routes/_app.webboards._index.tsx", "../app/routes/resources.boost-party.tsx", "../app/routes/resources.delete-post.tsx", "../app/routes/resources.leave-party.tsx", "../app/routes/resources.poll-answer.tsx", "../app/routes/resources.report-post.tsx", "../app/routes/resources.submit-poll.tsx", "../app/routes/_app.campaign._index.tsx", "../app/components/pages/Campaign/CampaignActions.tsx", "../app/components/pages/Campaign/CampaignQuiz.tsx", "../node_modules/dnd-multi-backend/dist/index.js", "../node_modules/react-dnd-multi-backend/dist/index.js", "../node_modules/react-dnd-preview/dist/index.js", "../app/components/pages/Campaign/CampaignStart.tsx", "../app/routes/_app.campaign.result.tsx", "../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts", "../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts", "../node_modules/react-dnd-html5-backend/src/NativeTypes.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts", "../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts", "../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts", "../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts", "../node_modules/react-dnd-html5-backend/src/OptionsReader.ts", "../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts", "../node_modules/react-dnd-html5-backend/src/index.ts", "../node_modules/react-dnd-touch-backend/src/interfaces.ts", "../node_modules/react-dnd-touch-backend/src/OptionsReader.ts", "../node_modules/react-dnd-touch-backend/src/utils/math.ts", "../node_modules/react-dnd-touch-backend/src/utils/predicates.ts", "../node_modules/react-dnd-touch-backend/src/utils/offsets.ts", "../node_modules/react-dnd-touch-backend/src/utils/supportsPassive.ts", "../node_modules/react-dnd-touch-backend/src/TouchBackendImpl.ts", "../node_modules/react-dnd-touch-backend/src/index.ts", "../node_modules/rdndmb-html5-to-touch/dist/index.js", "../app/components/pages/Campaign/CampaignResult2.tsx", "../app/components/pages/Campaign/CampaignTitle.tsx", "../app/components/pages/Campaign/CampaignControl.tsx", "../app/components/pages/Campaign/CampaignGift.tsx", "../app/components/pages/Campaign/CampaignEditButton.tsx", "../app/components/pages/Campaign/CampaignStickers.tsx", "../app/components/pages/Campaign/CampaignThumbnailUpload.tsx", "../app/routes/_app.parties.$gameId.tsx", "../app/components/pages/Party/PartyChat.tsx", "../app/contexts/WebsocketContext.tsx", "../app/components/pages/Party/PartyDetail.tsx", "../app/components/pages/Party/PartyDetailForm.tsx", "../app/components/pages/Party/PartyDetailHeader.tsx", "../app/components/pages/Party/PartyEntry.tsx", "../app/components/pages/Party/PartyEntryMembers.tsx", "../app/components/pages/Party/PartyForm.tsx", "../app/components/pages/Party/PartyFormInlineAvatar.tsx", "../app/components/pages/Party/PartyHero.tsx", "../app/components/pages/Party/PartyInlineAvatar.tsx", "../app/components/pages/Party/PartyLists.tsx", "../app/components/pages/Party/PartyIndexHeader.tsx", "../app/components/pages/Party/PartyMemberEntry.tsx", "../app/components/pages/Party/PartyMemberLists.tsx", "../app/components/pages/Party/PartyRequestEntry.tsx", "../app/components/pages/Party/PartyRequestForm.tsx", "../app/components/pages/Party/PartyRequests.tsx", "../app/components/pages/Party/PartyRules.tsx", "../app/components/common/HowToCreateParty.tsx", "../app/components/common/HowToJoinParty.tsx", "../app/components/common/HowToStartGame.tsx", "../app/routes/_app.secret-chambers.tsx", "../app/routes/_app.settings._index.tsx", "../app/routes/_app.tournaments.$id.tsx", "../app/routes/_app.tournaments.new.tsx", "../app/routes/resources.edit-album.tsx", "../app/routes/resources.party-chat.tsx", "../app/routes/resources.searchUser.tsx", "../app/routes/resources.user-prefs.tsx", "../app/routes/_app.parties._index.tsx", "../app/routes/_app.webboards.$id.tsx", "../app/routes/_app.webboards.new.tsx", "../app/routes/resources.no-frame.tsx", "../app/routes/_app.coming-soon.tsx", "../app/routes/_app.users.$uuid.tsx", "../app/components/pages/User/UserHero.tsx", "../app/components/pages/User/UserSingleMenus.tsx", "../app/components/pages/User/UserSocial.tsx", "../app/components/pages/User/UserTitle.tsx", "../app/routes/resources.logout.tsx", "../app/routes/resources.upload.tsx", "../app/routes/resources.login.tsx", "../app/routes/resources.party.tsx", "../app/routes/_app.tags.$tag.tsx", "../app/routes/_app.webboards.tsx", "../app/routes/resources.tags.tsx", "../app/routes/_app.campaign.tsx", "../app/routes/_app.feedback.tsx", "../app/routes/_app.settings.tsx", "../app/routes/_app.contact.tsx", "../app/routes/_app.parties.tsx", "../app/routes/_app.rewards.tsx", "../app/routes/_app._index.tsx", "../app/components/pages/Tournament/HomeBannerSliderItem.tsx", "../app/routes/_app.health.tsx", "../app/routes/_app.about.tsx", "../app/routes/_app.faqs.tsx", "../app/routes/_app.tags.tsx", "../app/routes/_app.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "module.exports = {};", "module.exports = {};", "module.exports = {};", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\nimport * as Sentry from \"@sentry/remix\";\n\nimport type { DataFunctionArgs, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream, renderToString } from \"react-dom/server\";\n\nimport { createCache, extractStyle, StyleProvider } from \"@ant-design/cssinjs\";\n\nimport { createInstance } from \"i18next\";\n\nimport i18next from \"./i18next.server\";\nimport { I18nextProvider, initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-fs-backend\";\nimport i18n from \"./i18n\"; // your i18n configuration file\nimport { resolve } from \"node:path\";\nimport { userPrefs } from \"./session.server\";\n\nconst ABORT_DELAY = 5_000;\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  environment: process.env.APP_ENV,\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nasync function handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let instance = createInstance();\n  let lng = await i18next.getLocale(request);\n  let ns = i18next.getRouteNamespaces(remixContext);\n\n  const cookie = request.headers.get(\"Cookie\");\n  const userPrefsCookie = (await userPrefs.parse(cookie)) || {};\n\n  lng = userPrefsCookie.locale || \"th\";\n\n  await instance\n    .use(initReactI18next) // Tell our instance to use react-i18next\n    .use(Backend) // Setup our backend\n    .init({\n      ...i18n, // spread the configuration\n      lng, // The locale we detected above\n      ns, // The namespaces the routes about to render wants to use\n\n      backend: { loadPath: resolve(\"./public/locales/{{lng}}/{{ns}}.json\") },\n    });\n\n  return new Promise((resolve, reject) => {\n    const cache = createCache();\n    let markup = renderToString(\n      <StyleProvider cache={cache}>\n        <I18nextProvider i18n={instance}>\n          <RemixServer context={remixContext} url={request.url} />\n        </I18nextProvider>\n      </StyleProvider>\n    );\n\n    const styleText = extractStyle(cache);\n    markup = markup.replace(\"__STYLES__\", styleText);\n\n    const { pipe, abort } = renderToPipeableStream(\n      <I18nextProvider i18n={instance}>\n        <RemixServer\n          context={remixContext}\n          url={request.url}\n          abortDelay={ABORT_DELAY}\n        />\n      </I18nextProvider>,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(\"<!DOCTYPE html>\" + markup, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nexport function handleError(\n  error: unknown,\n  { request }: DataFunctionArgs\n): void {\n  if (error instanceof Error) {\n    Sentry.captureRemixServerException(error, \"remix.server\", request);\n  } else {\n    // Optionally capture non-Error objects\n    Sentry.captureException(error);\n  }\n}\n", "import { resolve } from \"node:path\";\nimport { RemixI18Next } from \"remix-i18next\";\nimport i18n from \"~/i18n\"; // your i18n configuration file\n\nlet i18next = new RemixI18Next({\n  detection: {\n    supportedLanguages: i18n.supportedLngs,\n    fallbackLanguage: i18n.fallbackLng,\n  },\n  // This is the configuration for i18next used\n  // when translating messages server-side only\n  i18next: {\n    ...i18n,\n    backend: {\n      loadPath: resolve(\"./public/locales/{{lng}}/{{ns}}.json\"),\n    },\n  },\n  // The backend you want to use to load the translations\n  // Tip: You could pass `resources` to the `i18next` configuration and avoid\n  // a backend here\n  // backend: Backend,\n});\n\nexport default i18next;\n", "{ \n  \"news\": \"\u0E02\u0E48\u0E32\u0E27\u0E2A\u0E32\u0E23\",\n  \"help\": \"\u0E0A\u0E48\u0E27\u0E22\u0E40\u0E2B\u0E25\u0E37\u0E2D\",\n  \"general\": \"\u0E17\u0E31\u0E48\u0E27\u0E44\u0E1B\",\n  \"review\": \"\u0E23\u0E35\u0E27\u0E34\u0E27\u0E2A\u0E34\u0E19\u0E04\u0E49\u0E32\",\n  \"buy sell\": \"\u0E0B\u0E37\u0E49\u0E2D\u0E02\u0E32\u0E22\",\n  \"tutorial\": \"\u0E40\u0E17\u0E04\u0E19\u0E34\u0E04\u0E01\u0E32\u0E23\u0E40\u0E25\u0E48\u0E19\",\n  \"1. Membership posting in the buy-sell section is reserved exclusively for users who have completed the KYC process.\": \"1. \u0E2A\u0E07\u0E27\u0E19\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E43\u0E2B\u0E49\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E48\u0E17\u0E33\u0E01\u0E32\u0E23\u0E15\u0E31\u0E49\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E0B\u0E37\u0E49\u0E2D\u0E02\u0E32\u0E22\u0E44\u0E14\u0E49 \u0E40\u0E09\u0E1E\u0E32\u0E30\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E48 KYC \u0E41\u0E25\u0E49\u0E27\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19\",\n  \"2. Posting any form of direct sales business, chain sharing, online work, or anything causing harm or disturbance to others is strictly prohibited.\": \"2. \u0E2B\u0E49\u0E32\u0E21\u0E42\u0E1E\u0E2A\u0E15\u0E4C\u0E18\u0E38\u0E23\u0E01\u0E34\u0E08\u0E02\u0E32\u0E22\u0E15\u0E23\u0E07\u0E17\u0E38\u0E01\u0E0A\u0E19\u0E34\u0E14 \u0E41\u0E0A\u0E23\u0E4C\u0E25\u0E39\u0E01\u0E42\u0E0B\u0E48 \u0E17\u0E33\u0E07\u0E32\u0E19\u0E2D\u0E2D\u0E19\u0E44\u0E25\u0E19\u0E4C \u0E2B\u0E23\u0E37\u0E2D\u0E2A\u0E34\u0E48\u0E07\u0E17\u0E35\u0E48\u0E01\u0E48\u0E2D\u0E43\u0E2B\u0E49\u0E40\u0E01\u0E34\u0E14\u0E04\u0E27\u0E32\u0E21\u0E40\u0E2A\u0E35\u0E22\u0E2B\u0E32\u0E22\u0E41\u0E25\u0E30\u0E23\u0E1A\u0E01\u0E27\u0E19\u0E15\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E2D\u0E37\u0E48\u0E19\",\n  \"3. Before making any transactions, please check the seller\u2019s history at\": \"3. \u0E01\u0E48\u0E2D\u0E19\u0E17\u0E33\u0E01\u0E32\u0E23\u0E42\u0E2D\u0E19\u0E40\u0E07\u0E34\u0E19 \u0E2D\u0E22\u0E48\u0E32\u0E25\u0E37\u0E21\u0E40\u0E0A\u0E47\u0E01\u0E1B\u0E23\u0E30\u0E27\u0E31\u0E15\u0E34\u0E02\u0E2D\u0E07\u0E04\u0E19\u0E02\u0E32\u0E22\u0E17\u0E35\u0E48\",\n  \"4. In case of fraud, report the incident online at\": \"4. \u0E2B\u0E32\u0E01\u0E42\u0E14\u0E19\u0E42\u0E01\u0E07 \u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E41\u0E08\u0E49\u0E07\u0E04\u0E27\u0E32\u0E21 Online\",\n  \"5. Contact platform administrators via the Facebook Page ctrl g\": \"5. \u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E14\u0E39\u0E41\u0E25\u0E41\u0E1E\u0E25\u0E15\u0E1F\u0E2D\u0E23\u0E4C\u0E21\u0E44\u0E14\u0E49\u0E17\u0E35\u0E48 Facebook Page : CTRL G\",\n  \"1. Navigate to the Party Matching menu.\": \"1. \u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E40\u0E21\u0E19\u0E39 Party Matching\",\n  \"2. Click the \u201CCreate Party\u201D button.\": \"2. \u0E01\u0E14\u0E1B\u0E38\u0E48\u0E21 \u201C\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u201D\",\n  \"3. Set the party name, enter your in-game character name, choose the play mode, select the desired number of players for the party, pick the rank range for participants, and input the communication channel link for party members.\": \"3. \u0E15\u0E31\u0E49\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49 / \u0E43\u0E2A\u0E48\u0E0A\u0E37\u0E48\u0E2D\u0E15\u0E31\u0E27\u0E25\u0E30\u0E04\u0E23\u0E20\u0E32\u0E22\u0E43\u0E19\u0E40\u0E01\u0E21 / \u0E40\u0E25\u0E37\u0E2D\u0E01\u0E42\u0E2B\u0E21\u0E14\u0E01\u0E32\u0E23\u0E40\u0E25\u0E48\u0E19 / \u0E40\u0E25\u0E37\u0E2D\u0E01\u0E08\u0E33\u0E19\u0E27\u0E19\u0E1C\u0E39\u0E49\u0E40\u0E25\u0E48\u0E19\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E43\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49 / \u0E40\u0E25\u0E37\u0E2D\u0E01\u0E41\u0E23\u0E07\u0E04\u0E4C\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E40\u0E25\u0E48\u0E19\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E43\u0E2B\u0E49\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21 / \u0E43\u0E2A\u0E48\u0E25\u0E34\u0E07\u0E04\u0E4C\u0E0A\u0E48\u0E2D\u0E07\u0E17\u0E32\u0E07\u0E2A\u0E37\u0E48\u0E2D\u0E2A\u0E32\u0E23\u0E01\u0E31\u0E1A\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E43\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"4. Optionally, you can set the party to private if the party creator wants to filter incoming players.\": \"4. \u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E15\u0E31\u0E49\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E31\u0E27\u0E44\u0E14\u0E49 \u0E2B\u0E32\u0E01\u0E1C\u0E39\u0E49\u0E15\u0E31\u0E49\u0E07\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E04\u0E31\u0E14\u0E01\u0E23\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E40\u0E25\u0E48\u0E19\u0E17\u0E35\u0E48\u0E08\u0E30\u0E40\u0E02\u0E49\u0E32\u0E21\u0E32\u0E43\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"1. Click the \u201CJoin\u201D button on the desired party.\": \"1. \u0E01\u0E14\u0E1B\u0E38\u0E48\u0E21 \u201C\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u201D \u0E17\u0E35\u0E48\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"2. Enter your in-game character name.\": \"2. \u0E43\u0E2A\u0E48\u0E0A\u0E37\u0E48\u0E2D\u0E15\u0E31\u0E27\u0E25\u0E30\u0E04\u0E23\u0E20\u0E32\u0E22\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"1. When all members join the party, the party status changes to offline.\": \"1. \u0E40\u0E21\u0E37\u0E48\u0E2D\u0E04\u0E19\u0E43\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E40\u0E02\u0E49\u0E32\u0E08\u0E19\u0E04\u0E23\u0E1A\u0E41\u0E25\u0E49\u0E27 \u0E2A\u0E16\u0E32\u0E19\u0E30\u0E02\u0E2D\u0E07\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E08\u0E30\u0E16\u0E39\u0E01\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E40\u0E1B\u0E47\u0E19\u0E2D\u0E2D\u0E1F\u0E44\u0E25\u0E19\u0E4C\",\n  \"2. Members can coordinate and schedule gameplay using the contact information provided in the party details.\": \"2. \u0E1C\u0E39\u0E49\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E19\u0E31\u0E14\u0E2B\u0E21\u0E32\u0E22\u0E01\u0E31\u0E19\u0E44\u0E14\u0E49\u0E15\u0E32\u0E21\u0E0A\u0E48\u0E2D\u0E07\u0E17\u0E32\u0E07\u0E01\u0E32\u0E23\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E43\u0E2A\u0E48\u0E40\u0E2D\u0E32\u0E44\u0E27\u0E49\u0E43\u0E19\u0E0A\u0E48\u0E2D\u0E07\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"3. Players can then gather and start playing games together using the formed party.\": \"3. \u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E19\u0E31\u0E49\u0E19 \u0E04\u0E19\u0E43\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E14\u0E49\u0E27\u0E22\u0E01\u0E31\u0E19\u0E44\u0E14\u0E49\u0E40\u0E25\u0E22\",\n  \"1. rule rare card\": \"1. \u0E2A\u0E21\u0E31\u0E04\u0E23 \u0E2B\u0E23\u0E37\u0E2D Log - in CTRL G \u0E01\u0E48\u0E2D\u0E19\u0E17\u0E33 Quiz\",\n  \"2. rule rare card\": \"2. \u0E04\u0E25\u0E34\u0E01 \\\"\u0E23\u0E31\u0E1A\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\\\" \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E23\u0E31\u0E1A\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"3. rule rare card\": \"3. \u0E04\u0E25\u0E34\u0E01 \\\"\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\\\" \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E14\u0E39\u0E01\u0E23\u0E2D\u0E1A\u0E44\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\",\n  \"4. rule rare card\": \"4. \u0E04\u0E25\u0E34\u0E01\u0E17\u0E35\u0E48\u0E23\u0E39\u0E1B\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E14\u0E49\u0E32\u0E19\u0E0B\u0E49\u0E32\u0E22\u0E21\u0E37\u0E2D \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E14\u0E39\u0E41\u0E25\u0E30\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E43\u0E0A\u0E49\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\u0E17\u0E35\u0E48\u0E2A\u0E30\u0E2A\u0E21\u0E40\u0E2D\u0E32\u0E44\u0E27\u0E49\",\n  \"about\": \"\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E01\u0E31\u0E1A\u0E40\u0E23\u0E32\",\n  \"about us paragraph 1\": \"CTRL G \u0E23\u0E31\u0E1A\u0E08\u0E1A \u0E04\u0E23\u0E1A\u0E17\u0E38\u0E01\u0E40\u0E23\u0E37\u0E48\u0E2D\u0E07 Esports\",\n  \"about us paragraph 2\": \"CTRL G \u0E40\u0E1B\u0E47\u0E19\u0E01\u0E32\u0E23\u0E23\u0E27\u0E21\u0E15\u0E31\u0E27\u0E01\u0E31\u0E19\u0E02\u0E2D\u0E07\u0E04\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E41\u0E25\u0E30\u0E04\u0E19\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E27\u0E07\u0E01\u0E32\u0E23\u0E40\u0E01\u0E21\u0E21\u0E32\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E22\u0E32\u0E27\u0E19\u0E32\u0E19\u0E2D\u0E22\u0E48\u0E32\u0E07 \u0E2D\u0E34\u0E07\u0E04\u0E4C Pannys \u0E2D\u0E14\u0E35\u0E15\u0E19\u0E31\u0E01\u0E41\u0E02\u0E48\u0E07\u0E40\u0E01\u0E21 Overwatch \u0E17\u0E35\u0E21\u0E0A\u0E32\u0E15\u0E34\u0E44\u0E17\u0E22\u0E41\u0E25\u0E30 Talent Manager / \u0E40\u0E2D\u0E22 Viperdemon \u0E2D\u0E14\u0E35\u0E15\u0E19\u0E31\u0E01\u0E41\u0E02\u0E48\u0E07\u0E40\u0E01\u0E21 CS:GO \u0E41\u0E25\u0E30 Streamer / \u0E17\u0E23\u0E34\u0E1B Ptrip Analyst \u0E41\u0E25\u0E30\u0E19\u0E31\u0E01\u0E1E\u0E32\u0E01\u0E22\u0E4C\u0E40\u0E01\u0E21 Valorant\",\n  \"about us paragraph 3\": \"\u0E1E\u0E27\u0E01\u0E40\u0E02\u0E32\u0E23\u0E27\u0E21\u0E15\u0E31\u0E27\u0E01\u0E31\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E22\u0E01\u0E23\u0E30\u0E14\u0E31\u0E1A\u0E27\u0E07\u0E01\u0E32\u0E23 Esports \u0E43\u0E19\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22\u0E43\u0E2B\u0E49\u0E21\u0E35\u0E04\u0E38\u0E13\u0E20\u0E32\u0E1E\u0E41\u0E25\u0E30\u0E22\u0E34\u0E48\u0E07\u0E43\u0E2B\u0E0D\u0E48\u0E21\u0E32\u0E01\u0E22\u0E34\u0E48\u0E07\u0E02\u0E36\u0E49\u0E19 \u0E42\u0E14\u0E22\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07 Community \u0E17\u0E35\u0E48\u0E08\u0E30\u0E23\u0E27\u0E21\u0E40\u0E2B\u0E25\u0E48\u0E32\u0E04\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E41\u0E25\u0E30\u0E1C\u0E39\u0E49\u0E17\u0E35\u0E48\u0E2A\u0E19\u0E43\u0E08\u0E43\u0E19\u0E27\u0E07\u0E01\u0E32\u0E23 Esports \u0E21\u0E32\u0E23\u0E48\u0E27\u0E21\u0E41\u0E0A\u0E23\u0E4C\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E02\u0E48\u0E32\u0E27\u0E2A\u0E32\u0E23\u0E2A\u0E38\u0E14 Insight \u0E40\u0E08\u0E32\u0E30\u0E25\u0E36\u0E01\u0E27\u0E07\u0E01\u0E32\u0E23 Esport \u0E23\u0E27\u0E21\u0E44\u0E1B\u0E16\u0E36\u0E07\u0E01\u0E32\u0E23\u0E08\u0E31\u0E14 Esport Event \u0E42\u0E14\u0E22\u0E40\u0E23\u0E34\u0E48\u0E21\u0E08\u0E32\u0E01\u0E01\u0E32\u0E23\u0E08\u0E31\u0E14 Campus Tour \u0E41\u0E25\u0E30 School Tour \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E44\u0E1B\u0E08\u0E31\u0E14\u0E01\u0E34\u0E08\u0E01\u0E23\u0E23\u0E21\u0E43\u0E2B\u0E49\u0E04\u0E27\u0E32\u0E21\u0E23\u0E39\u0E49\u0E01\u0E31\u0E1A\u0E19\u0E49\u0E2D\u0E07 \u0E46 \u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E19\u0E43\u0E08\u0E43\u0E19\u0E27\u0E07\u0E01\u0E32\u0E23 Esport \",\n  \"about us paragraph 4\": \"Talent Management \u0E04\u0E37\u0E2D\u0E01\u0E32\u0E23\u0E1A\u0E23\u0E34\u0E2B\u0E32\u0E23\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E1C\u0E39\u0E49\u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2B\u0E23\u0E37\u0E2D\u0E21\u0E35\u0E1E\u0E23\u0E2A\u0E27\u0E23\u0E23\u0E04\u0E4C\u0E43\u0E19\u0E27\u0E07\u0E01\u0E32\u0E23\u0E40\u0E01\u0E21 CTRL G \u0E01\u0E47\u0E21\u0E35\u0E1A\u0E38\u0E04\u0E25\u0E32\u0E01\u0E23\u0E17\u0E35\u0E48\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E08\u0E30\u0E1E\u0E31\u0E12\u0E19\u0E32\u0E41\u0E25\u0E30\u0E1A\u0E23\u0E34\u0E2B\u0E32\u0E23\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E1A\u0E38\u0E04\u0E04\u0E25\u0E40\u0E2B\u0E25\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E08\u0E30\u0E43\u0E2B\u0E49\u0E1E\u0E27\u0E01\u0E40\u0E02\u0E32\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E02\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E2D\u0E2D\u0E01\u0E21\u0E32\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E40\u0E15\u0E47\u0E21\u0E17\u0E35\u0E48\u0E41\u0E25\u0E30\u0E40\u0E15\u0E47\u0E21\u0E1B\u0E23\u0E30\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E20\u0E32\u0E1E \",\n  \"about us paragraph 5\": \"\u0E01\u0E32\u0E23\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19 Esport Tournament \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E22\u0E01\u0E23\u0E30\u0E14\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\u0E43\u0E19\u0E23\u0E30\u0E14\u0E31\u0E1A\u0E42\u0E23\u0E07\u0E40\u0E23\u0E35\u0E22\u0E19\u0E41\u0E25\u0E30\u0E21\u0E2B\u0E32\u0E27\u0E34\u0E17\u0E22\u0E32\u0E25\u0E31\u0E22 \u0E43\u0E2B\u0E49\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E40\u0E02\u0E49\u0E21\u0E02\u0E49\u0E19\u0E41\u0E25\u0E30\u0E08\u0E23\u0E34\u0E07\u0E08\u0E31\u0E07\u0E21\u0E32\u0E01\u0E22\u0E34\u0E48\u0E07\u0E02\u0E36\u0E49\u0E19 \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E1C\u0E25\u0E34\u0E15\u0E40\u0E2B\u0E25\u0E48\u0E32\u0E19\u0E31\u0E01\u0E41\u0E02\u0E48\u0E07\u0E41\u0E25\u0E30\u0E1A\u0E38\u0E04\u0E25\u0E32\u0E01\u0E23\u0E04\u0E38\u0E13\u0E20\u0E32\u0E1E\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E27\u0E07\u0E01\u0E32\u0E23 Esports\",\n  \"accept\": \"\u0E22\u0E34\u0E19\u0E22\u0E2D\u0E21\",\n  \"achievement image\": \"\u0E23\u0E39\u0E1B\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"achievement name\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"achievement title\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E01\u0E25\u0E38\u0E48\u0E21\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"achievement url\": \"\u0E41\u0E19\u0E1A URL \u0E44\u0E1B\u0E17\u0E35\u0E48\u0E1C\u0E25\u0E07\u0E32\u0E19 (\u0E16\u0E49\u0E32\u0E21\u0E35)\",\n  \"active\": \"\u0E2D\u0E2D\u0E19\u0E44\u0E25\u0E19\u0E4C\",\n  \"add\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\",\n  \"add achievement\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"add experince\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"add experience\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"add experience title\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E2D\u0E37\u0E48\u0E19\u0E46\",\n  \"add game\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E40\u0E01\u0E21\",\n  \"Add Item\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E01\u0E25\u0E48\u0E2D\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\",\n  \"add more\": \"\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E1E\u0E34\u0E48\u0E21\",\n  \"add more prize\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\",\n  \"additional fields\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E1C\u0E39\u0E49\u0E40\u0E25\u0E48\u0E19\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\",\n  \"additional player\": \"\u0E08\u0E33\u0E19\u0E27\u0E19\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E15\u0E31\u0E27\u0E2A\u0E33\u0E23\u0E2D\u0E07\",\n  \"address paragraph 1\": \"Space Phahon 19 1687/1 \u0E16\u0E19\u0E19\u0E1E\u0E2B\u0E25\u0E42\u0E22\u0E18\u0E34\u0E19,\",\n  \"address paragraph 2\": \"\u0E41\u0E02\u0E27\u0E07\u0E08\u0E15\u0E38\u0E08\u0E31\u0E01\u0E23, \u0E40\u0E02\u0E15\u0E08\u0E15\u0E38\u0E08\u0E31\u0E01\u0E23, \u0E01\u0E23\u0E38\u0E07\u0E40\u0E17\u0E1E\u0E2F 10900\",\n  \"admin\": \"\u0E41\u0E2D\u0E14\u0E21\u0E34\u0E19\",\n  \"album name\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\",\n  \"album url copied\": \"\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"albums\": \"\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E23\u0E39\u0E1B\",\n  \"all games\": \"\u0E40\u0E01\u0E21\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\",\n  \"All members of your party are here and ready to play!\": \"\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E40\u0E15\u0E47\u0E21\u0E41\u0E25\u0E49\u0E27! \u0E41\u0E2D\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E43\u0E19\u0E40\u0E01\u0E21\u0E41\u0E25\u0E49\u0E27\u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E44\u0E14\u0E49\u0E40\u0E25\u0E22\",\n  \"all notifications\": \"\u0E01\u0E32\u0E23\u0E41\u0E08\u0E49\u0E07\u0E40\u0E15\u0E37\u0E2D\u0E19\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\",\n  \"all parties\": \"\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\",\n  \"all tournaments\": \"\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\",\n  \"allow cookies messages\": \"CTRL G \u0E43\u0E0A\u0E49\u0E04\u0E38\u0E01\u0E01\u0E35\u0E49\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E1B\u0E23\u0E30\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E20\u0E32\u0E1E\u0E43\u0E19\u0E01\u0E32\u0E23\u0E43\u0E2B\u0E49\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23 \u0E41\u0E25\u0E30\u0E2A\u0E48\u0E07\u0E21\u0E2D\u0E1A\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E17\u0E35\u0E48\u0E14\u0E35\u0E43\u0E19\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E40\u0E27\u0E47\u0E1A\u0E44\u0E0B\u0E15\u0E4C \u0E15\u0E23\u0E27\u0E08\u0E2A\u0E2D\u0E1A\u0E41\u0E25\u0E30\u0E17\u0E33\u0E04\u0E27\u0E32\u0E21\u0E40\u0E02\u0E49\u0E32\u0E43\u0E08\",\n  \"and contact platform administrators for information about the fraudulent party.\": \"\u0E41\u0E25\u0E49\u0E27\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E14\u0E39\u0E41\u0E25\u0E41\u0E1E\u0E25\u0E15\u0E1F\u0E2D\u0E23\u0E4C\u0E21\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E02\u0E2D\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E35\u0E48\u0E17\u0E38\u0E08\u0E23\u0E34\u0E15\",\n  \"and more options...\": \"\u0E14\u0E39\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E40\u0E15\u0E34\u0E21\",\n  \"anonymous\": \"\u0E44\u0E21\u0E48\u0E23\u0E30\u0E1A\u0E38\u0E15\u0E31\u0E27\u0E15\u0E19\",\n  \"approve\": \"\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\",\n  \"approved\": \"\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\u0E41\u0E25\u0E49\u0E27\",\n  \"are you sure to delete team\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E22\u0E38\u0E1A\u0E17\u0E35\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to delete team member\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E40\u0E15\u0E30\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to delete this post\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to delete this tournamnet\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E19\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to delete party member\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E40\u0E15\u0E30\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to delete party request\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to leave the party\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to leave team\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E17\u0E35\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to proceed\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E15\u0E48\u0E2D\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to reject team\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E17\u0E35\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to remove team\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E15\u0E31\u0E14\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E4C\u0E17\u0E35\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure to submit team\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E17\u0E35\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48\",\n  \"are you sure you want to delete this achievement?\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E1C\u0E25\u0E07\u0E32\u0E19\u0E19\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48?\",\n  \"are you sure you want to delete this album?\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E19\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48?\",\n  \"are you sure you want to delete this expereince?\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E19\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48?\",\n  \"are you sure you want to delete this expereince title?\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E19\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48?\",\n  \"are you sure you want to delete this photo?\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E23\u0E39\u0E1B\u0E19\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48?\",\n  \"are you sure you want to delete this rank?\": \"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E41\u0E23\u0E07\u0E04\u0E4C\u0E19\u0E35\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E44\u0E21\u0E48?\",\n  \"are you to vote\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E01\u0E32\u0E23\u0E42\u0E2B\u0E27\u0E15\",\n  \"ascendant\": \"Ascendant\",\n  \"at least 2 options\": \"\u0E01\u0E23\u0E2D\u0E01\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E19\u0E49\u0E2D\u0E22 2 \u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\",\n  \"attachment image\": \"\u0E41\u0E19\u0E1A\u0E23\u0E39\u0E1B\",\n  \"attend\": \"\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"attended\": \"\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E41\u0E25\u0E49\u0E27\",\n  \"auto refresh countdown\": \"\u0E08\u0E30\u0E42\u0E2B\u0E25\u0E14\u0E43\u0E2B\u0E21\u0E48\u0E43\u0E19\",\n  \"Autosize height with minimum and maximum number of lines\": \"\u0E01\u0E23\u0E2D\u0E01\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\",\n  \"available\": \"\u0E27\u0E48\u0E32\u0E07\",\n  \"available slots\": \"\u0E08\u0E33\u0E19\u0E27\u0E19\u0E17\u0E35\u0E48\u0E27\u0E48\u0E32\u0E07\",\n  \"back\": \"\u0E22\u0E49\u0E2D\u0E19\u0E01\u0E25\u0E31\u0E1A\",\n  \"back to albums\": \"\u0E01\u0E25\u0E31\u0E1A\u0E44\u0E1B\u0E2B\u0E19\u0E49\u0E32\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\",\n  \"back to edit team\": \"\u0E01\u0E25\u0E31\u0E1A\u0E44\u0E1B\u0E41\u0E01\u0E49\u0E44\u0E02\u0E17\u0E35\u0E21\",\n  \"back to tournament\": \"\u0E01\u0E25\u0E31\u0E1A\u0E2A\u0E39\u0E48\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"banner image\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B Banner\",\n  \"below 5,000\": \"\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 5,000\",\n  \"bio\": \"Bio\",\n  \"boost again in\": \"\u0E14\u0E31\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E44\u0E14\u0E49\u0E20\u0E32\u0E22\u0E43\u0E19\",\n  \"boost party\": \"\u0E40\u0E25\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E14\u0E31\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"bronze\": \"Bronze\",\n  \"buy sell conditions\": \"\u0E40\u0E07\u0E37\u0E48\u0E2D\u0E19\u0E44\u0E02\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E01\u0E23\u0E30\u0E14\u0E32\u0E19\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\",\n  \"Buy Sell rules\": \"\u0E40\u0E07\u0E37\u0E48\u0E2D\u0E19\u0E44\u0E02\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E01\u0E23\u0E30\u0E14\u0E32\u0E19\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\u0E41\u0E25\u0E30\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E2B\u0E49\u0E2D\u0E07 \u201C\u0E0B\u0E37\u0E49\u0E2D\u0E02\u0E32\u0E22\u201D\",\n  \"buy sell rules descriptoins\": \"(\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14)\",\n  \"by\": \"\u0E42\u0E14\u0E22\",\n  \"by clicking your profile picture\": \"\u0E42\u0E14\u0E22\u0E01\u0E32\u0E23\u0E01\u0E14\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E23\u0E39\u0E1B\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"campaign\": \"\u0E40\u0E25\u0E48\u0E19\u0E04\u0E27\u0E34\u0E0B\",\n  \"can create post and comment in anonymouse mode\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E2B\u0E23\u0E37\u0E2D\u0E41\u0E2A\u0E14\u0E07\u0E04\u0E27\u0E32\u0E21\u0E40\u0E2B\u0E47\u0E19\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E23\u0E30\u0E1A\u0E38\u0E15\u0E31\u0E27\u0E15\u0E19\u0E43\u0E19\u0E01\u0E23\u0E30\u0E14\u0E32\u0E19\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\",\n  \"can create post and comment in buy sell room\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E1A\u0E19\u0E2B\u0E49\u0E2D\u0E07 \u201C\u0E0B\u0E37\u0E49\u0E2D\u0E02\u0E32\u0E22\u201D \u0E43\u0E19\u0E01\u0E23\u0E30\u0E14\u0E32\u0E19\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\",\n  \"can enter buy sell page\": \"\u0E40\u0E02\u0E49\u0E32\u0E2B\u0E49\u0E2D\u0E07 \u201C\u0E0B\u0E37\u0E49\u0E2D\u0E02\u0E32\u0E22\u201D \u0E43\u0E19\u0E01\u0E23\u0E30\u0E14\u0E32\u0E19\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\",\n  \"cancel\": \"\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01\",\n  \"change\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\",\n  \"change cover\": \"\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E23\u0E39\u0E1B\u0E1B\u0E01\",\n  \"change game\": \"\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E40\u0E01\u0E21\",\n  \"citizen id\": \"\u0E40\u0E25\u0E02\u0E1B\u0E23\u0E30\u0E08\u0E33\u0E15\u0E31\u0E27\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\",\n  \"close\": \"\u0E1B\u0E34\u0E14\u0E2B\u0E19\u0E49\u0E32\u0E15\u0E48\u0E32\u0E07\",\n  \"comment\": \"\u0E41\u0E2A\u0E14\u0E07\u0E04\u0E27\u0E32\u0E21\u0E04\u0E34\u0E14\u0E40\u0E2B\u0E47\u0E19\",\n  \"comments\": \"\u0E04\u0E27\u0E32\u0E21\u0E40\u0E2B\u0E47\u0E19\",\n  \"company\": \"\u0E41\u0E1A\u0E23\u0E19\u0E14\u0E4C\",\n  \"confirm\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\",\n  \"confirm game username\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"confirm password\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\",\n  \"connect account\": \"\u0E40\u0E0A\u0E37\u0E48\u0E2D\u0E21\u0E15\u0E48\u0E2D\u0E1A\u0E31\u0E0D\u0E0A\u0E35\",\n  \"connect whallet\": \"\u0E40\u0E0A\u0E37\u0E48\u0E2D\u0E21\u0E15\u0E48\u0E2D\u0E1A\u0E31\u0E0D\u0E0A\u0E35\",\n  \"connect with CTRL G account to get reward and display result\": \"\u0E41\u0E2A\u0E14\u0E07\u0E1C\u0E25\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E23\u0E31\u0E1A\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C \u0E1C\u0E48\u0E32\u0E19\u0E1A\u0E31\u0E0D\u0E0A\u0E35 CTRL G!\",\n  \"contact\": \"\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\u0E40\u0E23\u0E32\",\n  \"contact paragraph 1\": \"\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E15\u0E34\u0E14\u0E15\u0E32\u0E21\u0E42\u0E0B\u0E40\u0E0A\u0E35\u0E22\u0E25\u0E21\u0E35\u0E40\u0E14\u0E35\u0E22\u0E02\u0E2D\u0E07\u0E1E\u0E27\u0E01\u0E40\u0E23\u0E32 \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E15\u0E34\u0E14\u0E15\u0E32\u0E21\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E02\u0E48\u0E32\u0E27\u0E2A\u0E32\u0E23 \u0E2B\u0E23\u0E37\u0E2D Feedback \u0E40\u0E23\u0E37\u0E48\u0E2D\u0E07\u0E15\u0E48\u0E32\u0E07 \u0E46 \u0E44\u0E14\u0E49\u0E17\u0E35\u0E48\u0E43\u0E15\u0E49\u0E04\u0E2D\u0E21\u0E40\u0E21\u0E19\u0E15\u0E4C \u0E2B\u0E23\u0E37\u0E2D\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2B\u0E32\u0E40\u0E23\u0E32\u0E44\u0E14\u0E49\u0E42\u0E14\u0E22\u0E15\u0E23\u0E07\",\n  \"contact person\": \"\u0E1C\u0E39\u0E49\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\",\n  \"contact person email\": \"\u0E2D\u0E35\u0E40\u0E21\u0E25\u0E1C\u0E39\u0E49\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\",\n  \"contact person name\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\",\n  \"contact person phone\": \"\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E1C\u0E39\u0E49\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\",\n  \"content\": \"\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32 (\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B\u0E44\u0E21\u0E48\u0E40\u0E01\u0E34\u0E19 10 \u0E23\u0E39\u0E1B)\",\n  \"continue\": \"\u0E40\u0E0A\u0E37\u0E48\u0E2D\u0E21\u0E15\u0E48\u0E2D\u0E1A\u0E31\u0E0D\u0E0A\u0E35\",\n  \"cookies\": \"\u0E19\u0E42\u0E22\u0E1A\u0E32\u0E22\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E04\u0E38\u0E01\u0E01\u0E35\u0E49\",\n  \"cookies policy\": \"\u0E19\u0E42\u0E22\u0E1A\u0E32\u0E22\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E04\u0E38\u0E01\u0E01\u0E35\u0E49\",\n  \"cookies usage\": \"\u0E19\u0E42\u0E22\u0E1A\u0E32\u0E22\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E04\u0E38\u0E01\u0E01\u0E35\u0E49\",\n  \"Copy URL\": \"\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01 URL\",\n  \"create achievement\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\",\n  \"create album\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\",\n  \"create experience\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\",\n  \"create new\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E43\u0E2B\u0E21\u0E48\",\n  \"create party\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"create poll\": \"\u0E40\u0E1B\u0E34\u0E14\u0E42\u0E2B\u0E27\u0E15\",\n  \"create post\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\",\n  \"create post with own profile\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E2B\u0E23\u0E37\u0E2D comment \u0E14\u0E49\u0E27\u0E22 profile \u0E1E\u0E37\u0E49\u0E19\u0E10\u0E32\u0E19\u0E02\u0E2D\u0E07\u0E15\u0E19\u0E40\u0E2D\u0E07\",\n  \"create team\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E35\u0E21\",\n  \"create tournament\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"create tournament post\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E04\u0E33\u0E16\u0E32\u0E21-\u0E15\u0E2D\u0E1A\u0E02\u0E2D\u0E07\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"customize profile by your own style, and share to your friends\": \"\u0E15\u0E01\u0E41\u0E15\u0E48\u0E07\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E01\u0E32\u0E23\u0E4C\u0E14\u0E15\u0E32\u0E21\u0E2A\u0E44\u0E15\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13 \u0E41\u0E25\u0E49\u0E27\u0E41\u0E0A\u0E23\u0E4C\u0E44\u0E1B\u0E2D\u0E27\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E46\u0E0A\u0E32\u0E27\u0E27\u0E32\u0E42\u0E25\",\n  \"darkmode\": \"\u0E42\u0E2B\u0E21\u0E14\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19\",\n  \"dashboard\": \"\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"date of birth\": \"\u0E27\u0E31\u0E19\u0E40\u0E01\u0E34\u0E14\",\n  \"date picker\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\",\n  \"days ago\": \"\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E41\u0E25\u0E49\u0E27\",\n  \"delete\": \"\u0E25\u0E1A\",\n  \"delete detail box\": \"\u0E25\u0E1A\u0E01\u0E25\u0E48\u0E2D\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\",\n  \"delete experience title\": \"\u0E25\u0E1A\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"delete request\": \"\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"delete team\": \"\u0E22\u0E38\u0E1A\u0E17\u0E35\u0E21\",\n  \"delete tournament\": \"\u0E25\u0E1A\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"deleted at\": \"\u0E25\u0E1A\u0E40\u0E21\u0E37\u0E48\u0E2D\",\n  \"Deleted comment\": \"--\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E16\u0E39\u0E01\u0E25\u0E1A\u0E41\u0E25\u0E49\u0E27--\",\n  \"description\": \"\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\",\n  \"descriptionEn\": \"\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14 (English)\",\n  \"detail\": \"\u0E14\u0E39\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\",\n  \"detail personal details\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E01\u0E31\u0E1A\u0E09\u0E31\u0E19\",\n  \"detail_1\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"detail_2\": \"\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\",\n  \"diamond\": \"Diamond\",\n  \"discord id\": \"Discord ID\",\n  \"discord ID\": \"Discord ID\",\n  \"discord ID copied\": \"\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01 Discord ID \u0E41\u0E25\u0E49\u0E27\",\n  \"discord url\": \"Discord URL\",\n  \"display name\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\",\n  \"display name is too long (maximum 20 characters)\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E22\u0E32\u0E27\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B (\u0E2A\u0E39\u0E07\u0E2A\u0E38\u0E14 20 \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23)\",\n  \"display order\": \"\u0E25\u0E33\u0E14\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E41\u0E2A\u0E14\u0E07\u0E1C\u0E25\",\n  \"display result immediately\": \"\u0E41\u0E2A\u0E14\u0E07\u0E1C\u0E25\u0E17\u0E31\u0E19\u0E17\u0E35\",\n  \"Download\": \"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\",\n  \"Download Avatar\": \"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"durability\": \"TRICK\",\n  \"edit\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\",\n  \"edit achievement\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"edit achievement title\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E0A\u0E37\u0E48\u0E2D\u0E01\u0E25\u0E38\u0E48\u0E21\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"edit album\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\",\n  \"edit experience\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"edit experience title\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"edit game\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E40\u0E01\u0E21\",\n  \"edit post\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\",\n  \"edit profile\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"edited at\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E40\u0E21\u0E37\u0E48\u0E2D\",\n  \"email\": \"\u0E2D\u0E35\u0E40\u0E21\u0E25\",\n  \"email or phone\": \"\u0E2D\u0E35\u0E40\u0E21\u0E25 \u0E2B\u0E23\u0E37\u0E2D \u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\",\n  \"end date\": \"\u0E2A\u0E34\u0E49\u0E19\u0E2A\u0E38\u0E14\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\",\n  \"end date must be after the start date\": \"\u0E15\u0E49\u0E2D\u0E07\u0E2D\u0E22\u0E39\u0E48\u0E2B\u0E25\u0E31\u0E07\u0E27\u0E31\u0E19\u0E40\u0E23\u0E34\u0E48\u0E21\",\n  \"end date must be before start date\": \"\u0E15\u0E49\u0E2D\u0E07\u0E2D\u0E22\u0E39\u0E48\u0E2B\u0E25\u0E31\u0E07\u0E27\u0E31\u0E19\u0E40\u0E23\u0E34\u0E48\u0E21\",\n  \"experience\": \"\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"experience end date\": \"\u0E2A\u0E34\u0E49\u0E19\u0E2A\u0E38\u0E14\",\n  \"experience start date\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\",\n  \"experience title\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E40\u0E01\u0E21\",\n  \"experiences\": \"\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"export all\": \"Export \u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E21\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\",\n  \"failed to create party\": \"\u0E04\u0E38\u0E13\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2D\u0E37\u0E48\u0E19\u0E41\u0E25\u0E49\u0E27\",\n  \"FAQs\": \"\u0E04\u0E33\u0E16\u0E32\u0E21\u0E17\u0E35\u0E48\u0E1E\u0E1A\u0E1A\u0E48\u0E2D\u0E22\",\n  \"featured tournament\": \"\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E41\u0E19\u0E30\u0E19\u0E33\",\n  \"feedback\": \"\u0E41\u0E19\u0E30\u0E19\u0E33-\u0E15\u0E34\u0E0A\u0E21\",\n  \"file upload failed due to too large image size\": \"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E19\u0E32\u0E14\u0E43\u0E2B\u0E0D\u0E48\u0E40\u0E01\u0E34\u0E19 2 MB\",\n  \"fill in party detail\": \"\u0E23\u0E30\u0E1A\u0E38\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\u0E2B\u0E49\u0E2D\u0E07\u0E15\u0E32\u0E21\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E40\u0E0A\u0E48\u0E19 '\u0E2B\u0E32 G P D 25%'\",\n  \"filter\": \"\u0E15\u0E31\u0E27\u0E01\u0E23\u0E2D\u0E07\",\n  \"Filters\": \"\u0E15\u0E31\u0E27\u0E01\u0E23\u0E2D\u0E07\",\n  \"final round location\": \"\u0E2A\u0E16\u0E32\u0E19\u0E17\u0E35\u0E48\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19 (\u0E2B\u0E32\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\u0E2D\u0E2D\u0E19\u0E44\u0E25\u0E19\u0E4C \u0E43\u0E2B\u0E49\u0E01\u0E23\u0E2D\u0E01\u0E27\u0E48\u0E32 \u201C\u0E2D\u0E2D\u0E19\u0E44\u0E25\u0E19\u0E4C\u201D)\",\n  \"final round location (English)\": \"\u0E2A\u0E16\u0E32\u0E19\u0E17\u0E35\u0E48\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19 (English)\",\n  \"finished quiz already, let's see who you look alike\": \"\u0E15\u0E2D\u0E1A\u0E04\u0E33\u0E16\u0E32\u0E21\u0E40\u0E23\u0E35\u0E22\u0E1A\u0E23\u0E49\u0E2D\u0E22\u0E41\u0E25\u0E49\u0E27 \u0E21\u0E32\u0E14\u0E39\u0E01\u0E31\u0E19\u0E40\u0E25\u0E22\u0E27\u0E48\u0E32\u0E04\u0E38\u0E13\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23!\",\n  \"finished tournaments\": \"\u0E08\u0E1A\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"first 2 characters must be alphabet\": \"\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 2 \u0E15\u0E31\u0E27\u0E41\u0E23\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E20\u0E32\u0E29\u0E32\u0E2D\u0E31\u0E07\u0E01\u0E24\u0E29\",\n  \"first name\": \"\u0E0A\u0E37\u0E48\u0E2D\",\n  \"forgot password?\": \"\u0E25\u0E37\u0E21\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19?\",\n  \"forum_admin\": \"\u0E41\u0E2D\u0E14\u0E21\u0E34\u0E19\u0E40\u0E27\u0E47\u0E1A\u0E1A\u0E2D\u0E23\u0E4C\u0E14\",\n  \"game\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E40\u0E01\u0E21\",\n  \"game icon\": \"\u0E44\u0E2D\u0E04\u0E2D\u0E19\u0E40\u0E01\u0E21\",\n  \"game username\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"game usernames\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"games\": \"\u0E40\u0E01\u0E21\",\n  \"general user\": \"\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E31\u0E48\u0E27\u0E44\u0E1B\",\n  \"get the gift\": \"\u0E23\u0E31\u0E1A\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\",\n  \"get verrified badge\": \"\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E40\u0E04\u0E23\u0E37\u0E48\u0E2D\u0E07\u0E2B\u0E21\u0E32\u0E22 'Verified' \u0E01\u0E33\u0E01\u0E31\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"go to profile\": \"\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"go to profile and click profile picture to change frame\": \"\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E43\u0E0A\u0E49\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E44\u0E14\u0E49 \u0E42\u0E14\u0E22\u0E01\u0E32\u0E23\u0E01\u0E14\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E23\u0E39\u0E1B\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"gold\": \"Gold\",\n  \"have a chance to get rare card\": \"\u0E27\u0E34\u0E18\u0E35\u0E23\u0E31\u0E1A\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C \u0E40\u0E21\u0E37\u0E48\u0E2D\u0E40\u0E25\u0E48\u0E19\u0E14\u0E49\u0E27\u0E22\u0E1A\u0E31\u0E0D\u0E0A\u0E35 CTRL G\",\n  \"history\": \"\u0E1B\u0E23\u0E30\u0E27\u0E31\u0E15\u0E34\",\n  \"home\": \"\u0E2B\u0E19\u0E49\u0E32\u0E41\u0E23\u0E01\",\n  \"hours ago\": \"\u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07\u0E17\u0E35\u0E48\u0E41\u0E25\u0E49\u0E27\",\n  \"how it works\": \"How it works\",\n  \"How to Create a Party\": \"\u0E27\u0E34\u0E18\u0E35\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07 Party\",\n  \"how to create party\": \"\u0E27\u0E34\u0E18\u0E35\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"How to Join a Party\": \"\u0E27\u0E34\u0E18\u0E35\u0E01\u0E32\u0E23\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21 Party\",\n  \"how to join party\": \"\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\",\n  \"how to start playing\": \"Party \u0E04\u0E23\u0E1A\u0E41\u0E25\u0E49\u0E27 \u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\",\n  \"how to start the game\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E44\u0E23\",\n  \"id card has already registered on ctrlg\": \"\u0E1A\u0E31\u0E15\u0E23\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\u0E40\u0E04\u0E22\u0E16\u0E39\u0E01\u0E25\u0E07\u0E17\u0E30\u0E40\u0E1A\u0E35\u0E22\u0E19\u0E01\u0E31\u0E1A CTRL G \u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27\",\n  \"images\": \"\u0E23\u0E39\u0E1B\",\n  \"immortal\": \"Immortal\",\n  \"in game username\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"inactive\": \"\u0E2D\u0E2D\u0E1F\u0E44\u0E25\u0E19\u0E4C\",\n  \"input description\": \"\u0E01\u0E23\u0E2D\u0E01\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\",\n  \"input in game username\": \"\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21...\",\n  \"input tags\": \"\u0E01\u0E23\u0E2D\u0E01 Hashtag\",\n  \"intelligence\": \"RECOVERY\",\n  \"invalid laser idcard length\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E25\u0E02\u0E2B\u0E25\u0E31\u0E07\u0E1A\u0E31\u0E15\u0E23\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\u0E43\u0E2B\u0E49\u0E04\u0E23\u0E1A 12 \u0E2B\u0E25\u0E31\u0E01\",\n  \"Invalid Password\": \"\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\",\n  \"invalid password\": \"\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\",\n  \"invalid thai pattern\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E20\u0E32\u0E29\u0E32\u0E44\u0E17\u0E22\",\n  \"iron\": \"Iron\",\n  \"is discordId required\": \"\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E23\u0E2D\u0E01 Discord ID\",\n  \"is email required\": \"\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E23\u0E2D\u0E01\u0E2D\u0E35\u0E40\u0E21\u0E25\",\n  \"is ign required\": \"\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"is kyc required\": \"\u0E15\u0E49\u0E2D\u0E07\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E15\u0E31\u0E27\u0E15\u0E19\",\n  \"is phone Number required\": \"\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\",\n  \"is slip required\": \"\u0E15\u0E49\u0E2D\u0E07\u0E0A\u0E33\u0E23\u0E30\u0E04\u0E48\u0E32\u0E2A\u0E21\u0E31\u0E04\u0E23\",\n  \"items\": \"\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\",\n  \"join\": \"\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"join team link copied\": \"\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01\u0E25\u0E34\u0E07\u0E04\u0E4C\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E17\u0E35\u0E21\u0E41\u0E25\u0E49\u0E27\",\n  \"joined tournaments\": \"\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E17\u0E35\u0E48\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"KYC benefits\": \"\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E1B\u0E23\u0E30\u0E42\u0E22\u0E0A\u0E19\u0E4C\",\n  \"KYC info\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E1A\u0E31\u0E0D\u0E0A\u0E35\",\n  \"KYC to access \\\"anonymouse\\\" and \\\"buy sell\\\" rooms\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E15\u0E31\u0E27\u0E15\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E43\u0E0A\u0E49\u0E23\u0E30\u0E1A\u0E1A\\\"\u0E44\u0E21\u0E48\u0E48\u0E23\u0E30\u0E1A\u0E38\u0E15\u0E31\u0E27\u0E15\u0E19\\\"\",\n  \"KYC to access \\\"buy sell\\\" and \\\"tournament\\\" rooms\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E15\u0E31\u0E27\u0E15\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49 '\u0E0B\u0E37\u0E49\u0E2D\u0E02\u0E32\u0E22'\",\n  \"language\": \"\u0E20\u0E32\u0E29\u0E32\",\n  \"laser code\": \"\u0E40\u0E25\u0E02\u0E2B\u0E25\u0E31\u0E07\u0E1A\u0E31\u0E15\u0E23\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\",\n  \"last 10 characters must be numbers\": \"\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 10 \u0E15\u0E31\u0E27\u0E2B\u0E25\u0E31\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\",\n  \"last name\": \"\u0E19\u0E32\u0E21\u0E2A\u0E01\u0E38\u0E25\",\n  \"last update\": \"\u0E2D\u0E31\u0E1B\u0E40\u0E14\u0E17\u0E25\u0E48\u0E32\u0E2A\u0E38\u0E14\",\n  \"lastest post\": \"\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E43\u0E2B\u0E21\u0E48\",\n  \"leave party\": \"\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"leave team\": \"\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E17\u0E35\u0E21\",\n  \"like\": \"\u0E0A\u0E2D\u0E1A\",\n  \"liked\": \"\u0E0A\u0E2D\u0E1A\",\n  \"load less\": \"\u0E22\u0E48\u0E2D\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\",\n  \"load more\": \"\u0E14\u0E39\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E40\u0E15\u0E34\u0E21\",\n  \"Load More\": \"\u0E14\u0E39\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E40\u0E15\u0E34\u0E21\",\n  \"lock\": \"\u0E25\u0E47\u0E2D\u0E04\u0E17\u0E35\u0E48\u0E27\u0E48\u0E32\u0E07\",\n  \"login\": \"\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E23\u0E30\u0E1A\u0E1A\",\n  \"login with Google\": \"\u0E40\u0E0A\u0E37\u0E48\u0E2D\u0E21\u0E15\u0E48\u0E2D\u0E14\u0E49\u0E27\u0E22 Google\",\n  \"login with LINE\": \"\u0E40\u0E0A\u0E37\u0E48\u0E2D\u0E21\u0E15\u0E48\u0E2D\u0E14\u0E49\u0E27\u0E22 LINE\",\n  \"logout\": \"\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E23\u0E30\u0E1A\u0E1A\",\n  \"manage\": \"\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\",\n  \"maximum 10 fields\": \"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E01\u0E23\u0E2D\u0E01\u0E44\u0E14\u0E49\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 10 \u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\",\n  \"maximum 10 options\": \"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E2A\u0E48\u0E44\u0E14\u0E49\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 10 \u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\",\n  \"maximum 10 prizes\": \"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E01\u0E23\u0E2D\u0E01\u0E44\u0E14\u0E49\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 10 \u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\",\n  \"maximum team\": \"\u0E08\u0E33\u0E19\u0E27\u0E19\u0E17\u0E35\u0E21\u0E17\u0E35\u0E48\u0E40\u0E1B\u0E34\u0E14\u0E23\u0E31\u0E1A\",\n  \"Member limit reached\": \"\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E04\u0E23\u0E1A\u0E15\u0E32\u0E21\u0E40\u0E01\u0E13\u0E11\u0E4C\u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E41\u0E25\u0E49\u0E27\",\n  \"Member limit not reached, Please wait for other members to join the team\": \"\u0E17\u0E35\u0E21\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E22\u0E31\u0E07\u0E21\u0E35\u0E08\u0E33\u0E19\u0E27\u0E19\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E15\u0E32\u0E21\u0E40\u0E01\u0E13\u0E11\u0E4C\u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14\",\n  \"merchant\": \"\u0E23\u0E49\u0E32\u0E19\u0E04\u0E49\u0E32\",\n  \"message\": \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\",\n  \"minutes ago\": \"\u0E19\u0E32\u0E17\u0E35\u0E17\u0E35\u0E48\u0E41\u0E25\u0E49\u0E27\",\n  \"mode\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E42\u0E2B\u0E21\u0E14\",\n  \"most comments\": \"\u0E1B\u0E23\u0E30\u0E40\u0E14\u0E47\u0E19\u0E23\u0E49\u0E2D\u0E19 (24 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07)\",\n  \"most reactions\": \"\u0E22\u0E2D\u0E14\u0E19\u0E34\u0E22\u0E21 (24 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07)\",\n  \"must contain at least 5 characters\": \"\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E22\u0E32\u0E27\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 5 \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\",\n  \"must contain 5-30 characters\": \"\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E22\u0E32\u0E27\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 5 \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\",\n  \"my achievement\": \"\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"my album\": \"\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\",\n  \"my albums\": \"\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E23\u0E39\u0E1B\",\n  \"my conversations\": \"\u0E42\u0E1E\u0E2A\u0E15\u0E4C\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"my comments\": \"\u0E04\u0E27\u0E32\u0E21\u0E04\u0E34\u0E14\u0E40\u0E2B\u0E47\u0E19\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"my experiences\": \"\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"my games\": \"\u0E41\u0E23\u0E07\u0E04\u0E4C\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"my notifications\": \"\u0E01\u0E32\u0E23\u0E41\u0E08\u0E49\u0E07\u0E40\u0E15\u0E37\u0E2D\u0E19\",\n  \"my parties\": \"\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"my personal details\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E01\u0E31\u0E1A\u0E09\u0E31\u0E19\",\n  \"my team\": \"\u0E17\u0E35\u0E21\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"my tournaments\": \"\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"my webboards\": \"\u0E42\u0E1E\u0E2A\u0E15\u0E4C\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"name\": \"\u0E40\u0E0A\u0E48\u0E19 \u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E40\u0E25\u0E48\u0E19\",\n  \"name (English)\": \"\u0E40\u0E0A\u0E48\u0E19 \u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E40\u0E25\u0E48\u0E19 (English)\",\n  \"new party\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"new post\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\",\n  \"next\": \"\u0E16\u0E31\u0E14\u0E44\u0E1B\",\n  \"Note: KYC refers to the Know Your Customer process, a standard in the financial industry to verify the identity of customers.\": \"\u0E2B\u0E21\u0E32\u0E22\u0E40\u0E2B\u0E15\u0E38: KYC \u0E2B\u0E21\u0E32\u0E22\u0E16\u0E36\u0E07\u0E01\u0E23\u0E30\u0E1A\u0E27\u0E19\u0E01\u0E32\u0E23 Know Your Customer \u0E0B\u0E36\u0E48\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E21\u0E32\u0E15\u0E23\u0E10\u0E32\u0E19\u0E43\u0E19\u0E2D\u0E38\u0E15\u0E2A\u0E32\u0E2B\u0E01\u0E23\u0E23\u0E21\u0E01\u0E32\u0E23\u0E40\u0E07\u0E34\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E15\u0E31\u0E27\u0E15\u0E19\u0E02\u0E2D\u0E07\u0E25\u0E39\u0E01\u0E04\u0E49\u0E32\",\n  \"notification:has replied to your comment\": \"\u0E44\u0E14\u0E49\u0E15\u0E2D\u0E1A\u0E01\u0E25\u0E31\u0E1A\u0E04\u0E27\u0E32\u0E21\u0E04\u0E34\u0E14\u0E40\u0E2B\u0E47\u0E19\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"notification:has commented on your post\": \"\u0E44\u0E14\u0E49\u0E41\u0E2A\u0E14\u0E07\u0E04\u0E27\u0E32\u0E21\u0E40\u0E2B\u0E47\u0E19\u0E43\u0E19\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"notification:has sent a request to join your party\": \"\u0E2A\u0E48\u0E07\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"notification:Your Party is ready! start gaming by adding friend's username\": \"\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E40\u0E15\u0E47\u0E21\u0E41\u0E25\u0E49\u0E27! \u0E41\u0E2D\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E43\u0E19\u0E40\u0E01\u0E21\u0E41\u0E25\u0E49\u0E27\u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E44\u0E14\u0E49\u0E40\u0E25\u0E22\",\n  \"notification:Your request to join\": \"\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"notification:party has been accepted\": \"\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\u0E41\u0E25\u0E49\u0E27\",\n  \"notification:party has been rejected\": \"\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\",\n  \"notification:Your team\": \"\u0E17\u0E35\u0E21\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"notification:has been approved to join\": \"\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\u0E43\u0E2B\u0E49\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"notification:that has been approved to join\": \"\u0E16\u0E39\u0E01\u0E15\u0E31\u0E14\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E4C\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"notification:tournament\": \"\u0E41\u0E25\u0E49\u0E27\",\n  \"notification:tournament has been removed because\": \"\u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01\",\n  \"notification:request to join\": \"\u0E16\u0E39\u0E01\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E43\u0E19\u0E01\u0E32\u0E23\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"notification:tournament has been rejected because\": \"\u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01\",\n  \"notification:Your tournament\": \"\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"notification:has been approved\": \"\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\u0E41\u0E25\u0E49\u0E27\",\n  \"notification:has been rejected because\": \"\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E16\u0E39\u0E01\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01\",\n  \"no chat\": \"\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\",\n  \"no data\": \"\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\",\n  \"No data\": \"\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\",\n  \"no game username\": \"\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E1B\u0E23\u0E30\u0E27\u0E31\u0E15\u0E34\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"no notifications\": \"\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E41\u0E08\u0E49\u0E07\u0E40\u0E15\u0E37\u0E2D\u0E19\",\n  \"no participant\": \"\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E1C\u0E39\u0E49\u0E40\u0E02\u0E49\u0E32\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"no party matched\": \"\u0E44\u0E21\u0E48\u0E21\u0E35\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E17\u0E35\u0E48\u0E04\u0E49\u0E19\u0E2B\u0E32\",\n  \"no party request\": \"\u0E44\u0E21\u0E48\u0E21\u0E35\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"no party requests\": \"\u0E44\u0E21\u0E48\u0E21\u0E35\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"no password found\": \"\u0E1A\u0E31\u0E0D\u0E0A\u0E35\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\",\n  \"no past tournament\": \"\u0E04\u0E38\u0E13\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E40\u0E04\u0E22\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"no user\": \"\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\",\n  \"no webboard\": \"\u0E04\u0E38\u0E13\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E2A\u0E19\u0E17\u0E19\u0E32\",\n  \"ongoing tournaments\": \"\u0E2D\u0E22\u0E39\u0E48\u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"only accept number\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19\",\n  \"only english characters and numbers are allowed\": \"\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E01\u0E23\u0E2D\u0E01\u0E44\u0E14\u0E49\u0E41\u0E04\u0E48\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E20\u0E32\u0E29\u0E32\u0E2D\u0E31\u0E07\u0E01\u0E24\u0E29 \u0E41\u0E25\u0E30 \u0E15\u0E31\u0E27\u0E40\u0E25\u0E02 (A-Z, a-z, 0-9)\",\n  \"only english characters and numbers are allowed, and no spaces\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E20\u0E32\u0E29\u0E32\u0E2D\u0E31\u0E07\u0E01\u0E24\u0E29\u0E2B\u0E23\u0E37\u0E2D\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 \u0E41\u0E25\u0E30\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E0A\u0E48\u0E2D\u0E07\u0E27\u0E48\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E27\u0E49\u0E19\u0E27\u0E23\u0E23\u0E04\",\n  \"opening registration\": \"\u0E40\u0E1B\u0E34\u0E14\u0E23\u0E31\u0E1A\u0E2A\u0E21\u0E31\u0E04\u0E23\",\n  \"opening tournaments\": \"\u0E40\u0E1B\u0E34\u0E14\u0E23\u0E31\u0E1A\u0E2A\u0E21\u0E31\u0E04\u0E23\",\n  \"option\": \"\u0E01\u0E23\u0E2D\u0E01\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\",\n  \"or\": \"\u0E2B\u0E23\u0E37\u0E2D\",\n  \"organizer\": \"\u0E1C\u0E39\u0E49\u0E08\u0E31\u0E14\u0E17\u0E31\u0E27\u0E23\u0E4C\",\n  \"over 30,000\": \"\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 30,000\",\n  \"participants\": \"\u0E1C\u0E39\u0E49\u0E40\u0E02\u0E49\u0E32\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"parties\": \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\",\n  \"party active\": \"\u0E15\u0E31\u0E49\u0E07\u0E2A\u0E16\u0E32\u0E19\u0E30\u0E2D\u0E2D\u0E19\u0E44\u0E25\u0E19\u0E4C\",\n  \"party boosted\": \"\u0E14\u0E31\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E41\u0E25\u0E49\u0E27!\",\n  \"party link copied\": \"\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"party matching\": \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\",\n  \"party name\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"party owner must approve before joining\": \"\u0E2B\u0E31\u0E27\u0E2B\u0E19\u0E49\u0E32\u0E2B\u0E49\u0E2D\u0E07\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E04\u0E33\u0E02\u0E2D\u0E01\u0E48\u0E2D\u0E19\u0E08\u0E36\u0E07\u0E08\u0E30\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E44\u0E14\u0E49\",\n  \"party request\": \"\u0E2A\u0E48\u0E07\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E41\u0E25\u0E49\u0E27\",\n  \"party requests\": \"\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"password\": \"\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\",\n  \"password doesn't match\": \"\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E44\u0E21\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E19\",\n  \"past tournaments\": \"\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E17\u0E35\u0E48\u0E1C\u0E48\u0E32\u0E19\u0E21\u0E32\",\n  \"pending\": \"\u0E23\u0E2D\u0E01\u0E32\u0E23\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\",\n  \"pending teams\": \"\u0E17\u0E35\u0E21\u0E23\u0E2D\u0E01\u0E32\u0E23\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\",\n  \"people who liked you\": \"\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E35\u0E48\u0E01\u0E14\u0E0A\u0E2D\u0E1A\",\n  \"personalDetails\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E01\u0E31\u0E1A\u0E09\u0E31\u0E19\",\n  \"personal details\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E01\u0E31\u0E1A\u0E09\u0E31\u0E19\",\n  \"phone\": \"\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\",\n  \"phone number\": \"\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\",\n  \"platinum\": \"Platinum\",\n  \"player info\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E1C\u0E39\u0E49\u0E40\u0E25\u0E48\u0E19\",\n  \"please agree to this field\": \"\u0E08\u0E33\u0E40\u0E1B\u0E47\u0E19\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E14\",\n  \"please do not input '-'\": \"\u0E44\u0E21\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E04\u0E23\u0E37\u0E48\u0E2D\u0E07\u0E2B\u0E21\u0E32\u0E22\u0E02\u0E35\u0E14 '-'\",\n  \"please enter otp\": \"\u0E01\u0E23\u0E2D\u0E01\u0E23\u0E2B\u0E31\u0E2A OTP\",\n  \"please enter username\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E16\u0E39\u0E01\u0E43\u0E0A\u0E49\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27\",\n  \"please input achievement image\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"please input achievement name\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"please input achievement title\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"please input album name\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\",\n  \"please input citizen id\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E25\u0E02\u0E1B\u0E23\u0E30\u0E08\u0E33\u0E15\u0E31\u0E27\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\",\n  \"please input contactName\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\",\n  \"please input content\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\",\n  \"please input correct citizen id\": \"\u0E2B\u0E21\u0E32\u0E22\u0E40\u0E25\u0E02\u0E1B\u0E23\u0E30\u0E08\u0E33\u0E15\u0E31\u0E27\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\",\n  \"please input correct email\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E2D\u0E35\u0E40\u0E21\u0E25\u0E43\u0E2B\u0E49\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\",\n  \"please input correct email or phone\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E2D\u0E35\u0E40\u0E21\u0E25\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\",\n  \"please input data\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\",\n  \"please input description\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"please input detail\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E31\u0E27\",\n  \"please input discord id\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D Discord\",\n  \"please input email\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E2D\u0E35\u0E40\u0E21\u0E25\",\n  \"please input experience name\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"please input experience title\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E40\u0E01\u0E21\",\n  \"please input feedback message\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E41\u0E19\u0E30\u0E19\u0E33-\u0E15\u0E34\u0E0A\u0E21\",\n  \"please input firstname\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\",\n  \"please input game icon\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E44\u0E2D\u0E04\u0E2D\u0E19\u0E40\u0E01\u0E21\",\n  \"please input game rank\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E41\u0E23\u0E07\u0E04\u0E4C\",\n  \"please input game username\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"please input laser code\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E25\u0E02\u0E2B\u0E25\u0E31\u0E07\u0E1A\u0E31\u0E15\u0E23\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\",\n  \"please input lastname\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E19\u0E32\u0E21\u0E2A\u0E01\u0E38\u0E25\",\n  \"please input max team\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E08\u0E33\u0E19\u0E27\u0E19\u0E17\u0E35\u0E21\u0E17\u0E35\u0E48\u0E40\u0E1B\u0E34\u0E14\u0E23\u0E31\u0E1A\",\n  \"please input name\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\",\n  \"please input name in English\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E20\u0E32\u0E29\u0E32\u0E2D\u0E31\u0E07\u0E01\u0E24\u0E29\",\n  \"please input number of additional player\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E08\u0E33\u0E19\u0E27\u0E19\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E21\u0E15\u0E31\u0E27\u0E2A\u0E33\u0E23\u0E2D\u0E07\",\n  \"please input number of required player\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E08\u0E33\u0E19\u0E27\u0E19\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E21\u0E15\u0E31\u0E27\u0E08\u0E23\u0E34\u0E07\",\n  \"please input password\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\",\n  \"please input party name\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\",\n  \"please input phone\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\",\n  \"please input phone number\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\",\n  \"please input qualification rules\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E01\u0E15\u0E34\u0E01\u0E32\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"please input reason to report\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\u0E43\u0E19\u0E01\u0E32\u0E23\u0E23\u0E32\u0E22\u0E07\u0E32\u0E19\",\n  \"please input room\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E2B\u0E49\u0E2D\u0E07\",\n  \"please input team logo\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B\u0E17\u0E35\u0E21\",\n  \"please input team name\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E21\",\n  \"please input title\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\",\n  \"please input title personal detail\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\",\n  \"please input tournament name\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"please select date of birth\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E40\u0E01\u0E34\u0E14\",\n  \"please select end date\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E2A\u0E34\u0E49\u0E19\u0E2A\u0E38\u0E14\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"please select experience end date\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E2A\u0E34\u0E49\u0E19\u0E2A\u0E38\u0E14\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"please select experience start date\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E40\u0E23\u0E34\u0E48\u0E21\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"please select game\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E40\u0E01\u0E21\",\n  \"please select registration end date\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E1B\u0E34\u0E14\u0E01\u0E32\u0E23\u0E25\u0E07\u0E17\u0E30\u0E40\u0E1A\u0E35\u0E22\u0E19\",\n  \"please select registration start date\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E40\u0E23\u0E34\u0E48\u0E21\u0E25\u0E07\u0E17\u0E30\u0E40\u0E1A\u0E35\u0E22\u0E19\",\n  \"please select start date\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E40\u0E23\u0E34\u0E48\u0E21\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"please select tournament type\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E02\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"please upload banner image\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B Banner\",\n  \"please upload cover image\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B\u0E1B\u0E01\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\",\n  \"please upload post thumbnail\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B\u0E1B\u0E01\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\",\n  \"please upload slip image\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E2A\u0E25\u0E34\u0E1B\u0E42\u0E2D\u0E19\u0E40\u0E07\u0E34\u0E19\u0E04\u0E48\u0E32\u0E2A\u0E21\u0E31\u0E04\u0E23\",\n  \"please upload thumnail image\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B\u0E1B\u0E01 Thumbnail\",\n  \"poll options\": \"\u0E23\u0E30\u0E1A\u0E38\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\",\n  \"popular tags\": \"\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E19\u0E43\u0E08\u0E02\u0E13\u0E30\u0E19\u0E35\u0E49\",\n  \"post url copied\": \"\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01\u0E25\u0E34\u0E07\u0E04\u0E4C\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E41\u0E25\u0E49\u0E27\",\n  \"posts\": \"\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\",\n  \"present\": \"\u0E1B\u0E31\u0E08\u0E08\u0E38\u0E1A\u0E31\u0E19\",\n  \"privacy\": \"\u0E19\u0E42\u0E22\u0E1A\u0E32\u0E22\u0E04\u0E27\u0E32\u0E21\u0E40\u0E1B\u0E47\u0E19\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E31\u0E27\",\n  \"private\": \"\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E31\u0E27\",\n  \"private album\": \"\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E31\u0E27\",\n  \"private party\": \"\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E31\u0E27\",\n  \"prize\": \"\u0E01\u0E23\u0E2D\u0E01\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25...\",\n  \"prize additional fields\": \"\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\u0E02\u0E2D\u0E07\u0E41\u0E15\u0E48\u0E25\u0E30\u0E2D\u0E31\u0E19\u0E14\u0E31\u0E1A\",\n  \"prizeNumber\": \"\u0E2D\u0E31\u0E19\u0E14\u0E31\u0E1A\u0E17\u0E35\u0E48\",\n  \"profile\": \"\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"profile url copied\": \"\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"public\": \"\u0E2A\u0E32\u0E18\u0E32\u0E23\u0E13\u0E30\",\n  \"qualification rules\": \"\u0E01\u0E15\u0E34\u0E01\u0E32\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"qualification rules (English)\": \"\u0E01\u0E15\u0E34\u0E01\u0E32\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19 (English)\",\n  \"radiant\": \"Radiant\",\n  \"rank\": \"\u0E41\u0E23\u0E07\u0E04\u0E4C\",\n  \"rank in game\": \"\u0E41\u0E23\u0E07\u0E04\u0E4C\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"Ranking game already exists\": \"\u0E01\u0E23\u0E2D\u0E01\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E01\u0E21\u0E19\u0E35\u0E49\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27\",\n  \"ranks\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E41\u0E23\u0E07\u0E04\u0E4C\",\n  \"rare rules\": \"\u0E01\u0E15\u0E34\u0E01\u0E32\",\n  \"refresh\": \"\u0E42\u0E2B\u0E25\u0E14\u0E43\u0E2B\u0E21\u0E48\",\n  \"refresh in\": \"\u0E08\u0E30\u0E23\u0E35\u0E40\u0E1F\u0E23\u0E0A\u0E43\u0E19\",\n  \"register\": \"\u0E2A\u0E21\u0E31\u0E04\u0E23\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\",\n  \"registration end date\": \"\u0E1B\u0E34\u0E14\u0E01\u0E32\u0E23\u0E25\u0E07\u0E17\u0E30\u0E40\u0E1A\u0E35\u0E22\u0E19\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\",\n  \"registration start date\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E25\u0E07\u0E17\u0E30\u0E40\u0E1A\u0E35\u0E22\u0E19\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\",\n  \"reject\": \"\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\",\n  \"reject comment\": \"\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\u0E2B\u0E32\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E17\u0E35\u0E21\",\n  \"reject team\": \"\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E17\u0E35\u0E21\",\n  \"related tournaments\": \"\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E17\u0E35\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\",\n  \"reply\": \"\u0E15\u0E2D\u0E1A\u0E01\u0E25\u0E31\u0E1A\",\n  \"reply to\": \"\u0E01\u0E33\u0E25\u0E31\u0E07\u0E15\u0E2D\u0E1A\u0E01\u0E25\u0E31\u0E1A...\",\n  \"report\": \"\u0E23\u0E32\u0E22\u0E07\u0E32\u0E19\",\n  \"request\": \"\u0E2A\u0E48\u0E07\u0E04\u0E33\u0E02\u0E2D\",\n  \"request message\": \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"request sent\": \"\u0E2A\u0E48\u0E07\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E41\u0E25\u0E49\u0E27\",\n  \"request to join party\": \"\u0E2A\u0E48\u0E07\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"reserved\": \"\u0E08\u0E2D\u0E07\u0E17\u0E35\u0E48\u0E41\u0E25\u0E49\u0E27\",\n  \"reset password email has been sent, please return to ctrlg after reset success\": \"\u0E2A\u0E48\u0E07\u0E2D\u0E35\u0E40\u0E21\u0E25\u0E23\u0E35\u0E40\u0E0B\u0E47\u0E17\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08,  \u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E23\u0E35\u0E40\u0E0B\u0E47\u0E17\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\u0E41\u0E25\u0E49\u0E27\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E25\u0E31\u0E1A\u0E21\u0E32\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E23\u0E30\u0E1A\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n  \"remark should not be empty\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\u0E01\u0E32\u0E23\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E17\u0E35\u0E21\",\n  \"remove comment\": \"\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\u0E2B\u0E32\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E17\u0E35\u0E21\",\n  \"remove team\": \"\u0E15\u0E31\u0E14\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E4C\u0E17\u0E35\u0E21\",\n  \"remove team remark should not be empty\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\u0E01\u0E32\u0E23\u0E15\u0E31\u0E14\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E4C\u0E17\u0E35\u0E21\",\n  \"removed team members have to create a new team\": \"(\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E21\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E31\u0E14\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E4C\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E35\u0E21\u0E43\u0E2B\u0E21\u0E48 \u0E2B\u0E32\u0E01\u0E22\u0E31\u0E07\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E0A\u0E48\u0E27\u0E07\u0E40\u0E27\u0E25\u0E32\u0E17\u0E35\u0E48\u0E40\u0E1B\u0E34\u0E14\u0E23\u0E31\u0E1A\u0E2A\u0E21\u0E31\u0E04\u0E23)\",\n  \"required\": \"\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E23\u0E2D\u0E01\",\n  \"required players\": \"\u0E08\u0E33\u0E19\u0E27\u0E19\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E21\u0E15\u0E31\u0E27\u0E08\u0E23\u0E34\u0E07\",\n  \"required slots\": \"\u0E08\u0E33\u0E19\u0E27\u0E19\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E2B\u0E32\",\n  \"reward #\": \"\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\u0E17\u0E35\u0E48\",\n  \"reward center\": \"\u0E17\u0E35\u0E48\u0E41\u0E25\u0E01\u0E02\u0E2D\u0E07\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\",\n  \"Reward center\": \"\u0E17\u0E35\u0E48\u0E41\u0E25\u0E01\u0E02\u0E2D\u0E07\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\",\n  \"REWARD CENTER\": \"\u0E17\u0E35\u0E48\u0E41\u0E25\u0E01\u0E02\u0E2D\u0E07\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\",\n  \"recommended ratio\": \"\u0E2D\u0E31\u0E15\u0E23\u0E32\u0E2A\u0E48\u0E27\u0E19\u0E41\u0E19\u0E30\u0E19\u0E33\",\n  \"recommended resolution\": \"\u0E02\u0E19\u0E32\u0E14\u0E23\u0E39\u0E1B\u0E41\u0E19\u0E30\u0E19\u0E33\",\n  \"recommended resolution 1920x1080\": \"\u0E02\u0E19\u0E32\u0E14\u0E23\u0E39\u0E1B\u0E41\u0E19\u0E30\u0E19\u0E33 1920x1080\",\n  \"rooms\": \"\u0E2B\u0E49\u0E2D\u0E07\",\n  \"rules\": \"\u0E01\u0E15\u0E34\u0E01\u0E32\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"save\": \"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\",\n  \"schedule hasn't yet been released\": \"\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E1B\u0E23\u0E30\u0E01\u0E32\u0E28\u0E15\u0E32\u0E23\u0E32\u0E07\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"secret chamber\": \"\u0E04\u0E25\u0E31\u0E1A\u0E1E\u0E34\u0E40\u0E28\u0E29\",\n  \"Secret chamber\": \"\u0E04\u0E25\u0E31\u0E1A\u0E1E\u0E34\u0E40\u0E28\u0E29\",\n  \"SECRET CHAMBER\": \"\u0E04\u0E25\u0E31\u0E1A\u0E1E\u0E34\u0E40\u0E28\u0E29\",\n  \"second\": \"\u0E27\u0E34\",\n  \"seconds ago\": \"\u0E27\u0E34\u0E19\u0E32\u0E17\u0E35\u0E17\u0E35\u0E48\u0E41\u0E25\u0E49\u0E27\",\n  \"select all\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\",\n  \"select cover image\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E23\u0E39\u0E1B\u0E1B\u0E01\",\n  \"select avatar image\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E23\u0E39\u0E1B\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"select display image\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E42\u0E25\u0E42\u0E01\u0E49\u0E17\u0E35\u0E21\",\n  \"select file\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E44\u0E1F\u0E25\u0E4C\",\n  \"select frame\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"select game\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E40\u0E01\u0E21\",\n  \"select mode\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E42\u0E2B\u0E21\u0E14\",\n  \"select rank\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E41\u0E23\u0E07\u0E04\u0E4C\",\n  \"select ranks\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E41\u0E23\u0E07\u0E04\u0E4C\",\n  \"select room\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E2B\u0E49\u0E2D\u0E07\",\n  \"select the preferred ranks\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01 Rank \u0E02\u0E2D\u0E07\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E23\u0E48\u0E27\u0E21\u0E17\u0E35\u0E21\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23 \u0E2A\u0E39\u0E07\u0E2A\u0E38\u0E14 3 Rank\",\n  \"select your profile frame\": \"\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E43\u0E0A\u0E49\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E44\u0E14\u0E49\",\n  \"send\": \"\u0E2A\u0E48\u0E07\",\n  \"send a message failed\": \"\u0E04\u0E38\u0E13\u0E16\u0E39\u0E01\u0E40\u0E15\u0E30\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E41\u0E25\u0E49\u0E27\",\n  \"send request\": \"\u0E2A\u0E48\u0E07\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\",\n  \"setting\": \"\u0E15\u0E31\u0E49\u0E07\u0E04\u0E48\u0E32\",\n  \"settings\": \"\u0E15\u0E31\u0E49\u0E07\u0E04\u0E48\u0E32\",\n  \"share\": \"\u0E41\u0E0A\u0E23\u0E4C\",\n  \"Share Avatar\": \"\u0E41\u0E0A\u0E23\u0E4C\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"signature\": \"\u0E25\u0E32\u0E22\u0E40\u0E0B\u0E47\u0E19\",\n  \"silver\": \"Silver\",\n  \"single elimination\": \"\u0E41\u0E1A\u0E1A\u0E41\u0E1E\u0E49\u0E04\u0E31\u0E14\u0E2D\u0E2D\u0E01\",\n  \"social accounts\": \"\u0E1A\u0E31\u0E0D\u0E0A\u0E35 Social\",\n  \"sort order\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\",\n  \"sorting order\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\",\n  \"spaces are not allowed\": \"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E0A\u0E48\u0E2D\u0E07\u0E27\u0E48\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E27\u0E49\u0E19\u0E27\u0E23\u0E23\u0E04\",\n  \"speed\": \"SPEED\",\n  \"start buy sell & anonymous after complete verification\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E0B\u0E37\u0E49\u0E2D\u0E02\u0E32\u0E22\u0E44\u0E14\u0E49\u0E17\u0E31\u0E19\u0E17\u0E35 \u0E2B\u0E25\u0E31\u0E07\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E15\u0E31\u0E27\u0E15\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"start date\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\",\n  \"start date must be before end date\": \"\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E32\u0E01\u0E48\u0E2D\u0E19\u0E27\u0E31\u0E19\u0E2A\u0E38\u0E14\u0E17\u0E49\u0E32\u0E22\",\n  \"start date must be before end date and at least 2 days later than today\": \"\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E32\u0E01\u0E48\u0E2D\u0E19\u0E27\u0E31\u0E19\u0E2A\u0E38\u0E14\u0E17\u0E49\u0E32\u0E22\",\n  \"start quiz\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E40\u0E25\u0E22\",\n  \"start verification\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E15\u0E31\u0E27\u0E15\u0E19\",\n  \"streamer\": \"\u0E2A\u0E15\u0E23\u0E35\u0E21\u0E40\u0E21\u0E2D\u0E23\u0E4C / \u0E19\u0E31\u0E01\u0E01\u0E35\u0E2C\u0E32\",\n  \"strength\": \"POWER\",\n  \"submit\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\",\n  \"submit feedback\": \"\u0E2A\u0E48\u0E07\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\",\n  \"submit team\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E17\u0E35\u0E21\",\n  \"successfully add user in game\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E41\u0E23\u0E07\u0E04\u0E4C\u0E43\u0E19\u0E40\u0E01\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully approved request\": \"\u0E23\u0E31\u0E1A\u0E04\u0E33\u0E02\u0E2D\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully boosted party\": \"\u0E14\u0E31\u0E19\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully bulk-approve\": \"\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\u0E17\u0E35\u0E21\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\u0E41\u0E25\u0E49\u0E27\",\n  \"successfully claim reward\": \"\u0E23\u0E31\u0E1A\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully commented\": \"\u0E41\u0E2A\u0E14\u0E07\u0E04\u0E27\u0E32\u0E21\u0E04\u0E34\u0E14\u0E40\u0E2B\u0E47\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully create tournament\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully create webboard\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully create-team\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully created achievement\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E1C\u0E25\u0E07\u0E32\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully created album\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully created experience\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully created experience title\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E2D\u0E37\u0E48\u0E19\u0E46\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully created party\": \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully created party member\": \"\u0E25\u0E47\u0E2D\u0E04\u0E17\u0E35\u0E48\u0E27\u0E48\u0E32\u0E07\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully created request\": \"\u0E2A\u0E48\u0E07\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully delete member\": \"\u0E40\u0E15\u0E30\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully delete request\": \"\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted achievement}\": \"\u0E25\u0E1A\u0E1C\u0E25\u0E07\u0E32\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted album\": \"\u0E25\u0E1A\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted experience\": \"\u0E25\u0E1A\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted experience title\": \"\u0E25\u0E1A\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted comment\": \"\u0E25\u0E1A\u0E04\u0E2D\u0E21\u0E40\u0E21\u0E49\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully deleted frame\": \"\u0E16\u0E2D\u0E14\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully deleted member\": \"\u0E40\u0E15\u0E30\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted photo\": \"\u0E25\u0E1A\u0E23\u0E39\u0E1B\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully deleted request\": \"\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01\u0E04\u0E33\u0E02\u0E2D\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted tournament}\": \"\u0E25\u0E1A\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted user in game\": \"\u0E25\u0E1A\u0E41\u0E23\u0E07\u0E04\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully deleted webboard\": \"\u0E25\u0E1A\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully delete-team\": \"\u0E22\u0E38\u0E1A\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully delete-team-member\": \"\u0E40\u0E15\u0E30\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully edit profile\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully joined party\": \"\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully join-team\": \"\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully leave-team\": \"\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully left party\": \"\u0E2D\u0E2D\u0E01\u0E08\u0E32\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully login\": \"\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E23\u0E30\u0E1A\u0E1A\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully Login\": \"\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E23\u0E30\u0E1A\u0E1A\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully Register Account\": \"\u0E2A\u0E21\u0E31\u0E04\u0E23\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully reject\": \"\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\", \n  \"successfully rejected request\": \"\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\u0E04\u0E33\u0E02\u0E2D\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully remove\": \"\u0E15\u0E31\u0E14\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E4C\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully reported webboard\": \"\u0E23\u0E32\u0E22\u0E07\u0E32\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully sent feedback\": \"\u0E2A\u0E48\u0E07\u0E04\u0E33\u0E41\u0E19\u0E30\u0E19\u0E33-\u0E15\u0E34\u0E0A\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully saved to profile index\": \"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully sorted album\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully sorted my achievement\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\u0E1C\u0E25\u0E07\u0E32\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully sorted my achievement title\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1C\u0E25\u0E07\u0E32\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully sorted my experience title\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully sorted my games\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\u0E40\u0E01\u0E21\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully sorted personal details\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E01\u0E31\u0E1A\u0E09\u0E31\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully sorted profile\": \"\u0E40\u0E23\u0E35\u0E22\u0E07\u0E25\u0E33\u0E14\u0E31\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully submit-team\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully update comment\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E04\u0E27\u0E32\u0E21\u0E40\u0E2B\u0E47\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully update party\": \"\u0E2D\u0E31\u0E1B\u0E40\u0E14\u0E17\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully update party member\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully update profile\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully update signature\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E25\u0E32\u0E22\u0E40\u0E0B\u0E47\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully update tournament\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully update webboard\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully updated achievement\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E1C\u0E25\u0E07\u0E32\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully updated achievement title\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E1C\u0E25\u0E07\u0E32\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully updated album\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully updated experience\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully updated personal details\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E01\u0E31\u0E1A\u0E09\u0E31\u0E19\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully updated user in game\": \"\u0E41\u0E01\u0E49\u0E44\u0E02\u0E41\u0E23\u0E07\u0E04\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully update-team\": \"\u0E2D\u0E31\u0E1B\u0E40\u0E14\u0E17\u0E17\u0E35\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully update-team-member\": \"\u0E2D\u0E31\u0E1B\u0E40\u0E14\u0E17\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"successfully upload photos\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E20\u0E32\u0E1E\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully uploaded cover image\": \"\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E23\u0E39\u0E1B\u0E1B\u0E01\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully uploaded display image\": \"\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E23\u0E39\u0E1B\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully uploaded frame image\": \"\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"Successfully voted\": \"\u0E42\u0E2B\u0E27\u0E15\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"system\": \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E08\u0E32\u0E01\u0E23\u0E30\u0E1A\u0E1A\",\n  \"tags\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21 Hashtag\",\n  \"teams\": \"\u0E17\u0E35\u0E21\",\n  \"team info\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E21\",\n  \"team logo\": \"\u0E42\u0E25\u0E42\u0E01\u0E49\u0E17\u0E35\u0E21\",\n  \"team members\": \"\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E21\",\n  \"team name\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E21\",\n  \"team name or tournament name\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E21 / \u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"terms\": \"\u0E40\u0E07\u0E37\u0E48\u0E2D\u0E19\u0E44\u0E02\u0E41\u0E25\u0E30\u0E02\u0E49\u0E2D\u0E01\u0E33\u0E2B\u0E19\u0E14\",\n  \"text input\": \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E31\u0E48\u0E27\u0E44\u0E1B\",\n  \"thb\": \"\u0E1A\u0E32\u0E17\",\n  \"this action cannot be undone\": \"(\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E41\u0E01\u0E49\u0E44\u0E02\u0E42\u0E2B\u0E27\u0E15\u0E44\u0E14\u0E49)\",\n  \"This id card has already been registered on CtrlG\": \"\u0E1A\u0E31\u0E15\u0E23\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\u0E40\u0E04\u0E22\u0E16\u0E39\u0E01\u0E25\u0E07\u0E17\u0E30\u0E40\u0E1A\u0E35\u0E22\u0E19\u0E01\u0E31\u0E1A CTRL G \u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27\",\n  \"This is your avatar\": \"\u0E04\u0E25\u0E34\u0E01\u0E1B\u0E38\u0E48\u0E21\u0E14\u0E49\u0E32\u0E19\u0E25\u0E48\u0E32\u0E07\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E2B\u0E23\u0E37\u0E2D\u0E41\u0E0A\u0E23\u0E4C\u0E20\u0E32\u0E1E\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"This is your gift\": \"\u0E22\u0E34\u0E19\u0E14\u0E35\u0E14\u0E49\u0E27\u0E22! \u0E04\u0E38\u0E13\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E1E\u0E34\u0E40\u0E28\u0E29\",\n  \"this is your profile\": \"\u0E19\u0E35\u0E48\u0E04\u0E37\u0E2D\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"thumbnail image\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E23\u0E39\u0E1B\u0E1B\u0E01 Thumbnail\",\n  \"title\": \"\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49 (\u0E44\u0E21\u0E48\u0E40\u0E01\u0E34\u0E19 200 \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23)\",\n  \"title must contain only 30 charaters\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\u0E22\u0E32\u0E27\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B (\u0E2A\u0E39\u0E07\u0E2A\u0E38\u0E14 30 \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23)\",\n  \"title personal details\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E2B\u0E31\u0E27\u0E02\u0E49\u0E2D\",\n  \"today\": \"\u0E27\u0E31\u0E19\u0E19\u0E35\u0E49\",\n  \"total prize\": \"\u0E40\u0E07\u0E34\u0E19\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\u0E23\u0E27\u0E21 (\u0E41\u0E2A\u0E14\u0E07\u0E1C\u0E25\u0E1A\u0E19\u0E23\u0E39\u0E1B\u0E1B\u0E01\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C)\",\n  \"tournament\": \"\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"tournament board\": \"\u0E04\u0E33\u0E16\u0E32\u0E21 - \u0E04\u0E33\u0E15\u0E2D\u0E1A\",\n  \"tournament date\": \"\u0E0A\u0E48\u0E27\u0E07\u0E40\u0E27\u0E25\u0E32\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"tournament finished\": \"\u0E08\u0E1A\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"tournament invitation to\": \"\u0E04\u0E38\u0E13\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E40\u0E0A\u0E34\u0E0D\u0E43\u0E2B\u0E49\u0E40\u0E02\u0E49\u0E32\u0E23\u0E48\u0E27\u0E21\u0E17\u0E35\u0E21\",\n  \"tournament location\": \"\u0E2A\u0E16\u0E32\u0E19\u0E17\u0E35\u0E48\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"tournament name\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"tournament name (English)\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C (English)\",\n  \"tournament ongoing\": \"\u0E2D\u0E22\u0E39\u0E48\u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\",\n  \"tournament participants\": \"\u0E1C\u0E39\u0E49\u0E40\u0E02\u0E49\u0E32\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"tournament Q&A post title can be edited on webboard\": \"(\u0E2B\u0E32\u0E01\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49 \u0E04\u0E33\u0E16\u0E32\u0E21-\u0E04\u0E33\u0E15\u0E2D\u0E1A \u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E41\u0E01\u0E49\u0E44\u0E02\u0E0A\u0E37\u0E48\u0E2D\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E44\u0E14\u0E49)\",\n  \"tournament schedule\": \"\u0E15\u0E32\u0E23\u0E32\u0E07\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"tournament type\": \"\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E02\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"tournaments\": \"\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\",\n  \"The request exceed the limit.\": \"\u0E2A\u0E48\u0E07\u0E23\u0E2B\u0E31\u0E2A\u0E40\u0E01\u0E34\u0E19\u0E01\u0E33\u0E2B\u0E19\u0E14 \u0E01\u0E23\u0E38\u0E13\u0E32\u0E25\u0E2D\u0E07\u0E43\u0E2B\u0E21\u0E48\u0E43\u0E19\u0E2D\u0E35\u0E01 15 \u0E19\u0E32\u0E17\u0E35\",\n  \"type message here\": \"\u0E01\u0E23\u0E2D\u0E01\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\",\n  \"Unnamed Player\": \"\u0E1C\u0E39\u0E49\u0E40\u0E25\u0E48\u0E19\u0E2D\u0E37\u0E48\u0E19\",\n  \"upcoming tournaments\": \"\u0E01\u0E33\u0E25\u0E31\u0E07\u0E08\u0E30\u0E40\u0E1B\u0E34\u0E14\",\n  \"update\": \"\u0E2D\u0E31\u0E1B\u0E40\u0E14\u0E17\",\n  \"upload\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\",\n  \"Upload bracket\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E20\u0E32\u0E1E\u0E15\u0E32\u0E23\u0E32\u0E07\u0E01\u0E32\u0E23\u0E41\u0E02\u0E48\u0E07\u0E02\u0E31\u0E19\",\n  \"upload cover image\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E20\u0E32\u0E1E\u0E1B\u0E01\u0E2D\u0E31\u0E25\u0E1A\u0E31\u0E49\u0E21\",\n  \"upload image\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E20\u0E32\u0E1E\",\n  \"upload images in album\": \"\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E23\u0E39\u0E1B\",\n  \"upload slip image\": \"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E2A\u0E25\u0E34\u0E1B\u0E42\u0E2D\u0E19\u0E40\u0E07\u0E34\u0E19\u0E04\u0E48\u0E32\u0E2A\u0E21\u0E31\u0E04\u0E23\",\n  \"Uploading\": \"\u0E01\u0E33\u0E25\u0E31\u0E07\u0E42\u0E2B\u0E25\u0E14\",\n  \"user is banned\": \"\u0E1A\u0E31\u0E0D\u0E0A\u0E35\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E16\u0E39\u0E01\u0E23\u0E30\u0E07\u0E31\u0E1A\",\n  \"User is permanently banned\": \"\u0E1A\u0E31\u0E0D\u0E0A\u0E35\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E16\u0E39\u0E01\u0E23\u0E30\u0E07\u0E31\u0E1A\",\n  \"user url\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E25\u0E34\u0E07\u0E01\u0E4C\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19 (\u0E0A\u0E37\u0E48\u0E2D URL \u0E02\u0E2D\u0E07 Profile)\",\n  \"username copied\": \"\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\u0E2A\u0E33\u0E40\u0E23\u0E47\u0E08\",\n  \"username in game\": \"\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"username can't be more than 30 characters\": \"\u0E04\u0E27\u0E32\u0E21\u0E22\u0E32\u0E27\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E40\u0E01\u0E34\u0E19\u0E01\u0E33\u0E2B\u0E19\u0E14\",\n  \"username must be more than 5 characters\": \"\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E22\u0E32\u0E27\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 5 \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\",\n  \"userAchievements\": \"\u0E1C\u0E25\u0E07\u0E32\u0E19\",\n  \"userExperiences\": \"\u0E1B\u0E23\u0E30\u0E2A\u0E1A\u0E01\u0E32\u0E23\u0E13\u0E4C\",\n  \"userRankingGames\": \"\u0E41\u0E23\u0E07\u0E04\u0E4C\u0E43\u0E19\u0E40\u0E01\u0E21\",\n  \"value must be higher than 0\": \"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E08\u0E33\u0E19\u0E27\u0E19\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 0\",\n  \"verified\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E15\u0E31\u0E27\u0E15\u0E19\u0E41\u0E25\u0E49\u0E27\",\n  \"Verified\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E15\u0E31\u0E27\u0E15\u0E19\u0E41\u0E25\u0E49\u0E27\",\n  \"verified user\": \"\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E35\u0E48\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E1A\u0E31\u0E0D\u0E0A\u0E35\u0E41\u0E25\u0E49\u0E27\",\n  \"verify account\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E1A\u0E31\u0E0D\u0E0A\u0E35\",\n  \"verify identity\": \"\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19\u0E1A\u0E31\u0E0D\u0E0A\u0E35\",\n  \"view more\": \"\u0E14\u0E39\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E40\u0E15\u0E34\u0E21\",\n  \"webboard\": \"\u0E01\u0E23\u0E30\u0E14\u0E32\u0E19\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\",\n  \"webboard usage rules\": \"\u0E01\u0E0E\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E40\u0E27\u0E47\u0E1A\u0E1A\u0E2D\u0E23\u0E4C\u0E14\",\n  \"Webboard usage rules\": \"\u0E01\u0E0E\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E40\u0E27\u0E47\u0E1A\u0E1A\u0E2D\u0E23\u0E4C\u0E14\",\n  \"website\": \"\u0E40\u0E27\u0E47\u0E1A\u0E44\u0E0B\u0E15\u0E4C\",\n  \"weebboard usage rule 1\": \"1. \u0E2B\u0E49\u0E32\u0E21\u0E42\u0E1E\u0E2A\u0E15\u0E4C\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E2D\u0E31\u0E19\u0E40\u0E1B\u0E47\u0E19\u0E01\u0E32\u0E23\u0E27\u0E34\u0E1E\u0E32\u0E01\u0E29\u0E4C\u0E27\u0E34\u0E08\u0E32\u0E23\u0E13\u0E4C\u0E2B\u0E23\u0E37\u0E2D\u0E1E\u0E32\u0E14\u0E1E\u0E34\u0E07\u0E2A\u0E16\u0E32\u0E1A\u0E31\u0E19\u0E21\u0E2B\u0E32\u0E01\u0E29\u0E31\u0E15\u0E23\u0E34\u0E22\u0E4C\u0E41\u0E25\u0E30\u0E23\u0E32\u0E0A\u0E27\u0E07\u0E28\u0E4C\",\n  \"weebboard usage rule 2\": \"2. \u0E2B\u0E49\u0E32\u0E21\u0E40\u0E02\u0E35\u0E22\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E17\u0E35\u0E48\u0E2A\u0E48\u0E2D\u0E44\u0E1B\u0E43\u0E19\u0E17\u0E32\u0E07\u0E2B\u0E22\u0E32\u0E1A\u0E04\u0E32\u0E22 \u0E01\u0E49\u0E32\u0E27\u0E23\u0E49\u0E32\u0E27\",\n  \"weebboard usage rule 3\": \"3. \u0E2B\u0E49\u0E32\u0E21\u0E40\u0E02\u0E35\u0E22\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E17\u0E35\u0E48\u0E2A\u0E48\u0E2D\u0E44\u0E1B\u0E43\u0E19\u0E17\u0E32\u0E07 \u0E25\u0E32\u0E21\u0E01 \u0E2D\u0E19\u0E32\u0E08\u0E32\u0E23 \u0E23\u0E38\u0E19\u0E41\u0E23\u0E07\",\n  \"weebboard usage rule 4\": \"4. \u0E2B\u0E49\u0E32\u0E21\u0E40\u0E02\u0E35\u0E22\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2D\u0E31\u0E19\u0E21\u0E35\u0E40\u0E08\u0E15\u0E19\u0E32\u0E43\u0E2A\u0E48\u0E04\u0E27\u0E32\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E43\u0E2A\u0E48\u0E23\u0E49\u0E32\u0E22\u0E1A\u0E38\u0E04\u0E04\u0E25\u0E2D\u0E37\u0E48\u0E19\",\n  \"weebboard usage rule 5\": \"5. \u0E2B\u0E49\u0E32\u0E21\u0E40\u0E02\u0E35\u0E22\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2D\u0E31\u0E19\u0E40\u0E1B\u0E47\u0E19\u0E01\u0E32\u0E23\u0E17\u0E49\u0E32\u0E17\u0E32\u0E22 \u0E0A\u0E31\u0E01\u0E0A\u0E27\u0E19 \u0E42\u0E14\u0E22\u0E21\u0E35\u0E40\u0E08\u0E15\u0E19\u0E32\u0E01\u0E48\u0E2D\u0E43\u0E2B\u0E49\u0E40\u0E01\u0E34\u0E14\u0E01\u0E32\u0E23\u0E17\u0E30\u0E40\u0E25\u0E32\u0E30\u0E27\u0E34\u0E27\u0E32\u0E17 \u0E2B\u0E23\u0E37\u0E2D\u0E01\u0E48\u0E2D\u0E43\u0E2B\u0E49\u0E40\u0E01\u0E34\u0E14\u0E04\u0E27\u0E32\u0E21\u0E27\u0E38\u0E48\u0E19\u0E27\u0E32\u0E22\u0E02\u0E36\u0E49\u0E19 \u0E42\u0E1B\u0E23\u0E14\u0E41\u0E2A\u0E14\u0E07\u0E04\u0E27\u0E32\u0E21\u0E04\u0E34\u0E14\u0E40\u0E2B\u0E47\u0E19\u0E42\u0E14\u0E22\u0E40\u0E2A\u0E23\u0E35\u0E40\u0E0A\u0E48\u0E19\u0E27\u0E34\u0E0D\u0E0D\u0E39\u0E0A\u0E19\u0E1E\u0E36\u0E07\u0E01\u0E23\u0E30\u0E17\u0E33\",\n  \"weebboard usage rule 6\": \"6. \u0E2B\u0E49\u0E32\u0E21\u0E40\u0E02\u0E35\u0E22\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E01\u0E25\u0E48\u0E32\u0E27\u0E42\u0E08\u0E21\u0E15\u0E35 \u0E2B\u0E23\u0E37\u0E2D\u0E27\u0E34\u0E1E\u0E32\u0E01\u0E29\u0E4C\u0E27\u0E34\u0E08\u0E32\u0E23\u0E13\u0E4C\u0E43\u0E19\u0E17\u0E32\u0E07\u0E40\u0E2A\u0E35\u0E22\u0E2B\u0E32\u0E22\u0E28\u0E32\u0E2A\u0E19\u0E32 \u0E41\u0E25\u0E30\u0E04\u0E27\u0E23\u0E2B\u0E25\u0E35\u0E01\u0E40\u0E25\u0E35\u0E48\u0E22\u0E07\u0E01\u0E32\u0E23\u0E16\u0E01\u0E1B\u0E23\u0E30\u0E40\u0E14\u0E47\u0E19\u0E17\u0E32\u0E07\u0E01\u0E32\u0E23\u0E40\u0E21\u0E37\u0E2D\u0E07\",\n  \"weebboard usage rule 7\": \"7. \u0E2B\u0E49\u0E32\u0E21\u0E43\u0E0A\u0E49\u0E19\u0E32\u0E21\u0E41\u0E1D\u0E07\u0E2D\u0E31\u0E19\u0E40\u0E1B\u0E47\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E08\u0E23\u0E34\u0E07\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E2D\u0E37\u0E48\u0E19 \u0E42\u0E14\u0E22\u0E21\u0E35\u0E40\u0E08\u0E15\u0E19\u0E32\u0E17\u0E33\u0E43\u0E2B\u0E49\u0E2A\u0E32\u0E18\u0E32\u0E23\u0E13\u0E0A\u0E19\u0E40\u0E02\u0E49\u0E32\u0E43\u0E08\u0E1C\u0E34\u0E14 \u0E41\u0E25\u0E30\u0E40\u0E08\u0E49\u0E32\u0E02\u0E2D\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E1C\u0E39\u0E49\u0E19\u0E31\u0E49\u0E19\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E04\u0E27\u0E32\u0E21\u0E40\u0E2A\u0E35\u0E22\u0E2B\u0E32\u0E22 \u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E2A\u0E37\u0E48\u0E2D\u0E21\u0E40\u0E2A\u0E35\u0E22\u0E0A\u0E37\u0E48\u0E2D\u0E40\u0E2A\u0E35\u0E22\u0E07\",\n  \"weebboard usage rule 8\": \"8. \u0E2B\u0E49\u0E32\u0E21\u0E42\u0E1E\u0E2A\u0E15\u0E4C\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E31\u0E27\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E2D\u0E37\u0E48\u0E19 \u0E40\u0E0A\u0E48\u0E19 \u0E2D\u0E35\u0E40\u0E21\u0E25\u0E2B\u0E23\u0E37\u0E2D\u0E2B\u0E21\u0E32\u0E22\u0E40\u0E25\u0E02\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C \u0E42\u0E14\u0E22\u0E21\u0E35\u0E40\u0E08\u0E15\u0E19\u0E32\u0E01\u0E25\u0E31\u0E48\u0E19\u0E41\u0E01\u0E25\u0E49\u0E07\u0E43\u0E2B\u0E49\u0E1C\u0E39\u0E49\u0E2D\u0E37\u0E48\u0E19\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E04\u0E27\u0E32\u0E21\u0E40\u0E14\u0E37\u0E2D\u0E14\u0E23\u0E49\u0E2D\u0E19\u0E23\u0E33\u0E04\u0E32\u0E0D \u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E2A\u0E35\u0E22\u0E2B\u0E32\u0E22 \u0E42\u0E14\u0E22\u0E40\u0E09\u0E1E\u0E32\u0E30\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E22\u0E34\u0E48\u0E07\u0E01\u0E23\u0E13\u0E35\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C \u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01\u0E40\u0E1B\u0E47\u0E19\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E21\u0E35\u0E42\u0E2D\u0E01\u0E32\u0E2A\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E04\u0E25\u0E32\u0E14\u0E40\u0E04\u0E25\u0E37\u0E48\u0E2D\u0E19 \u0E41\u0E25\u0E30\u0E40\u0E1B\u0E47\u0E19\u0E2A\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E43\u0E19\u0E01\u0E32\u0E23\u0E01\u0E25\u0E31\u0E48\u0E19\u0E41\u0E01\u0E25\u0E49\u0E07\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22\u0E01\u0E27\u0E48\u0E32\u0E0A\u0E19\u0E34\u0E14\u0E2D\u0E37\u0E48\u0E19 ctrlg.gg \u0E08\u0E36\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E27\u0E31\u0E15\u0E16\u0E38\u0E1B\u0E23\u0E30\u0E2A\u0E07\u0E04\u0E4C\u0E43\u0E19\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E2A\u0E37\u0E48\u0E2D\u0E01\u0E25\u0E32\u0E07\u0E43\u0E19\u0E01\u0E32\u0E23\u0E19\u0E33\u0E40\u0E2A\u0E19\u0E2D\",\n  \"weebboard usage rule 9\": \"9. \u0E2B\u0E49\u0E32\u0E21\u0E40\u0E02\u0E35\u0E22\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E2D\u0E31\u0E19\u0E40\u0E1B\u0E47\u0E19\u0E2A\u0E34\u0E48\u0E07\u0E17\u0E35\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E01\u0E31\u0E1A\u0E2A\u0E34\u0E48\u0E07\u0E1C\u0E34\u0E14\u0E01\u0E0E\u0E2B\u0E21\u0E32\u0E22\u0E2B\u0E23\u0E37\u0E2D\u0E28\u0E35\u0E25\u0E18\u0E23\u0E23\u0E21\u0E2D\u0E31\u0E19\u0E14\u0E35\u0E02\u0E2D\u0E07\u0E2A\u0E31\u0E07\u0E04\u0E21\",\n  \"weebboard usage rule 10\": \"10. \u0E2A\u0E34\u0E48\u0E07\u0E17\u0E35\u0E48\u0E42\u0E1E\u0E2A\u0E15\u0E4C \u0E40\u0E1B\u0E47\u0E19\u0E04\u0E27\u0E32\u0E21\u0E23\u0E31\u0E1A\u0E1C\u0E34\u0E14\u0E0A\u0E2D\u0E1A\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E42\u0E1E\u0E2A\u0E15\u0E4C\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19\",\n  \"weebboard usage rule 11\": \"11. \u0E02\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E23\u0E48\u0E27\u0E21\u0E21\u0E37\u0E2D\u0E17\u0E38\u0E01\u0E04\u0E19\u0E42\u0E1E\u0E2A\u0E15\u0E4C\u0E43\u0E2B\u0E49\u0E16\u0E39\u0E01\u0E2B\u0E49\u0E2D\u0E07 \u0E43\u0E2A\u0E48 Tag \u0E43\u0E2B\u0E49\u0E16\u0E39\u0E01\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E02\u0E2D\u0E07\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\",\n  \"weebboard usage rule 12\": \"12. \u0E2B\u0E32\u0E01\u0E42\u0E1E\u0E2A\u0E15\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E2B\u0E49\u0E2D\u0E07\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49 \u0E1C\u0E39\u0E49\u0E14\u0E39\u0E41\u0E25\u0E41\u0E1E\u0E25\u0E15\u0E1F\u0E2D\u0E23\u0E4C\u0E21\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E4C\u0E17\u0E35\u0E48\u0E08\u0E30\u0E25\u0E1A\u0E2B\u0E23\u0E37\u0E2D\u0E22\u0E49\u0E32\u0E22\u0E01\u0E23\u0E30\u0E17\u0E39\u0E49\u0E44\u0E14\u0E49 \u0E42\u0E14\u0E22\u0E44\u0E21\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E1A\u0E2D\u0E01\u0E25\u0E48\u0E27\u0E07\u0E2B\u0E19\u0E49\u0E32\",\n  \"weebboard usage rule 13\": \"13. \u0E2B\u0E32\u0E01\u0E21\u0E35\u0E02\u0E49\u0E2D\u0E1E\u0E34\u0E1E\u0E32\u0E17\u0E40\u0E01\u0E34\u0E14\u0E02\u0E36\u0E49\u0E19 \u0E01\u0E32\u0E23\u0E15\u0E31\u0E14\u0E2A\u0E34\u0E19\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E14\u0E39\u0E41\u0E25\u0E41\u0E1E\u0E25\u0E15\u0E1F\u0E2D\u0E23\u0E4C\u0E21\u0E16\u0E37\u0E2D\u0E40\u0E1B\u0E47\u0E19\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\",\n  \"who you look alike in Valorant, let's create and share\": \"\u0E17\u0E32\u0E22\u0E19\u0E34\u0E2A\u0E31\u0E22 ...\u0E04\u0E38\u0E13\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23\u0E40\u0E27\u0E25\u0E32\u0E40\u0E25\u0E48\u0E19 Valorant \u0E21\u0E32\u0E40\u0E25\u0E48\u0E19 Quiz \u0E41\u0E25\u0E49\u0E27\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E40\u0E17\u0E48\u0E46 \u0E44\u0E1B\u0E2D\u0E27\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E01\u0E31\u0E19\",\n  \"you agree to allow whallet to send KYC data to DOPA\": \"\u0E09\u0E31\u0E19\u0E22\u0E34\u0E19\u0E22\u0E2D\u0E21\u0E43\u0E2B\u0E49 whallet \u0E2A\u0E48\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E1A\u0E19\u0E1A\u0E31\u0E15\u0E23\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\u0E02\u0E2D\u0E07\u0E17\u0E48\u0E32\u0E19\u0E44\u0E1B\u0E15\u0E23\u0E27\u0E08\u0E2A\u0E2D\u0E1A\u0E04\u0E27\u0E32\u0E21 \u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E31\u0E1A\u0E10\u0E32\u0E19\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E1A\u0E31\u0E15\u0E23\u0E1B\u0E23\u0E30\u0E0A\u0E32\u0E0A\u0E19\u0E02\u0E2D\u0E07\u0E23\u0E31\u0E10\u0E2F\",\n  \"you are already in a team\": \"\u0E04\u0E38\u0E13\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E17\u0E35\u0E21\u0E2D\u0E37\u0E48\u0E19\u0E41\u0E25\u0E49\u0E27\",\n  \"you are not in a team\": \"\u0E04\u0E38\u0E13\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E17\u0E35\u0E21\",\n  \"you are team contact person\": \"\u0E09\u0E31\u0E19\u0E40\u0E1B\u0E47\u0E19\u0E1C\u0E39\u0E49\u0E15\u0E34\u0E14\u0E15\u0E48\u0E2D\u0E02\u0E2D\u0E07\u0E17\u0E35\u0E21\",\n  \"you can only add up to 3 personal details\": \"\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E01\u0E25\u0E48\u0E2D\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E14\u0E49\u0E2A\u0E39\u0E07\u0E2A\u0E38\u0E14 3 \u0E01\u0E25\u0E48\u0E2D\u0E07\",\n  \"you require\": \"\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E2D\u0E35\u0E01\",\n  \"You are already in a team\": \"\u0E04\u0E38\u0E13\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E17\u0E35\u0E21\u0E2D\u0E37\u0E48\u0E19\u0E41\u0E25\u0E49\u0E27\",\n  \"more member\": \"\u0E04\u0E19\",\n  \"your party is full, start your game by adding friends\": \"\u0E1B\u0E32\u0E23\u0E4C\u0E15\u0E35\u0E49\u0E40\u0E15\u0E47\u0E21\u0E41\u0E25\u0E49\u0E27! \u0E41\u0E2D\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E43\u0E19\u0E40\u0E01\u0E21\u0E41\u0E25\u0E49\u0E27\u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E44\u0E14\u0E49\u0E40\u0E25\u0E22\",\n  \"your team has been approved\": \"\u0E17\u0E35\u0E21\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E1C\u0E48\u0E32\u0E19\u0E01\u0E32\u0E23\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\u0E41\u0E25\u0E49\u0E27\",\n  \"your team has been rejected\": \"\u0E04\u0E33\u0E02\u0E2D\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E16\u0E39\u0E01\u0E1B\u0E0F\u0E34\u0E40\u0E2A\u0E18\",\n  \"your team is waiting for approval\": \"\u0E17\u0E35\u0E21\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E01\u0E33\u0E25\u0E31\u0E07\u0E23\u0E2D\u0E01\u0E32\u0E23\u0E2D\u0E19\u0E38\u0E21\u0E31\u0E15\u0E34\",\n  \"play quiz\": \"\u0E40\u0E25\u0E48\u0E19\u0E04\u0E27\u0E34\u0E0B\"\n}", "{\n  \"news\": \"News\",\n  \"help\": \"Help\",\n  \"general\": \"General\",\n  \"review\": \"Review\",\n  \"buy sell\": \"Buy-Sell\",\n  \"tutorial\": \"Tutorial\",\n  \"1. Membership posting in the buy-sell section is reserved exclusively for users who have completed the KYC process.\": \"1. Membership posting in the buy-sell section is reserved exclusively for users who have completed the KYC process.\",\n  \"2. Posting any form of direct sales business, chain sharing, online work, or anything causing harm or disturbance to others is strictly prohibited.\": \"2. Posting any form of direct sales business, chain sharing, online work, or anything causing harm or disturbance to others is strictly prohibited.\",\n  \"3. Before making any transactions, please check the seller\u2019s history at\": \"3. Before making any transactions, please check the seller's history at\",\n  \"4. In case of fraud, report the incident online at\": \"4. In case of fraud, report the incident online at\",\n  \"5. Contact platform administrators via the Facebook Page ctrl g\": \"5. Contact platform administrators via the Facebook Page: CTRL G\",\n  \"1. Navigate to the Party Matching menu.\": \"1. Navigate to the Party Matching menu.\",\n  \"2. Click the \u201CCreate Party\u201D button.\": \"2. Click the \u201CCreate Party\u201D button.\",\n  \"3. Set the party name, enter your in-game character name, choose the play mode, select the desired number of players for the party, pick the rank range for participants, and input the communication channel link for party members.\": \"3. Set the party name, enter your in-game character name, choose the play mode, select the desired number of players for the party, pick the rank range for participants, and input the communication channel link for party members.\",\n  \"4. Optionally, you can set the party to private if the party creator wants to filter incoming players.\": \"4. Optionally, you can set the party to private if the party creator wants to filter incoming players.\",\n  \"1. Click the \u201CJoin\u201D button on the desired party.\": \"1. Click the \u201CJoin\u201D button on the desired party.\",\n  \"2. Enter your in-game character name.\": \"2. Enter your in-game character name.\",\n  \"1. When all members join the party, the party status changes to offline.\": \"1. When all members join the party, the party status changes to offline.\",\n  \"2. Members can coordinate and schedule gameplay using the contact information provided in the party details.\": \"2. Members can coordinate and schedule gameplay using the contact information provided in the party details.\",\n  \"3. Players can then gather and start playing games together using the formed party.\": \"3. Players can then gather and start playing games together using the formed party.\",\n  \"1. rule rare card\": \"1. \u0E2A\u0E21\u0E31\u0E04\u0E23 \u0E2B\u0E23\u0E37\u0E2D Log - in CTRL G \u0E01\u0E48\u0E2D\u0E19\u0E17\u0E33 Quiz\",\n  \"2. rule rare card\": \"2. \u0E04\u0E25\u0E34\u0E01 \\\"\u0E23\u0E31\u0E1A\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\\\" \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E23\u0E31\u0E1A\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"3. rule rare card\": \"3. \u0E04\u0E25\u0E34\u0E01 \\\"\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\\\" \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E14\u0E39\u0E01\u0E23\u0E2D\u0E1A\u0E44\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E17\u0E35\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\",\n  \"4. rule rare card\": \"4. \u0E04\u0E25\u0E34\u0E01\u0E17\u0E35\u0E48\u0E23\u0E39\u0E1B\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E14\u0E49\u0E32\u0E19\u0E0B\u0E49\u0E32\u0E22\u0E21\u0E37\u0E2D \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E14\u0E39\u0E41\u0E25\u0E30\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E43\u0E0A\u0E49\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\u0E17\u0E35\u0E48\u0E2A\u0E30\u0E2A\u0E21\u0E40\u0E2D\u0E32\u0E44\u0E27\u0E49\",\n  \"about\": \"About Us\", \n  \"about us paragraph 1\": \"CTRL G : Completing everything in Esports. \",\n  \"about us paragraph 2\": \"CTRL G is a collaborative effort between gamers and industry veterans, including Ink (Pannys), a former Thai national Overwatch player, and Talent Manager / Aey (Viperdemon), a former CS:GO player and streamer / and Trip (Ptrip), an analyst and commentator for Valorant.\",\n  \"about us paragraph 3\": \"They have joined forces with the aim of elevating the quality and scale of the Esports scene in Thailand. Their mission involves creating a community that brings together gamers and Esports enthusiasts, where they can share information, news, and deep insights into the Esports industry.\",\n  \"about us paragraph 4\": \"In addition, they are organizing Esport events, starting with Campus and School Tours to educate and engage students interested in Esports.\",\n  \"about us paragraph 5\": \"Talent Management is a critical aspect of their mission, with CTRL G's team prepared to develop and manage individuals with gaming potential or talents. Their goal is to enable these individuals to harness their abilities to the fullest and with maximum efficiency. They are also dedicated to overseeing Esport Tournaments to enhance competition at the school and university levels, fostering increased intensity and professionalism. Their ultimate objective is to produce high-caliber players and professionals who can excel in the Esports industry.\",\n  \"accept\": \"Accept\",\n  \"achievement image\": \"Achievement Image\",\n  \"achievement name\": \"Achievement Name\",\n  \"achievement title\": \"Achievement Group Name\",\n  \"achievement url\": \"Add URL to Achievement (optional)\",\n  \"active\": \"Active\",\n  \"add\": \"Add\",\n  \"add achievement\": \"Add Achievement\",\n  \"add experince\": \"Add Experience\",\n  \"add experience\": \"Add Experience\",\n  \"add experience title\": \"Add Other Experiences\",\n  \"add game\": \"Add Game\",\n  \"Add Item\": \"Add Details\",\n  \"add more\": \"Add More\",\n  \"add more prize\": \"Add Rankings\",\n  \"additional fields\": \"Team Member Personal Info\",\n  \"additional player\": \"Number of Substitutions\",\n  \"address paragraph 1\": \"Space Phahon 19, 1687/1 Phahonyothin Road,\",\n  \"address paragraph 2\": \"Chatuchak Sub-district, BKK 10900\",\n  \"admin\": \"Admin\",\n  \"album name\": \"Album Name\",\n  \"album url copied\": \"Successfully copied Album URL\",\n  \"albums\": \"Photo Album\",\n  \"all games\": \"All Games\",\n  \"All members of your party are here and ready to play!\": \"Your Party is ready! start gaming by adding friend's username\",\n  \"all notifications\": \"All Notifications\",\n  \"all parties\": \"All Parties\",\n  \"all tournaments\": \"All\",\n  \"allow cookies messages\": \"CTRL G use cookies to improve our service and enhance user browsing experience, please read and understand\",\n  \"and contact platform administrators for information about the fraudulent party.\": \"and contact platform administrators for information about the fraudulent party.\",\n  \"and more options...\": \"View more options\",\n  \"anonymous\": \"Anonymous\",\n  \"approve\": \"Approve\",\n  \"approved\": \"Approved\",\n  \"are you sure to delete team\": \"Are you sure to delete team\",\n  \"are you sure to delete team member\": \"Are you sure to remove team member\",\n  \"are you sure to delete this post\": \"Are you sure to delete post\",\n  \"are you sure to delete this tournamnet\": \"Are you sure to delete this tournament\",\n  \"are you sure to delete party member\": \"Are you sure to remove party member\",\n  \"are you sure to delete party request\": \"Are you sure to cancel party request\",\n  \"are you sure to leave the party\": \"Are you sure to leave the party\",\n  \"are you sure to leave team\": \"Are you sure to leave team\",\n  \"are you sure to proceed\": \"Are you sure to proceed\",\n  \"are you sure to reject team\": \"Are you sure to reject team\",\n  \"are you sure to remove team\": \"Are you sure to remove team\",\n  \"are you sure to submit team\": \"Are you sure to submit team\",\n  \"are you sure you want to delete this achievement?\": \"Are you sure to delete this Achievement?\",\n  \"are you sure you want to delete this album?\": \"Are you sure to delete this Album?\",\n  \"are you sure you want to delete this expereince?\": \"Are you sure to delete this Experience?\",\n  \"are you sure you want to delete this expereince title?\": \"Are you sure to delete this Experience Title?\",\n  \"are you sure you want to delete this photo?\": \"Are you sure to delete this Image?\",\n  \"are you sure you want to delete this rank?\": \"Are you sure to delete this Rank?\",\n  \"are you to vote\": \"Confirm vote\",\n  \"ascendant\": \"Ascendant\",\n  \"at least 2 options\": \"Please fill at least 2 options\",\n  \"attachment image\": \"Attachment image\",\n  \"attend\": \"Join\",\n  \"attended\": \"Joined\",\n  \"auto refresh countdown\": \"Refresh countdown\",\n  \"Autosize height with minimum and maximum number of lines\": \"Input Description\",\n  \"available\": \"available\",\n  \"available slots\": \"Available Slots\",\n  \"back\": \"Back\",\n  \"back to albums\": \"Back to Albums\",\n  \"back to edit team\": \"Back to Edit Team\",\n  \"back to tournament\": \"Back to Tournament\",\n  \"banner image\": \"Banner Image\",\n  \"below 5,000\": \"Below 5,000\",\n  \"bio\": \"Bio\",\n  \"boost again in\": \"Can Boost in\",\n  \"boost party\": \"Swipe to Boost Party\",\n  \"bronze\": \"Bronze\",\n  \"buy sell conditions\": \"Webboard Terms of Use\",\n  \"Buy Sell rules\": \"Webboards and 'Buy-Sell' room terms\",\n  \"buy sell rules descriptoins\": \"(Description)\",\n  \"by\": \"By\",\n  \"by clicking your profile picture\": \"\u0E42\u0E14\u0E22\u0E01\u0E32\u0E23\u0E01\u0E14\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E23\u0E39\u0E1B\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"campaign\": \"Play Quiz\",\n  \"can create post and comment in anonymouse mode\": \"Create posts and comments in 'Anonymous' mode\",\n  \"can create post and comment in buy sell room\": \"Create 'Buy-Sell' posts in Webboards\",\n  \"can enter buy sell page\": \"Visit 'Buy-Sell' posts in Webboards\",\n  \"cancel\": \"Cancel\",\n  \"change\": \"Edit\",\n  \"change cover\": \"Change Cover\",\n  \"change game\": \"Change Game\",\n  \"citizen id\": \"Citizen ID\",\n  \"close\": \"Close\",\n  \"comment\": \"Write a Comment\",\n  \"comments\": \"comments\",\n  \"company\": \"Company\",\n  \"confirm\": \"Confirm\",\n  \"confirm game username\": \"Confirm your Username\",\n  \"confirm password\": \"Confirm Password\",\n  \"connect account\": \"Connect Account\",\n  \"connect whallet\": \"Connect Account\",\n  \"connect with CTRL G account to get reward and display result\": \"\u0E41\u0E2A\u0E14\u0E07\u0E1C\u0E25\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E23\u0E31\u0E1A\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C \u0E1C\u0E48\u0E32\u0E19\u0E1A\u0E31\u0E0D\u0E0A\u0E35 CTRL G!\",\n  \"contact\": \"Contact Us\",\n  \"contact paragraph 1\": \"You can follow us on social media to stay updated with news and provide feedback. You can do so by leaving comments or sending us direct messages.\",\n  \"contact person\": \"Contact Person\",\n  \"contact person email\": \"Contact Person Email\",\n  \"contact person name\": \"Contact Person Name\",\n  \"contact person phone\": \"Contact Person Phone No.\",\n  \"content\": \"Description (Max 10 uploaded images)\",\n  \"continue\": \"Continue\",\n  \"cookies\": \"Cookies Policy\",\n  \"cookies policy\": \"Cookies Policy\",\n  \"cookies usage\": \"Cookies Usage\",\n  \"Copy URL\": \"Copy URL\",\n  \"create achievement\": \"Add\",\n  \"create album\": \"Create New Album\",\n  \"create experience\": \"Add\",\n  \"create new\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E43\u0E2B\u0E21\u0E48\",\n  \"create party\": \"Create Party\",\n  \"create poll\": \"Create Poll\",\n  \"create post\": \"Submit Post\",\n  \"create post with own profile\": \"Post or Comment in Webboards with own profile\",\n  \"create team\": \"Create Team\",\n  \"create tournament\": \"Create Tournament\",\n  \"create tournament post\": \"Create Tournament Q&A Post on Webboard?\",\n  \"customize profile by your own style, and share to your friends\": \"\u0E15\u0E01\u0E41\u0E15\u0E48\u0E07\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E01\u0E32\u0E23\u0E4C\u0E14\u0E15\u0E32\u0E21\u0E2A\u0E44\u0E15\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13 \u0E41\u0E25\u0E49\u0E27\u0E41\u0E0A\u0E23\u0E4C\u0E44\u0E1B\u0E2D\u0E27\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E46\u0E0A\u0E32\u0E27\u0E27\u0E32\u0E42\u0E25\",\n  \"darkmode\": \"Dark Mode\",\n  \"dashboard\": \"Dashboard\",\n  \"date of birth\": \"Date of Birth\",\n  \"date picker\": \"Date Calendar\",\n  \"days ago\": \"days ago\",\n  \"delete\": \"Delete\",\n  \"delete detail box\": \"Delete Detail\",\n  \"delete experience title\": \"Delete Experience Title\",\n  \"delete request\": \"Delete Join Request\",\n  \"delete team\": \"Delete Team\",\n  \"delete tournament\": \"Delete Tournament\",\n  \"deleted at\": \"Deleted at\",\n  \"Deleted comment\": \"--comment deleted--\",\n  \"description\": \"Description\",\n  \"descriptionEn\": \"Description (English)\",\n  \"detail\": \"Party Info\",\n  \"detail personal details\": \"Personal Detail\",\n  \"detail_1\": \"Information\",\n  \"detail_2\": \"Description\",\n  \"diamond\": \"Diamond\",\n  \"discord id\": \"Discord ID\",\n  \"discord ID\": \"Discord ID\",\n  \"discord ID copied\": \"Discord ID copied\",\n  \"discord url\": \"Discord URL\",\n  \"display name\": \"Username\",\n  \"display name is too long (maximum 20 characters)\": \"Username is too long (Maximum 20 characters)\",\n  \"display order\": \"Display Order\",\n  \"display result immediately\": \"\u0E41\u0E2A\u0E14\u0E07\u0E1C\u0E25\u0E17\u0E31\u0E19\u0E17\u0E35\",\n  \"Download\": \"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\",\n  \"Download Avatar\": \"\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"durability\": \"TRICK\",\n  \"edit\": \"Edit\",\n  \"edit achievement\": \"Edit Achievement\",\n  \"edit achievement title\": \"Edit Achievement Group Name\",\n  \"edit album\": \"Edit Album\",\n  \"edit experience\": \"Edit Experience\",\n  \"edit experience title\": \"Edit Experience Title\",\n  \"edit game\": \"Edit Game\",\n  \"edit post\": \"Edit Post\",\n  \"edit profile\": \"Edit Profile\",\n  \"edited at\": \"Edited at\",\n  \"email\": \"Email\",\n  \"email or phone\": \"Email or Phone No.\",\n  \"end date\": \"Tournament End Date\",\n  \"end date must be after the start date\": \"End Date must be before Start Date\",\n  \"end date must be before start date\": \"End Date must be before Start Date\",\n  \"experience\": \"Experience\",\n  \"experience end date\": \"Until\",\n  \"experience start date\": \"From\",\n  \"experience title\": \"Game Name\",\n  \"experiences\": \"Experience\",\n  \"export all\": \"Export all teams\",\n  \"failed to create party\": \"You already have a party\",\n  \"FAQs\": \"FAQs\",\n  \"featured tournament\": \"Featured Tournaments\",\n  \"feedback\": \"Feedback\",\n  \"file upload failed due to too large image size\": \"Cannot upload file larger than 2 MB\",\n  \"fill in party detail\": \"Fill in party detail e.g., 'Looking for G P D 25%'\",\n  \"filter\": \"Filters\",\n  \"Filters\": \"Filters\",\n  \"final round location\": \"Tournament Location (For online tournaments, please fill in \u201Conline\u201D)\",\n  \"final round location (English)\": \"Tournament Location (English)\",\n  \"finished quiz already, let's see who you look alike\": \"\u0E15\u0E2D\u0E1A\u0E04\u0E33\u0E16\u0E32\u0E21\u0E40\u0E23\u0E35\u0E22\u0E1A\u0E23\u0E49\u0E2D\u0E22\u0E41\u0E25\u0E49\u0E27 \u0E21\u0E32\u0E14\u0E39\u0E01\u0E31\u0E19\u0E40\u0E25\u0E22\u0E27\u0E48\u0E32\u0E04\u0E38\u0E13\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23!\",\n  \"finished tournaments\": \"Finished\",\n  \"first 2 characters must be alphabet\": \"The first 2 characters must be alphabets\",\n  \"first name\": \"First Name\",\n  \"forgot password?\": \"Forgot Password?\",\n  \"forum_admin\": \"Webboard Admin\",\n  \"game\": \"Select Game\",\n  \"game icon\": \"Game Icon\",\n  \"game username\": \"In-game Username\",\n  \"game usernames\": \"In-game Username\",\n  \"games\": \"Game\",\n  \"general user\": \"Normal User\",\n  \"get the gift\": \"\u0E23\u0E31\u0E1A\u0E23\u0E32\u0E07\u0E27\u0E31\u0E25\",\n  \"get verrified badge\": \"Receive 'Verified' badge on profile\",\n  \"go to profile\": \"\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E09\u0E31\u0E19\",\n  \"go to profile and click profile picture to change frame\": \"\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E43\u0E0A\u0E49\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E44\u0E14\u0E49 \u0E42\u0E14\u0E22\u0E01\u0E32\u0E23\u0E01\u0E14\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E23\u0E39\u0E1B\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"gold\": \"Gold\",\n  \"have a chance to get rare card\": \"\u0E27\u0E34\u0E18\u0E35\u0E23\u0E31\u0E1A\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C \u0E40\u0E21\u0E37\u0E48\u0E2D\u0E40\u0E25\u0E48\u0E19\u0E14\u0E49\u0E27\u0E22\u0E1A\u0E31\u0E0D\u0E0A\u0E35 CTRL G\",\n  \"history\": \"History\",\n  \"home\": \"Home\",\n  \"hours ago\": \"hours ago\",\n  \"how it works\": \"How it works\",\n  \"How to Create a Party\": \"How to Create a Party\",\n  \"how to create party\": \"How to create party\",\n  \"How to Join a Party\": \"How to Join a Party\",\n  \"how to join party\": \"How to join party\",\n  \"how to start playing\": \"Once the party is complete, here's how to start playing\",\n  \"how to start the game\": \"How to start the game\",\n  \"id card has already registered on ctrlg\": \"ID card has already registered on CTRL G\",\n  \"images\": \"Images\",\n  \"immortal\": \"Immortal\",\n  \"in game username\": \"Username\",\n  \"inactive\": \"Inactive\",\n  \"input description\": \"Input Description\",\n  \"input in game username\": \"Input in game username...\",\n  \"input tags\": \"Add Hashtags\",\n  \"intelligence\": \"RECOVERY\",\n  \"invalid laser idcard length\": \"Incorrect Laser Code length\",\n  \"Invalid Password\": \"Incorrect Password\",\n  \"invalid password\": \"Incorrect Password\",\n  \"invalid thai pattern\": \"Please fill the form in Thai\",\n  \"iron\": \"Iron\",\n  \"is discordId required\": \"Require Discord ID\",\n  \"is email required\": \"Require Email\",\n  \"is ign required\": \"Require In-game Username\",\n  \"is kyc required\": \"Require ID Verification\",\n  \"is phone Number required\": \"Require Phone No.\",\n  \"is slip required\": \"Require Registration Fee\",\n  \"items\": \"Tournaments\",\n  \"join\": \"Join\",\n  \"join team link copied\": \"Team invitation link copied\",\n  \"joined tournaments\": \"Joined tournaments\",\n  \"KYC benefits\": \"KYC benefits\",\n  \"KYC info\": \"Verify My Account\",\n  \"KYC to access \\\"anonymouse\\\" and \\\"buy sell\\\" rooms\": \"Verify your account to use 'Anonymous'\",\n  \"KYC to access \\\"buy sell\\\" and \\\"tournament\\\" rooms\": \"Verify your account to create 'Buy-Sell' posts\",\n  \"language\": \"Language\",\n  \"laser code\": \"Laser Code\",\n  \"last 10 characters must be numbers\": \"The last 10 characters must be numbers\",\n  \"last name\": \"Last Name\",\n  \"last update\": \"Latest\",\n  \"lastest post\": \"New Post\",\n  \"leave party\": \"Leave Party\",\n  \"leave team\": \"Leave Team\",\n  \"like\": \"Like\",\n  \"liked\": \"Liked\",\n  \"load less\": \"Collapse\",\n  \"load more\": \"Load More\",\n  \"Load More\": \"Load More\",\n  \"lock\": \"Lock\",\n  \"login\": \"Login\",\n  \"login with Google\": \"Connect with Google\",\n  \"login with LINE\": \"Connect with LINE\",\n  \"logout\": \"Logout\",\n  \"manage\": \"Manage\",\n  \"maximum 10 fields\": \"Cannot add more than 10 fields\",\n  \"maximum 10 options\": \"Cannot add more than 10 choices\",\n  \"maximum 10 prizes\": \"Cannot add more than 10 prizes\",\n  \"maximum team\": \"Maximum Teams\",\n  \"Member limit reached\": \"Number of Team Member has reached criteria\",\n  \"Member limit not reached, Please wait for other members to join the team\": \"Number of Team Member has not reached criteria\",\n  \"merchant\": \"Merchant\",\n  \"message\": \"Messages\",\n  \"minutes ago\": \"minutes ago\",\n  \"mode\": \"Choose Mode\",\n  \"most comments\": \"Hot Topic (24hr)\",\n  \"most reactions\": \"Most Reactions (24hr)\",\n  \"must contain at least 5 characters\": \"Must contain at least 5 characters\",\n  \"must contain 5-30 characters\": \"Must contain at least 5 characters\",\n  \"my achievement\": \"Achievements\",\n  \"my album\": \"Album\",\n  \"my albums\": \"Photo Album\",\n  \"my conversations\": \"My Posts\",\n  \"my comments\": \"My Comments\",\n  \"my experiences\": \"Experiences\",\n  \"my games\": \"My Games\",\n  \"my notifications\": \"Notifications\",\n  \"my parties\": \"My Party\",\n  \"my personal details\": \"Personal Details\",\n  \"my team\": \"My Team\",\n  \"my tournaments\": \"My Tournaments\",\n  \"my webboards\": \"My Posts\",\n  \"name\": \"Example: Name\",\n  \"name (English)\": \"Example: Name (English)\",\n  \"new party\": \"Create Party\",\n  \"new post\": \"Create Post\",\n  \"next\": \"Next\",\n  \"Note: KYC refers to the Know Your Customer process, a standard in the financial industry to verify the identity of customers.\": \"Note: KYC refers to the Know Your Customer process, a standard in the financial industry to verify the identity of customers.\",\n  \"notification:has replied to your comment\": \"has replied to your comment.\",\n  \"notification:has commented on your post\": \"has commented on your post.\",\n  \"notification:has sent a request to join your party\": \"has sent a request to join your party.\",\n  \"notification:Your Party is ready! start gaming by adding friend's username\": \"Your Party is ready! start gaming by adding friend's username.\",\n  \"notification:Your request to join\": \"Your request to join\",\n  \"notification:party has been accepted\": \"party has been accepted.\",\n  \"notification:party has been rejected\": \"party has been rejected.\",\n  \"notification:Your team\": \"Your team\",\n  \"notification:has been approved to join\": \"has been approved to join\",\n  \"notification:that has been approved to join\": \"has been removed from tournament\",\n  \"notification:tournament\": \"tournament.\",\n  \"notification:tournament has been removed because\": \"because\",\n  \"notification:request to join\": \"request to join\",\n  \"notification:tournament has been rejected because\": \"tournament has been rejected because\",\n  \"notification:Your tournament\": \"Your tournament\",\n  \"notification:has been approved\": \"has been approved.\",\n  \"notification:has been rejected because\": \"has been rejected because\",\n  \"no chat\": \"No messages\",\n  \"no data\": \"No information\",\n  \"No data\": \"No messages\",\n  \"no game username\": \"No In-game Username\",\n  \"no notifications\": \"No Notifications\",\n  \"no participant\": \"No Participants\",\n  \"no party matched\": \"No matching party\",\n  \"no party request\": \"No request\",\n  \"no party requests\": \"No request\",\n  \"no password found\": \"Your account does not have a password\",\n  \"no past tournament\": \"You have not joined a tournament\",\n  \"no user\": \"No user found\",\n  \"no webboard\": \"No conversations\",\n  \"ongoing tournaments\": \"Ongoing\",\n  \"only accept number\": \"Please fill only numbers\",\n  \"only english characters and numbers are allowed\": \"Can only input alphanumeric characters (A-Z, a-z, 0-9)\",\n  \"only english characters and numbers are allowed, and no spaces\": \"Please input alphanumeric characters only, and also exclude spaces\",\n  \"opening registration\": \"Registeration open\",\n  \"opening tournaments\": \"Open\",\n  \"option\": \"Add a choice\",\n  \"or\": \"Or\",\n  \"organizer\": \"Organizer\",\n  \"over 30,000\": \"Over 30,000\",\n  \"participants\": \"Participants\",\n  \"parties\": \"Party Matching\",\n  \"party active\": \"Set active Party\",\n  \"party boosted\": \"Party Boosted!\",\n  \"party link copied\": \"Party Link copied\",\n  \"party matching\": \"Party Matching\",\n  \"party name\": \"Party Name\",\n  \"party owner must approve before joining\": \"Members will be able to join once Party Owner accepted their request\",\n  \"party request\": \"Join Request sent\",\n  \"party requests\": \"Join Requests\",\n  \"password\": \"Password\",\n  \"password doesn't match\": \"Password doesn't match\",\n  \"past tournaments\": \"Past Tournaments\",\n  \"pending\": \"Pending Approval\",\n  \"pending teams\": \"Teams Pending Approval\",\n  \"people who liked you\": \"People who liked\",\n  \"personalDetails\": \"Personal Details\",\n  \"personal details\": \"Information\",\n  \"phone\": \"Phone No.\",\n  \"phone number\": \"Phone No.\",\n  \"platinum\": \"Platinum\",\n  \"player info\": \"Player Info\",\n  \"please agree to this field\": \"Required\",\n  \"please do not input '-'\": \"Please do not input '-'\",\n  \"please enter otp\": \"Fill in OTP\",\n  \"please enter username\": \"Username is already existed\",\n  \"please input achievement image\": \"Please upload Achievement Image\",\n  \"please input achievement name\": \"Please input Achievement Name\",\n  \"please input achievement title\": \"Please input Achievement Title\",\n  \"please input album name\": \"Please input Album Name\",\n  \"please input citizen id\": \"Please input Citizen ID\",\n  \"please input contactName\": \"Please input Contact Person Name\",\n  \"please input content\": \"Please input content description\",\n  \"please input correct citizen id\": \"Incorrect Citizen ID\",\n  \"please input correct email\": \"Please input correct Email\",\n  \"please input correct email or phone\": \"Please input correct Email or Phone No.\",\n  \"please input data\": \"Please input data\",\n  \"please input description\": \"Please input tournament description\",\n  \"please input detail\": \"Please input Details\",\n  \"please input discord id\": \"Please input Discord ID\",\n  \"please input email\": \"Please input Email\",\n  \"please input experience name\": \"Please input Team Name or Tournament Name\",\n  \"please input experience title\": \"Please input Game Name\",\n  \"please input feedback message\": \"Please input Feedback message\",\n  \"please input firstname\": \"Please input First Name\",\n  \"please input game icon\": \"Please input Game Icon\",\n  \"please input game rank\": \"Please select Rank\",\n  \"please input game username\": \"Please input In-game Username\",\n  \"please input laser code\": \"Please input Laser Code\",\n  \"please input lastname\": \"Please input Last Name\",\n  \"please input max team\": \"Please select Maximum Teams\",\n  \"please input name\": \"Please input field name\",\n  \"please input name in English\": \"Please input field name in English\",\n  \"please input number of additional player\": \"Please input number of Additional Members (Substitutions)\",\n  \"please input number of required player\": \"Please input number of Team Members required\",\n  \"please input password\": \"Please input Password\",\n  \"please input party name\": \"Please input Party Name\",\n  \"please input phone\": \"Please input Phone Number\",\n  \"please input phone number\": \"Please input Phone Number\",\n  \"please input qualification rules\": \"Please input Qualifications & Rules\",\n  \"please input reason to report\": \"Please select report reason\",\n  \"please input room\": \"Please select room\",\n  \"please input team logo\": \"Please input Team Logo\",\n  \"please input team name\": \"Please input Team Name\",\n  \"please input title\": \"Please input Post Title\",\n  \"please input title personal detail\": \"Please input Title Name\",\n  \"please input tournament name\": \"Please input Tournament Name\",\n  \"please select date of birth\": \"Please select Date of Birth\",\n  \"please select end date\": \"Please select Tournament End Date\",\n  \"please select experience end date\": \"Please select Experience End date\",\n  \"please select experience start date\": \"Please select Experience Start date\",\n  \"please select game\": \"Please select Game\",\n  \"please select registration end date\": \"Please select Registeration End Date\",\n  \"please select registration start date\": \"Please select Registeration Start Date\",\n  \"please select start date\": \"Please select Tournament Start Date\",\n  \"please select tournament type\": \"Please select Tournament Type\",\n  \"please upload banner image\": \"Please upload Banner Image\",\n  \"please upload cover image\": \"Please upload Album Cover\",\n  \"please upload post thumbnail\": \"Upload Post Thumbnail\",\n  \"please upload slip image\": \"Please Upload Registeration Fee Payment Slip\",\n  \"please upload thumnail image\": \"Please upload Thumbnail Image\",\n  \"poll options\": \"Poll Choices\",\n  \"popular tags\": \"Trending Now\",\n  \"post url copied\": \"Post URL copied\",\n  \"posts\": \"posts\",\n  \"present\": \"Present\",\n  \"privacy\": \"Privacy Policy\",\n  \"private\": \"Private\",\n  \"private album\": \"Private Album\",\n  \"private party\": \"Private Party\",\n  \"prize\": \"Fill in prize...\",\n  \"prize additional fields\": \"Tournament Prize per rankings\",\n  \"prizeNumber\": \"Ranking\",\n  \"profile\": \"Profile\",\n  \"profile url copied\": \"Profile URL copied\",\n  \"public\": \"Public\",\n  \"qualification rules\": \"Qualifications & Rules\",\n  \"qualification rules (English)\": \"Qualifications & Rules (English)\",\n  \"radiant\": \"Radiant\",\n  \"rank\": \"Rank\",\n  \"rank in game\": \"My Rank\",\n  \"Ranking game already exists\": \"Game already existed\",\n  \"ranks\": \"Choose Ranks\",\n  \"rare rules\": \"\u0E01\u0E15\u0E34\u0E01\u0E32\",\n  \"refresh\": \"Refresh\",\n  \"refresh in\": \"Refresh in\",\n  \"register\": \"Register\",\n  \"registration end date\": \"Registeration End Date\",\n  \"registration start date\": \"Registeration Start Date\",\n  \"reject\": \"Reject\",\n  \"reject comment\": \"Team Rejection Remark\",\n  \"reject team\": \"Reject Team\",\n  \"related tournaments\": \"Recommended Tournaments\",\n  \"reply\": \"Reply\",\n  \"reply to\": \"Replying to...\",\n  \"report\": \"Report\",\n  \"request\": \"Send Request\",\n  \"request message\": \"Add request message\",\n  \"request sent\": \"Join Request sent\",\n  \"request to join party\": \"Send Join Request\",\n  \"reserved\": \"Reserved\",\n  \"reset password email has been sent, please return to ctrlg after reset success\": \"Password Reset email has been sent, please return to CTRL G after reset success\",\n  \"remark should not be empty\": \"Please fill in rejection remark\",\n  \"remove comment\": \"Team Removal Remark\",\n  \"remove team\": \"Remove Team\",\n  \"remove team remark should not be empty\": \"Please fill in removal remark\",\n  \"removed team members have to create a new team\": \"(Removed team will be erased. Members can create a new team if under tournament registration period)\",\n  \"required\": \"Required\",\n  \"required players\": \"Number of Required Members\",\n  \"required slots\": \"Looking for...\",\n  \"reward #\": \"Reward #\",\n  \"reward center\": \"REWARD CENTER\",\n  \"Reward center\": \"REWARD CENTER\",\n  \"REWARD CENTER\": \"REWARD CENTER\",\n  \"recommended ratio\": \"Recommended ratio\",\n  \"recommended resolution\": \"Recommended resolution\",\n  \"recommended resolution 1920x1080\": \"Recommended resolution 1920x1080\",\n  \"rooms\": \"Room\",\n  \"rules\": \"Rules\",\n  \"save\": \"Save\",\n  \"schedule hasn't yet been released\": \"Schedule has not been announced\",\n  \"secret chamber\": \"SECRET CHAMBER\",\n  \"Secret chamber\": \"SECRET CHAMBER\",\n  \"SECRET CHAMBER\": \"SECRET CHAMBER\",\n  \"second\": \"seconds\",\n  \"seconds ago\": \"seconds ago\",\n  \"select all\": \"Select All\",\n  \"select cover image\": \"Select Cover Image\",\n  \"select avatar image\": \"Select Avatar Image\",\n  \"select display image\": \"Select Team Logo\",\n  \"select file\": \"Select File\",\n  \"select frame\": \"Select frame\",\n  \"select game\": \"Select Game\",\n  \"select mode\": \"Select Mode\",\n  \"select rank\": \"Select Rank\",\n  \"select ranks\": \"Select Rank\",\n  \"select room\": \"Select Room\",\n  \"select the preferred ranks\": \"Select the preferred team member ranks (Maximum 3 Ranks)\",\n  \"select your profile frame\": \"\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E43\u0E0A\u0E49\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E44\u0E14\u0E49\",\n  \"send\": \"Send\",\n  \"send a message failed\": \"You have been removed from Party\",\n  \"send request\": \"Send Join Request\",\n  \"setting\": \"Settings\",\n  \"settings\": \"Settings\",\n  \"share\": \"\u0E41\u0E0A\u0E23\u0E4C\",\n  \"Share Avatar\": \"\u0E41\u0E0A\u0E23\u0E4C\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\",\n  \"signature\": \"Signature\",\n  \"silver\": \"Silver\",\n  \"single elimination\": \"Single Elimination\",\n  \"social accounts\": \"Social Accounts\",\n  \"sort order\": \"Sort Order\",\n  \"sorting order\": \"Sort Order\",\n  \"spaces are not allowed\": \"Spaces are not allowed\",\n  \"speed\": \"SPEED\",\n  \"start buy sell & anonymous after complete verification\": \"Start buy & sell after verification completed\",\n  \"start date\": \"Tournament Start Date\",\n  \"start date must be before end date\": \"Start Date must be before End Date\",\n  \"start date must be before end date and at least 2 days later than today\": \"Start Date must be before End Date\",\n  \"start quiz\": \"\u0E40\u0E23\u0E34\u0E48\u0E21\u0E40\u0E25\u0E48\u0E19\u0E40\u0E25\u0E22\",\n  \"start verification\": \"Start Verification\",\n  \"streamer\": \"Streamer / Player\",\n  \"strength\": \"POWER\",\n  \"submit\": \"Submit\",\n  \"submit feedback\": \"Submit Feedback\",\n  \"submit team\": \"Submit team\",\n  \"successfully add user in game\": \"Successfully added My Ranks\",\n  \"successfully approved request\": \"Successfully approved request\",\n  \"successfully boosted party\": \"Successfully boosted party\",\n  \"successfully bulk-approve\": \"Successfully approve all\",\n  \"successfully claim reward\": \"Successfully claimed gift\",\n  \"Successfully commented\": \"Successfully commented\",\n  \"successfully create tournament\": \"Successfully created tournament\",\n  \"successfully create webboard\": \"Successfully created post\",\n  \"successfully create-team\": \"Successfully created team\",\n  \"successfully created achievement\": \"Successfully added Achievement\",\n  \"successfully created album\": \"Successfully created Album\",\n  \"Successfully created experience\": \"Successfully created Experience\",\n  \"successfully created experience title\": \"Successfully added Experience Title\",\n  \"successfully created party\": \"Successfully created party\",\n  \"successfully created party member\": \"Successfully lock slot\",\n  \"successfully created request\": \"Successfully sent join request\",\n  \"successfully delete member\": \"Successfully remove Party Member\",\n  \"successfully delete request\": \"Successfully cancel request\",\n  \"Successfully deleted achievement}\": \"Successfully deleted Achievement\",\n  \"Successfully deleted album\": \"Successfully deleted Album\",\n  \"Successfully deleted experience\": \"Successfully deleted Experience\",\n  \"Successfully deleted experience title\": \"Successfully deleted Experience Title\",\n  \"Successfully deleted comment\": \"Successfully deleted comment\",\n  \"successfully deleted frame\": \"Successfully removed profile frame\",\n  \"successfully deleted member\": \"Successfully remove Party Member\",\n  \"Successfully deleted photo\": \"Successfully deleted image\",\n  \"successfully deleted request\": \"Successfully cancel request\",\n  \"Successfully deleted tournament}\": \"Successfully deleted tournament\",\n  \"Successfully deleted user in game\": \"Successfully deleted My Rank\",\n  \"Successfully deleted webboard\": \"Successfully delete post\",\n  \"successfully delete-team\": \"Successfully delete team\",\n  \"successfully delete-team-member\": \"Successfully remove Team Member\",\n  \"successfully edit profile\": \"Successfully edit profile\",\n  \"successfully joined party\": \"Successfully joined party\",\n  \"successfully join-team\": \"Successfully join team\",\n  \"successfully leave-team\": \"Successfully leave team\",\n  \"successfully left party\": \"Successfully left party\",\n  \"successfully login\": \"Successfully Login\",\n  \"successfully Login\": \"Login Success\",\n  \"successfully Register Account\": \"Registration Success\",\n  \"successfully reject\": \"Successfully rejected team\",\n  \"successfully rejected request\": \"Successfully rejected request\",\n  \"successfully remove\": \"Successfully removed team\",\n  \"Successfully reported webboard\": \"Successfully reported\",\n  \"successfully saved to profile index\": \"Save Success\",\n  \"successfully sent feedback\": \"Successfully sent Feedback\",\n  \"successfully sorted album\": \"Successfully sorted Albums\",\n  \"successfully sorted my achievement\": \"Successfully sorted Achievements\",\n  \"successfully sorted my achievement title\": \"Successfully sorted Achievement Titles\",\n  \"successfully sorted my experience title\": \"Successfully sorted Experience Titles\",\n  \"successfully sorted my games\": \"Successfully sorted My games\",\n  \"successfully sorted personal details\": \"Successfully sorted Personal Details\",\n  \"successfully sorted profile\": \"Successfully sorted My Profile\",\n  \"successfully submit-team\": \"Successfully submit team\",\n  \"Successfully update comment\": \"Successfully update comment\",\n  \"Successfully update party\": \"Successfully update party\",\n  \"successfully update party member\": \"Successfully update party member\",\n  \"successfully update profile\": \"Successfully update profile\",\n  \"successfully update signature\": \"Successfully update signature\",\n  \"successfully update tournament\": \"Successfully update tournament\",\n  \"successfully update webboard\": \"Successfully update post\",\n  \"successfully updated achievement\": \"Successfully updated Achievement\",\n  \"successfully updated achievement title\": \"Successfully updated Achievement Title\",\n  \"successfully updated album\": \"Successfully updated Album\",\n  \"Successfully updated experience\": \"Successfully updated Experience\",\n  \"successfully updated personal details\": \"Successfully updated Personal Details\",\n  \"successfully updated user in game\": \"Successfully updated My Rank\",\n  \"successfully update-team\": \"Successfully update team\",\n  \"successfully update-team-member\": \"Successfully update Team Member\",\n  \"successfully upload photos\": \"Successfully upload images\",\n  \"Successfully uploaded cover image\": \"Successfully changed cover image\",\n  \"Successfully uploaded display image\": \"Successfully changed display image\",\n  \"Successfully uploaded frame image\": \"Successfully changed profile frame\",\n  \"Successfully voted\": \"Successfully voted\",\n  \"system\": \"System\",\n  \"tags\": \"Add Hashtags\",\n  \"teams\": \"Teams\",\n  \"team logo\": \"Team Logo\",\n  \"team info\": \"Team Info\",\n  \"team members\": \"Team Members\",\n  \"team name\": \"Team Name\",\n  \"team name or tournament name\": \"Team Name / Tournament Name\",\n  \"terms\": \"Terms & Conditions\",\n  \"text input\": \"Normal Text\",\n  \"thb\": \"THB\",\n  \"this action cannot be undone\": \"(This action cannot be undone)\",\n  \"This id card has already been registered on CtrlG\": \"This id card has already been registered on CTRL G\",\n  \"This is your avatar\": \"\u0E04\u0E25\u0E34\u0E01\u0E1B\u0E38\u0E48\u0E21\u0E14\u0E49\u0E32\u0E19\u0E25\u0E48\u0E32\u0E07\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E1A\u0E31\u0E19\u0E17\u0E36\u0E01\u0E2B\u0E23\u0E37\u0E2D\u0E41\u0E0A\u0E23\u0E4C\u0E20\u0E32\u0E1E\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"This is your gift\": \"\u0E22\u0E34\u0E19\u0E14\u0E35\u0E14\u0E49\u0E27\u0E22! \u0E04\u0E38\u0E13\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E23\u0E2D\u0E1A\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E1E\u0E34\u0E40\u0E28\u0E29\",\n  \"this is your profile\": \"\u0E19\u0E35\u0E48\u0E04\u0E37\u0E2D\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E38\u0E13\",\n  \"thumbnail image\": \"Thumbnail Image\",\n  \"title\": \"Post Title (Max 200 characters)\",\n  \"title must contain only 30 charaters\": \"Title is too long (Maximum 30 characters)\",\n  \"title personal details\": \"Title Name\",\n  \"today\": \"Today\",\n  \"total prize\": \"Tournament Total Prize (Display on Thumbnail)\",\n  \"tournament\": \"Tournament\",\n  \"tournament board\": \"Q&A\",\n  \"tournament date\": \"Tournament Period\",\n  \"tournament finished\": \"Finished\",\n  \"tournament invitation to\": \"You have received an invitation to join\",\n  \"tournament location\": \"Tournament Location\",\n  \"tournament name\": \"Tournament Name\",\n  \"tournament name (English)\": \"Tournament Name (English)\",\n  \"tournament ongoing\": \"Ongoing\",\n  \"tournament participants\": \"Participants\",\n  \"tournament Q&A post title can be edited on webboard\": \"(Tournament Q&A Post Title can be edited on webboard)\",\n  \"tournament schedule\": \"Tournament Schedule\",\n  \"tournament type\": \"Select Tournament Type\",\n  \"tournaments\": \"Tournament\",\n  \"The request exceed the limit.\": \"Request exceed limit, Please try again in 15 minutes\",\n  \"type message here\": \"Type messages\",\n  \"Unnamed Player\": \"Unnamed Player\",\n  \"upcoming tournaments\": \"Upcoming\",\n  \"update\": \"Update\",\n  \"upload\": \"Upload\",\n  \"Upload bracket\": \"Upload Tournament bracket image\",\n  \"upload cover image\": \"Upload Album Cover\",\n  \"upload image\": \"Upload Image\",\n  \"upload images in album\": \"Add Images\",\n  \"upload slip image\": \"Upload Registeration Fee Payment Slip\",\n  \"Uploading\": \"Uploading\",\n  \"user is banned\": \"Your account has been banned\",\n  \"User is permanently banned\": \"Your account has been banned\",\n  \"user url\": \"User Profile URL\",\n  \"username copied\": \"Username copied\",\n  \"username in game\": \"Username\",\n  \"username can't be more than 30 characters\": \"Max character limit reached\",\n  \"username must be more than 5 characters\": \"Must contain at least 5 characters\",\n  \"userAchievements\": \"Achievements\",\n  \"userExperiences\": \"Experiences\",\n  \"userRankingGames\": \"My Rank\",\n  \"value must be higher than 0\": \"Please fill value higher than 0\",\n  \"verified\": \"Verified\",\n  \"Verified\": \"Verified\",\n  \"verified user\": \"Verified User\",\n  \"verify account\": \"Verify Account\",\n  \"verify identity\": \"Verify Account\",\n  \"view more\": \"View More\",\n  \"webboard\": \"Webboard\",\n  \"webboard usage rules\": \"Webboard usage rules\",\n  \"Webboard usage rules\": \"Webboard usage rules\",\n  \"website\": \"Website\",\n  \"weebboard usage rule 1\": \"1. Do not criticize or defame the monarchy or royal family.\",\n  \"weebboard usage rule 2\": \"2. No vulgar, aggressive, or violent content allowed.\",\n  \"weebboard usage rule 3\": \"3. Do not post sexual contents or any contents involving obscenity or violence.\",\n  \"weebboard usage rule 4\": \"4. Messages that intentionally insult or harm others are prohibited.\",\n  \"weebboard usage rule 5\": \"5. Avoid content that provokes or incites disputes, chaos, or confusion; express opinions respectfully.\",\n  \"weebboard usage rule 6\": \"6. Steer clear of attacking religions or engaging in sensitive political issues.\",\n  \"weebboard usage rule 7\": \"7. Using fake names to harm someone's reputation is not allowed.\",\n  \"weebboard usage rule 8\": \"8. Posting others' private information, such as email addresses or phone numbers, with the intention of harassing, causing distress, or harm is prohibited, especially phone numbers which are prone to errors and misuse. ctrlg.gg does not aim to be a medium for such presentations.\",\n  \"weebboard usage rule 9\": \"9. Writing content related to illegal or unethical activities that are harmful to society is prohibited.\",\n  \"weebboard usage rule 10\": \"10. The posted content is the responsibility of the poster alone.\",\n  \"weebboard usage rule 11\": \"11. Ensure that posts are in the appropriate forum and categorized correctly.\",\n  \"weebboard usage rule 12\": \"12. If a post is not in the correct forum, Webboard Admins have the right to delete or move the post without prior notice.\",\n  \"weebboard usage rule 13\": \"13. In case of disputes, the decision of the platform moderators is final.\",\n  \"who you look alike in Valorant, let's create and share\": \"\u0E17\u0E32\u0E22\u0E19\u0E34\u0E2A\u0E31\u0E22 ...\u0E04\u0E38\u0E13\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23\u0E40\u0E27\u0E25\u0E32\u0E40\u0E25\u0E48\u0E19 Valorant \u0E21\u0E32\u0E40\u0E25\u0E48\u0E19 Quiz \u0E41\u0E25\u0E49\u0E27\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E40\u0E17\u0E48\u0E46 \u0E44\u0E1B\u0E2D\u0E27\u0E14\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E01\u0E31\u0E19\",\n  \"you agree to allow whallet to send KYC data to DOPA\": \"I agree to allow whallet to send my personal info to verify with DOPA citizen ID database\",\n  \"you are already in a team\": \"You are already in a team\",\n  \"you are not in a team\": \"You are not in a team\",\n  \"you are team contact person\": \"I am team contact person\",\n  \"you can only add up to 3 personal details\": \"Maximum of 3 Personal Details reached\",\n  \"you require\": \"You required\",\n  \"You are already in a team\": \"You are already in a team\",\n  \"more member\": \"more member\",\n  \"your party is full, start your game by adding friends\": \"Party is ready, start gaming by adding friend's In-game username\",\n  \"your team has been approved\": \"Your team has been approved\",\n  \"your team has been rejected\": \"Your submission was rejected\",\n  \"your team is waiting for approval\": \"Your team is waiting for approval\",\n  \"play quiz\": \"Play Quiz\"\n}", "import th from \"../public/locales/th/common.json\";\nimport en from \"../public/locales/en/common.json\";\n\nexport default {\n  // lng: \"th\",\n  preload: [\"en\", \"th\"],\n  // This is the list of languages your application supports\n  supportedLngs: [\"en\", \"th\"],\n  // This is the language you want to use in case\n  // if the user language is not in the supportedLngs\n  fallbackLng: \"th\",\n  // The default namespace of i18next is \"translation\", but you can customize it here\n  defaultNS: \"common\",\n  // Disabling suspense is recommended\n  react: { useSuspense: false },\n  resources: {\n    th: {\n      common: th,\n    },\n    en: {\n      common: en,\n    },\n  },\n};\n", "import type { Session } from \"@remix-run/node\";\nimport { createCookie, redirect } from \"@remix-run/node\";\nimport { verifyAuthenticityToken } from \"remix-utils\";\n\nimport { createRedisSessionStorage } from \"./utils/redis-session-storage.server\";\n\n// import { me } from \"~/api\";\n\nconst sessionCookieName = process.env.APP_COOKIE_NAME as string;\nconst cookieSecret = process.env.APP_COOKIE_SECRET as string;\nconst cookieSecure = process.env.APP_COOKIE_SECURE as string;\n\nconst maxAge = 60 * 60 * 24 * 30; // one month\nconst userPrefsMaxAge = 60 * 60 * 24 * 30; // one month\n\nconst cookie = createCookie(sessionCookieName, {\n  secrets: [cookieSecret],\n  sameSite: \"lax\",\n  secure: cookieSecure === \"true\",\n  httpOnly: true,\n  maxAge,\n});\n\nexport const userPrefs = createCookie(\"user-prefs\", {\n  maxAge: userPrefsMaxAge,\n});\n\nconst { getSession, commitSession, destroySession } = createRedisSessionStorage(\n  { cookie }\n);\n\nexport async function getSessionFromRequest(request: Request) {\n  return getSession(request.headers.get(\"cookie\"));\n}\n\nexport async function isAuthenticated(request: Request): Promise<boolean> {\n  const session = await getSessionFromRequest(request);\n  const accessToken = session.get(\"accessToken\");\n\n  return accessToken !== \"\" && accessToken !== undefined;\n}\n\nexport async function mustAuthenticated(request: Request) {\n  const auth = await isAuthenticated(request);\n  if (!auth) {\n    throw redirect(\"/\");\n  }\n}\n\nexport async function mustVerifyCSRF(\n  request: Request,\n  path?: string\n): Promise<void> {\n  const session = await getSessionFromRequest(request);\n\n  try {\n    await verifyAuthenticityToken(request, session);\n  } catch (e) {\n    throw redirect(path || \"/\");\n  }\n}\n\nexport async function isSignedIn(request: Request) {\n  const session = await getSessionFromRequest(request);\n  const signedIn = session.get(\"signedIn\");\n\n  return signedIn === true;\n}\n\nexport async function redirectIfSignedIn(request: Request, path: string) {\n  const signedIn = await isSignedIn(request);\n\n  if (signedIn) {\n    throw redirect(path);\n  }\n}\n\nexport function isUserFetched(session: Session) {\n  const currentUser = session.get(\"currentUser\");\n  return currentUser !== undefined;\n}\n\n// export async function refreshCurrentUser(session: Session) {\n//   const { data } = await me();\n//   setCurrentUser(session, data);\n// }\n\nexport function getCurrentUser(session: Session) {\n  return session.get(\"currentUser\");\n}\n\nexport function setCurrentUser(session: Session, data: any) {\n  session.set(\"currentUser\", data);\n}\n\nexport async function signOut(session: Session) {\n  session.unset(\"accessToken\");\n  session.unset(\"signedIn\");\n  session.unset(\"currentUser\");\n  session.unset(\"toJoinTeams\");\n\n  return await destroySession(session);\n}\n\nexport { getSession, commitSession, destroySession };\n", "import { createSessionStorage } from \"@remix-run/node\";\nimport * as crypto from \"crypto\";\n\nimport { redis } from \"./redis.server\";\n\nconst maxAge = 60 * 60 * 6;\n\nexport function createRedisSessionStorage({ cookie }: any) {\n  return createSessionStorage({\n    cookie,\n    async createData(data) {\n      const rand = crypto.randomBytes(32).toString(\"base64\");\n      const id = `sess:${rand}`;\n\n      const value = JSON.stringify(data);\n\n      if (value) {\n        await redis.setex(id, maxAge, value);\n      }\n\n      return id;\n    },\n    async readData(id: string) {\n      const value = await redis.get(id);\n\n      if (value) {\n        return JSON.parse(value);\n      }\n\n      return null;\n    },\n    async updateData(id, data) {\n      const next = JSON.stringify(data);\n      await redis.setex(id, maxAge, next);\n    },\n    async deleteData(id) {\n      await redis.del(id);\n    },\n  });\n}\n", "import type { Redis as RedisType } from \"ioredis\";\nimport Redis from \"ioredis\";\n\nlet redis: RedisType;\n\ndeclare global {\n  var __redis: RedisType | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the Redis with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  redis = new Redis(process.env.REDIS_DSN || \"redis://127.0.0.1:6379\");\n} else {\n  if (!global.__redis) {\n    global.__redis = new Redis(\n      process.env.REDIS_DSN || \"redis://127.0.0.1:6379\"\n    );\n  }\n  redis = global.__redis;\n}\n\nexport { redis };\n", "import { useEffect, useState } from \"react\";\nimport type {\n  LoaderFunction,\n  LinksFunction,\n  V2_MetaFunction } from\n\"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  isRouteErrorResponse,\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useRouteError } from\n\"@remix-run/react\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  userPrefs } from\n\"./session.server\";\nimport { useTranslation } from \"react-i18next\";\nimport { useChangeLanguage } from \"remix-i18next\";\nimport dayjs from \"dayjs\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\nimport isToday from \"dayjs/plugin/isToday\";\nimport utc from \"dayjs/plugin/utc\";\nimport { notification } from \"antd\";\nimport { WarningOutlined } from \"@ant-design/icons\";\nimport \"dayjs/locale/th\";\nimport { AppContext } from \"./contexts\";\nimport { MediaContextProvider, mediaStyles } from \"./components/common\";\nimport antdReset from \"antd/dist/reset.css\";\nimport quillCss from \"quill/dist/quill.snow.css\";\nimport styles from \"./styles/app.css\";\nimport * as gtag from \"./utils/gtags.client\";\nimport { AcceptCookiesForm } from \"./components/forms\";\nimport { ThemeProvider } from \"./components/themes/ThemeProvider\";\nimport jwt_decode from \"jwt-decode\";\nimport * as APIServer from \"~/api\";\n\nimport { withSentry, captureRemixErrorBoundaryError } from \"@sentry/remix\";\n\ndayjs.extend(localizedFormat);\ndayjs.extend(isToday);\ndayjs.extend(utc);\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n  { title: \"CTRL G\" },\n  {\n    name: \"description\",\n    content:\n    \"CTRL G \u0E23\u0E31\u0E1A\u0E08\u0E1A\u0E17\u0E38\u0E01\u0E40\u0E23\u0E37\u0E48\u0E2D\u0E07\u0E40\u0E01\u0E21 \u0E41\u0E2B\u0E25\u0E48\u0E07\u0E41\u0E2E\u0E07\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E40\u0E2B\u0E25\u0E48\u0E32\u0E40\u0E01\u0E21\u0E40\u0E21\u0E2D\u0E23\u0E4C \u0E01\u0E31\u0E1A\u0E04\u0E2D\u0E19\u0E40\u0E17\u0E19\u0E15\u0E4C\u0E08\u0E32\u0E01\u0E04\u0E19\u0E27\u0E07\u0E43\u0E19\u0E41\u0E25\u0E30\u0E1F\u0E35\u0E40\u0E08\u0E2D\u0E23\u0E4C\u0E2A\u0E19\u0E38\u0E01 \u0E46 \u0E2D\u0E22\u0E48\u0E32\u0E07\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21 \u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C \u0E1A\u0E2D\u0E23\u0E4C\u0E14 \u0E17\u0E35\u0E48\u0E17\u0E33\u0E02\u0E36\u0E49\u0E19\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E40\u0E01\u0E21\u0E40\u0E21\u0E2D\u0E23\u0E4C\u0E42\u0E14\u0E22\u0E40\u0E09\u0E1E\u0E32\u0E30\"\n  },\n  { charSet: \"utf-8\" },\n  { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n  { property: \"og:title\", content: \"CTRL G\" },\n  {\n    property: \"og:image\",\n    content: \"https://d2007awoau332v.cloudfront.net/assets/root.jpg\"\n  },\n  {\n    property: \"og:image:width\",\n    content: \"200\"\n  },\n  {\n    property: \"og:image:height\",\n    content: \"200\"\n  },\n  { property: \"og:description\", content: \"\u0E23\u0E31\u0E1A\u0E08\u0E1A \u0E04\u0E23\u0E1A\u0E17\u0E38\u0E01\u0E40\u0E23\u0E37\u0E48\u0E2D\u0E07 Esports\" }];\n\n};\n\nexport const links: LinksFunction = () => {\n  return [\n  { rel: \"stylesheet\", href: antdReset },\n  { rel: \"stylesheet\", href: quillCss },\n  { rel: \"stylesheet\", href: styles }];\n\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const cookie = request.headers.get(\"Cookie\");\n  const flashMessage = session.get(\"flashMessage\");\n  const userPrefsCookie = (await userPrefs.parse(cookie)) || {};\n  const accessToken = session.get(\"accessToken\");\n  const refreshToken = session.get(\"refreshToken\");\n  const cdnUrl = process.env.CDN_URL;\n  const manualRefreshInterval = process.env.MANUAL_REFRESH_INTERVAL ?\n  process.env.MANUAL_REFRESH_INTERVAL :\n  10;\n  const autoRefreshInterval = process.env.AUTO_REFRESH_INTERVAL ?\n  process.env.AUTO_REFRESH_INTERVAL :\n  60;\n  const notificationInterval = Number(process.env.NOTIFICATION_INTERVAL) || 10;\n\n  if (accessToken) {\n    const accessTokenDecoded: any = jwt_decode(accessToken);\n    const refreshTokenDecoded: any = jwt_decode(refreshToken);\n    const dateNow = dayjs().unix();\n\n    const isTokenExpire: boolean =\n    accessTokenDecoded.exp < dateNow && refreshTokenDecoded.exp > dateNow;\n\n    if (isTokenExpire) {\n      try {\n        const resMe = await APIServer.clientFromSession(session).request(\n          APIServer.refreshToken(refreshToken)\n        );\n\n        if (resMe.data) {\n          session.set(\"accessToken\", resMe.data.accessToken);\n          session.set(\"refreshToken\", resMe.data.refreshToken);\n          //set user data\n          try {\n            const { data } = await APIServer.clientFromSession(session).request(\n              APIServer.me()\n            );\n            session.set(\"me\", data);\n          } catch (e) {\n\n            // console.log(\"e\", e);\n          }}\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  return json(\n    {\n      baseUrl: process.env.APP_URL || \"\",\n      websocketUrl: process.env.WEBSOCKET_URL || \"\",\n      flashMessage,\n      locale: userPrefsCookie.locale || \"th\",\n      scheme: userPrefsCookie.scheme || \"light\",\n      allowCookies: userPrefsCookie.allowCookies,\n      cdnUrl,\n      autoRefreshInterval: Number(autoRefreshInterval),\n      manualRefreshInterval: Number(manualRefreshInterval),\n      gaTrackingId: process.env.GA_TRACKING_ID,\n      notificationInterval\n    },\n    {\n      headers: { \"Set-Cookie\": await commitSession(session) }\n    }\n  );\n};\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n  const errorStatus = isRouteErrorResponse(error) ?\n  `${error.status} ${error.statusText}` :\n  error instanceof Error ?\n  error.message :\n  \"unknown\";\n\n  captureRemixErrorBoundaryError(error);\n\n  return (\n    <html lang=\"th\" suppressHydrationWarning={true}>\n      <head>\n        <Meta />\n        <Links />\n        <style type=\"text/css\">{mediaStyles}</style>\n        {typeof document === \"undefined\" ? \"__STYLES__\" : null}\n      </head>\n      <body>\n        <div style={{ textAlign: \"center\", paddingTop: 80 }}>\n          <div style={{ marginBottom: 20 }}>\n            <WarningOutlined style={{ color: \"#ff4d4f\", fontSize: 50 }} />\n          </div>\n          <h3\n            style={{\n              lineHeight: 1.5,\n              marginBottom: 30,\n              fontFamily: \"FC Twist VF\"\n            }}>\n\n            {errorStatus}\n            <br />\n            click below button to return home\n          </h3>\n          <a\n            href=\"/\"\n            style={{\n              padding: \"10px 20px\",\n              fontSize: 12,\n              textDecoration: \"none\",\n              textTransform: \"uppercase\",\n              borderRadius: 6,\n              color: \"#fff\",\n              backgroundColor: \"#7a6fee\"\n            }}>\n\n            back to home\n          </a>\n        </div>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nfunction App() {\n  const { allowCookies, baseUrl, flashMessage, locale, scheme, gaTrackingId } =\n  useLoaderData();\n  const { i18n, t } = useTranslation();\n  const [api, contextHolder] = notification.useNotification();\n  const fetcher = useFetcher();\n  const location = useLocation();\n  dayjs.locale(locale);\n  useChangeLanguage(locale);\n  const [acceptedCookies, setAcceptedCookies] = useState(allowCookies);\n\n  const handleAcceptCookies = (accepted: boolean) => {\n    setAcceptedCookies(accepted);\n    fetcher.submit(\n      { allowCookies: accepted, action: \"accept-cookies\" },\n      { method: \"post\", action: \"/resources/user-prefs\" }\n    );\n  };\n\n  const handleChangeLanguage = (value: string) => {\n    fetcher.submit(\n      { locale: value, action: \"change-locale\" },\n      { method: \"post\", action: \"/resources/user-prefs\" }\n    );\n  };\n\n  const handleChangeScheme = (value: string) => {\n    fetcher.submit(\n      { scheme: value, action: \"change-scheme\" },\n      { method: \"post\", action: \"/resources/user-prefs\" }\n    );\n  };\n\n  useEffect(() => {\n    if (flashMessage) {\n      if (flashMessage.message && flashMessage.type) {\n        api.open({\n          message: t(flashMessage.message),\n          type: flashMessage.type,\n          duration: 5,\n          placement: \"bottomRight\"\n        });\n      }\n    }\n  }, [flashMessage]);\n\n  useEffect(() => {\n    if (gaTrackingId?.length) {\n      gtag.pageview(location.pathname, gaTrackingId);\n    }\n  }, [location, gaTrackingId]);\n\n  return (\n    <html lang={locale} dir={i18n.dir()}>\n      <head>\n        <Meta />\n        <Links />\n        <style type=\"text/css\">{mediaStyles}</style>\n        {typeof document === \"undefined\" ? \"__STYLES__\" : null}\n      </head>\n      <body>\n        {!gaTrackingId ? null :\n        <>\n            <script\n            async\n            src={`https://www.googletagmanager.com/gtag/js?id=${gaTrackingId}`} />\n\n            <script\n            async\n            id=\"gtag-init\"\n            dangerouslySetInnerHTML={{\n              __html: `\n                window.dataLayer = window.dataLayer || [];\n                function gtag(){dataLayer.push(arguments);}\n                gtag('js', new Date());\n\n                gtag('config', '${gaTrackingId}', {\n                  page_path: window.location.pathname,\n                });\n              `\n            }} />\n\n          </>}\n\n        <MediaContextProvider disableDynamicMediaQueries>\n          <ThemeProvider mode={scheme}>\n            <AppContext.Provider\n              value={{\n                allowCookies: acceptedCookies,\n                baseUrl: baseUrl,\n                locale: locale,\n                scheme: scheme,\n                acceptCookies: handleAcceptCookies,\n                changeScheme: handleChangeScheme,\n                changeLanguage: handleChangeLanguage\n              }}>\n\n              <Outlet />\n              {contextHolder}\n            </AppContext.Provider>\n            {acceptedCookies === undefined &&\n            <AcceptCookiesForm onAccept={handleAcceptCookies} />}\n\n          </ThemeProvider>\n        </MediaContextProvider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nexport default withSentry(App);", "import React from \"react\";\n\ninterface AppContextValues {\n  allowCookies: boolean;\n  baseUrl: string;\n  locale: string;\n  scheme: string;\n  acceptCookies: (accepted: boolean) => void;\n  changeLanguage: (language: string) => void;\n  changeScheme: (scheme: string) => void;\n}\n\nexport const AppContext = React.createContext<AppContextValues>({\n  allowCookies: false,\n  baseUrl: \"\",\n  locale: \"en\",\n  scheme: \"light\",\n  acceptCookies: () => {},\n  changeLanguage: () => {},\n  changeScheme: () => {},\n});\n", "import React from \"react\";\n\ninterface AuthContextData {\n  user: any;\n  logout: () => void;\n  openLoginModal: () => void;\n  clickedId?: string;\n  isStickerDrop?: boolean;\n}\n\nexport const AuthContext = React.createContext<AuthContextData>({\n  user: null,\n  logout: () => {},\n  openLoginModal: () => {},\n  clickedId: undefined,\n  isStickerDrop: false,\n});\n", "import React from \"react\";\n\ninterface PartyContextValues {\n  closePartyModal: (e: any) => void;\n}\n\nexport const PartyContext = React.createContext<PartyContextValues>({\n  closePartyModal: () => {},\n});\n", "export * from \"./Author\";\nexport * from \"./BackButton\";\nexport * from \"./BannerWithText\";\nexport * from \"./BuySellAgreement\";\nexport * from \"./CardWithLabel\";\nexport * from \"./DndBox\";\nexport * from \"./DroppedBox\";\nexport * from \"./dummy\";\nexport * from \"./ErrorResults\";\nexport * from \"./FileUploader\";\nexport * from \"./FileUploaderMultiple\";\nexport * from \"./GameCard\";\nexport * from \"./GameSelect\";\nexport * from \"./ImageSelector\";\nexport * from \"./IndexFilter\";\nexport * from \"./InlineAvatar\";\nexport * from \"./KycBenefits\";\nexport * from \"./KycForm\";\nexport * from \"./KycWizard\";\nexport * from \"./Loading\";\nexport * from \"./LoginForm\";\nexport * from \"./Media\";\nexport * from \"./Menus\";\nexport * from \"./OverlayBg\";\nexport * from \"./QueAnim.client\";\nexport * from \"./QuotedComment\";\nexport * from \"./Pagination\";\nexport * from \"./PasswordMustContain\";\nexport * from \"./Poll\";\nexport * from \"./PrivateFieldSelection\";\nexport * from \"./ReactionsBox\";\nexport * from \"./ResponsiveImageCard\";\nexport * from \"./SvgText\";\nexport * from \"./SwipeButton.client\";\nexport * from \"./TextEditor.client\";\nexport * from \"./TiltCheck\";\nexport * from \"./TiltButton\";\nexport * from \"./TiltMenus\";\nexport * from \"./ToCopyField\";\nexport * from \"./UserAvatar\";\nexport * from \"./WebboardUsageRules\";\n", "import { Avatar, Space } from \"antd\";\n\ninterface AuthorProps {\n  children: any;\n  avatarSize?: number;\n  displayImage?: string;\n  fontSize?: number;\n}\n\nexport function Author(props: AuthorProps) {\n  const { children, avatarSize, displayImage, fontSize } = props;\n\n  return (\n    <Space\n      direction=\"horizontal\"\n      size={5}\n      style={fontSize ? { fontSize: fontSize } : undefined}\n    >\n      <Avatar\n        size={avatarSize ? avatarSize : 22}\n        src={displayImage ? displayImage : null}\n      >\n        {children}\n      </Avatar>\n      {children}\n    </Space>\n  );\n}\n", "import { useNavigate } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Space, Typography } from \"antd\";\nimport { LeftOutlined } from \"@ant-design/icons\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst { Text } = Typography;\n\ninterface BackbuttonProps {\n  navigateTo?: any;\n  fallbackUrl?: string;\n}\n\nexport function BackButton(props: BackbuttonProps) {\n  const { t } = useTranslation();\n  const { fallbackUrl, navigateTo } = props;\n  const navigate = useNavigate();\n\n  const handleBack = useCallback(() => {\n    navigate(\n      navigateTo !== undefined && navigateTo !== null\n        ? navigateTo\n        : document.referrer === \"\" && fallbackUrl !== undefined\n        ? window.open(fallbackUrl, \"_self\")\n        : -1\n    );\n  }, [navigateTo]);\n\n  return (\n    <Space\n      size={8}\n      onClick={handleBack}\n      style={{\n        marginBottom: 30,\n        fontSize: \"1.2em\",\n        alignItems: \"center\",\n        cursor: \"pointer\",\n      }}\n    >\n      <Text style={{ fontSize: \"inherit\" }}>\n        <LeftOutlined />\n      </Text>\n      <Text style={{ fontSize: \"inherit\" }}>{t(\"back\")}</Text>\n    </Space>\n  );\n}\n", "import { useNavigate } from \"@remix-run/react\";\nimport { Card, Typography } from \"antd\";\nimport React from \"react\";\nconst { Title } = Typography;\n\ninterface BannerWithTextProps {\n  height?: number | string;\n  image?: string;\n  link: string;\n  message?: React.ReactNode;\n  minHeight?: number | string;\n  transparent?: boolean;\n  style?: React.CSSProperties;\n}\n\nexport function BannerWithText(props: BannerWithTextProps) {\n  const { height, image, link, message, minHeight, style, transparent } = props;\n  const navigate = useNavigate();\n\n  const handleLink = (e: any) => {\n    navigate(link);\n  };\n\n  return (\n    <Card\n      bordered={false}\n      className=\"banner-with-text\"\n      onClick={handleLink}\n      style={{\n        position: \"relative\",\n        display: \"flex\",\n        height: height ? height : \"auto\",\n        minHeight: minHeight ? minHeight : \"auto\",\n        overflow: \"hidden\",\n        borderRadius: 10,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        cursor: \"pointer\",\n        backgroundImage: image\n          ? `url(\"${image}\")`\n          : \"url('/image/placeholder.png')\",\n        ...style,\n      }}\n      bodyStyle={{\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n      }}\n    >\n      {!transparent ? (\n        <div\n          className=\"banner-gradient\"\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        />\n      ) : (\n        <></>\n      )}\n      {message ? (\n        <Title\n          className=\"banner-title\"\n          level={2}\n          style={{\n            fontSize: \"29px\",\n            position: \"relative\",\n            margin: 0,\n            color: \"#fff\",\n          }}\n        >\n          {message}\n        </Title>\n      ) : (\n        <></>\n      )}\n    </Card>\n  );\n}\n", "import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, List, Typography } from \"antd\";\n\nimport { TiltButton } from \"./TiltButton\";\nimport { Link } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\n\ninterface BuySellAgreementProps {\n  fetcher: any;\n  onAcceptFinished?: () => void;\n  onCancel: () => void;\n}\n\nexport const BuySellAgreement: React.FC<BuySellAgreementProps> = (\n  props: BuySellAgreementProps\n) => {\n  const { t } = useTranslation();\n  const { onCancel } = props;\n\n  const handleAcceptAgreemnet = () => {\n    // fetcher.submit(null, {\n    //   method: \"post\",\n    //   action: \"/resources/accept-buy-sell-agreement\",\n    // });\n    // if (onAcceptFinished) {\n    //   onAcceptFinished();\n    // }\n    onCancel();\n  };\n\n  return (\n    <Flex vertical gap={20}>\n      <Title level={3} style={{ margin: 0 }}>\n        {t(\"Buy Sell rules\")}\n      </Title>\n\n      <List>\n        <List.Item>\n          <Text>\n            {t(\n              \"1. Membership posting in the buy-sell section is reserved exclusively for users who have completed the KYC process.\"\n            )}\n          </Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\n              \"2. Posting any form of direct sales business, chain sharing, online work, or anything causing harm or disturbance to others is strictly prohibited.\"\n            )}\n          </Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\n              \"3. Before making any transactions, please check the seller\u2019s history at\"\n            )}{\" \"}\n            <Link\n              to={\"https://www.blacklistseller.com/\"}\n              target=\"_blank\"\n              style={{ color: \"#39A7FF\" }}\n            >\n              https://www.blacklistseller.com/\n            </Link>\n          </Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\"4. In case of fraud, report the incident online at\")}{\" \"}\n            <div>\n              <Link\n                to={\"https://thaipoliceonline.com\"}\n                target=\"_blank\"\n                style={{ color: \"#39A7FF\" }}\n              >\n                https://thaipoliceonline.com\n              </Link>\n            </div>\n            {t(\n              \"and contact platform administrators for information about the fraudulent party.\"\n            )}\n          </Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\n              \"5. Contact platform administrators via the Facebook Page ctrl g\"\n            )}\n          </Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\n              \"Note: KYC refers to the Know Your Customer process, a standard in the financial industry to verify the identity of customers.\"\n            )}\n          </Text>\n        </List.Item>\n      </List>\n      <Flex justify=\"center\">\n        <TiltButton color=\"primary\" onClick={handleAcceptAgreemnet}>\n          {t(\"close\")}\n        </TiltButton>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\n\ninterface TiltButtonProps {\n  color?: string;\n  overLayStyle?: React.CSSProperties;\n  children: React.ReactNode;\n  disabled?: boolean;\n  isSubmit?: boolean;\n  noBorder?: boolean;\n  onClick?: any;\n  style?: React.CSSProperties;\n}\n\nexport const TiltButton: React.FC<TiltButtonProps> = (\n  props: TiltButtonProps\n) => {\n  const { children, color, disabled, noBorder, onClick, overLayStyle, style } =\n    props;\n  const { scheme } = useContext(AppContext);\n  return (\n    <div\n      className={`tilt-button ${\n        color && !disabled ? `${color} ` : \"secondary \"\n      }${onClick && !disabled ? `clickable ` : \"\"} ${scheme} ${\n        noBorder ? \"no-border\" : \"\"\n      }`}\n      style={style}\n      onClick={!disabled ? onClick : undefined}\n    >\n      <span className=\"tilt-button-overlay\" style={overLayStyle} />\n      <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {children}\n      </span>\n    </div>\n  );\n};\n", "import { Card, Space, Typography } from \"antd\";\nimport React from \"react\";\n\nconst { Text } = Typography;\n\ninterface CardWithLabelProps {\n  icon?: React.ReactNode;\n  label: React.ReactNode;\n  detail: React.ReactNode;\n}\n\nexport function CardWithLabel(props: CardWithLabelProps) {\n  const { icon, label, detail } = props;\n\n  return (\n    <Card\n      style={{\n        height: \"100%\",\n        backgroundColor: \"transparent\",\n        border: \"1px solid #dfdfdf\",\n      }}\n      bodyStyle={{ padding: 15 }}\n    >\n      <Space direction=\"vertical\">\n        <Space size={10} style={{ fontWeight: 600 }}>\n          {icon && icon}\n          {label}\n        </Space>\n        <Text>{detail}</Text>\n      </Space>\n    </Card>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport Moveable from \"moveable\";\nimport type { MoveableManagerInterface, Renderer } from \"moveable\";\n\ninterface DndBoxProps {\n  editMode?: boolean;\n  id: any;\n  isTargetImage?: boolean;\n  left: number;\n  title: string;\n  top: number;\n  isMobile?: boolean;\n}\n\nexport function DndBox(props: DndBoxProps) {\n  const { id, isTargetImage, left, title, top, editMode } = props;\n  const [transformStyle, setTransformStyle] = useState<string>(\"\");\n  const [currentMoveable, setCurrentMoveable] = useState<any>(null);\n\n  const handleDeleteClick = () => {\n    const containerToRemove = document.getElementById(`container_${id}`);\n    if (containerToRemove) {\n      containerToRemove.remove();\n      window.dispatchEvent(new Event(\"resize\"));\n    }\n  };\n\n  const DimensionViewable = {\n    name: \"dimensionViewable\",\n    props: [],\n    events: [],\n    render(moveable: MoveableManagerInterface<any, any>, React: Renderer) {\n      const rect = moveable.getRect();\n      return (\n        <div\n          key={\"dimension-viewer\"}\n          className={\"moveable-dimension\"}\n          style={{\n            position: \"absolute\",\n            left: `${rect.width / 2}px`,\n            top: `${rect.height + 4}px`,\n            cursor: \"pointer\",\n            background: \"white\",\n            border: \"1px solid red\",\n            borderRadius: \"4px\",\n            padding: \"2px 6px\",\n            color: \"red\",\n            fontSize: 12,\n            whiteSpace: \"nowrap\",\n            willChange: \"transform\",\n            transform: `translate(-50%, 0px)`,\n          }}\n          onClick={handleDeleteClick}\n          onTouchStart={handleDeleteClick}\n        >\n          {`x`}\n          {``}\n        </div>\n      );\n    },\n  } as const;\n\n  useEffect(() => {\n    if (!currentMoveable) {\n      const moveable = new Moveable(document.body, {\n        target: isTargetImage ? `[id=\"${id}\"]` : undefined,\n        ables: [DimensionViewable],\n        draggable: true,\n        scalable: true,\n        edge: [\"w\", \"e\"],\n        rotatable: true,\n        origin: false,\n        props: { dimensionViewable: true },\n      }).on(\"render\", (e: any) => {\n        setTransformStyle(e.transform);\n      });\n      setCurrentMoveable(moveable);\n      window.addEventListener(\"resize\", (e) => {\n        moveable.updateRect();\n      });\n    } else {\n      if (!editMode) {\n        currentMoveable.target = undefined;\n      } else {\n        currentMoveable.target = isTargetImage ? `[id=\"${id}\"]` : undefined;\n      }\n    }\n  }, [editMode, id, isTargetImage]);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        left: `${left}%`,\n        top: `${top}%`,\n        cursor: \"move\",\n        width: \"20%\",\n        alignItems: \"center\",\n      }}\n    >\n      <div id={`container_${id}`}>\n        <img\n          id={id}\n          src={`/image/campaign/${title}.png`}\n          alt={title}\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            transform: transformStyle,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n", "import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n", "import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n", "/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n", "// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n", "export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n", "import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n", "import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n", "import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n", "import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n", "import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n", "import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n", "// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n", "/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n", "// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n", "import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n", "import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n", "import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n", "export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n", "let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n", "import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n", "import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n", "import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n", "import type { FC } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport type { ConnectDragPreview } from '../types/index.js'\n\nexport interface DragPreviewImageProps {\n\tconnect: ConnectDragPreview\n\tsrc: string\n}\n/**\n * A utility for rendering a drag preview image\n */\nexport const DragPreviewImage: FC<DragPreviewImageProps> = memo(\n\tfunction DragPreviewImage({ connect, src }) {\n\t\tuseEffect(() => {\n\t\t\tif (typeof Image === 'undefined') return\n\n\t\t\tlet connected = false\n\t\t\tconst img = new Image()\n\t\t\timg.src = src\n\t\t\timg.onload = () => {\n\t\t\t\tconnect(img)\n\t\t\t\tconnected = true\n\t\t\t}\n\t\t\treturn () => {\n\t\t\t\tif (connected) {\n\t\t\t\t\tconnect(null)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn null\n\t},\n)\n", "import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n", "import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n", "import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n", "import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n", "import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n", "import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n", "import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n", "import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n", "export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n", "export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n", "import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n", "import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n", "import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n", "import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n", "import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n", "import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n", "import { useEffect } from 'react'\n\nimport type { DragLayerMonitor } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useDragDropManager } from './useDragDropManager.js'\n\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nexport function useDragLayer<CollectedProps, DragObject = any>(\n\tcollect: (monitor: DragLayerMonitor<DragObject>) => CollectedProps,\n): CollectedProps {\n\tconst dragDropManager = useDragDropManager()\n\tconst monitor = dragDropManager.getMonitor()\n\tconst [collected, updateCollected] = useCollector(monitor, collect)\n\n\tuseEffect(() => monitor.subscribeToOffsetChange(updateCollected))\n\tuseEffect(() => monitor.subscribeToStateChange(updateCollected))\n\treturn collected\n}\n", "import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n", "import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n", "import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n", "import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n", "import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n", "import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n", "import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n", "import { DragPreviewImage, useDrag } from \"react-dnd\";\n\ninterface DroppedBoxProps {\n  children: any;\n  name: string;\n  editMode?: boolean;\n}\n\nexport function DroppedBox(props: DroppedBoxProps) {\n  const { children, name } = props;\n\n  const [{ isDragging }, drag, preview] = useDrag(\n    () => ({\n      type: \"box\",\n      item: { name },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [name]\n  );\n\n  return (\n    <>\n      <DragPreviewImage\n        src={`/image/campaign/${name}-thumbnail.png`}\n        connect={preview}\n      />\n      <div\n        className=\"box\"\n        ref={drag}\n        style={{\n          display: \"inline-block\",\n          width: \"20%\",\n          cursor: \"move\",\n          borderRadius: 10,\n          backgroundColor: isDragging ? \"rgba(255,255,255,0.8)\" : \"transparent\",\n          opacity: isDragging ? 0.4 : 1,\n        }}\n        data-testid=\"box\"\n      >\n        {children}\n      </div>\n    </>\n  );\n}\n", "export const dummyUserProfile = {\n  firstName: \"John\",\n  lastName: \"Doe\",\n  birthDate: \"1990-01-01\",\n  citizenId: \"1234567890123\",\n  kycLevel: 0, // kyc level\n};\nexport const dummySignature = {\n  content: \"signature content\",\n  imageUrl: \"/image/placeholder.png\",\n};\nexport const dummyUser = {\n  id: 1,\n  uuid: 1234,\n  isActive: true,\n  displayName: \"john-doe\",\n  phone: \"0876544567\",\n  email: \"test@gmail.com\",\n  bio: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit.\",\n  discordId: \"123456789012345678\",\n  displayImage: \"profile-avatars/profile-3.jpg\",\n  coverImage: \"/image/placeholder.png\",\n  profile: dummyUserProfile,\n  facebookLink: \"www.facebook.com\",\n  xLink: \"www.x.com\",\n  twitchLink: \"www.twitch.com\",\n  website: \"https://www.ctrlg.gg\",\n  whalletAddress: \"0x0000000000000000000000000000000000000000\",\n  privateFields: [\"email\", \"phone\", \"website\"],\n  roles: [\"admin\", \"user\"],\n  signature:\n    \"<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\",\n  gameUsernames: [\n    {\n      game: {\n        id: 1,\n        name: \"Valorant\",\n        iconUrl: \"/image/placeholder.png\",\n        bannerImageUrl: \"/image/placeholder.png\",\n      },\n      username: \"valorant-username\",\n    },\n    {\n      game: {\n        id: 2,\n        name: \"PubG\",\n        iconUrl: \"/image/placeholder.png\",\n        bannerImageUrl: \"/image/placeholder.png\",\n      },\n      username: \"pubg-username\",\n    },\n  ],\n};\nexport const dummyModes = [\n  {\n    name: \"Duo\",\n    maxPlayer: 2,\n  },\n  {\n    name: \"Trio\",\n    maxPlayer: 3,\n  },\n  {\n    name: \"Team\",\n    maxPlayer: 5,\n    isDefault: true,\n  },\n];\n\nexport const dummyRanks = [\n  {\n    name: \"Bronze\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    name: \"Silver\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    name: \"Gold\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    name: \"Platinum\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    name: \"Immortal\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    name: \"Radiant\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    name: \"Ascendant\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n];\nexport const dummyGames = [\n  {\n    id: 1,\n    name: \"Valorant\",\n    iconUrl: \"/image/placeholder.png\",\n    bannerImageUrl: \"/image/placeholder.png\",\n    maxPlayers: 5,\n    ranks: dummyRanks,\n    modes: dummyModes,\n  },\n  {\n    id: 2,\n    name: \"PubG\",\n    iconUrl: \"/image/placeholder.png\",\n    bannerImageUrl: \"/image/placeholder.png\",\n    maxPlayers: 5,\n    ranks: dummyRanks,\n    modes: dummyModes,\n  },\n  {\n    id: 3,\n    name: \"Dota\",\n    iconUrl: \"/image/placeholder.png\",\n    bannerImageUrl: \"/image/placeholder.png\",\n    maxPlayers: 5,\n    ranks: dummyRanks,\n    modes: dummyModes,\n  },\n];\nexport const dummyRooms = [\n  {\n    id: 1,\n    name: \"general\",\n    nameEN: \"general\",\n    slug: \"general\",\n  },\n  {\n    id: 2,\n    name: \"buy sell\",\n    nameEN: \"buy sell\",\n    slug: \"buy-sell\",\n  },\n  {\n    id: 3,\n    name: \"news\",\n    nameEN: \"news\",\n    slug: \"news\",\n  },\n  {\n    id: 4,\n    name: \"tutorial\",\n    nameEN: \"tutorial\",\n    slug: \"tutorial\",\n  },\n  {\n    id: 5,\n    name: \"help\",\n    nameEN: \"help\",\n    slug: \"help\",\n  },\n] as any[];\n\nexport const dummyTags = [\n  {\n    name: \"valorantchallenge1\",\n    counts: 24,\n  },\n  {\n    name: \"valorantchallenge2\",\n    counts: 11,\n  },\n  {\n    name: \"valorantchallenge3\",\n    counts: 20,\n  },\n  {\n    name: \"valorantchallenge4\",\n    counts: 5,\n  },\n  {\n    name: \"valorantchallenge5\",\n    counts: 15,\n  },\n] as any[];\n\nexport const reactionOptions = [\n  {\n    id: 1,\n    name: \"like\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    id: 2,\n    name: \"love\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    id: 3,\n    name: \"haha\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    id: 4,\n    name: \"wow\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    id: 5,\n    name: \"sad\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n  {\n    id: 6,\n    name: \"angry\",\n    imageUrl: \"/image/placeholder.png\",\n  },\n];\n\nexport const dummyReactions = [\n  {\n    id: 1,\n    name: \"like\",\n    image: \"/image/placeholder.png\",\n    count: 3,\n  },\n  {\n    id: 2,\n    name: \"love\",\n    image: \"/image/placeholder.png\",\n    count: 4,\n  },\n  {\n    id: 3,\n    name: \"haha\",\n    image: \"/image/placeholder.png\",\n    count: 5,\n  },\n];\nexport const dummyReactions2 = [\n  {\n    id: 1,\n    name: \"like\",\n    image: \"/image/placeholder.png\",\n    count: 5,\n  },\n  {\n    id: 2,\n    name: \"love\",\n    image: \"/image/placeholder.png\",\n    count: 8,\n  },\n  {\n    id: 3,\n    name: \"haha\",\n    image: \"/image/placeholder.png\",\n    count: 10,\n  },\n];\nexport const dummyComment1 = {\n  id: 1,\n  index: 1,\n  content:\n    \"<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\",\n  reactions: dummyReactions,\n  author: dummyUser,\n  createdAt: \"2023-10-6\",\n  updatedAt: \"2023-10-7\",\n};\n\nexport const dummyComment2 = {\n  id: 2,\n  index: 2,\n  anonymous: true,\n  content:\n    \"<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p><ul><li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li><li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li></ul>\",\n  quotedComment: dummyComment1,\n  reactions: dummyReactions,\n  author: dummyUser,\n  createdAt: \"2023-10-6\",\n  updatedAt: \"2023-10-7\",\n};\n\nconst dummyCommentItems = [] as any[];\nfor (let index = 0; index < 12; index++) {\n  dummyCommentItems.push({\n    ...(index < 6 ? dummyComment1 : dummyComment2),\n    id: index + 1,\n    index: index + 1,\n  });\n}\n\nexport const dummyComments = {\n  webboardId: 1,\n  items: dummyCommentItems,\n  total: 40,\n  totalPages: 10,\n  page: 1,\n  limit: 20,\n};\n\nexport const dummyPoll = {\n  id: 1,\n  options: [\n    {\n      id: 1,\n      name: \"John Doe\",\n      counts: 10,\n    },\n    {\n      id: 2,\n      name: \"John Doe asdasdasdasdas dsadasdasd\",\n      counts: 10,\n    },\n    {\n      id: 3,\n      name: \"John Doe\",\n      counts: 10,\n    },\n    {\n      id: 4,\n      name: \"John Doe\",\n      counts: 10,\n    },\n  ],\n  createdBy: dummyUser,\n  createdAt: \"2023-10-6\",\n  updatedAt: \"2023-10-7\",\n};\n\nexport const dummyPoll2 = {\n  id: 1,\n  options: [\n    {\n      id: 1,\n      name: \"John Doe\",\n      counts: 50,\n    },\n    {\n      id: 2,\n      name: \"John Doe\",\n      counts: 10,\n    },\n    {\n      id: 3,\n      name: \"John Doe\",\n      counts: 0,\n    },\n    {\n      id: 4,\n      name: \"John Doe\",\n      counts: 100,\n    },\n  ],\n  createdBy: dummyUser,\n  createdAt: \"2023-10-6\",\n  updatedAt: \"2023-10-7\",\n};\n\nexport const dummyWebboard = {\n  id: 1,\n  excerpt: \"lorem ipsum dolor sit amet consectetur adipiscing elit sed do\",\n  content:\n    \"<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p><ul><li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li><li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li></ul>\",\n  title: \"Webboard Title\",\n  thumbnailImageUrl: \"/image/placeholder.png\",\n  comments: dummyComments,\n  commentCounts: 4,\n  postRoomIds: [1, 2],\n  postRooms: [...dummyRooms].splice(0, 2),\n  postGameIds: [1, 2],\n  postGames: [...dummyGames].splice(0, 2),\n  reactions: dummyReactions,\n  tags: [\"valorantchallenge1\", \"valorantchallenge2\", \"valorantchallenge3\"],\n  poll: null,\n  author: dummyUser,\n  createdAt: \"2023-10-6\",\n  updatedAt: \"2023-10-7\",\n};\n\nexport const dummyWebboard2 = {\n  id: 10,\n  excerpt: \"lorem ipsum dolor sit amet consectetur adipiscing elit sed do\",\n  content:\n    \"<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p><ul><li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li><li>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</li></ul>\",\n  title: \"Webboard Title\",\n  thumbnailImageUrl: \"/image/placeholder.png\",\n  commentCounts: 5,\n  roomIds: [2, 3],\n  rooms: [...dummyRooms].splice(2, 2),\n  gameIds: [2, 3],\n  games: [...dummyGames].splice(2, 2),\n  reactions: dummyReactions,\n  tags: [\"valorantchallenge1\", \"valorantchallenge2\"],\n  poll: dummyPoll,\n  author: dummyUser,\n  createdAt: \"2023-10-3\",\n  updatedAt: \"2023-10-10\",\n};\n\nconst dummyFeaturedWebboardItems = [] as any[];\nfor (let index = 0; index < 8; index++) {\n  dummyFeaturedWebboardItems.push({ ...dummyWebboard, id: index + 1 });\n}\nexport const dummyFeaturedWebboards = [...dummyFeaturedWebboardItems];\n\nconst dummyWebboardItems = [] as any[];\nfor (let index = 0; index < 12; index++) {\n  dummyWebboardItems.push({\n    ...dummyWebboard,\n    id: index + 1,\n  });\n}\n\nexport const dummyWebboards = {\n  items: dummyWebboardItems,\n  total: 40,\n  totalPages: 10,\n  page: 1,\n  limit: 20,\n};\n\n// Party related\nexport const dummyPartyMember = {\n  id: 1,\n  status: \"active\",\n  userId: 2,\n  user: dummyUser,\n  username: \"test_username\",\n  phone: \"0876544567\",\n  email: \"test@gmail.com\",\n  discordId: \"123456789012345678\",\n  gameUsername: \"game-username\",\n  metaData: {},\n};\nconst dummyPartyMembers = [] as any[];\nfor (let index = 0; index < 3; index++) {\n  dummyPartyMembers.push({\n    ...dummyPartyMember,\n    id: index + 1,\n    userId: index + 6,\n  });\n}\n\nexport const dummyParty = {\n  id: 1,\n  isActive: true,\n  name: \"party name\",\n  members: dummyPartyMembers,\n  ranks: [...dummyRanks].splice(0, 3),\n  gameId: 1,\n  game: dummyGames[0],\n  requiredSlots: 3,\n  mode: \"team\",\n  discordUrl: \"https://www.discord.com\",\n  isPrivate: true,\n  boostedAt: null,\n  createdBy: dummyUser,\n  createdAt: \"2023-10-3\",\n  updatedAt: \"2023-10-10\",\n};\n\nexport const dummyParty2 = {\n  id: 2,\n  isActive: false,\n  name: \"edit party name\",\n  members: [...dummyPartyMembers].splice(0, 2),\n  ranks: [...dummyRanks].splice(0, 3),\n  gameId: 1,\n  game: dummyGames[0],\n  requiredSlots: 3,\n  mode: \"team\",\n  discordUrl: \"https://www.discord.com/newww\",\n  isPrivate: true,\n  boostedAt: \"2023-10-25 17:05:00\",\n  createdBy: dummyUser,\n  createdAt: \"2023-10-3\",\n  updatedAt: \"2023-10-10\",\n};\n\nconst dummyPartyItems = [] as any[];\nfor (let i = 0; i < 10; i++) {\n  dummyPartyItems.push({\n    ...dummyParty,\n    id: i + 1,\n    name: `${dummyParty.name} ${i + 1}`,\n  });\n}\n\nexport const dummyPartyItems2 = [] as any[];\nfor (let i = 0; i < 10; i++) {\n  dummyPartyItems2.push({\n    ...dummyParty,\n    id: i % 2 === 0 ? i + 1 : i + 10,\n    name:\n      i % 2 === 0\n        ? `${dummyParty.name} ${i + 1}`\n        : `${dummyParty.name} ${i + 10}`,\n    updatedAt: i % 2 === 0 ? \"2023-10-10\" : \"2023-10-11\",\n  });\n}\n\nexport const dummyPartyItems3 = [] as any[];\nfor (let i = 0; i < 10; i++) {\n  dummyPartyItems3.push({\n    ...dummyParty,\n    id: i + 10,\n    name: `${dummyParty.name} ${i + 10}`,\n    updatedAt: \"2023-10-11\",\n  });\n}\n\nexport const dummyParties = dummyPartyItems;\n\nexport const dummyPartyRequest = {\n  id: 1,\n  user: dummyUser,\n  status: \"approved\",\n  username: \"test_username\",\n  message: \"test message\",\n};\n\nexport const dummyPartyRequests = [\n  {\n    id: 1,\n    user: dummyUser,\n    status: \"pending\",\n    username: \"test_username\",\n    message: \"test message\",\n  },\n  {\n    id: 2,\n    user: dummyUser,\n    status: \"approved\",\n    username: \"test_username\",\n    message: \"test message\",\n  },\n  {\n    id: 3,\n    user: dummyUser,\n    status: \"rejected\",\n    username: \"test_username\",\n    message: \"test message\",\n  },\n];\n\nexport const dummyPartyChats = [\n  {\n    createdBy: {\n      id: 1,\n      displayName: \"user 1\",\n      displayImage: \"profile-avatars/profile-5.jpg\",\n    },\n    createdAt: \"2023-10-29 23:15\",\n    message:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit.\",\n  },\n  {\n    createdBy: {\n      id: 2,\n      displayName: \"user 2\",\n      displayImage: \"profile-avatars/profile-3.jpg\",\n    },\n    createdAt: \"2023-10-29 23:16\",\n    message: \"test message 2\",\n  },\n  {\n    createdBy: {\n      id: 3,\n      displayName: \"user 3\",\n      displayImage: \"profile-avatars/profile-2.jpg\",\n    },\n    createdAt: \"2023-10-29 23:17\",\n    message: \"test message 3\",\n  },\n  {\n    createdBy: {\n      id: 4,\n      displayName: \"user 1\",\n      displayImage: \"profile-avatars/profile-5.jpg\",\n    },\n    createdAt: \"2023-10-29 23:15\",\n    message:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit.\",\n  },\n  {\n    createdBy: {\n      id: 5,\n      displayName: \"user 2\",\n      displayImage: \"profile-avatars/profile-3.jpg\",\n    },\n    createdAt: \"2023-10-29 23:16\",\n    message: \"test message 2\",\n  },\n  {\n    createdBy: {\n      id: 6,\n      displayName: \"user 3\",\n      displayImage: \"profile-avatars/profile-2.jpg\",\n    },\n    createdAt: \"2023-10-29 23:17\",\n    message: \"test message 3\",\n  },\n];\n\nexport const dummyNotificationItems = [\n  {\n    id: 3,\n    by: null,\n    relatedType: \"tournament\",\n    relatedId: 1,\n    message: \"team-full\",\n    createdAt: \"2023-10-29 23:17\",\n  },\n  {\n    id: 2,\n    by: dummyUser,\n    relatedType: \"party\",\n    relatedPost: 1,\n    message: \"completed\",\n    createdAt: \"2023-10-29 23:16\",\n  },\n  {\n    id: 1,\n    by: null,\n    relatedType: \"tournament\",\n    relatedPost: 1,\n    message: \"completed\",\n    createdAt: \"2023-10-29 23:15\",\n  },\n];\n\nexport const dummyNotifications = {\n  items: dummyNotificationItems,\n  total: 40,\n  totalPages: 10,\n  page: 1,\n  limit: 20,\n};\n\nexport const campaignResult = {\n  \"00000\": {\n    title: \"\u0E09\u0E32\u0E22\u0E32\",\n    alias: \"\u0E43\u0E2A\u0E48\u0E21\u0E32\u0E40\u0E25\u0E22 \u0E22\u0E32\u0E27\u0E46\u0E46\u0E46\u0E46\",\n  },\n  \"00001\": {\n    title: \"\u0E09\u0E32\u0E22\u0E32\",\n    alias: \"\u0E43\u0E2A\u0E48\u0E21\u0E32\u0E40\u0E25\u0E22 \u0E22\u0E32\u0E27\u0E46\u0E46\u0E46\u0E46\",\n  },\n};\n", "import { Button, Result } from \"antd\";\n\ninterface ErrorResultsProps {\n  status: number | \"unknown\";\n}\n\nexport function ErrorResults(props: ErrorResultsProps) {\n  const { status } = props;\n\n  let title = \"Sorry, the page you visited does not exist.\";\n  if (status === 500 || status === \"unknown\") {\n    title = \"Sorry, something went wrong.\";\n  }\n\n  return (\n    <Result\n      status=\"error\"\n      title={title}\n      extra={\n        <Button type=\"primary\" href=\"/\">\n          Back Home\n        </Button>\n      }\n    />\n  );\n}\n", "import React from \"react\";\nimport { Upload } from \"antd\";\nimport { encode } from \"base64-arraybuffer\";\n\ninterface FileUploaderProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  fetcher: any;\n  fieldName: string;\n  fileType?: string;\n  maxFileSize?: number;\n  isSlip?: boolean;\n  onErrorFileTooLarge?: () => void;\n  onUploading?: (uploading: boolean) => void;\n}\n\nexport const FileUploader: React.FC<FileUploaderProps> = (\n  props: FileUploaderProps\n) => {\n  const {\n    children,\n    disabled,\n    fetcher,\n    fieldName,\n    fileType,\n    maxFileSize,\n    isSlip,\n    onErrorFileTooLarge,\n    onUploading,\n  } = props;\n  const limitFileSize = maxFileSize ? maxFileSize : 2000000;\n\n  return (\n    <Upload\n      action=\"/resources/upload\"\n      accept={fileType ? fileType : \"image/*\"}\n      disabled={disabled}\n      maxCount={1}\n      beforeUpload={() => false}\n      onChange={(info: any) => {\n        const { fileList } = info;\n        const { name, size, type } = fileList[0];\n\n        if (onUploading) {\n          onUploading(true);\n        }\n        if ((size && size > limitFileSize) || fileList.length <= 0) {\n          if (onErrorFileTooLarge) {\n            onErrorFileTooLarge();\n          }\n          if (onUploading) {\n            onUploading(false);\n          }\n          return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e: any) => {\n          fileList[0].base64 = reader.result;\n\n          if (fileList[0].base64) {\n            fetcher.submit(\n              {\n                name,\n                size,\n                type,\n                file: encode(fileList[0].base64),\n                field: fieldName,\n                isSlip: isSlip,\n                previewImage: encode(fileList[0].base64),\n              },\n              {\n                method: \"put\",\n                action: \"/resources/upload\",\n                encType: \"multipart/form-data\",\n              }\n            );\n          }\n        };\n        reader.readAsArrayBuffer(fileList[0].originFileObj);\n      }}\n      showUploadList={false}\n      style={{ width: \"100%\" }}\n    >\n      {children}\n    </Upload>\n  );\n};\n", "import React, { useRef, useState } from \"react\";\nimport { Button, Skeleton, Space, Spin, Upload } from \"antd\";\nimport { encode } from \"base64-arraybuffer\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface FileUploaderProps {\n  children: React.ReactNode;\n\n  fetcher: any;\n  maxUpload: number;\n  fieldName: string;\n  fileType?: string;\n  maxFileSize?: number;\n  isSlip?: boolean;\n  disabled?: boolean;\n  isUploading?: boolean;\n  onErrorFileTooLarge?: () => void;\n  onUploading?: (uploading: boolean) => void;\n}\n\ntype ImageList = {\n  key: string;\n  name: string;\n  type: string;\n  size: number;\n  source: string;\n  base64: any;\n};\n\ntype Previews = {\n  key: string;\n  path: string;\n  name: string;\n  source: string;\n  isSuccess: boolean;\n};\n\nexport const FileUploaderMultiple: React.FC<FileUploaderProps> = (\n  props: FileUploaderProps\n) => {\n  const {\n    children,\n    disabled,\n    fetcher,\n    maxUpload,\n    fieldName,\n    fileType,\n    maxFileSize,\n    isSlip,\n    onErrorFileTooLarge,\n    onUploading,\n    isUploading,\n  } = props;\n  const limitFileSize = maxFileSize ? maxFileSize : 2000000;\n  const [imageList, setImageList] = useState<ImageList[]>([]);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const getUUIDs = (array: any) => {\n    return new Set(array.map((item: any) => item.uid));\n  };\n\n  const handleFileUpload = () => {\n    const fileList = fileInputRef.current?.files as any;\n\n    const fileReadPromises = [] as any;\n    const timestamp = Math.floor(Date.now() / 1000);\n    const uploadLength =\n      imageList.length > 0 ? maxUpload - imageList.length : maxUpload;\n\n    for (let i = 0; i < Math.min(fileList.length, uploadLength); i++) {\n      const fileItem = fileList[i];\n\n      if (onUploading) {\n        onUploading(true);\n      }\n      if (\n        (fileItem.size && fileItem.size > limitFileSize) ||\n        fileList.length <= 0\n      ) {\n        if (onErrorFileTooLarge) {\n          onErrorFileTooLarge();\n        }\n        if (onUploading) {\n          onUploading(false);\n        }\n        return;\n      }\n\n      const fileReadPromise = new Promise((resolve) => {\n        const reader = new FileReader();\n\n        // This event fires when the file has been read\n        reader.onload = (e: any) => {\n          fileItem.base64 = reader.result;\n          const key = `${timestamp}-${fileItem.name}`;\n          if (fileItem.base64) {\n            resolve({\n              key: key,\n              name: fileItem.name,\n              size: fileItem.size,\n              type: fileItem.type,\n              file: encode(fileItem.base64), // Assuming you have an encode function for base64 encoding\n              field: fieldName,\n              isSlip: isSlip,\n              previewImage: encode(fileItem.base64),\n              uuid: uuidv4(),\n            });\n          }\n        };\n        // Start reading the file\n        reader.readAsArrayBuffer(fileItem);\n      });\n      fileReadPromises.push(fileReadPromise);\n    }\n\n    Promise.all(fileReadPromises).then((images: any) => {\n      const updatedImageList = [...imageList];\n      console.log(\"image lis before\", updatedImageList);\n\n      console.log(\"images\", images);\n\n      setImageList([...images]);\n\n      const imageData = images.map((image: any) => ({\n        size: image.size,\n        type: image.type,\n        name: image.name,\n        uuid: image.uuid,\n      }));\n\n      const imageFileData = images.map((image: any) => ({\n        size: image.size,\n        type: image.type,\n        name: image.name,\n        uuid: image.uuid,\n        file: image.file,\n      }));\n\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n\n      const inputData = { images: imageData };\n      console.log(\"inputData\", inputData);\n\n      fetcher.submit(\n        {\n          inputData: JSON.stringify(inputData),\n          imageList: JSON.stringify(imageFileData),\n          field: fieldName,\n        },\n        {\n          method: \"put\",\n          action: \"/resources/uploadMultiple\",\n          encType: \"multipart/form-data\",\n        }\n      );\n    });\n  };\n\n  return (\n    <div>\n      <input\n        ref={fileInputRef}\n        onInput={handleFileUpload}\n        multiple\n        type=\"file\"\n        accept=\"image/*\"\n        style={{ display: \"none\" }}\n      />\n      {isUploading ? (\n        <Spin\n          tip=\"Uploading\"\n          size=\"large\"\n          style={{\n            color: \"#7C6FF6\",\n            backgroundColor: \"#7C6FF6\",\n            marginTop: \"95px\",\n          }}\n        >\n          <div className=\"content\" />\n        </Spin>\n      ) : (\n        <div onClick={() => fileInputRef.current?.click()}>{children}</div>\n      )}\n    </div>\n  );\n};\n", "import { useTranslation } from \"react-i18next\";\nimport { Flex, Space, Typography } from \"antd\";\nimport { SyncOutlined } from \"@ant-design/icons\";\n\nimport { OverlayBg } from \"./OverlayBg\";\nimport { TiltButton } from \"./TiltButton\";\nimport { RefreshCw } from \"lucide-react\";\nconst { Title } = Typography;\n\ninterface GameCardProps {\n  avatarStyle: React.CSSProperties;\n  onClick: () => void;\n  action?: string;\n}\n\nexport function GameCard(props: GameCardProps) {\n  const { avatarStyle, onClick, action } = props;\n  const { t } = useTranslation();\n\n  return (\n    <div style={avatarStyle} onClick={onClick}>\n      <div style={{ paddingBottom: \"125%\" }}>\n        <Flex\n          style={{\n            position: \"absolute\",\n            bottom: 0,\n            width: \"100%\",\n            paddingBlock: 10,\n          }}\n          vertical\n          align=\"center\"\n          justify=\"center\"\n        >\n          {action !== \"update\" && (\n            <>\n              <OverlayBg\n                style={{\n                  cursor: \"pointer\",\n                  backgroundColor: \"rgba(122, 111, 237, 0.85)\",\n                }}\n              />\n              <Space size={10} style={{ position: \"relative\" }}>\n                <RefreshCw style={{ color: \"#fff\" }} />\n\n                <Title level={5} style={{ margin: 0, color: \"#fff\" }}>\n                  {t(\"change game\")}\n                </Title>\n              </Space>\n            </>\n          )}\n        </Flex>\n      </div>\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\ninterface OverlayBgProps {\n  children?: React.ReactNode;\n  className?: string;\n  loading?: boolean;\n  onClick?: () => void;\n  opacity?: number;\n  style?: React.CSSProperties;\n}\n\nexport const OverlayBg: React.FC<OverlayBgProps> = (props: OverlayBgProps) => {\n  const { children, className, loading, onClick, opacity, style } = props;\n  return (\n    <div\n      className={className ? className : \"\"}\n      style={{\n        display: \"flex\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: `rgba(0,0,0,${opacity ? opacity : 0.5})`,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        cursor: onClick ? \"pointer\" : \"default\",\n        ...style,\n      }}\n      onClick={onClick ? onClick : undefined}\n    >\n      {loading ? (\n        <LoadingOutlined style={{ fontSize: 24 }} spin />\n      ) : children ? (\n        children\n      ) : null}\n    </div>\n  );\n};\n", "import { useMatches } from \"@remix-run/react\";\nimport { Col, Row, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text, Title } = Typography;\n\ninterface GameSelectProps {\n  currentGameId?: number | null;\n  games: any[];\n  onGameSelect: (gameId: number) => void;\n}\n\nexport function GameSelect(props: GameSelectProps) {\n  const { currentGameId, games, onGameSelect } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Title\n        level={4}\n        style={{ marginTop: 0, marginBottom: 40, textAlign: \"center\" }}\n      >\n        {t(\"select game\")}\n      </Title>\n      <Row gutter={[20, 20]}>\n        {games.map((game: any) => (\n          <Col\n            key={game.id}\n            span={8}\n            style={{\n              textAlign: \"center\",\n              cursor: game.maxPlayers ? \"pointer\" : \"default\",\n            }} //FIXME: must check with somethingelse which is note max players\n            onClick={game.maxPlayers ? () => onGameSelect(game.id) : undefined}\n          >\n            <div\n              style={{\n                position: \"relative\",\n                paddingBottom: \"133%\",\n                marginBottom: 10,\n                borderRadius: 20,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                backgroundImage:\n                  game && game.mainImageUrl && game.mainImageUrl !== \"-\"\n                    ? `url(\"${cdnUrl}/${game.mainImageUrl}\")`\n                    : `url(\"/image/placeholder.png\")`,\n                transform:\n                  currentGameId && currentGameId == game.id\n                    ? \"scale(1.05)\"\n                    : undefined,\n                zIndex:\n                  currentGameId && currentGameId == game.id ? 1 : undefined,\n                boxShadow:\n                  currentGameId && currentGameId == game.id\n                    ? \"0px 0px 24px 0px rgba(71, 0, 252, 0.50)\"\n                    : undefined,\n              }}\n            />\n            <Text>{game.name}</Text>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n}\n", "import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Card,\n  Col,\n  Divider,\n  Image,\n  Modal,\n  Row,\n  Space,\n  Typography,\n  notification,\n} from \"antd\";\nimport { FileUploader, OverlayBg, TiltButton } from \"~/components/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Title } = Typography;\n\ninterface ImageSelectorProps {\n  callback?: any;\n  children: React.ReactNode;\n  fetcher: any;\n  fieldName: string;\n  onSelect?: (imageObj: any) => void;\n  title: string;\n  presetRound?: boolean;\n  presetImages: string[];\n  frameImages?: { id: string; url: string }[];\n}\n\nexport function ImageSelector(props: ImageSelectorProps) {\n  const {\n    callback,\n    children,\n    fetcher,\n    fieldName,\n    onSelect,\n    presetImages,\n    presetRound,\n    title,\n    frameImages,\n  } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const [modal, setModal] = useState<boolean>(false);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleSelectImage = (image: string, action: string) => {\n    const imageKey = image.replace(`${cdnUrl}/`, \"\");\n    if (action === \"frame\") {\n      if (callback) {\n        const toSubmit = {} as any;\n        toSubmit[\"assetId\"] = imageKey;\n\n        fetcher.submit(toSubmit, {\n          method: callback.method,\n          action: callback.path,\n        });\n      } else if (onSelect) {\n        onSelect({ key: imageKey, url: image });\n      }\n    } else if (action === \"all\") {\n      if (callback) {\n        const toSubmit = {} as any;\n        toSubmit[callback.key] = imageKey;\n\n        fetcher.submit(toSubmit, {\n          method: callback.method,\n          action: callback.path,\n        });\n      } else if (onSelect) {\n        onSelect({ key: imageKey, url: image });\n      }\n    }\n    setModal(false);\n  };\n\n  const handleNoFrame = useCallback(() => {\n    fetcher.submit(null, {\n      method: \"put\",\n      action: `/resources/no-frame`,\n    });\n    setModal(false);\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (\n      fetcher.data &&\n      fetcher.data.field &&\n      fetcher.state &&\n      fetcher.state === \"idle\"\n    ) {\n      if (fetcher.data.field === fieldName && fetcher.data.url) {\n        setUploading(false);\n        if (callback) {\n          const toSubmit = {} as any;\n          toSubmit[callback.key] = fetcher.data.key;\n          fetcher.submit(toSubmit, {\n            method: callback.method,\n            action: callback.path,\n          });\n        } else if (onSelect) {\n          onSelect(fetcher.data);\n        }\n        setModal(false);\n      }\n    }\n  }, [fetcher]);\n\n  return (\n    <>\n      <div onClick={() => setModal(true)}>{children}</div>\n      <Modal\n        closeIcon={false}\n        closable={!uploading}\n        footer={null}\n        open={modal}\n        onCancel={() => setModal(false)}\n        modalRender={(modal) => modal}\n        zIndex={1002}\n      >\n        <Card\n          bodyStyle={{ padding: 20 }}\n          style={{ backgroundColor: \"transparent\" }}\n          bordered={false}\n        >\n          {frameImages && (\n            <Space\n              direction=\"vertical\"\n              size={30}\n              style={{\n                display: \"flex\",\n                position: \"relative\",\n              }}\n            >\n              <Title\n                level={3}\n                style={{ marginBottom: 20, marginTop: 0, textAlign: \"center\" }}\n              >\n                {t(\"select frame\")}\n              </Title>\n              <Row gutter={[15, 15]} style={{ position: \"relative\" }}>\n                <Col\n                  span={4}\n                  style={{ justifyContent: \"center\", cursor: \"pointer\" }}\n                  onClick={handleNoFrame}\n                >\n                  <Image\n                    src={\"/image/no-frame.png\"}\n                    preview={false}\n                    wrapperStyle={\n                      presetRound\n                        ? { borderRadius: \"50%\", overflow: \"hidden\" }\n                        : undefined\n                    }\n                  />\n                </Col>\n                {frameImages.map((image) => (\n                  <Col\n                    key={image.id}\n                    span={4}\n                    style={{ justifyContent: \"center\", cursor: \"pointer\" }}\n                    onClick={() => handleSelectImage(image.id, \"frame\")}\n                  >\n                    <Image\n                      src={image.url}\n                      preview={false}\n                      wrapperStyle={\n                        presetRound\n                          ? { borderRadius: \"50%\", overflow: \"hidden\" }\n                          : undefined\n                      }\n                    />\n                  </Col>\n                ))}\n                {uploading && <OverlayBg loading />}\n              </Row>\n              <Divider plain style={{ marginBlock: 0, marginBottom: \"15px\" }} />\n            </Space>\n          )}\n          <Space\n            direction=\"vertical\"\n            size={30}\n            style={{\n              display: \"flex\",\n              position: \"relative\",\n            }}\n          >\n            <Title\n              level={3}\n              style={{ marginBottom: 20, marginTop: 0, textAlign: \"center\" }}\n            >\n              {title}\n            </Title>\n            <Row gutter={[15, 15]} style={{ position: \"relative\" }}>\n              {presetImages.map((image: string) => (\n                <Col\n                  key={image}\n                  span={4}\n                  style={{ justifyContent: \"center\", cursor: \"pointer\" }}\n                  onClick={() => handleSelectImage(image, \"all\")}\n                >\n                  <Image\n                    src={image}\n                    preview={false}\n                    wrapperStyle={\n                      presetRound\n                        ? { borderRadius: \"50%\", overflow: \"hidden\" }\n                        : undefined\n                    }\n                  />\n                </Col>\n              ))}\n              {uploading && <OverlayBg loading />}\n            </Row>\n            <Divider plain style={{ marginBlock: 0 }}>\n              {t(\"or\")}\n            </Divider>\n            <FileUploader\n              disabled={uploading}\n              fetcher={fetcher}\n              fieldName={fieldName}\n              onUploading={setUploading}\n              onErrorFileTooLarge={handleFileTooLarge}\n            >\n              <TiltButton\n                color={uploading ? \"secondary\" : \"primary\"}\n                style={{ width: 600, cursor: \"pointer\", maxWidth: \"100%\" }}\n              >\n                {t(\"upload image\")}\n              </TiltButton>\n            </FileUploader>\n          </Space>\n        </Card>\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import {\n  Avatar,\n  Card,\n  Divider,\n  Drawer,\n  Space,\n  theme,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { ControlOutlined } from \"@ant-design/icons\";\nimport { indexOf, isArray } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { Media, TiltButton } from \"~/components/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface IndexFilterProps {\n  alwaysActive?: boolean;\n  filters: any[];\n  values?: any;\n  onFilterClicked: (name: string, value: string | number) => void;\n  mobileAppendChildren?: React.ReactNode;\n}\n\nexport function IndexFilter(props: IndexFilterProps) {\n  const {\n    alwaysActive,\n    filters,\n    onFilterClicked,\n    values,\n    mobileAppendChildren,\n  } = props;\n  const { token } = useToken();\n  const { t } = useTranslation();\n  const [mobileCollapsed, setMobileCollapsed] = useState<boolean>(false);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  let filteredValues = {} as any;\n  if (values) {\n    Object.keys(values).map((key: any) => {\n      filteredValues[key] = isArray(values[key])\n        ? values[key]\n        : values[key].split(\",\");\n    });\n  }\n\n  const isActive = (values: any, name: string, value: string | number) => {\n    return alwaysActive\n      ? true\n      : values &&\n          values[name] &&\n          values[name].length &&\n          indexOf(values[name], `${value}`) > -1;\n  };\n\n  const handleOpenCollapsed = () => {\n    setMobileCollapsed(true);\n  };\n\n  const handleCloseCollapsed = () => {\n    setMobileCollapsed(false);\n  };\n\n  const renderContent = () => {\n    return (\n      <Space direction=\"vertical\" size={10} style={{ display: \"flex\" }}>\n        <Title level={4}>{t(\"Filters\")}</Title>\n        {filters.map((filter: any) => (\n          <Space\n            key={filter.name}\n            size={10}\n            direction=\"vertical\"\n            style={{ display: \"flex\" }}\n          >\n            <Title level={5} style={{ marginTop: 0 }}>\n              {filter.title}\n            </Title>\n            <Space\n              wrap\n              size={5}\n              style={{\n                display: \"flex\",\n                paddingInline: filter.type === \"tilt-button\" ? 5 : 0,\n              }}\n            >\n              {filter.options.map((option: any) =>\n                filter.type === \"avatar\" ? (\n                  <Tooltip\n                    key={`${option.name}-${option.value}`}\n                    title={option.label}\n                    placement=\"bottom\"\n                    arrow={false}\n                  >\n                    <Avatar\n                      src={`${cdnUrl}/${option.image}`}\n                      size={60}\n                      onClick={() => onFilterClicked(filter.name, option.value)}\n                      style={\n                        isActive(filteredValues, filter.name, option.value)\n                          ? { opacity: 1, cursor: \"pointer\" }\n                          : {\n                              opacity: 0.5,\n                              filter: \"grayscale(100%)\",\n                              cursor: \"pointer\",\n                            }\n                      }\n                    />\n                  </Tooltip>\n                ) : (\n                  <TiltButton\n                    color={\n                      isActive(filteredValues, filter.name, option.value)\n                        ? \"primary\"\n                        : \"transparent\"\n                    }\n                    key={`${filter.name}-${option.value}`}\n                    onClick={() => onFilterClicked(filter.name, option.value)}\n                    style={{\n                      borderColor: token.colorBorder,\n                      fontStyle: \"italic\",\n                      fontWeight: 400,\n                      paddingBlock: 6,\n                    }}\n                  >\n                    <Space size={5}>\n                      {option.image ? (\n                        <Avatar src={option.image} size={20} shape=\"square\" />\n                      ) : (\n                        <></>\n                      )}\n                      <Text>{option.label}</Text>\n                    </Space>\n                  </TiltButton>\n                )\n              )}\n            </Space>\n            <Divider style={{ marginBlock: 15 }} />\n          </Space>\n        ))}\n      </Space>\n    );\n  };\n\n  return (\n    <>\n      <Media greaterThan=\"sm\">{renderContent()}</Media>\n      <Media at=\"sm\">\n        <Card bodyStyle={{ padding: 10, cursor: \"pointer\" }}>\n          <Space\n            onClick={handleOpenCollapsed}\n            size={10}\n            style={{ display: \"flex\", fontSize: 20 }}\n          >\n            <ControlOutlined />\n            <Text>{t(\"filter\")}</Text>\n          </Space>\n        </Card>\n        <Drawer\n          placement=\"left\"\n          closable={false}\n          onClose={handleCloseCollapsed}\n          open={mobileCollapsed}\n          width={250}\n          styles={{ body: { padding: \"30px 20px\" } }}\n        >\n          {renderContent()}\n          {mobileAppendChildren ? mobileAppendChildren : <></>}\n        </Drawer>\n      </Media>\n    </>\n  );\n}\n", "import React from \"react\";\nimport { Avatar, Space, Typography } from \"antd\";\nconst { Title } = Typography;\n\ninterface InlineAvatarProps {\n  avatarUrl?: string;\n  avatarSize?: number;\n  title: React.ReactNode;\n  titleLevel?: 1 | 2 | 3 | 4 | 5;\n  subtitle?: React.ReactNode;\n}\n\nexport const InlineAvatar: React.FC<InlineAvatarProps> = (\n  props: InlineAvatarProps\n) => {\n  const { avatarUrl, avatarSize, title, titleLevel, subtitle } = props;\n  return (\n    <Space size={10} style={{ alignItems: \"center\" }}>\n      {avatarUrl && (\n        <Avatar src={avatarUrl} size={avatarSize ? avatarSize : 60} />\n      )}\n      <Space direction=\"vertical\" size={0}>\n        <Title level={titleLevel ? titleLevel : 5} style={{ margin: 0 }}>\n          {title}\n        </Title>\n        {subtitle && subtitle}\n      </Space>\n    </Space>\n  );\n};\n", "import React, { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Avatar, Badge, Card, Col, Divider, Flex, Row, Typography } from \"antd\";\nimport { CheckCircleFilled, CheckCircleOutlined } from \"@ant-design/icons\";\nimport { AppContext, AuthContext } from \"~/contexts\";\n\nimport { TiltButton } from \"./TiltButton\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\n\ninterface KycBenefitsProps {\n  children?: any;\n  onVerifyKyc?: () => void;\n}\n\nexport const KycBenefits: React.FC<KycBenefitsProps> = (\n  props: KycBenefitsProps\n) => {\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { children, onVerifyKyc } = props;\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n\n  let cardStyle = {\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  const generalLists: any[] = [\n    t(\"can enter buy sell page\"),\n    t(\"create post with own profile\"),\n  ];\n\n  const kycLists: any[] = [\n    t(\"can create post and comment in buy sell room\"),\n    t(\"can create post and comment in anonymouse mode\"),\n    t(\"get verrified badge\"),\n  ];\n\n  return (\n    <Flex vertical gap={20}>\n      <Flex vertical gap={10}>\n        <Title level={3} style={{ margin: 0 }}>\n          {t(\"KYC benefits\")}\n        </Title>\n        <Text>\n          {children\n            ? children\n            : t(\"start buy sell & anonymous after complete verification\")}\n        </Text>\n      </Flex>\n      <Row wrap={false}>\n        <Col span={12} style={{ paddingTop: 75, paddingBottom: 25 }} order={0}>\n          <Card\n            bordered={false}\n            style={{ ...cardStyle, height: \"100%\" }}\n            bodyStyle={{ padding: 30 }}\n          >\n            <Flex vertical>\n              <Title level={3} style={{ margin: 0, textAlign: \"center\" }}>\n                {t(\"general user\")}\n              </Title>\n              <Divider />\n              {generalLists.map((item: any, index: number) => (\n                <div key={`general-${index}`}>\n                  <Flex gap={10} align=\"flex-start\">\n                    <CheckCircleOutlined\n                      style={{ fontSize: \"1.8em\", color: \"#7a6fee\" }}\n                    />\n                    <Text>{item}</Text>\n                  </Flex>\n                  <Divider />\n                </div>\n              ))}\n            </Flex>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <div style={{ position: \"relative\", textAlign: \"center\", zIndex: 1 }}>\n            <Badge\n              count={\n                <CheckCircleFilled style={{ fontSize: 30, color: \"#7a6fee\" }} />\n              }\n              offset={[-8, 76]}\n            >\n              <Avatar\n                size={90}\n                src={\n                  user.displayImage\n                    ? `${cdnUrl}/${user.displayImage}`\n                    : \"image/placeholder.png\"\n                }\n              />\n            </Badge>\n          </div>\n          <Card\n            bordered={false}\n            style={{\n              marginTop: -45,\n              backgroundColor: \"#cefb6a\",\n              ...cardStyle,\n            }}\n            bodyStyle={{ paddingBlock: 60, paddingInline: 30 }}\n          >\n            <Flex vertical>\n              <Title\n                level={3}\n                style={{ margin: 0, textAlign: \"center\", color: \"#231f20\" }}\n              >\n                {t(\"verified user\")}\n              </Title>\n              <Divider />\n              {kycLists.map((item: any, index: number) => (\n                <div key={`general-${index}`}>\n                  <Flex gap={10} align=\"flex-start\">\n                    <CheckCircleOutlined\n                      style={{ fontSize: \"1.8em\", color: \"#7a6fee\" }}\n                    />\n                    <Text style={{ color: \"#231f20\" }}>{item}</Text>\n                  </Flex>\n                  <Divider />\n                </div>\n              ))}\n              {onVerifyKyc && (\n                <TiltButton\n                  color=\"dark\"\n                  style={{ padding: \"15px 30px\" }}\n                  onClick={onVerifyKyc}\n                >\n                  {t(\"start verification\")}\n                </TiltButton>\n              )}\n            </Flex>\n          </Card>\n        </Col>\n      </Row>\n    </Flex>\n  );\n};\n", "import { useContext, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nimport dayjs from \"dayjs\";\nimport {\n  Checkbox,\n  DatePicker,\n  Divider,\n  Form,\n  Image,\n  Input,\n  Modal,\n  Space,\n  Typography,\n} from \"antd\";\nimport { InfoCircleOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport {\n  checkCitizenId,\n  hasStartEndEmptySpace,\n  validateBirthYear,\n} from \"~/utils/helper\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text, Title } = Typography;\n\ninterface KycFormProps {\n  loading?: boolean;\n  fetcher?: any;\n  form?: any;\n}\n\nexport function KycForm(props: KycFormProps) {\n  const { t } = useTranslation();\n  const { fetcher, form, loading } = props;\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [laserModal, setLaserModalModal] = useState<boolean>(false);\n\n  const handleSubmit = (values: any) => {\n    const { dateOfBirth, acceptWhalletConsent, ...value } = values;\n    const originalYear = dayjs(dateOfBirth).year();\n    const buddistYear = originalYear + 543;\n    const newDateOfBirth = dayjs(dateOfBirth).year(buddistYear);\n\n    if (!user) {\n      openLoginModal();\n      return;\n    }\n    fetcher.submit(\n      {\n        action: \"submit-kyc\",\n        data: JSON.stringify({\n          ...value,\n          birthday: dayjs(newDateOfBirth).format(\"YYYY-MM-DD\"),\n        }),\n      },\n      { method: \"post\" }\n    );\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={handleSubmit}\n      initialValues={user && user.profile}\n      layout=\"vertical\"\n    >\n      <Title level={4} style={{ margin: 0 }}>\n        {t(\"KYC info\")}\n      </Title>\n      <Divider style={{ marginBlock: 15 }} />\n      <Form.Item\n        name=\"firstName\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"first name\")}\n          </Text>\n        }\n        normalize={(value) => value.trim()}\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please input firstname\")}`,\n          },\n          {\n            pattern: /^[\u0E01-\u0E59 ]+$/,\n            message: `${t(\"invalid thai pattern\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              }\n              if (value.length) {\n                if (hasStartEndEmptySpace(value)) {\n                  return Promise.reject(\n                    new Error(`${t(\"first or last character can't be space\")}`)\n                  );\n                }\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"lastName\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"last name\")}\n          </Text>\n        }\n        colon={false}\n        normalize={(value) => value.trim()}\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please input lastname\")}`,\n          },\n          {\n            pattern: /^[\u0E01-\u0E59 ]+$/,\n            message: `${t(\"invalid thai pattern\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              }\n              if (value.length) {\n                if (hasStartEndEmptySpace(value)) {\n                  return Promise.reject(\n                    new Error(`${t(\"first or last character can't be space\")}`)\n                  );\n                }\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"dateOfBirth\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"date of birth\")}\n          </Text>\n        }\n        style={{ textAlign: \"left\" }}\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please select date of birth\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              } else {\n                if (!validateBirthYear) {\n                  return Promise.reject(\n                    new Error(`${t(\"you're underage, please check birthyear\")}`)\n                  );\n                }\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <DatePicker\n          name=\"dateOfBirth\"\n          disabledDate={(current) => current && current > dayjs().endOf(\"day\")}\n          showToday={false}\n          allowClear={false}\n          placeholder=\"DD/MM/YYYY\"\n          format=\"DD/MM/YYYY\"\n          style={{ display: \"flex\" }}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"idCard\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"citizen id\")}\n          </Text>\n        }\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please input citizen id\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              }\n              if (!checkCitizenId(value)) {\n                return Promise.reject(\n                  new Error(`${t(\"please input correct citizen id\")}`)\n                );\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <Input type=\"text\" maxLength={13} minLength={13} />\n      </Form.Item>\n      <Form.Item\n        name=\"idCardLaser\"\n        labelCol={{ span: 24 }}\n        label={\n          <Space size={10}>\n            <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n              {t(\"laser code\")}\n            </Text>\n            <InfoCircleOutlined\n              style={{ cursor: \"pointer\", color: \"#9052ee\" }}\n              onClick={() => setLaserModalModal(true)}\n            />\n          </Space>\n        }\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please input laser code\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              }\n              if (value.length) {\n                if (\n                  !value\n                    .substring(0, 2)\n                    .toLowerCase()\n                    .match(/^[a-z]+$/i)\n                ) {\n                  return Promise.reject(\n                    new Error(\n                      `\"${value.substring(0, 2)}\" ${t(\n                        \"first 2 characters must be alphabet\"\n                      )}`\n                    )\n                  );\n                }\n                if (\n                  !value\n                    .substring(2)\n                    .toLowerCase()\n                    .match(/^[0-9]+$/i)\n                ) {\n                  return Promise.reject(\n                    new Error(`${t(\"last 10 characters must be numbers\")}`)\n                  );\n                }\n                if (value.length < 12) {\n                  return Promise.reject(\n                    new Error(`${t(\"invalid laser idcard length\")}`)\n                  );\n                }\n                if (value.indexOf(\"-\") > -1) {\n                  return Promise.reject(new Error(`${t(\"please remove -\")}`));\n                }\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <Input maxLength={12} placeholder={`${t(\"please do not input '-'\")}`} />\n      </Form.Item>\n      <Form.Item\n        key=\"acceptWhalletConsent\"\n        name=\"acceptWhalletConsent\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please agree to this field\")}`,\n          },\n        ]}\n      >\n        <Checkbox>\n          <Text style={{ fontSize: \"0.9em\" }}>\n            {t(\"you agree to allow whallet to send KYC data to DOPA\")}\n          </Text>\n        </Checkbox>\n      </Form.Item>\n      <Modal\n        open={laserModal}\n        closable={false}\n        footer={false}\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n        onCancel={() => setLaserModalModal(false)}\n      >\n        <Image width={400} preview={false} src=\"/image/laser.png\" />\n      </Modal>\n      {loading ? (\n        <TiltButton color=\"secondary\">\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </TiltButton>\n      ) : (\n        <TiltButton\n          color=\"primary\"\n          onClick={() => form.submit()}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"submit\")}\n        </TiltButton>\n      )}\n    </Form>\n  );\n}\n", "import dayjs from \"dayjs\";\nimport { isDate, isNumber } from \"lodash\";\n\nexport function renderData(data: any, key: string, locale: string) {\n  return locale === \"en\" && data[`${key}En`] ? data[`${key}En`] : data[key];\n}\n\nexport const resetFetcher = (fetcher: any) => {\n  fetcher.load(\"/resources/reset-fetcher\");\n};\n\nexport const isPermalink = (value: string) => {\n  return value.indexOf(\"http\") === 0;\n};\n\nexport const randomChance = (percentage: number) => {\n  const randomValue = Math.random();\n  const threshold = percentage / 100;\n  return randomValue < threshold;\n};\n\nexport const randomRarity = () => {\n  let output = \"NORMAL\";\n  const randomValue = Math.random() * 100;\n\n  if (randomValue < 80) {\n    output = \"NORMAL\";\n  } else if (randomValue < 99.65) {\n    output = \"RARE\";\n  } else if (randomValue < 99.95) {\n    output = \"SUPER_RARE\";\n  } else {\n    output = \"ULTRA_RARE\";\n  }\n  return output;\n};\n\nexport const getRandomInt = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n};\nexport const getProperTimeDifference = (date: any) => {\n  if (!date) return null;\n\n  const diffMonths = dayjs().diff(dayjs(date), \"month\");\n  if (diffMonths >= 12) {\n    return { unit: \"year\", value: dayjs().diff(dayjs(date), \"year\") };\n  } else if (diffMonths >= 1) {\n    return { unit: \"month\", value: diffMonths };\n  } else {\n    const diffDays = dayjs().diff(dayjs(date), \"day\");\n    if (diffDays >= 1) {\n      return { unit: \"day\", value: diffDays };\n    } else {\n      const diffHours = dayjs().diff(dayjs(date), \"hour\");\n      if (diffHours >= 1) {\n        return { unit: \"hour\", value: diffHours };\n      } else {\n        const diffMinutes = dayjs().diff(dayjs(date), \"minute\");\n        if (diffMinutes >= 1) {\n          return { unit: \"minute\", value: diffMinutes };\n        } else {\n          const diffSeconds = dayjs().diff(dayjs(date), \"second\");\n          return { unit: \"second\", value: diffSeconds };\n        }\n      }\n    }\n  }\n};\n\nexport const convertToObjectWithArrays = (data: any, arrayKeys?: string[]) => {\n  const isNumeric = (value: string | number) => isNumber(value);\n\n  return Object.entries(data).reduce((acc: any, [key, value]: any) => {\n    if (arrayKeys && arrayKeys.includes(key)) {\n      const values = value.split(\",\");\n      if (values.every(isNumeric)) {\n        acc[key] = values.map(Number);\n      } else {\n        acc[key] = values;\n      }\n    } else {\n      acc[key] = value;\n    }\n\n    return acc;\n  }, {});\n};\n\nexport function checkCitizenId(id: string) {\n  let i;\n  let sum;\n  if (id.length !== 13) {\n    return false;\n  }\n\n  if (id.substring(0, 1) === \"0\") {\n    return false;\n  }\n\n  for (i = 0, sum = 0; i < 12; i++) {\n    sum += parseFloat(id.charAt(i)) * (13 - i);\n  }\n\n  if ((11 - (sum % 11)) % 10 != parseFloat(id.charAt(12))) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isEmail(email: string) {\n  var re = /\\S+@\\S+\\.\\S+/;\n  return re.test(email);\n}\n\nexport function isPhone(phone: string) {\n  return phone.length == 10 && phone.substring(0, 1) == \"0\";\n}\n\nexport function hasStartEndEmptySpace(value: string) {\n  return value.charAt(0) === \" \" && value.charAt(value.length - 1) === \" \";\n}\n\nexport function validateBirthYear(value: any) {\n  return dayjs().year() - dayjs(value).year() >= 10;\n}\n\nexport function validatePassword(password: string, confirmPassword?: string) {\n  const hasUpperCase = password ? password.toLowerCase() !== password : false;\n  const hasLowerCase = password ? password.toUpperCase() !== password : false;\n  const hasNumber = password ? /\\d/.test(password) : false;\n  const hasSpecialCharacter = password\n    ? /[~`!@#$%\\_^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(password)\n    : false;\n  const hasLeast8 = password ? password.length >= 8 : false;\n  if (confirmPassword) {\n    const passwordMatch =\n      password && confirmPassword ? password === confirmPassword : false;\n    return {\n      hasUpperCase,\n      hasLowerCase,\n      hasNumber,\n      hasSpecialCharacter,\n      hasLeast8,\n      passwordMatch,\n      total:\n        hasUpperCase &&\n        hasLowerCase &&\n        hasNumber &&\n        hasSpecialCharacter &&\n        hasLeast8 &&\n        passwordMatch,\n    };\n  } else {\n    return {\n      hasUpperCase,\n      hasLowerCase,\n      hasNumber,\n      hasSpecialCharacter,\n      hasLeast8,\n      total:\n        hasUpperCase &&\n        hasLowerCase &&\n        hasNumber &&\n        hasSpecialCharacter &&\n        hasLeast8,\n    };\n  }\n}\n\nfunction isDateString(value: string) {\n  const datePattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3}Z)?$/;\n  return datePattern.test(value);\n}\n\nexport function flattenObject(obj: any, prefix: string[] = []) {\n  const flatObj: any = {};\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const isArray = Array.isArray(obj);\n      const newPrefix = isArray\n        ? [...prefix, `[${key}]`]\n        : prefix.length === 0\n        ? [key]\n        : [...prefix, `[\"${key}\"]`];\n\n      if (typeof obj[key] === \"object\" && obj[key] !== null) {\n        Object.assign(flatObj, flattenObject(obj[key], newPrefix));\n      } else {\n        // Convert date strings to dayjs objects\n        const flattenedKey = newPrefix.join(\"\");\n        if (typeof obj[key] === \"string\" && isDateString(obj[key])) {\n          flatObj[flattenedKey] = dayjs(obj[key]);\n        } else {\n          flatObj[flattenedKey] = obj[key];\n        }\n      }\n    }\n  }\n\n  return flatObj;\n}\n\nexport function unflattenObject(flattened: any) {\n  const result: any = {};\n\n  Object.keys(flattened).map((key: string) => {\n    if (flattened.hasOwnProperty(key)) {\n      const keys = key\n        .split(\"[\")\n        .map((k) => k.replace(/[\\]\"]/g, \"\").replace(/^\"/, \"\"));\n      let current = result;\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const subKey = keys[i];\n        if (!isNaN(parseInt(keys[i + 1]))) {\n          current[subKey] = current[subKey] || [];\n        } else {\n          current[subKey] = current[subKey] || {};\n        }\n        current = current[subKey];\n      }\n\n      current[keys[keys.length - 1]] = flattened[key];\n    }\n  });\n\n  return result;\n}\n\nexport function parseAndConvert(jsonObj: any) {\n  const parsedObject: any = {};\n\n  for (let key in jsonObj) {\n    const value = jsonObj[key] as any;\n\n    // If value is an array\n    // if (Array.isArray(value)) {\n    //   parsedObject[key] = value.map((item: any) => {\n    //     if (\n    //       typeof item === \"string\" &&\n    //       !isNaN(parseInt(item)) &&\n    //       !looksLikeDate(item)\n    //     ) {\n    //       return parseFloat(item);\n    //     }\n    //     return item;\n    //   });\n    // }\n\n    // if (Array.isArray(value)) {\n    //   parsedObject[key] = value.map((item: any) => {\n    //     if (\n    //       typeof item === \"string\" &&\n    //       !isNaN(parseInt(item)) &&\n    //       !isDate(item) &&\n    //       !isDateString(item)\n    //     ) {\n    //       return parseFloat(item);\n    //     }\n    //     return item;\n    //   });\n    // }\n    // If value is a string and can be parsed as a number\n    if (\n      typeof value === \"string\" &&\n      !isNaN(parseInt(value)) &&\n      !isDate(value) &&\n      !isDateString(value)\n    ) {\n      parsedObject[key] = parseFloat(value);\n    }\n    // All other cases\n    else {\n      parsedObject[key] = value;\n    }\n  }\n\n  return parsedObject;\n}\n\nexport function joinTournaments(allTournaments: any, joinedTournaments: any) {\n  // Loop through allTournaments\n  allTournaments.forEach((tournament: any) => {\n    // Check if the tournament id exists in joinedTournaments\n    const joinedTournament = joinedTournaments.find(\n      (joined: any) => joined.id === tournament.id\n    );\n    // If a matching tournament is found, change its status to 'joined'\n    if (joinedTournament && tournament.status === \"opening\") {\n      tournament.status = \"joined\";\n    }\n  });\n  // Return the modified allTournaments array\n  return allTournaments;\n}\n\nexport function adjustTranslateValues(\n  rootElement: HTMLElement,\n  originalWidth: number,\n  originalHeight: number,\n  targetWidth: number,\n  targetHeight: number\n) {\n  const processElement = (element: HTMLElement) => {\n    const style = element.style;\n\n    // Check if the element has a transform property\n    if (style.transform) {\n      // Find the translate part of the transform property\n      const translateRegex = /translate\\(([^,]+),\\s*([^)]+)\\)/;\n      const translateMatch = style.transform.match(translateRegex);\n      if (translateMatch) {\n        const translateX = parseFloat(translateMatch[1]);\n        const translateY = parseFloat(translateMatch[2]);\n\n        // Calculate the new translate values\n        const newTranslateX = (translateX / originalWidth) * targetWidth;\n        const newTranslateY = (translateY / originalHeight) * targetHeight; // Assuming Y doesn't change\n\n        // Replace the old translate values with the new ones\n        const newTranslate = `translate(${newTranslateX}px, ${newTranslateY}px)`;\n        style.transform = style.transform.replace(translateRegex, newTranslate);\n      }\n    }\n\n    // Process child elements\n    Array.from(element.children).forEach((child) =>\n      processElement(child as HTMLElement)\n    );\n  };\n\n  // Start processing from the root element\n  processElement(rootElement);\n}\n", "/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Avatar, Badge, Flex, Modal, Space, Typography } from \"antd\";\nimport {\n  CheckCircleFilled,\n  DoubleRightOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport { AuthContext } from \"~/contexts\";\n\nimport { TiltButton } from \"./TiltButton\";\nimport { KycForm } from \"./KycForm\";\nimport { useMatches } from \"@remix-run/react\";\nimport { KycBenefits } from \"./KycBenefits\";\nimport { Link } from \"lucide-react\";\nconst { Text, Title } = Typography;\n\ninterface KycWizardProps {\n  children?: any;\n}\n\nexport const KycWizard: React.FC<KycWizardProps> = (props: KycWizardProps) => {\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { children } = props;\n  const { user } = useContext(AuthContext);\n  const [modal, setModal] = useState<boolean>(false);\n  const [kycFormModal, setKycFormModal] = useState<boolean>(false);\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    modalRender: (modal: any) => modal,\n    styles: {\n      body: { padding: \"20px 30px\", maxWidth: \"100%\", overflow: \"auto\" },\n    },\n  } as any;\n\n  const openModal = () => {\n    setModal(true);\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const openKycModal = () => {\n    setKycFormModal(true);\n  };\n\n  const closeKycModal = () => {\n    setKycFormModal(false);\n  };\n\n  const handleOpenKycModal = () => {\n    setKycFormModal(true);\n    setModal(false);\n  };\n\n  return (\n    <>\n      <Flex vertical align=\"center\" justify=\"center\" gap={10}>\n        <Title level={3} style={{ margin: 0, textAlign: \"center\" }}>\n          {t(\"verify identity\")}\n        </Title>\n        <Text>\n          {children\n            ? children\n            : t(\"start buy sell & anonymous after complete verification\")}\n        </Text>\n        <Space style={{ marginBlock: 15 }} size={20}>\n          <Avatar\n            size={50}\n            src={\n              user.displayImage\n                ? `${cdnUrl}/${user.displayImage}`\n                : \"image/placeholder.png\"\n            }\n          />\n          <DoubleRightOutlined style={{ fontSize: 20 }} />\n          <Badge\n            count={\n              <CheckCircleFilled style={{ fontSize: 24, color: \"#7a6fee\" }} />\n            }\n            offset={[-8, 52]}\n          >\n            <Avatar\n              size={65}\n              src={\n                user.displayImage\n                  ? `${cdnUrl}/${user.displayImage}`\n                  : \"image/placeholder.png\"\n              }\n            />\n          </Badge>\n        </Space>\n        <TiltButton\n          style={{ padding: \"15px 30px\" }}\n          onClick={openKycModal}\n          color=\"primary\"\n        >\n          {t(\"start verification\")}\n        </TiltButton>\n        <Flex\n          justify=\"flex-end\"\n          style={{ width: \"100%\", marginTop: 10, cursor: \"pointer\" }}\n          gap={5}\n          onClick={openModal}\n        >\n          <Text>{t(\"KYC benefits\")}</Text>\n          <Link style={{ color: \"#7a6fee\" }} />\n        </Flex>\n      </Flex>\n      <Modal {...modalProps} onCancel={closeModal} open={modal} width={800}>\n        <KycBenefits onVerifyKyc={handleOpenKycModal} />\n      </Modal>\n      <Modal {...modalProps} onCancel={closeKycModal} open={kycFormModal}>\n        <KycForm />\n      </Modal>\n    </>\n  );\n};\n", "import { theme } from \"antd\";\nconst { useToken } = theme;\n\nexport function Loading() {\n  const { token } = useToken();\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        width: 300,\n        height: 30,\n        backgroundColor: token.colorBgContainer,\n        backgroundImage: \"url('/image/stripe.png')\",\n        backgroundRepeat: \"repeat\",\n        backgroundSize: \"cover\",\n        transform: \"translate(-50%,-50%)\",\n        animation: \"loadingStripe 15s linear infinite\",\n        zIndex: 100,\n      }}\n    />\n  );\n}\n", "import dayjs from \"dayjs\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useLocation } from \"@remix-run/react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Divider,\n  Form,\n  Image,\n  Input,\n  Row,\n  Space,\n  Statistic,\n  theme,\n  Typography,\n} from \"antd\";\nimport { ArrowLeftOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport OTPInput from \"react-otp-input\";\nimport { PassswordMustContain, TiltButton } from \"~/components/common\";\nimport { isEmail, isPhone, validatePassword } from \"~/utils/helper\";\nimport { AppContext } from \"~/contexts\";\nconst { Countdown } = Statistic;\nconst { useToken } = theme;\nconst { Text } = Typography;\n\ninterface LoginFormProps {\n  fetcher: any;\n  loading?: boolean;\n}\n\nexport function LoginForm(props: LoginFormProps) {\n  const otpTime = 180;\n  const { t } = useTranslation();\n  const location = useLocation();\n  const { token } = useToken();\n  const { scheme } = useContext(AppContext);\n  const [form] = Form.useForm();\n  const { fetcher, loading } = props;\n  const [passwordValid, setPasswordValid] = useState<any>(\n    validatePassword(\"\", \"\")\n  );\n  const [step, setStep] = useState<any>({ type: \"credential\" });\n  const [verifyCredential, setVerifyCredential] = useState<string>();\n  const [otp, setOtp] = useState<string>(\"\");\n  const [enableResendOtp, setEnableResendOtp] = useState<boolean>(false);\n  const [otpDeadline, setOtpDeadline] = useState<any>(\n    dayjs().add(otpTime, \"seconds\")\n  );\n  const [isFacebookBrowser, setIsFacebookBrowser] = useState(false);\n  const [isLineBrowser, setIsLineBrowser] = useState(false);\n\n  const handleResendOtp = useCallback(() => {\n    if (enableResendOtp) {\n      fetcher.submit(\n        {\n          credential: form.getFieldValue(\"credential\"),\n          action: \"resend-otp\",\n        },\n        { method: \"post\", action: \"/resources/login-verify\" }\n      );\n      setEnableResendOtp(false);\n      setOtpDeadline(dayjs().add(otpTime, \"seconds\"));\n    }\n  }, [enableResendOtp, form]);\n\n  const handleForgotPassword = () => {\n    fetcher.submit(\n      { email: verifyCredential },\n      { method: \"post\", action: \"/resources/forgot-password\" }\n    );\n  };\n\n  const handleVerifyAccount = useCallback(() => {\n    const credential = form.getFieldValue(\"credential\");\n    setVerifyCredential(credential);\n    // To check if user exist or not\n    if (isEmail(credential) || isPhone(credential)) {\n      fetcher.submit(\n        {\n          credential: form.getFieldValue(\"credential\"),\n        },\n        { method: \"post\", action: \"/resources/login-verify\" }\n      );\n    }\n  }, [form]);\n\n  const handleSubmitOtp = useCallback(() => {\n    if (otp && otp.length == 6 && step && step.refCode) {\n      fetcher.submit(\n        {\n          action: \"verify-otp\",\n          otpNum: otp,\n          refCode: step.refCode,\n          credential: verifyCredential,\n        },\n        { method: \"post\", action: \"/resources/login-verify\" }\n      );\n    }\n  }, [otp, step]);\n\n  const handleSocialLogin = (channel: string) => {\n    fetcher.submit(\n      {\n        channel: channel,\n        currentPath:\n          location.search && location.search.length > 0\n            ? `${location.pathname}${location.search}`\n            : location.pathname,\n      },\n      { method: \"post\", action: \"/resources/login\" }\n    );\n  };\n\n  const handleFormSubmit = (values: any) => {\n    fetcher.submit(\n      {\n        ...values,\n        currentPath:\n          location.search && location.search.length > 0\n            ? `${location.pathname}${location.search}`\n            : location.pathname,\n      },\n      { method: \"post\", action: \"/resources/login\" }\n    );\n  };\n\n  const handleFormChange = (changedValues: any, allValues: any) => {\n    const validator = validatePassword(\n      allValues.password,\n      allValues.confirmPassword\n    );\n    setPasswordValid(validator);\n  };\n\n  useEffect(() => {\n    const userAgent = navigator.userAgent || \"\";\n\n    setIsFacebookBrowser(\n      userAgent.includes(\"FBAN\") || userAgent.includes(\"FBAV\")\n    );\n    setIsLineBrowser(userAgent.includes(\"Line\") || userAgent.includes(\"line\"));\n  }, []);\n\n  useEffect(() => {\n    if (fetcher && fetcher.data) {\n      const { credentialExist, refCode, otpVerified, sendForgotPassword } =\n        fetcher.data;\n      if (credentialExist) {\n        setStep({ type: \"password\", action: \"login\" });\n      } else if (!credentialExist && otpVerified) {\n        setStep({ type: \"password\", action: \"register\" });\n      } else if (refCode) {\n        setStep({ type: \"otp\", refCode });\n        setOtpDeadline(dayjs().add(otpTime, \"seconds\"));\n        setOtp(\"\");\n      } else if (sendForgotPassword) {\n        setStep({ type: \"forgot-password\", action: \"forgot-password\" });\n      }\n    }\n  }, [fetcher]);\n\n  return (\n    <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n      <div style={{ textAlign: \"center\", marginBottom: 20 }}>\n        <Image\n          preview={false}\n          src={`/image/logo-with-text-${scheme}.png`}\n          width={160}\n        />\n      </div>\n      {!step ||\n        (step.type && step.type === \"credential\" && (\n          <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n            <Card\n              style={{\n                backgroundColor: \"#fff\",\n                cursor:\n                  isFacebookBrowser || isLineBrowser ? \"default\" : \"pointer\",\n                opacity: isFacebookBrowser || isLineBrowser ? 0.4 : 1,\n                border: \"1px solid #dfdfdf\",\n              }}\n              bodyStyle={{ padding: 10 }}\n              onClick={() =>\n                !loading && !isFacebookBrowser && !isLineBrowser\n                  ? handleSocialLogin(\"google\")\n                  : undefined\n              }\n            >\n              <Space\n                size={10}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Image preview={false} src=\"/image/google.png\" width={24} />\n                <Text\n                  style={{ color: \"#221f20\", fontSize: 16, fontWeight: 600 }}\n                >\n                  {t(\"login with Google\")}\n                </Text>\n              </Space>\n            </Card>\n            <Card\n              bordered={false}\n              style={{ backgroundColor: \"#5cc43d\", cursor: \"pointer\" }}\n              bodyStyle={{ padding: 10 }}\n              onClick={() => (!loading ? handleSocialLogin(\"line\") : undefined)}\n            >\n              <Space\n                size={10}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Image preview={false} src=\"/image/line.png\" width={24} />\n                <Text style={{ color: \"#fff\", fontSize: 16, fontWeight: 600 }}>\n                  {t(\"login with LINE\")}\n                </Text>\n              </Space>\n            </Card>\n            <Divider plain style={{ marginBlock: 0 }}>\n              {t(\"or\")}\n            </Divider>\n          </Space>\n        ))}\n      <Form\n        form={form}\n        preserve\n        onFinish={handleFormSubmit}\n        onValuesChange={handleFormChange}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n          }\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          key=\"credential\"\n          name=\"credential\"\n          style={step.type !== \"credential\" ? { display: \"none\" } : {}}\n          rules={[\n            () => ({\n              validator(_, value) {\n                if (!value) {\n                  return Promise.resolve();\n                }\n                if (value.length) {\n                  if (!isEmail(value)) {\n                    return Promise.reject(\n                      new Error(`${t(\"please input correct email\")}`)\n                    );\n                  }\n                }\n                return Promise.resolve();\n              },\n            }),\n          ]}\n          label={\n            <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n              {t(\"email\")}\n            </Text>\n          }\n        >\n          <Input disabled={loading} />\n        </Form.Item>\n        {step && step.type === \"credential\" && (\n          <>\n            <TiltButton\n              color=\"primary\"\n              onClick={handleVerifyAccount}\n              style={{ marginTop: 20 }}\n            >\n              {t(\"continue\")}\n            </TiltButton>\n            <div\n              style={{ textAlign: \"center\", marginTop: 20, paddingInline: 20 }}\n            >\n              <Text\n                type=\"secondary\"\n                style={{ fontSize: \"0.8em\", fontWeight: 600 }}\n              >\n                {t(\"By creating an account, I agress to CTRL G\")}\n              </Text>\n              <br />\n              <Text\n                type=\"secondary\"\n                style={{ fontSize: \"0.8em\", fontWeight: 600 }}\n              >\n                <a\n                  href=\"/terms-of-service\"\n                  target=\"_blank\"\n                  style={{ color: \"#7a6fee\" }}\n                >\n                  {t(\"Terms of Service\")}\n                </a>\n                {` ${t(\"and\")} `}\n                <Link to=\"/\" target=\"_blank\" style={{ color: \"#7a6fee\" }}>\n                  {t(\"Privacy Policy\")}\n                </Link>\n              </Text>\n            </div>\n            <div\n              style={{ textAlign: \"center\", marginTop: 10, paddingInline: 20 }}\n            >\n              <Text\n                type=\"secondary\"\n                style={{ fontSize: \"0.8em\", fontWeight: 600, marginTop: 20 }}\n              >\n                {t(\n                  \"By continuing your information will be used to create account on CTRL G and whallet platform\"\n                )}\n              </Text>\n            </div>\n          </>\n        )}\n        {step && step.type === \"otp\" && step.refCode && (\n          <>\n            <Typography.Title level={5}>\n              {t(\"please enter otp\")}\n            </Typography.Title>\n            <OTPInput\n              shouldAutoFocus\n              value={otp}\n              onChange={setOtp}\n              numInputs={6}\n              inputType=\"number\"\n              renderSeparator={<span style={{ width: 10 }} />}\n              renderInput={(props) => {\n                return (\n                  <input\n                    {...props}\n                    disabled={loading}\n                    style={{\n                      width: \"16.66%\",\n                      maxWidth: \"50px\",\n                      height: 60,\n                      color: token.colorTextBase,\n                      backgroundColor: \"transparent\",\n                      fontSize: 20,\n                      textAlign: \"center\",\n                      borderRadius: 12,\n                      border: `1px solid ${token.colorBorder}`,\n                    }}\n                  />\n                );\n              }}\n            />\n            <TiltButton\n              color=\"primary\"\n              onClick={handleSubmitOtp}\n              style={{ marginBottom: 20, marginTop: 30 }}\n            >\n              {t(\"continue\")}\n            </TiltButton>\n            <Row>\n              <Col flex=\"auto\">\n                <Text>{`${t(\"OTP ref\")} : ${step.refCode}`}</Text>\n              </Col>\n              <Col flex=\"none\">\n                {enableResendOtp ? (\n                  <Text\n                    onClick={handleResendOtp}\n                    style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                  >\n                    {t(\"Resend\")}\n                  </Text>\n                ) : (\n                  <Space size={5}>\n                    <Countdown\n                      value={otpDeadline}\n                      onFinish={() => setEnableResendOtp(true)}\n                      format=\"ss\"\n                      valueStyle={{\n                        fontSize: \"14px\",\n                        color: token.colorTextBase,\n                      }}\n                    />\n                    <Text type=\"secondary\">s</Text>\n                  </Space>\n                )}\n              </Col>\n            </Row>\n          </>\n        )}\n\n        {step && step.type === \"password\" && (\n          <>\n            {step.action === \"login\" && (\n              <Space\n                size={5}\n                style={{ cursor: \"pointer\", marginBottom: 20 }}\n                onClick={(e: any) => setStep({ type: \"credential\" })}\n              >\n                <ArrowLeftOutlined />\n                <Text>{t(\"back\")}</Text>\n              </Space>\n            )}\n            <Form.Item\n              name=\"password\"\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"password\")}\n                </Text>\n              }\n              rules={[\n                { required: true, message: `${t(\"please input password\")}` },\n              ]}\n            >\n              <Input\n                type=\"password\"\n                placeholder=\"********\"\n                disabled={loading}\n              />\n            </Form.Item>\n            {step.action === \"register\" && (\n              <>\n                <Form.Item\n                  name=\"confirmPassword\"\n                  label={t(\"confirm password\")}\n                  rules={[\n                    {\n                      required: true,\n                      message: `${t(\"please confirm your password\")}`,\n                    },\n                    ({ getFieldValue }) => ({\n                      validator(_, value) {\n                        if (!value || getFieldValue(\"password\") === value) {\n                          return Promise.resolve();\n                        }\n                        return Promise.reject(\n                          new Error(`${t(\"password doesn't match\")}`)\n                        );\n                      },\n                    }),\n                  ]}\n                >\n                  <Input\n                    type=\"password\"\n                    placeholder=\"********\"\n                    disabled={loading}\n                  />\n                </Form.Item>\n                <PassswordMustContain validator={passwordValid} />\n              </>\n            )}\n            {step.action === \"login\" && (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <Button type=\"text\" onClick={handleForgotPassword}>\n                  <Text style={{ color: \"blue\" }}>{t(\"forgot password?\")}</Text>\n                </Button>\n              </div>\n            )}\n            {loading ? (\n              <TiltButton color=\"secondary\">\n                <LoadingOutlined style={{ fontSize: 24 }} spin />\n              </TiltButton>\n            ) : (\n              <TiltButton\n                color=\"primary\"\n                onClick={() => form.submit()}\n                style={{ marginTop: 15 }}\n              >\n                {step.action === \"register\" ? t(\"register\") : t(\"login\")}\n              </TiltButton>\n            )}\n          </>\n        )}\n\n        {step && step.type === \"forgot-password\" && (\n          <>\n            {step.action === \"forgot-password\" && (\n              <Space\n                size={5}\n                style={{ cursor: \"pointer\", marginBottom: 20 }}\n                onClick={(e: any) => setStep({ type: \"credential\" })}\n              >\n                <ArrowLeftOutlined />\n                <Text>{t(\"back\")}</Text>\n              </Space>\n            )}\n            <Typography.Title level={4} style={{ textAlign: \"center\" }}>\n              {t(\n                \"reset password email has been sent, please return to ctrlg after reset success\"\n              )}\n            </Typography.Title>\n          </>\n        )}\n      </Form>\n      <Space size={10} style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Text>{t(\"powered by\")}</Text>\n        <Image preview={false} src=\"/image/whallet.png\" width={100} />\n      </Space>\n    </Space>\n  );\n}\n", "import { createMedia } from \"@artsy/fresnel\";\n\nconst ExampleAppMedia = createMedia({\n  interactions: {\n    landscape: \"not all and (orientation: landscape)\",\n    portrait: \"not all and (orientation: portrait)\",\n    hover: \"(hover: hover)\",\n    notHover: \"(hover: none)\",\n  },\n  breakpoints: {\n    sm: 0,\n    md: 768,\n    lg: 1024,\n    xl: 1192,\n  },\n});\n\n// Make styles for injection into the header of the page\nexport const mediaStyles = ExampleAppMedia.createMediaStyle();\n\nexport const { Media, MediaContextProvider } = ExampleAppMedia;\n", "import { useCallback, useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Col, Row, Space, Switch, Typography } from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { RightOutlined } from \"@ant-design/icons\";\n\nimport { Link } from \"@remix-run/react\";\nimport {\n  BadgeHelp,\n  Globe,\n  Home,\n  LogOut,\n  MessagesSquare,\n  Moon,\n  Settings,\n  Trophy,\n  User,\n  Users,\n} from \"lucide-react\";\n\nconst { Text } = Typography;\n\nexport const Menus: any = (mode?: \"center\" | \"dropdown\" | \"full\") => {\n  const { changeLanguage, changeScheme, locale, scheme } =\n    useContext(AppContext);\n  const { logout, user } = useContext(AuthContext);\n  const { t } = useTranslation();\n\n  const handleChangeLanguage = useCallback(\n    (e: any) => {\n      e.stopPropagation();\n      changeLanguage(locale === \"th\" ? \"en\" : \"th\");\n    },\n    [locale]\n  );\n\n  const handleChangeScheme = (checked: boolean, e: any) => {\n    e.stopPropagation();\n    changeScheme(checked ? \"dark\" : \"light\");\n  };\n\n  const centerMenus = [\n    {\n      key: \"/\",\n      link: \"/\",\n      // , strokeWidth: 0.4\n      label: <Home style={{ fontSize: 20 }} />,\n      tooltip: t(\"home\"),\n    },\n    {\n      key: \"/webboards\",\n      link: \"/webboards\",\n      // , strokeWidth: 0.4\n      label: <MessagesSquare style={{ fontSize: 20 }} />,\n      tooltip: t(\"webboard\"),\n    },\n    {\n      key: \"/parties\",\n      link: \"/parties\",\n      label: <Users style={{ fontSize: 20 }} />,\n      tooltip: t(\"party matching\"),\n    },\n    {\n      key: \"/tournaments\",\n      link: \"/tournaments\",\n      label: <Trophy style={{ fontSize: 20 }} />,\n      tooltip: t(\"tournaments\"),\n    },\n    {\n      key: \"/campaign\",\n      link: \"/campaign\",\n      label: <BadgeHelp style={{ fontSize: 20 }} />,\n      tooltip: t(\"campaign\"),\n    },\n  ];\n\n  const mobileMenus = [\n    {\n      key: \"/\",\n      link: \"/\",\n      label: (\n        <Link to=\"/\" style={{ color: \"inherit\" }}>\n          <Space direction=\"horizontal\" size={10}>\n            <Home />\n            {t(\"home\")}\n          </Space>\n        </Link>\n      ),\n    },\n    {\n      key: \"/webboards\",\n      link: \"/webboards\",\n      label: (\n        <Link to=\"/webboards\" style={{ color: \"inherit\" }}>\n          <Space direction=\"horizontal\" size={10}>\n            <MessagesSquare />\n            {t(\"webboard\")}\n          </Space>\n        </Link>\n      ),\n    },\n    {\n      key: \"/parties\",\n      link: \"/parties\",\n      label: (\n        <Link to=\"/parties\">\n          <Space direction=\"horizontal\" size={10}>\n            <Users />\n            {t(\"parties\")}\n          </Space>\n        </Link>\n      ),\n    },\n    {\n      key: \"/tournaments\",\n      link: \"/tournaments\",\n      label: (\n        <Link to=\"/tournaments\">\n          <Space direction=\"horizontal\" size={10}>\n            <Trophy />\n            {t(\"tournament\")}\n          </Space>\n        </Link>\n      ),\n    },\n    {\n      key: \"/campaign\",\n      link: \"/campaign\",\n      label: (\n        <Link to=\"/campaign\">\n          <Space direction=\"horizontal\" size={10}>\n            <BadgeHelp />\n            {t(\"campaign\")}\n          </Space>\n        </Link>\n      ),\n    },\n    {\n      key: \"2\",\n      type: \"divider\",\n    },\n  ];\n\n  let dropdownMenus = [];\n  if (user) {\n    dropdownMenus.push({\n      key: `/users/${user?.uuid}`,\n      label: (\n        <Link to={`/users/${user?.userName ? user.userName : user.uuid}`}>\n          <Space direction=\"horizontal\" size={10}>\n            <User />\n            {t(\"profile\")}\n          </Space>\n        </Link>\n      ),\n    });\n    dropdownMenus.push({\n      key: `/settings`,\n      label: (\n        <Link to={`/settings`}>\n          <Space direction=\"horizontal\" size={10}>\n            <Settings />\n            {t(\"settings\")}\n          </Space>\n        </Link>\n      ),\n    });\n  }\n\n  dropdownMenus = dropdownMenus.concat([\n    // {\n    //   key: \"/faqs\",\n    //   label: (\n    //     <Link to=\"/\">\n    //       <Space direction=\"horizontal\" size={10}>\n    //         <QuestionCircleOutlined />\n    //         {t(\"FAQs\")}\n    //       </Space>\n    //     </Link>\n    //   ),\n    // },\n    {\n      key: \"locale\",\n      label: (\n        <Row onClick={handleChangeLanguage}>\n          <Col flex=\"auto\">\n            <Space direction=\"horizontal\" size={10}>\n              <Globe size={19} />\n              {t(\"language\")}\n            </Space>\n          </Col>\n          <Col flex=\"none\">\n            <Space direction=\"horizontal\" size={5}>\n              <span style={{ textTransform: \"uppercase\" }}>{locale}</span>\n              <RightOutlined />\n            </Space>\n          </Col>\n        </Row>\n      ),\n    },\n    {\n      key: \"scheme\",\n      label: (\n        <Row onClick={(e: any) => e.stopPropagation()}>\n          <Col flex=\"auto\">\n            <Space direction=\"horizontal\" size={10}>\n              <Moon />\n              {t(\"darkmode\")}\n            </Space>\n          </Col>\n          <Col flex=\"none\">\n            <Switch\n              size=\"small\"\n              onChange={handleChangeScheme}\n              checked={scheme === \"dark\"}\n            />\n          </Col>\n        </Row>\n      ),\n    },\n  ]);\n\n  if (user) {\n    dropdownMenus.push({\n      key: \"logout\",\n      label: (\n        <Space\n          direction=\"horizontal\"\n          style={{ cursor: \"pointer\" }}\n          size={10}\n          onClick={logout}\n        >\n          <Text type=\"danger\">\n            <LogOut />\n          </Text>\n          <Text type=\"danger\">{t(\"logout\")}</Text>\n        </Space>\n      ),\n    });\n  }\n\n  return { centerMenus, dropdownMenus, mobileMenus };\n};\n", "import { useCallback, useContext } from \"react\";\nimport { scroller } from \"react-scroll\";\nimport { Card, Flex, theme } from \"antd\";\nimport { AppContext } from \"~/contexts\";\nimport { OverlayBg } from \"~/components/common\";\nimport { WebboardEntryAuthor } from \"../pages/Webboard\";\nimport { useSearchParams, useMatches, useNavigate } from \"@remix-run/react\";\n\nconst { useToken } = theme;\n\ninterface QuotedCommentProps {\n  data: any;\n}\n\nexport function QuotedComment(props: QuotedCommentProps) {\n  const { data } = props;\n  const { token } = useToken();\n  const { scheme } = useContext(AppContext);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const handleClickQuotedComment = useCallback(() => {\n    let currentPage: any = searchParams.get(\"page\");\n    currentPage = currentPage ? parseInt(currentPage) : 1;\n    const quotedPage = data.page;\n\n    // this is to prevent the comment that got deleted (unpublished) and no page number to be quoted\n    if (quotedPage === undefined || quotedPage === null) {\n      return;\n    }\n\n    if (currentPage == quotedPage) {\n      scroller.scrollTo(`comment-${data.id}`, {\n        duration: 1000,\n        delay: 100,\n        smooth: true,\n        offset: -80,\n      });\n    } else {\n      navigate(`?page=${quotedPage}#comment-${data.id}`);\n    }\n  }, [data, searchParams]);\n\n  console.log(\"data quote\", data);\n\n  return (\n    <Card\n      style={{\n        position: \"relative\",\n        maxHeight: 400,\n        overflow: \"hidden\",\n        backgroundColor: token.colorBgLayout,\n      }}\n      bordered={false}\n      bodyStyle={{ padding: 20 }}\n    >\n      <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n        <WebboardEntryAuthor\n          anonymous={data.anonymous}\n          // isAdmin={comment.createdBy.roles.includes(\"admin\")}\n          isAdmin={false}\n          createdAt={data.createdAt}\n          updatedAt={data.updatedAt}\n          displayName={data.author && data.author?.displayName}\n          displayImage={data.author && `${cdnUrl}/${data.author?.displayImage}`}\n          assetFrame={`${cdnUrl}/${data.author?.assetFrame}`}\n          userUuid={\n            data.author && data.author?.userName\n              ? data.author.userName\n              : data.author?.uuid\n          }\n          isVerified={data.author?.isDopaVerified}\n          role={data.author?.roles}\n        />\n      </Flex>\n      <div\n        className=\"ctrlg-html\"\n        style={{\n          color: token.colorTextBase,\n          opacity: 0.85,\n          marginTop: 20,\n        }}\n        dangerouslySetInnerHTML={{\n          __html: `${data.content}`,\n        }}\n      />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 200,\n          left: 0,\n          height: 200,\n          width: \"100%\",\n          background:\n            scheme === \"dark\"\n              ? \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1))\"\n              : \"linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1))\",\n        }}\n      />\n      <OverlayBg\n        style={{ backgroundColor: \"transparent\" }}\n        onClick={handleClickQuotedComment}\n      />\n    </Card>\n  );\n}\n", "import { useContext } from \"react\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Card, Col, Divider, Flex, Image, Row, Typography } from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport {\n  WebboardEntryAuthor,\n  WebboardEntryControl,\n  WebboardEntryMeta,\n  WebboardEntryTags,\n  WebboardReaction,\n} from \".\";\nimport { Poll } from \"~/components/common\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text } = Typography;\n\ninterface WebboardEntryProps {\n  data: any;\n  fetcher?: any;\n  reactionOptions?: any[];\n  isMyWebboard?: boolean;\n}\n\nexport function WebboardEntry(props: WebboardEntryProps) {\n  const { data, fetcher, reactionOptions, isMyWebboard } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const isOwner = user && data && data.author && data.authorId === user.id;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n\n  const showThumbail =\n    data.thumbnailImage && data.thumbnailImage.length && !data.poll;\n  const cardStyle = {\n    borderRadius: 12,\n    // boxShadow:\n    //   scheme === \"dark\" ? \"none\" : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n    // border: \"none\",\n  };\n\n  const linkToSingle = (event: any) => {\n    event.stopPropagation();\n    navigate(`/webboards/${data.id}`);\n  };\n\n  console.log(\"data\", data);\n\n  return (\n    <Card style={cardStyle}>\n      <Flex gap={20} vertical>\n        <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n          <WebboardEntryAuthor\n            anonymous={data.anonymous}\n            isAdmin={data.author?.roles.includes(\"forum_admin\")}\n            createdAt={data.createdAt}\n            updatedAt={data.updatedAt}\n            displayName={data.author?.displayName}\n            displayImage={`${cdnUrl}/${data.author?.displayImage}`}\n            assetFrame={`${cdnUrl}/${data.author?.assetFrame}`}\n            userUuid={\n              data.author?.userName ? data.author.userName : data.author?.uuid\n            }\n            isVerified={data.author?.isDopaVerified}\n            role={data.author?.roles}\n          />\n          {!isMyWebboard && (\n            <WebboardEntryControl\n              fetcher={fetcher}\n              id={data.id}\n              isOwner={isOwner}\n              isForumAdmin={isForumAdmin}\n              postType=\"webboard\"\n            />\n          )}\n        </Flex>\n        <Row\n          gutter={[20, 20]}\n          wrap\n          style={{ cursor: \"pointer\" }}\n          onClick={linkToSingle}\n        >\n          {showThumbail && (\n            <Col flex=\"none\" span={24} md={{ span: 8, order: 1 }}>\n              <Image\n                src={`${cdnUrl}/${data.thumbnailImage}`}\n                wrapperStyle={{\n                  borderRadius: 8,\n                  overflow: \"hidden\",\n                }}\n                preview={false}\n              />\n            </Col>\n          )}\n          <Col\n            flex=\"auto\"\n            span={24}\n            md={showThumbail ? { span: 16, order: 0 } : 24}\n          >\n            <Flex vertical gap={20}>\n              <Text style={{ fontSize: \"1.2em\" }}>{data.title}</Text>\n              {data.poll && (\n                <div onClick={(event) => event.stopPropagation()}>\n                  <Poll\n                    data={data.poll}\n                    fetcher={fetcher}\n                    onClick={linkToSingle}\n                    fromIndex={true}\n                    webboardId={data.id}\n                  />\n                </div>\n              )}\n              {data.postTags && data.postTags.length > 0 && (\n                <WebboardEntryTags data={data.postTags} />\n              )}\n              <WebboardEntryMeta\n                rooms={data.postRooms}\n                games={data.postGames}\n              />\n            </Flex>\n          </Col>\n        </Row>\n      </Flex>\n      {!isMyWebboard && (\n        <>\n          <Divider style={{ marginBlock: 20 }} />\n          <WebboardReaction\n            data={data.postReactionCounts}\n            postId={data.id}\n            postType=\"webboard\"\n            fetcher={fetcher}\n            reactionOptions={reactionOptions}\n            userReaction={data.userPostReactions}\n          >\n            {(data.commentCounts || data.commentCounts === 0) && (\n              <Text style={{ cursor: \"pointer\" }} onClick={linkToSingle}>{`${\n                data.commentCounts\n              } ${t(\"comments\")}`}</Text>\n            )}\n          </WebboardReaction>\n        </>\n      )}\n    </Card>\n  );\n}\n", "import { Avatar, Image, Skeleton, Space, Tag, Tooltip, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Media } from \"~/components/common\";\nimport { useEffect, useState } from \"react\";\nconst { Text } = Typography;\n\ninterface WebboardEntryAuthorProps {\n  anonymous?: boolean;\n  userUuid?: string;\n  deletedAt?: string;\n  displayImage?: string;\n  assetFrame?: string;\n  displayName: string;\n  isAdmin?: boolean;\n  createdAt?: string;\n  updatedAt?: string;\n  isVerified: string;\n  role: any[];\n}\n\nexport function WebboardEntryAuthor(props: WebboardEntryAuthorProps) {\n  const {\n    anonymous,\n    deletedAt,\n    displayImage,\n    displayName,\n    isAdmin,\n    createdAt,\n    updatedAt,\n    userUuid,\n    isVerified,\n    role,\n    assetFrame,\n  } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [diff, setDiff] = useState<any>(null);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  let roles = [];\n  if (role) {\n    roles = role.sort((a: any, b: any) => a.id - b.id);\n  }\n\n  const getProperTimeDifference = (date: any) => {\n    if (!date) return null;\n\n    const diffMonths = dayjs().diff(dayjs(date), \"month\");\n    if (diffMonths >= 12) {\n      return { unit: \"year\", value: dayjs().diff(dayjs(date), \"year\") };\n    } else if (diffMonths >= 1) {\n      return { unit: \"month\", value: diffMonths };\n    } else {\n      const diffDays = dayjs().diff(dayjs(date), \"day\");\n      if (diffDays >= 1) {\n        return { unit: \"day\", value: diffDays };\n      } else {\n        const diffHours = dayjs().diff(dayjs(date), \"hour\");\n        if (diffHours >= 1) {\n          return { unit: \"hour\", value: diffHours };\n        } else {\n          const diffMinutes = dayjs().diff(dayjs(date), \"minute\");\n          if (diffMinutes >= 1) {\n            return { unit: \"minute\", value: diffMinutes };\n          } else {\n            const diffSeconds = dayjs().diff(dayjs(date), \"second\");\n            return { unit: \"second\", value: diffSeconds };\n          }\n        }\n      }\n    }\n  };\n\n  const linkToUser = (e: any) => {\n    navigate(`/users/${userUuid}`);\n  };\n\n  useEffect(() => {\n    if (createdAt) {\n      setDiff(getProperTimeDifference(createdAt));\n    }\n  }, [createdAt]);\n\n  return (\n    <Space size={12}>\n      <div\n        style={{\n          padding: \"14.5px\",\n          backgroundImage: `url(${assetFrame})`,\n          // backgroundImage: `url(/image/Space.gif)`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      >\n        <Avatar\n          src={\n            displayImage && !anonymous\n              ? displayImage\n              : \"/image/avatar-anonymous.jpg\"\n          }\n          size={50}\n          onClick={userUuid && !anonymous ? linkToUser : undefined}\n          style={{ cursor: userUuid && !anonymous ? \"pointer\" : \"default\" }}\n        />\n      </div>\n      <Space direction=\"vertical\" size={0}>\n        <Space size={10}>\n          <Text\n            style={{\n              fontWeight: 600,\n              cursor: userUuid && !anonymous ? \"pointer\" : \"default\",\n            }}\n            onClick={userUuid && !anonymous ? linkToUser : undefined}\n          >\n            {anonymous ? t(\"anonymous\") : displayName}\n          </Text>\n          {isAdmin && !anonymous && (\n            <Tag\n              style={{ margin: 0, lineHeight: \"24px\", fontSize: 12 }}\n              color=\"#7063f4\"\n            >\n              {t(\"admin\")}\n            </Tag>\n          )}\n          {!anonymous && (\n            <>\n              {isVerified && roles && roles.length < 1 && (\n                <Tooltip placement=\"top\" arrow={false} title={t(\"verified\")}>\n                  <div>\n                    <Image\n                      width={25}\n                      src=\"/image/verifiedUser.png\"\n                      preview={false}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n              {roles && roles.length > 0 && (\n                <Tooltip placement=\"top\" arrow={false} title={t(roles[0].name)}>\n                  <div>\n                    <Image\n                      width={25}\n                      src={`${cdnUrl}/${roles[0].badgeImage}`}\n                      preview={false}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </>\n          )}\n        </Space>\n        {diff && (\n          <Space wrap={true}>\n            {diff ? (\n              <Text>{`${diff.value} ${t(`${diff.unit}s ago`)}`}</Text>\n            ) : (\n              <Skeleton\n                paragraph={{ width: 50, rows: 1, style: { margin: 0 } }}\n                title={false}\n                active\n              />\n            )}\n            {updatedAt && createdAt && updatedAt !== createdAt && (\n              <Media greaterThan=\"sm\">\n                <Space>\n                  <span>&#183;</span>\n                  <Text style={{ opacity: 0.6 }}>{`${t(\n                    deletedAt ? \"deleted at\" : \"edited at\"\n                  )} ${dayjs(deletedAt ? deletedAt : updatedAt).format(\n                    \"DD/MM/YYYY - HH:mm\"\n                  )}`}</Text>\n                </Space>\n              </Media>\n            )}\n          </Space>\n        )}\n      </Space>\n    </Space>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { Dropdown, Input, Modal, Space, Typography, Select } from \"antd\";\nimport {\n  AlertOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  ExclamationCircleFilled,\n  MoreOutlined,\n} from \"@ant-design/icons\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { Ellipsis, PenLine, Trash2, TriangleAlert } from \"lucide-react\";\n\nconst { Text, Title } = Typography;\n\ninterface WebboardEntryControlProps {\n  fetcher?: any;\n  id: string;\n  ignoreShare?: boolean;\n  isOwner?: boolean;\n  isForumAdmin?: boolean;\n  onEditClicked?: () => void;\n  postType?: \"comment\" | \"webboard\";\n}\n\nexport function WebboardEntryControl(props: WebboardEntryControlProps) {\n  const {\n    fetcher,\n    id,\n    ignoreShare,\n    isOwner,\n    isForumAdmin,\n    onEditClicked,\n    postType,\n  } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { baseUrl } = useContext(AppContext);\n  const [reason, setReason] = useState<string>(\"\");\n  const [modal, contextHolder] = Modal.useModal();\n  const [reportModal, setReportModal] = useState<boolean>(false);\n  const postUrl = `${baseUrl}/webboards/${id}`;\n  const { Option } = Select;\n\n  const openReportModal = () => {\n    setReportModal(true);\n  };\n\n  const closeReportModal = () => {\n    setReportModal(false);\n  };\n\n  const handleEditClicked = () => {\n    if (onEditClicked) {\n      onEditClicked();\n    } else {\n      navigate(`/webboards/${id}/edit`);\n    }\n  };\n\n  const onReasonChanged = (e: any) => {\n    setReason(e.target.value);\n  };\n\n  const [selectedReason, setSelectedReason] = useState<string>(\"\");\n\n  const reasonOptions = [\n    { label: \" Inappropriate Content\", value: \"Inappropriate Content\" },\n    { label: \"Violence\", value: \"Violence\" },\n    { label: \"Harassment\", value: \"Harassment\" },\n    { label: \" False Information\", value: \"False Information\" },\n    { label: \"Spam\", value: \"Spam\" },\n    { label: \"Unauthorized Sales\", value: \"Unauthorized Sales\" },\n    { label: \"Others\", value: \"Others\" },\n  ];\n\n  const onReasonSelected = (value: string) => {\n    if (value !== \"Others\") {\n      setReason(value);\n    } else {\n      setReason(\"\");\n    }\n    setSelectedReason(value);\n  };\n\n  const reasonSelect = (\n    <Select\n      style={{ width: \"100%\" }}\n      onChange={onReasonSelected}\n      value={selectedReason ? selectedReason : undefined}\n      disabled={fetcher.state !== \"idle\"}\n      placeholder={t(\"select reason\")}\n      listHeight={300}\n    >\n      {reasonOptions.map((option) => (\n        <Option key={option.value} value={option.value}>\n          {option.label}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  const submitReport = useCallback(() => {\n    if (reason.length > 0) {\n      fetcher.submit(\n        { reason, id, type: postType },\n        {\n          method: \"post\",\n          action: `/resources/report-post`,\n        }\n      );\n    }\n  }, [fetcher, postType, reason]);\n\n  const deletePost = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete this post`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id, type: postType },\n          {\n            method: \"delete\",\n            action: `/resources/delete-post`,\n          }\n        );\n      },\n    });\n  }, [fetcher, id, postType]);\n\n  const menus = [\n    {\n      label: (\n        <Space size={10} style={{ color: \"#f5222d\" }}>\n          <TriangleAlert />\n          {t(\"report\")}\n        </Space>\n      ),\n      onClick: openReportModal,\n    },\n  ] as any[];\n  if (isOwner || isForumAdmin) {\n    menus.push({\n      label: (\n        <Space size={10}>\n          <Trash2 />\n          {t(\"delete\")}\n        </Space>\n      ),\n      onClick: deletePost,\n    });\n  }\n  useEffect(() => {\n    setReason(\"\");\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success === `report-${postType ? postType : \"webboard\"}` &&\n      fetcher.state === \"idle\"\n    ) {\n      setReason(\"\");\n      setReportModal(false);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType]);\n\n  return (\n    <>\n      <Space size={15}>\n        <Dropdown\n          arrow={false}\n          menu={{ items: menus }}\n          placement=\"bottomRight\"\n          trigger={[\"click\"]}\n        >\n          <Text style={{ fontSize: 18, cursor: \"pointer\" }}>\n            <Ellipsis />\n          </Text>\n        </Dropdown>\n        {!ignoreShare && <ShareDropDown postUrl={postUrl} />}\n        {isOwner && (\n          <Text\n            style={{ fontSize: 18, cursor: \"pointer\" }}\n            onClick={handleEditClicked}\n          >\n            <PenLine />\n          </Text>\n        )}\n      </Space>\n      <Modal\n        closeIcon={false}\n        footer={null}\n        open={reportModal}\n        onCancel={closeReportModal}\n      >\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          <Title level={4} style={{ margin: 0 }}>\n            {t(\"please input reason to report\")}\n          </Title>\n          {reasonSelect}\n          {selectedReason === \"Others\" && (\n            <Input.TextArea\n              rows={4}\n              onChange={onReasonChanged}\n              value={reason}\n              disabled={fetcher.state !== \"idle\"}\n            />\n          )}\n          <TiltButton\n            color=\"danger\"\n            onClick={submitReport}\n            disabled={!reason.length || fetcher.state !== \"idle\"}\n          >\n            {t(\"report\")}\n          </TiltButton>\n        </Space>\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import { Avatar, Dropdown, notification, Space, Typography } from \"antd\";\nimport { CopyOutlined, ShareAltOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { TiltButton } from \"./TiltButton\";\nimport { RiShareForwardLine } from \"react-icons/ri\";\nimport { Share } from \"lucide-react\";\n\nconst { Text } = Typography;\n\ninterface ShareDropDownProps {\n  copiedMessage?: string;\n  postUrl: string;\n  dropDownPlacement?: \"bottomLeft\" | \"bottomRight\" | \"topLeft\" | \"topRight\";\n  shareProfile?: boolean;\n}\n\nexport function ShareDropDown(props: ShareDropDownProps) {\n  const { copiedMessage, dropDownPlacement, postUrl, shareProfile } = props;\n  const { t } = useTranslation();\n  const [messageApi, contextHolder] = notification.useNotification();\n\n  const sharedMenus = [\n    {\n      label: (\n        <Space size={5}>\n          <Avatar icon={<CopyOutlined />} size={20} />\n          Copy URL\n        </Space>\n      ),\n      onClick: () => {\n        navigator.clipboard.writeText(postUrl);\n        messageApi.open({\n          type: \"success\",\n          message: copiedMessage ? copiedMessage : t(\"post url copied\"),\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      },\n    },\n    {\n      label: (\n        <a\n          href={`https://www.facebook.com/sharer/sharer.php?u=${postUrl}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <Space size={5}>\n            <Avatar src=\"/image/social/facebook.png\" size={20} />\n            Facebook\n          </Space>\n        </a>\n      ),\n    },\n    {\n      label: (\n        <a\n          href={`http://twitter.com/share?url=${postUrl}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <Space size={5}>\n            <Avatar src=\"/image/social/x.png\" size={20} />X\n          </Space>\n        </a>\n      ),\n    },\n  ] as any[];\n\n  return (\n    <>\n      <Dropdown\n        arrow={false}\n        menu={{ items: sharedMenus }}\n        placement={dropDownPlacement ? dropDownPlacement : \"bottomRight\"}\n        trigger={[\"click\"]}\n      >\n        {shareProfile ? (\n          <TiltButton color=\"secondary-brand\" style={{ paddingInline: 15 }}>\n            <Space size={5} style={{ strokeWidth: 2, fontSize: \"1.2em\" }}>\n              <Share />\n            </Space>\n          </TiltButton>\n        ) : (\n          <Text style={{ fontSize: 18, cursor: \"pointer\" }}>\n            <Share />\n          </Text>\n        )}\n      </Dropdown>\n      {contextHolder}\n    </>\n  );\n}\n", "import { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Avatar, Space, theme, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { TiltButton } from \"~/components/common\";\nconst { Text } = Typography;\nconst { useToken } = theme;\n\ninterface WebboardEntryMetaProps {\n  rooms: any[];\n  games: any[];\n}\n\nexport function WebboardEntryMeta(props: WebboardEntryMetaProps) {\n  const { games, rooms } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { token } = useToken();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const navigateToGame = (gameId: string | number) => {\n    navigate(`/webboards?games=${gameId}`);\n  };\n\n  const navigateToRoom = (roomId: string | number) => {\n    navigate(`/webboards?rooms=${roomId}`);\n  };\n\n  return (\n    <Space wrap size={[6, 4]} style={{ lineHeight: 1 }}>\n      {games.map(\n        (game: any) =>\n          game.game?.id && (\n            <Avatar\n              key={`game-${game.game.id}`}\n              style={{ cursor: \"pointer\" }}\n              src={`${cdnUrl}/${game.game.iconUrl}`}\n              size={36}\n              onClick={() => navigateToGame(game.game.id)}\n            />\n          )\n      )}\n      {rooms.map((room: any) =>\n        room.room?.id && room.room?.name ? (\n          <TiltButton\n            key={`room-${room.room.id}`}\n            color=\"transparent\"\n            onClick={() => navigateToRoom(room.room.id)}\n            style={{\n              padding: \"5px 10px\",\n              height: \"auto\",\n              borderColor: token.colorBorder,\n              fontStyle: \"italic\",\n              fontWeight: 400,\n            }}\n          >\n            <Text>{t(room.room.nameEn)}</Text>\n          </TiltButton>\n        ) : null\n      )}\n    </Space>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport { Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text } = Typography;\n\ninterface WebboardEntryTagsProps {\n  data: any[];\n}\n\nexport function WebboardEntryTags(props: WebboardEntryTagsProps) {\n  const { data } = props;\n  const { t } = useTranslation();\n\n  return (\n    <Space wrap size={[10, 4]} style={{ lineHeight: 1 }}>\n      {data\n        .sort((a: any, b: any) => {\n          if (a.id > b.id) return -1;\n          if (a.id < b.id) return 1;\n          return 0;\n        })\n        .map((postTag: any) => (\n          <Link key={postTag.tag.name} to={`/tags/${postTag.tag.id}`}>\n            <Text style={{ color: \"#7a6fee\" }}>\n              {t(`#${postTag.tag.name}`)}\n            </Text>\n          </Link>\n        ))}\n    </Space>\n  );\n}\n", "import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Button,\n  Card,\n  Col,\n  Flex,\n  Form,\n  Input,\n  Modal,\n  Result,\n  Row,\n  Select,\n  Space,\n  Switch,\n  Typography,\n  Image,\n  Tooltip,\n  notification,\n} from \"antd\";\nimport {\n  DeleteOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n  EditOutlined,\n  QuestionCircleOutlined,\n} from \"@ant-design/icons\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport {\n  BackButton,\n  FileUploader,\n  InlineAvatar,\n  KycWizard,\n  TextEditor,\n  TiltButton,\n  TiltCheck,\n} from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\n\ninterface WebboardFormProps {\n  editmode?: boolean;\n  fetcher: any;\n  form: any;\n  games: any[];\n  loading?: boolean;\n  rooms: any[];\n  tags?: any[];\n  allTags?: any[];\n  tournament?: any;\n  onKycClicked?: () => void;\n  navigationState?: string;\n}\n\nexport function WebboardForm(props: WebboardFormProps) {\n  const {\n    editmode,\n    fetcher,\n    form,\n    games,\n    loading,\n    rooms,\n    tags,\n    allTags,\n    tournament,\n    navigationState,\n  } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [hasPoll, setHasPoll] = useState<boolean>(\n    form.getFieldValue(\"hasPoll\") ? form.getFieldValue(\"hasPoll\") : false\n  );\n  const [textEditorLoading, setTextEditorLoading] = useState<boolean>(true);\n  const [kycWizardModal, setKycWizardModal] = useState<boolean>(false);\n  const allTagOptions = allTags\n    ? allTags.map((tag: any) => ({ label: tag.name, value: tag.name }))\n    : [];\n  const tagOptions = tags\n    ? tags.map((tag: any) => ({ label: tag.name, value: tag.name }))\n    : [];\n  const cardStyle = {\n    borderRadius: 10,\n    overflow: \"hidden\",\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  const [searchedOptions, setSearchedOptions] = useState(tagOptions);\n\n  // Update options based on user input\n  const handleSearch = (inputValue: string) => {\n    if (inputValue) {\n      // If there is input, switch to allTagOptions for searching\n      setSearchedOptions(allTagOptions);\n    } else {\n      // If input is empty, revert to tagOptions\n      setSearchedOptions(tagOptions);\n    }\n  };\n\n  const roomWihtoutTournament = rooms.filter(\n    (item) => item.nameEn !== \"tournament\"\n  );\n  const roomWithOutBuySell = roomWihtoutTournament.filter(\n    (item) => item.nameEn !== \"buy sell\"\n  );\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const openKycWizardModal = () => {\n    setKycWizardModal(true);\n  };\n\n  const closeKycWizardModal = () => {\n    setKycWizardModal(false);\n  };\n\n  const handlePollChanged = (checked: boolean, e: any) => {\n    setHasPoll(checked);\n  };\n\n  const handleMultipleSelect = useCallback(\n    (field: string, values: any) => {\n      form.setFieldValue(field, values);\n    },\n    [form]\n  );\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"thumbnailImage\") {\n        form.setFieldValue(\"thumbnailImage\", fetcher.data.key);\n      }\n      setUploading(false);\n    }\n  }, [form, fetcher.data]);\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <Card bordered={false} style={cardStyle} bodyStyle={{ padding: 30 }}>\n      <BackButton />\n      <Row gutter={[60, 40]}>\n        <Col flex=\"none\">\n          <InlineAvatar\n            avatarUrl={\n              user && user.displayImage\n                ? `${cdnUrl}/${user.displayImage}`\n                : \"image/placeholder.png\"\n            }\n            title={user && user.displayName ? user.displayName : \"\"}\n          />\n        </Col>\n        <Col flex=\"auto\">\n          <Form.Item\n            key=\"title\"\n            name=\"title\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input title\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"title\")}\n              </Text>\n            }\n          >\n            <Input maxLength={200} />\n          </Form.Item>\n          {!tournament && (\n            <Form.Item\n              key=\"roomIds\"\n              name=\"roomIds\"\n              rules={[\n                {\n                  required: true,\n                  message: t(\"please input room\"),\n                },\n              ]}\n              label={\n                <Space size={10}>\n                  <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                    {t(\"rooms\")}\n                  </Text>\n                  {!user.isDopaVerified && (\n                    <Tooltip\n                      placement=\"top\"\n                      arrow={false}\n                      title={t(\n                        'KYC to access \"buy sell\" and \"tournament\" rooms'\n                      )}\n                    >\n                      <QuestionCircleOutlined\n                        onClick={openKycWizardModal}\n                        style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                      />\n                    </Tooltip>\n                  )}\n                </Space>\n              }\n            >\n              <TiltCheck\n                fieldName=\"roomIds\"\n                labelKey=\"name\"\n                labelValue=\"id\"\n                multiple\n                options={\n                  user.isDopaVerified\n                    ? roomWihtoutTournament\n                    : roomWithOutBuySell\n                }\n                // onSelect={handleMultipleSelect}\n                onSelect={handleMultipleSelect}\n                initialValues={form.getFieldValue(\"roomIds\")}\n              />\n            </Form.Item>\n          )}\n          {!tournament && (\n            <Form.Item\n              key=\"gameIds\"\n              name=\"gameIds\"\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"games\")}\n                </Text>\n              }\n            >\n              <TiltCheck\n                fieldName=\"gameIds\"\n                labelKey=\"name\"\n                labelValue=\"id\"\n                multiple\n                options={games}\n                onSelect={handleMultipleSelect}\n                initialValues={form.getFieldValue(\"gameIds\")}\n              />\n            </Form.Item>\n          )}\n          <Form.Item\n            key=\"tags\"\n            name=\"tags\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"tags\")}\n              </Text>\n            }\n          >\n            <Select\n              mode=\"tags\"\n              style={{ width: \"100%\" }}\n              placeholder={t(\"input tags\")}\n              options={searchedOptions}\n              onSearch={handleSearch} // Handle search input change\n              onChange={(tags: string[]) => {\n                const processedTags = tags.map((tag: string) =>\n                  tag.replace(/^#+/, \"\")\n                );\n                form.setFieldsValue({ tags: processedTags });\n              }}\n            />\n          </Form.Item>\n          <Space\n            direction=\"vertical\"\n            size={5}\n            style={{ display: \"flex\", marginBottom: 20, marginTop: 20 }}\n          >\n            <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n              <Col flex=\"auto\">\n                <Text style={{ fontWeight: 600 }}>\n                  {t(\"please upload post thumbnail\")} ({t(\"recommended ratio\")}{\" \"}\n                  4:5)\n                </Text>\n              </Col>\n              <Col flex=\"none\">\n                <Form.Item\n                  key=\"thumbnailImage\"\n                  name=\"thumbnailImage\"\n                  // rules={[\n                  //   {\n                  //     required: true,\n                  //     message: `${t(\"please upload thumnail image\")} ${t(\n                  //       \"recommended ratio\"\n                  //     )} 2:1`,\n                  //   },\n                  // ]}\n                >\n                  <FileUploader\n                    fetcher={fetcher}\n                    fieldName={\"thumbnailImage\"}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                  >\n                    <Space size={5} style={{ cursor: \"pointer\" }}>\n                      <EditOutlined style={{ color: \"#8263ea\" }} />\n                      <Text>{t(\"upload\")}</Text>\n                    </Space>\n                  </FileUploader>\n                </Form.Item>\n              </Col>\n            </Row>\n            {uploading ? (\n              <Result\n                icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n              />\n            ) : form && form.getFieldValue(\"thumbnailImage\") ? (\n              <Image\n                preview={false}\n                style={{ maxWidth: 400 }}\n                src={`${cdnUrl}/${form.getFieldValue(\"thumbnailImage\")}`}\n              />\n            ) : (\n              <></>\n            )}\n          </Space>\n          {!textEditorLoading ? (\n            <Form.Item\n              key=\"content\"\n              name=\"content\"\n              rules={[\n                {\n                  required: true,\n                  message: t(\"please input content\"),\n                },\n              ]}\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"content\")}\n                </Text>\n              }\n            >\n              <TextEditor\n                id=\"post-content\"\n                initialValues={form.getFieldValue(\"content\")}\n                fetcher={fetcher}\n                onChange={(values: any) =>\n                  form.setFieldValue(\"content\", values)\n                }\n              />\n            </Form.Item>\n          ) : (\n            <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n          )}\n          {!editmode && (\n            <>\n              <Space size={10} style={{ marginTop: 20 }}>\n                <Form.Item\n                  key=\"hasPoll\"\n                  name=\"hasPoll\"\n                  valuePropName=\"checked\"\n                  label={\n                    <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                      {t(\"create poll\")}\n                    </Text>\n                  }\n                >\n                  <Switch onChange={handlePollChanged} />\n                </Form.Item>\n              </Space>\n              {hasPoll && (\n                <Flex vertical gap={20} style={{ marginTop: 30 }}>\n                  <Title level={5} style={{ margin: 0 }}>\n                    {t(\"poll options\")}\n                  </Title>\n                  <Form.List\n                    name=\"pollOptions\"\n                    initialValue={[\"\", \"\"]}\n                    rules={[\n                      {\n                        validator: async (_, names) => {\n                          if (!names || names.length < 2) {\n                            return Promise.reject(\n                              new Error(t(\"at least 2 options\"))\n                            );\n                          }\n                          if (names.length > 10) {\n                            return Promise.reject(\n                              new Error(t(\"maximum 10 options\"))\n                            );\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    {(fields, { add, remove }, { errors }) => (\n                      <>\n                        <Flex gap={10} vertical>\n                          {fields.map((field, index) => (\n                            <Form.Item key={field.key} noStyle>\n                              <Row\n                                gutter={[10, 10]}\n                                wrap={false}\n                                style={{ alignItems: \"center\" }}\n                              >\n                                <Col flex=\"auto\">\n                                  <Form.Item\n                                    {...field}\n                                    noStyle\n                                    rules={[\n                                      {\n                                        required: true,\n                                        whitespace: true,\n                                        message: t(\n                                          \"Please input option or delete this field.\"\n                                        ),\n                                      },\n                                    ]}\n                                  >\n                                    <Input\n                                      placeholder=\"option\"\n                                      style={{ width: \"100%\" }}\n                                    />\n                                  </Form.Item>\n                                </Col>\n                                <Col flex=\"none\">\n                                  <Button\n                                    danger\n                                    icon={<DeleteOutlined />}\n                                    onClick={() => remove(field.name)}\n                                  />\n                                </Col>\n                              </Row>\n                            </Form.Item>\n                          ))}\n                        </Flex>\n                        <Form.ErrorList errors={errors} />\n                        <Space>\n                          <TiltButton color=\"secondary\" onClick={() => add()}>\n                            <PlusOutlined style={{ fontSize: \"1.2em\" }} />\n                          </TiltButton>\n                        </Space>\n                      </>\n                    )}\n                  </Form.List>\n                </Flex>\n              )}\n            </>\n          )}\n          {contextHolder}\n          <Flex justify=\"space-between\" style={{ marginTop: 40 }}>\n            <TiltButton\n              disabled={loading || navigationState !== \"idle\"}\n              color=\"primary\"\n              onClick={!loading ? () => form.submit() : undefined}\n            >\n              {loading ? (\n                <LoadingOutlined style={{ fontSize: 24 }} spin />\n              ) : editmode ? (\n                t(\"edit post\")\n              ) : (\n                t(\"create post\")\n              )}\n            </TiltButton>\n            {!editmode && (\n              <Space size={10}>\n                <Text>{t(\"anonymous\")}</Text>\n                <Form.Item\n                  key=\"anonymous\"\n                  name=\"anonymous\"\n                  valuePropName=\"checked\"\n                  noStyle\n                >\n                  <Switch\n                    // onClick={user.isDopaVerified ? undefined : onKycClicked}\n                    disabled={user.isDopaVerified ? false : true}\n                  />\n                </Form.Item>\n                {!user.isDopaVerified && (\n                  <Tooltip\n                    placement=\"top\"\n                    arrow={false}\n                    title={t('KYC to access \"anonymouse\" and \"buy sell\" rooms')}\n                  >\n                    <QuestionCircleOutlined\n                      onClick={openKycWizardModal}\n                      style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                    />\n                  </Tooltip>\n                )}\n              </Space>\n            )}\n          </Flex>\n        </Col>\n      </Row>\n      {!user.isDopaVerified && (\n        <Modal\n          open={kycWizardModal}\n          closable={false}\n          footer={false}\n          onCancel={closeKycWizardModal}\n        >\n          <KycWizard />\n        </Modal>\n      )}\n    </Card>\n  );\n}\n", "import { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  Card,\n  Col,\n  Divider,\n  Input,\n  Result,\n  Row,\n  Select,\n  Space,\n  Typography,\n} from \"antd\";\nimport {\n  CloseOutlined,\n  InboxOutlined,\n  LoadingOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport { AppContext } from \"~/contexts\";\nimport { Link } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { debounce, isEmpty, isNil, omitBy } from \"lodash\";\nimport { Search } from \"lucide-react\";\n\nconst { Text } = Typography;\n\ninterface WebboardIndexHeaderProps {\n  children: any;\n  fetcher: any;\n  searchParams: any;\n  submit: any;\n}\n\nexport function WebboardIndexHeader(props: WebboardIndexHeaderProps) {\n  const { children, fetcher, searchParams, submit } = props;\n  const [openSearch, setOpenSearch] = useState<boolean>(false);\n  const [tagOptions, setTagOptions] = useState<any>(null);\n  const { scheme } = useContext(AppContext);\n  const { t } = useTranslation();\n\n  const searchCardStyle = {\n    height: 54,\n    marginTop: 10,\n    borderRadius: 0,\n    boxShadow: \"none\",\n    overflow: \"visible\",\n    zIndex: 1,\n  };\n  const searchCardBodyStyle = {\n    padding: 5,\n    backgroundColor: \"inherit\",\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n\n    overflow: \"hidden\",\n  };\n\n  const handleOpenSearch = () => {\n    setOpenSearch(true);\n  };\n\n  const handleCloseSearch = () => {\n    setOpenSearch(false);\n    setTagOptions(null);\n  };\n\n  const handleSearch = useCallback(\n    (e: any) => {\n      const searchString = e.target.value;\n      let newSearchParams = { ...searchParams };\n      if (searchString.length > 0) {\n        if (searchString.indexOf(\"#\") > -1) {\n          if (searchString.length > 0) {\n            fetcher.submit(\n              { name: searchString },\n              { method: \"post\", action: \"/resources/tags\" }\n            );\n          }\n          if (newSearchParams.q) {\n            delete newSearchParams[\"q\"];\n            submit(\n              omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n              { method: \"get\", preventScrollReset: true }\n            );\n          }\n        } else {\n          setTagOptions(null);\n          newSearchParams.q = searchString;\n          submit(\n            omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n            { method: \"get\", preventScrollReset: true }\n          );\n        }\n      } else {\n        setTagOptions(null);\n        delete newSearchParams[\"q\"];\n        submit(\n          omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n          { method: \"get\", preventScrollReset: true }\n        );\n      }\n    },\n    [fetcher, searchParams, submit]\n  );\n\n  const handleSortChanged = useCallback(\n    (order: string) => {\n      let newSearchParams = { ...searchParams };\n      if (order.length > 0) {\n        newSearchParams.orderBy = order;\n      } else {\n        delete newSearchParams[\"orderBy\"];\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  const handleDebounceSearch = useMemo(\n    () => debounce(handleSearch, 500),\n    [handleSearch]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      fetcher.data.tags\n    ) {\n      setTagOptions(fetcher.data.tags);\n    }\n  }, [fetcher]);\n\n  return (\n    <>\n      <Row gutter={[15, 15]} wrap style={{ alignItems: \"center\" }}>\n        <Col flex=\"auto\">\n          <Space>{children}</Space>\n        </Col>\n        <Col flex=\"none\">\n          <Space size={20}>\n            <Text>\n              {openSearch ? (\n                <CloseOutlined\n                  style={{ fontSize: 20 }}\n                  onClick={handleCloseSearch}\n                />\n              ) : (\n                <Search style={{ fontSize: 20 }} onClick={handleOpenSearch} />\n              )}\n            </Text>\n            <Select\n              defaultValue={\n                searchParams && searchParams.orderBy ? searchParams.orderBy : \"\"\n              }\n              style={{ minWidth: 185 }}\n              onSelect={handleSortChanged}\n              options={[\n                { label: t(\"last update\"), value: \"\" },\n                { label: t(\"lastest post\"), value: \"post\" },\n                { label: t(\"most comments\"), value: \"comments\" },\n                { label: t(\"most reactions\"), value: \"reactions\" },\n              ]}\n            />\n          </Space>\n        </Col>\n      </Row>\n      {openSearch && (\n        <Card\n          bordered={false}\n          bodyStyle={searchCardBodyStyle}\n          style={searchCardStyle}\n        >\n          <Input\n            autoFocus\n            bordered={false}\n            prefix={\n              <Search\n                className=\"site-form-item-icon\"\n                style={{ fontSize: 20, paddingRight: 10 }}\n              />\n            }\n            defaultValue={searchParams && searchParams.q ? searchParams.q : \"\"}\n            onChange={handleDebounceSearch}\n          />\n          {tagOptions !== null && (\n            <div>\n              <Divider style={{ marginTop: 10, marginBottom: 0 }} />\n              <Space\n                direction=\"vertical\"\n                style={{ display: \"flex\", maxHeight: 400, overflow: \"auto\" }}\n                size={0}\n              >\n                {fetcher && fetcher.state === \"loading\" ? (\n                  <LoadingOutlined style={{ fontSize: 20 }} spin />\n                ) : tagOptions.length > 0 ? (\n                  tagOptions.map((tag: any) => (\n                    <Link\n                      className={`suggested-options ${scheme}`}\n                      key={tag.name}\n                      to={`/tags/${tag.id}`}\n                      style={{\n                        display: \"flex\",\n                        padding: 10,\n                        borderRadius: 6,\n                      }}\n                    >\n                      <Text>{`#${tag.name}`}</Text>\n                    </Link>\n                  ))\n                ) : (\n                  <Result\n                    icon={<InboxOutlined />}\n                    title={t(\"no participant\")}\n                  />\n                )}\n              </Space>\n            </div>\n          )}\n        </Card>\n      )}\n    </>\n  );\n}\n", "import { Link, useMatches } from \"@remix-run/react\";\nimport { Card, Col, Row, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { Author, OverlayBg } from \"~/components/common\";\nconst { Title } = Typography;\n\ninterface WebboardIndexSliderProps {\n  data: any[];\n}\n\nexport function WebboardIndexSlider(props: WebboardIndexSliderProps) {\n  const { data } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n\n  return (\n    <Row\n      className=\"hide-scrollbar\"\n      style={{\n        position: \"relative\",\n        paddingBlock: 20,\n        paddingInline: \"3.5%\",\n        overflowX: \"auto\",\n      }}\n      gutter={10}\n      wrap={false}\n    >\n      {data.map((webboard: any) => (\n        <Col\n          span={12}\n          md={8}\n          lg={6}\n          xl={4}\n          xxl={4}\n          key={webboard.id}\n          style={{ position: \"relative\" }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n              paddingBottom: \"120%\",\n            }}\n          >\n            <Link to={`/webboards/${webboard.id}`}>\n              <Card\n                bordered={false}\n                style={{\n                  position: \"absolute\",\n                  display: \"flex\",\n                  top: 0,\n                  left: 0,\n                  height: \"100%\",\n                  width: \"100%\",\n                  borderRadius: 12,\n                  backgroundImage: `url(${\n                    webboard.thumbnailImage\n                      ? `${cdnUrl}/${webboard.thumbnailImage}`\n                      : \"/image/CTRLG-logo-banner.jpg\"\n                  })`,\n                  overflow: \"hidden\",\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center\",\n                }}\n                bodyStyle={{\n                  display: \"flex\",\n                  flex: \"auto\",\n                  paddingBottom: 20,\n                  alignItems: \"end\",\n                }}\n              >\n                <OverlayBg />\n                <Space\n                  direction=\"vertical\"\n                  size={10}\n                  style={{ position: \"relative\", color: \"#fff\" }}\n                >\n                  <Title\n                    level={3}\n                    className=\"text-with-ellipsis\"\n                    style={{ color: \"inherit\", margin: 0 }}\n                  >\n                    {webboard.title}\n                  </Title>\n                  <Author\n                    avatarSize={24}\n                    fontSize={14}\n                    displayImage={\n                      webboard.anonymous\n                        ? \"/image/avatar-anonymous.jpg\"\n                        : `${cdnUrl}/${webboard.author.displayImage}`\n                    }\n                  >\n                    {webboard.anonymous\n                      ? t(\"anonymous\")\n                      : webboard.author.displayName}\n                  </Author>\n                </Space>\n              </Card>\n            </Link>\n          </div>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n", "import { Card, Flex, Result } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { WebboardEntry } from \"./WebboardEntry\";\n\ninterface WebboardListsProps {\n  data: any[];\n  fetcher?: any;\n  reactionOptions?: any[];\n  isMyWebboard?: boolean;\n}\n\nexport function WebboardLists(props: WebboardListsProps) {\n  const { data, fetcher, reactionOptions, isMyWebboard } = props;\n  const { t } = useTranslation();\n\n  if (data.length > 0) {\n    return (\n      <Flex vertical gap={16}>\n        {data.map((item: any) => (\n          <WebboardEntry\n            fetcher={fetcher}\n            key={item.id}\n            data={item}\n            reactionOptions={reactionOptions}\n            isMyWebboard={isMyWebboard}\n          />\n        ))}\n      </Flex>\n    );\n  } else {\n    return (\n      <Card style={{ borderRadius: 10 }}>\n        <Result icon={<InboxOutlined />} title={t(\"no webboard\")} />\n      </Card>\n    );\n  }\n}\n", "import {\n  useCallback,\n  type ReactNode,\n  useEffect,\n  useState,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { debounce } from \"lodash\";\nimport { Avatar, Dropdown, Flex, Space, Tooltip, Typography } from \"antd\";\nimport { PlusOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport { ReactionsBox, TiltButton } from \"~/components/common\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { useMatches } from \"@remix-run/react\";\n\nconst { Text } = Typography;\n\ninterface WebboardReactionProps {\n  postId: string | number;\n  postType?: \"webboard\" | \"comment\";\n  data: any[];\n  children?: ReactNode;\n  fetcher?: any;\n  reactionOptions?: any[];\n  userReaction?: any[];\n}\n\nexport function WebboardReaction(props: WebboardReactionProps) {\n  const {\n    data,\n    children,\n    fetcher,\n    postId,\n    postType,\n    reactionOptions,\n    userReaction,\n  } = props;\n  const [currentReactions, setCurrentReactions] = useState<any[]>(\n    data\n      ? data.sort((a: any, b: any) => {\n          if (a.count > b.count) return -1;\n          if (a.count < b.count) return 1;\n          return 0;\n        })\n      : []\n  );\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [dropOpen, setDropOpen] = useState<boolean>(false);\n  const disabled = !user;\n\n  const hasMatchingReaction = useCallback(\n    (reactionId: number) => {\n      return userReaction?.some(\n        (reactionObj: any) => reactionObj.reactionId === reactionId\n      );\n    },\n    [userReaction]\n  );\n\n  const selectReaction = useCallback(\n    (reactionId: string | number) => {\n      fetcher.submit(\n        { id: postId, reactionId: reactionId, type: postType },\n        {\n          method: \"post\",\n          action: `/resources/reaction-post`,\n        }\n      );\n      setDropOpen(false);\n    },\n    [postId, postType]\n  );\n\n  const handleDebounceSelectReaction = useMemo(\n    () => debounce(selectReaction, 500),\n    [selectReaction]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      fetcher.data.success &&\n      fetcher.data.success === `reaction-${postType ? postType : \"webboard\"}` &&\n      fetcher.data.postType &&\n      fetcher.data.postType === postType &&\n      fetcher.data.postId &&\n      `${fetcher.data.postId}` === `${postId}` &&\n      fetcher.data.reactions\n    ) {\n      setCurrentReactions([\n        ...fetcher.data.reactions.sort((a: any, b: any) => {\n          if (a.count > b.count) return -1;\n          if (a.count < b.count) return 1;\n          return 0;\n        }),\n      ]);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType, postId]);\n\n  const filteredReactions = currentReactions.filter((cr: any) => cr.count > 0);\n\n  return (\n    <Flex gap={20} justify=\"space-between\" align=\"center\" wrap=\"wrap\">\n      <Space size={5} wrap>\n        {filteredReactions &&\n          filteredReactions.length > 0 &&\n          filteredReactions.map((reaction: any) => (\n            <Tooltip\n              key={reaction.id}\n              title={reaction.reaction.name}\n              placement=\"top\"\n            >\n              <div>\n                {reaction.count !== 0 && (\n                  <TiltButton\n                    style={{\n                      padding: \"5px 10px\",\n                    }}\n                    onClick={\n                      !disabled\n                        ? () =>\n                            handleDebounceSelectReaction(reaction.reaction.id)\n                        : () => openLoginModal()\n                    }\n                    color={\n                      hasMatchingReaction(reaction.reactionId)\n                        ? \"secondary-brand\"\n                        : `${scheme}-base`\n                    }\n                  >\n                    <Space\n                      size={8}\n                      style={{\n                        fontSize: \"1.1em\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Avatar\n                        shape=\"square\"\n                        src={`${cdnUrl}/${reaction.reaction.image}`}\n                        size={20}\n                      />\n                      <Text\n                        style={{\n                          fontWeight: 400,\n                        }}\n                      >\n                        {reaction.count && reaction.count.toLocaleString()}\n                      </Text>\n                    </Space>\n                  </TiltButton>\n                )}\n              </div>\n            </Tooltip>\n          ))}\n        {reactionOptions && reactionOptions.length > 0 && (\n          <Dropdown\n            arrow\n            open={dropOpen}\n            onOpenChange={!disabled ? setDropOpen : () => openLoginModal()}\n            dropdownRender={(menus: ReactNode) => {\n              return (\n                <ReactionsBox\n                  data={reactionOptions}\n                  onReactionSelect={\n                    !disabled ? handleDebounceSelectReaction : openLoginModal\n                  }\n                />\n              );\n            }}\n            trigger={[\"click\"]}\n            placement=\"top\"\n          >\n            <div>\n              <TiltButton\n                color={`${scheme}-base`}\n                style={{\n                  padding: \"5px 10px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <Space size={2} style={{ fontSize: \"1.1em\" }}>\n                  <SmileOutlined />\n                  <PlusOutlined style={{ fontSize: \"0.8em\", strokeWidth: 2 }} />\n                </Space>\n              </TiltButton>\n            </div>\n          </Dropdown>\n        )}\n      </Space>\n      {children && children}\n    </Flex>\n  );\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Element } from \"react-scroll\";\nimport { useTranslation } from \"react-i18next\";\nimport { Divider, Flex, Space, Typography, theme } from \"antd\";\nimport { AuthContext } from \"~/contexts\";\nimport { WebboardEntryAuthor } from \"./WebboardEntryAuthor\";\nimport { WebboardEntryControl } from \"./WebboardEntryControl\";\nimport { WebboardReaction } from \"./WebboardReaction\";\nimport { QuotedComment, TiltButton } from \"~/components/common\";\nimport { WebboardSingleCommentBox } from \"./WebboardSingleCommentBox\";\nimport { useMatches } from \"@remix-run/react\";\nimport dayjs from \"dayjs\";\n\nconst { useToken } = theme;\n\ninterface WebboardSingleCommentProps {\n  data: any;\n  fetcher: any;\n  borderBottom?: any;\n  onReply?: (comment: any) => void;\n  reactionOptions?: any[];\n}\n\nexport function WebboardSingleComment(props: WebboardSingleCommentProps) {\n  const { data, fetcher, borderBottom, onReply, reactionOptions } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [comment, setComment] = useState<any>(data);\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n\n  const handleReply = useCallback(() => {\n    if (user) {\n      if (onReply) {\n        onReply(comment);\n      }\n    } else {\n      openLoginModal();\n    }\n  }, [comment, onReply]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success &&\n      (fetcher.data.success === \"delete-comment\" ||\n        fetcher.data.success === \"reaction-comment\" ||\n        fetcher.data.success === \"update-comment\") &&\n      fetcher.data.postId &&\n      `${fetcher.data.postId}` === `${data.id}`\n    ) {\n      if (fetcher.data.success === \"delete-comment\") {\n        setComment({ ...comment, deletedAt: dayjs() });\n      } else if (fetcher.data.post) {\n        setComment(fetcher.data.post);\n      }\n      setEditMode(false);\n    }\n  }, [data, fetcher]);\n\n  return (\n    <Element name={`comment-${comment.id}`}>\n      {comment.isPublished && (\n        <div\n          style={{\n            padding: 24,\n            borderRadius: 0,\n            borderBottom: borderBottom ? borderBottom : \"none\",\n          }}\n        >\n          <Flex vertical gap={30}>\n            <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n              <WebboardEntryAuthor\n                anonymous={comment.anonymous}\n                // isAdmin={comment.createdBy.roles.includes(\"admin\")}\n                isAdmin={false}\n                createdAt={comment.createdAt}\n                deletedAt={comment.deletedAt}\n                updatedAt={comment.updatedAt}\n                displayName={comment.author && comment.author?.displayName}\n                displayImage={\n                  comment.author && `${cdnUrl}/${comment.author?.displayImage}`\n                }\n                assetFrame={`${cdnUrl}/${data.author?.assetFrame}`}\n                userUuid={\n                  comment.author && comment.author?.userName\n                    ? comment.author.userName\n                    : comment.author?.uuid\n                }\n                isVerified={comment.author?.isDopaVerified}\n                role={comment.author?.roles}\n              />\n              <WebboardEntryControl\n                fetcher={fetcher}\n                id={comment.id}\n                ignoreShare\n                isOwner={\n                  !comment.deletedAt &&\n                  user &&\n                  comment.author &&\n                  comment.author.id === user.id\n                }\n                isForumAdmin={isForumAdmin}\n                postType=\"comment\"\n                onEditClicked={() => setEditMode(true)}\n              />\n            </Flex>\n            <Space\n              direction=\"vertical\"\n              size={30}\n              style={{ display: \"flex\", paddingLeft: 60 }}\n            >\n              {editMode ? (\n                <WebboardSingleCommentBox\n                  disabled={fetcher.state !== \"idle\"}\n                  initialData={comment}\n                  editMode\n                  fetcher={fetcher}\n                  onCancel={() => setEditMode(false)}\n                  refComment={comment.quotedComment}\n                />\n              ) : (\n                <>\n                  {comment.quotedComment && (\n                    <QuotedComment data={comment.quotedComment} />\n                  )}\n                  {!comment.deletedAt ? (\n                    <div\n                      className=\"ctrlg-html\"\n                      style={{ color: token.colorTextBase }}\n                      dangerouslySetInnerHTML={{\n                        __html: `${comment.content}`,\n                      }}\n                    />\n                  ) : (\n                    <Typography.Text\n                      style={{ color: \"#5B5758\", fontStyle: \"italic\" }}\n                    >\n                      {t(\"Deleted comment\")}\n                    </Typography.Text>\n                  )}\n                </>\n              )}\n              {((comment.author &&\n                comment.author.signature &&\n                !comment.anonymous) ||\n                !comment.deletedAt) && <Divider style={{ marginBlock: 0 }} />}\n              {comment.author &&\n                comment.author.signature &&\n                !comment.anonymous && (\n                  <div\n                    className=\"ctrlg-html\"\n                    style={{ color: token.colorTextBase }}\n                    dangerouslySetInnerHTML={{\n                      __html: `${comment.author.signature}`,\n                    }}\n                  />\n                )}\n              {!comment.deletedAt && (\n                <WebboardReaction\n                  data={comment.commentReactionCounts}\n                  postId={comment.id}\n                  postType=\"comment\"\n                  fetcher={fetcher}\n                  reactionOptions={reactionOptions}\n                  userReaction={comment.userCommentReactions}\n                >\n                  {!comment.deletedAt && onReply && (\n                    <TiltButton color=\"primary\" onClick={handleReply}>\n                      {t(\"reply\")}\n                    </TiltButton>\n                  )}\n                </WebboardReaction>\n              )}\n            </Space>\n          </Flex>\n        </div>\n      )}\n    </Element>\n  );\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Modal,\n  Result,\n  Row,\n  Space,\n  Switch,\n  Tooltip,\n  Typography,\n  theme,\n} from \"antd\";\nimport { LoadingOutlined, QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { AuthContext } from \"~/contexts\";\nimport {\n  KycWizard,\n  QuotedComment,\n  TextEditor,\n  TiltButton,\n  UserAvatar,\n} from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\n\nconst { useToken } = theme;\n\ninterface WebboardSingleCommentBoxProps {\n  disabled?: boolean;\n  editMode?: boolean;\n  fetcher: any;\n  initialData?: any;\n  onCancel?: () => void;\n  postId?: string | number;\n  refComment?: any;\n}\n\nexport function WebboardSingleCommentBox(props: WebboardSingleCommentBoxProps) {\n  const {\n    disabled,\n    editMode,\n    fetcher,\n    initialData,\n    onCancel,\n    postId,\n    refComment,\n  } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { user } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(true);\n  const [isReply, setIsReply] = useState<boolean>(false);\n  const [content, setContent] = useState<any>(\n    initialData && initialData.content ? initialData.content : \"\"\n  );\n  const [anonymous, setAnonymous] = useState<boolean>(\n    initialData && initialData.anonymous ? initialData.anonymous : false\n  );\n  const [quotedComment, setQuotedComment] = useState<any>(refComment);\n  const [kycWizardModal, setKycWizardModal] = useState<boolean>(false);\n\n  const onSubmit = useCallback(\n    (e: any) => {\n      if (postId) {\n        fetcher.submit(\n          {\n            postId: postId,\n            comment: JSON.stringify({\n              content: content,\n              quotedCommentId: quotedComment ? quotedComment.id : null,\n              anonymous: anonymous,\n            }),\n          },\n          {\n            method: \"post\",\n            action: `/resources/create-comment`,\n          }\n        );\n      } else if (initialData) {\n        fetcher.submit(\n          {\n            commentId: initialData.id,\n            comment: JSON.stringify({\n              content: content,\n              quotedCommentId: quotedComment ? quotedComment.id : null,\n              anonymous: anonymous,\n            }),\n          },\n          {\n            method: \"put\",\n            action: `/resources/update-comment`,\n          }\n        );\n      }\n      setContent(\"\");\n    },\n    [anonymous, content, fetcher, initialData, postId, quotedComment]\n  );\n\n  const openKycWizardModal = () => {\n    setKycWizardModal(true);\n  };\n\n  const closeKycWizardModal = () => {\n    setKycWizardModal(false);\n  };\n\n  const handleAnonymousChanged = (checked: boolean, e: any) => {\n    e.stopPropagation();\n    setAnonymous(checked);\n  };\n\n  useEffect(() => {\n    if (refComment) {\n      setQuotedComment(refComment);\n    } else {\n      setQuotedComment(null);\n    }\n  }, [refComment]);\n\n  useEffect(() => {\n    if (disabled) {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n  }, [disabled]);\n\n  useEffect(() => {\n    if (quotedComment) {\n      setIsReply(true);\n    } else {\n      setIsReply(false);\n    }\n  }, [quotedComment]);\n\n  return (\n    <Row gutter={10}>\n      {!initialData && (\n        <Col flex=\"none\">\n          <UserAvatar\n            display={\n              user.displayImage\n                ? `${cdnUrl}/${user.displayImage}`\n                : \"image/placeholder.png\"\n            }\n            size={50}\n          />\n        </Col>\n      )}\n      <Col flex=\"auto\">\n        {quotedComment && (\n          <>\n            <Flex\n              justify=\"space-between\"\n              align=\"center\"\n              style={{ marginBottom: 20 }}\n            >\n              <Title level={5} style={{ margin: 0 }}>\n                {t(\"reply to\")}\n              </Title>\n              {/* <Text\n                type=\"danger\"\n                onClick={() => setQuotedComment(null)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <DeleteOutlined />\n              </Text> */}\n            </Flex>\n            <QuotedComment data={quotedComment} />\n            <Divider />\n          </>\n        )}\n        {!loading ? (\n          <Flex vertical gap={20}>\n            <TextEditor\n              id=\"comment\"\n              fetcher={fetcher}\n              onChange={setContent}\n              initialValues={\n                initialData && initialData.content ? initialData.content : \"\"\n              }\n            />\n            <Flex justify=\"space-between\" align=\"center\">\n              <Space size={10}>\n                <TiltButton\n                  color=\"primary\"\n                  disabled={\n                    !content.length || loading || fetcher.state !== \"idle\"\n                  }\n                  onClick={onSubmit}\n                >\n                  {t(\"comment\")}\n                </TiltButton>\n                {onCancel && (\n                  <TiltButton color=\"secondary\" onClick={onCancel}>\n                    {t(\"cancel\")}\n                  </TiltButton>\n                )}\n              </Space>\n              {!editMode && (\n                <Space size={10}>\n                  <Text>{t(\"anonymous\")}</Text>\n                  <Switch\n                    checked={anonymous}\n                    disabled={!user.isDopaVerified}\n                    onChange={handleAnonymousChanged}\n                  />\n                  {!user.isDopaVerified && (\n                    <Tooltip\n                      placement=\"top\"\n                      arrow={false}\n                      title={t(\n                        'KYC to access \"buy sell\" and \"tournament\" rooms'\n                      )}\n                    >\n                      <QuestionCircleOutlined\n                        onClick={openKycWizardModal}\n                        style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                      />\n                    </Tooltip>\n                  )}\n                  {!user.isDopaVerified && (\n                    <Modal\n                      open={kycWizardModal}\n                      closable={false}\n                      footer={false}\n                      onCancel={closeKycWizardModal}\n                    >\n                      <KycWizard />\n                    </Modal>\n                  )}\n                </Space>\n              )}\n            </Flex>\n          </Flex>\n        ) : (\n          <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n        )}\n      </Col>\n    </Row>\n  );\n}\n", "import { useContext } from \"react\";\nimport { Card, Flex, theme } from \"antd\";\nimport { AppContext } from \"~/contexts\";\nimport { WebboardSingleComment } from \".\";\n\nconst { useToken } = theme;\n\ninterface WebboardSingleCommentsProps {\n  data: any[];\n  fetcher: any;\n  separate?: boolean;\n  onReplyComment?: (comment: any) => void;\n  reactionOptions?: any[];\n}\n\nexport function WebboardSingleComments(props: WebboardSingleCommentsProps) {\n  const { data, fetcher, onReplyComment, reactionOptions, separate } = props;\n  const { token } = useToken();\n  const { scheme } = useContext(AppContext);\n\n  const cardStyle = {\n    marginBottom: 20,\n    borderRadius: 10,\n    overflow: \"hidden\",\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  return separate ? (\n    <Flex vertical>\n      {data.map((comment: any, index: number) => (\n        <Card\n          key={`comment-${comment.id}`}\n          bodyStyle={{ padding: 0 }}\n          style={cardStyle}\n        >\n          <WebboardSingleComment\n            data={comment}\n            fetcher={fetcher}\n            onReply={onReplyComment}\n            reactionOptions={reactionOptions}\n          />\n        </Card>\n      ))}\n    </Flex>\n  ) : (\n    <Card bordered={false} bodyStyle={{ padding: 0 }} style={cardStyle}>\n      <Flex vertical>\n        {data.map((comment: any, index: number) => (\n          <WebboardSingleComment\n            key={`comment-${comment.id}`}\n            data={comment}\n            fetcher={fetcher}\n            onReply={onReplyComment}\n            reactionOptions={reactionOptions}\n            borderBottom={\n              index !== data.length - 1 ? `1px solid ${token.colorBorder}` : 0\n            }\n          />\n        ))}\n      </Flex>\n    </Card>\n  );\n}\n", "import dayjs from \"dayjs\";\nimport { useContext } from \"react\";\nimport { Card, Divider, Flex, theme, Typography } from \"antd\";\nimport { Link } from \"react-scroll\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { WebboardEntryAuthor } from \"./WebboardEntryAuthor\";\nimport { WebboardEntryControl } from \"./WebboardEntryControl\";\nimport { WebboardEntryTags } from \"./WebboardEntryTags\";\nimport { WebboardEntryMeta } from \"./WebboardEntryMeta\";\nimport { useTranslation } from \"react-i18next\";\nimport { WebboardReaction } from \"./WebboardReaction\";\nimport { Poll, TiltButton } from \"~/components/common\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\n\nconst { useToken } = theme;\n\nconst { Text, Title } = Typography;\n\ninterface WebboardSinglePostProps {\n  data: any;\n  fetcher: any;\n  reactionOptions?: any[];\n}\n\nexport function WebboardSinglePost(props: WebboardSinglePostProps) {\n  const { data, fetcher, reactionOptions } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { token } = useToken();\n  const { t } = useTranslation();\n  const { scheme, baseUrl } = useContext(AppContext);\n  const { user, openLoginModal } = useContext(AuthContext);\n  const postUrl = `${baseUrl}/webboards/${data.id}`;\n  const isOwner = user && data && data.author && data.authorId === user.id;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n  const navigate = useNavigate();\n\n  const navigateToTournament = () => {\n    navigate(`/tournaments/${data.tournament_id}`);\n  };\n\n  const cardStyle = {\n    marginBottom: 20,\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  return (\n    <Card bordered={false} style={cardStyle}>\n      <Flex vertical gap={30}>\n        <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n          <WebboardEntryAuthor\n            anonymous={data.anonymous}\n            // isAdmin={data.author.roles.includes(\"forum_admin\")}\n            isAdmin={false}\n            createdAt={data.createdAt}\n            updatedAt={data.updatedAt}\n            displayName={data.author?.displayName}\n            displayImage={`${cdnUrl}/${data.author?.displayImage}`}\n            assetFrame={`${cdnUrl}/${data.author?.assetFrame}`}\n            isVerified={data.author?.isDopaVerified}\n            role={data.author?.roles}\n            userUuid={\n              data.author?.userName ? data.author.userName : data.author?.uuid\n            }\n          />\n          <WebboardEntryControl\n            fetcher={fetcher}\n            id={data.id}\n            ignoreShare\n            isOwner={isOwner}\n            isForumAdmin={isForumAdmin}\n            postType=\"webboard\"\n          />\n        </Flex>\n        <Title level={4} style={{ margin: 0 }}>\n          {data.title}\n        </Title>\n        {data.poll && (\n          <Poll data={data.poll} fetcher={fetcher} queryInitialAnswer />\n        )}\n        <div\n          className=\"ctrlg-html\"\n          style={{ color: token.colorTextBase }}\n          dangerouslySetInnerHTML={{\n            __html: `${data.content}`,\n          }}\n        />\n        <Divider style={{ marginBlock: 0 }} />\n        {data.author?.signature && !data.anonymous && (\n          <div\n            className=\"ctrlg-html\"\n            style={{ color: token.colorTextBase }}\n            dangerouslySetInnerHTML={{\n              __html: `${data.author.signature}`,\n            }}\n          />\n        )}\n        {data.postTags && data.postTags.length > 0 && (\n          <WebboardEntryTags data={data.postTags} />\n        )}\n        <Flex gap={20} justify=\"space-between\" align=\"center\" wrap=\"wrap\">\n          <WebboardEntryMeta rooms={data.postRooms} games={data.postGames} />\n          {data.updatedAt &&\n            data.createdAt &&\n            data.updatedAt !== data.createdAt && (\n              <Text style={{ opacity: 0.6 }}>{`${t(\"edited at\")} ${dayjs(\n                data.updatedAt\n              ).format(\"DD/MM/YYYY - HH:mm\")}`}</Text>\n            )}\n        </Flex>\n        <WebboardReaction\n          data={data.postReactionCounts}\n          postId={data.id}\n          postType=\"webboard\"\n          fetcher={fetcher}\n          reactionOptions={reactionOptions}\n          userReaction={data.userPostReactions}\n        />\n        <Divider style={{ marginBlock: 0 }} />\n        <Flex justify=\"space-between\" align=\"center\" gap={20} wrap=\"wrap\">\n          <Flex align=\"center\" gap={15} justify=\"space-between\">\n            <Link\n              to=\"comment-box\"\n              smooth={true}\n              duration={500}\n              offset={-80}\n              onClick={() => (user ? null : openLoginModal())}\n            >\n              <TiltButton color=\"primary\">{t(\"comment\")}</TiltButton>\n            </Link>\n            <Text>{`${data.commentCounts} ${t(\"comments\")}`}</Text>\n          </Flex>\n          <Flex align=\"center\" gap={15} justify=\"space-between\">\n            {data.tournament_id && (\n              <TiltButton\n                color=\"secondary-brand\"\n                onClick={navigateToTournament}\n              >\n                {t(\"back to tournament\")}\n              </TiltButton>\n            )}\n            <ShareDropDown postUrl={postUrl} dropDownPlacement=\"topRight\" />\n          </Flex>\n        </Flex>\n      </Flex>\n    </Card>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"@remix-run/react\";\nimport { Card, Flex, Modal, Space, Typography } from \"antd\";\nimport { AppContext } from \"~/contexts\";\nimport { BuySellAgreement, WebboardUsageRules } from \"~/components/common\";\n\nconst { Text, Title } = Typography;\n\ninterface WebboardTagsProps {\n  fetcher: any;\n  data: any[];\n  mobileStyle?: boolean;\n}\n\nexport function WebboardTags(props: WebboardTagsProps) {\n  const { scheme } = useContext(AppContext);\n  const { data, fetcher, mobileStyle } = props;\n  const { t } = useTranslation();\n  const [buySellModal, setBuySellModal] = useState<boolean>(false);\n  const [webboardRules, setWebboardRules] = useState<boolean>(false);\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    modalRender: (modal: any) => modal,\n    styles: {\n      body: { padding: \"20px 30px\" },\n    },\n  } as any;\n\n  const openWebboardRules = () => {\n    setWebboardRules(true);\n  };\n\n  const closeWebboardRules = () => {\n    setWebboardRules(false);\n  };\n\n  const openBuySellModal = () => {\n    setBuySellModal(true);\n  };\n\n  const closeBuySellModal = () => {\n    setBuySellModal(false);\n  };\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success &&\n      fetcher.data.success === \"accept-buy-sell-agreement\" &&\n      fetcher.state === \"idle\"\n    ) {\n      setBuySellModal(false);\n    }\n  }, [fetcher]);\n\n  return (\n    <>\n      <Flex vertical gap={20}>\n        <Card\n          bordered={false}\n          style={{\n            backgroundColor: mobileStyle\n              ? \"transparent\"\n              : scheme === \"light\"\n              ? \"#ebebeb\"\n              : \"#0f0e0e\",\n            borderRadius: 10,\n            boxShadow: \"none\",\n          }}\n          bodyStyle={{\n            padding: mobileStyle ? 0 : 30,\n          }}\n        >\n          <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n            <Title level={mobileStyle ? 5 : 4} style={{ marginTop: 0 }}>\n              {t(\"popular tags\")}\n            </Title>\n            {data.map((tag: any) => (\n              <Link to={`/tags/${tag.id}`} key={tag.name}>\n                <Space\n                  direction=\"vertical\"\n                  size={5}\n                  style={{ display: \"flex\", cursor: \"pointer\" }}\n                >\n                  <Text\n                    style={{\n                      fontStyle: \"italic\",\n                      fontWeight: 500,\n                      fontSize: \"1.2em\",\n                    }}\n                  >\n                    #{tag.name}\n                  </Text>\n                  {!mobileStyle && <Text>{`${tag.count} ${t(\"posts\")}`}</Text>}\n                </Space>\n              </Link>\n            ))}\n          </Space>\n        </Card>\n        <Flex\n          vertical\n          gap={10}\n          justify=\"center\"\n          style={{ textAlign: \"center\" }}\n        >\n          <Text\n            style={{ cursor: \"pointer\", fontWeight: 600 }}\n            onClick={openBuySellModal}\n          >\n            {t(\"buy sell conditions\")}\n          </Text>\n          <Text\n            style={{ cursor: \"pointer\", fontWeight: 600 }}\n            onClick={openWebboardRules}\n          >\n            {t(\"webboard usage rules\")}\n          </Text>\n        </Flex>\n      </Flex>\n      <Modal {...modalProps} onCancel={closeBuySellModal} open={buySellModal}>\n        <BuySellAgreement fetcher={fetcher} onCancel={closeBuySellModal} />\n      </Modal>\n      <Modal {...modalProps} onCancel={closeWebboardRules} open={webboardRules}>\n        <WebboardUsageRules onCancel={closeWebboardRules} />\n      </Modal>\n    </>\n  );\n}\n", "import { Space } from \"antd\";\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport { TiltButton } from \"./TiltButton\";\nimport { toNumber } from \"lodash\";\nimport { Media } from \"./Media\";\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageClicked: (page: number) => void;\n}\n\nexport function Pagination(props: PaginationProps) {\n  const { currentPage, onPageClicked, totalPages } = props;\n  let pages = [\"1\", `${totalPages}`];\n\n  const start = Math.max(currentPage - 2, 2);\n  const end = Math.min(currentPage + 2, totalPages - 1);\n  const surroundingPages = [];\n  for (let i = start; i <= end; i++) {\n    surroundingPages.push(`${i}`);\n  }\n  if (start > 2) {\n    surroundingPages.unshift(\"...\");\n  }\n  if (end < totalPages - 1) {\n    surroundingPages.push(\"...\");\n  }\n  pages.splice(1, 0, ...surroundingPages);\n\n  if (totalPages > 1) {\n    return (\n      <Space size={10} style={{ marginTop: 30 }}>\n        {currentPage > 1 && (\n          <Media greaterThan=\"sm\">\n            <TiltButton\n              color=\"secondary\"\n              onClick={() => onPageClicked(toNumber(currentPage - 1))}\n            >\n              <LeftOutlined />\n            </TiltButton>\n          </Media>\n        )}\n        {pages.map((page: string) => (\n          <TiltButton\n            key={page}\n            color={page === `${currentPage}` ? \"primary\" : \"secondary\"}\n            onClick={\n              page !== `${currentPage}` && page !== \"...\"\n                ? () => onPageClicked(toNumber(page))\n                : undefined\n            }\n          >\n            {page}\n          </TiltButton>\n        ))}\n        {currentPage < totalPages && (\n          <Media greaterThan=\"sm\">\n            <TiltButton\n              color=\"secondary\"\n              onClick={() => onPageClicked(toNumber(currentPage + 1))}\n            >\n              <RightOutlined />\n            </TiltButton>\n          </Media>\n        )}\n      </Space>\n    );\n  }\n}\n", "import { Card, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text } = Typography;\n\ninterface PassswordMustContainProps {\n  validator: any;\n}\n\nexport function PassswordMustContain(props: PassswordMustContainProps) {\n  const { validator } = props;\n  const { t } = useTranslation();\n  const {\n    hasUpperCase,\n    hasLowerCase,\n    hasNumber,\n    hasSpecialCharacter,\n    hasLeast8,\n    passwordMatch,\n  } = validator;\n\n  return (\n    <Card style={{ marginTop: \"20px\" }}>\n      <Space direction=\"vertical\" style={{ fontSize: \"0.8em\" }}>\n        <Text type={hasUpperCase ? \"success\" : \"secondary\"}>\n          {hasUpperCase ? \"\u2713\" : \"\u25CB\"}&nbsp;&nbsp;{t(\"Uppercase letter (A-Z)\")}\n        </Text>\n        <Text type={hasLowerCase ? \"success\" : \"secondary\"}>\n          {hasLowerCase ? \"\u2713\" : \"\u25CB\"}&nbsp;&nbsp;{t(\"Lowercase letter (a-z)\")}\n        </Text>\n        <Text type={hasNumber ? \"success\" : \"secondary\"}>\n          {hasNumber ? \"\u2713\" : \"\u25CB\"}&nbsp;&nbsp;{t(\"Number (0-9)\")}\n        </Text>\n        <Text type={hasSpecialCharacter ? \"success\" : \"secondary\"}>\n          {hasSpecialCharacter ? \"\u2713\" : \"\u25CB\"}&nbsp;&nbsp;\n          {t(\"Special character\")}&nbsp;&nbsp;Ex. ~`!@#$%_^&*\n        </Text>\n        <Text type={hasLeast8 ? \"success\" : \"secondary\"}>\n          {hasLeast8 ? \"\u2713\" : \"\u25CB\"}&nbsp;&nbsp;{t(\"Has at least 8 characters\")}\n        </Text>\n        <Text type={passwordMatch ? \"success\" : \"secondary\"}>\n          {passwordMatch ? \"\u2713\" : \"\u25CB\"}&nbsp;&nbsp;{t(\"Passwords match\")}\n        </Text>\n      </Space>\n    </Card>\n  );\n}\n", "import {\n  Card,\n  Col,\n  Flex,\n  Modal,\n  Result,\n  Row,\n  Skeleton,\n  Space,\n  theme,\n  Typography,\n} from \"antd\";\nimport {\n  CheckCircleFilled,\n  ExclamationCircleFilled,\n  InboxOutlined,\n} from \"@ant-design/icons\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"~/contexts\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"@remix-run/react\";\nconst { useToken } = theme;\nconst { Text } = Typography;\n\ninterface PollProps {\n  onClick?: (e: any) => void;\n  data: any;\n  queryInitialAnswer?: boolean;\n  fetcher?: any;\n  fromIndex?: boolean;\n  webboardId?: boolean;\n}\n\nexport function Poll(props: PollProps) {\n  const { onClick, data, queryInitialAnswer, fetcher, fromIndex, webboardId } =\n    props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { token } = useToken();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [modal, contextHolder] = Modal.useModal();\n  const [poll, setPoll] = useState<any>(data);\n  const [loading, setLoading] = useState<boolean>(\n    user && queryInitialAnswer ? true : false\n  );\n  const [answered, setAnswered] = useState<any>(null);\n\n  const handleVote = useCallback(\n    (answerId: string | number) => {\n      modal.confirm({\n        title: (\n          <Space direction=\"vertical\" size={0}>\n            <Text>{`${t(\"are you to vote\")}?`}</Text>\n            <Text>{t(\"this action cannot be undone\")}</Text>\n          </Space>\n        ),\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          fetcher.submit(\n            { id: data.id, answerId },\n            {\n              method: \"post\",\n              action: `/resources/submit-poll`,\n            }\n          );\n        },\n      });\n    },\n    [data, fetcher]\n  );\n\n  useEffect(() => {\n    if (user && queryInitialAnswer) {\n      setLoading(true);\n      fetcher.load(`/resources/poll-answer?id=${data.id}`);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      fetcher.data.pollId &&\n      `${fetcher.data.pollId}` === `${data.id}`\n    ) {\n      setAnswered(fetcher.data.answer ? fetcher.data.answer : null);\n      if (fetcher.data.poll) {\n        setPoll(fetcher.data.poll);\n      }\n      setLoading(false);\n    }\n  }, [data, fetcher]);\n\n  return (\n    <Card\n      bordered={false}\n      style={{\n        backgroundColor: token.colorBgElevated,\n        borderRadius: 10,\n        // maskImage: `linear-gradient(to bottom, rgba(0,0,0,1), rgba(0,0,0,0.2))`,\n      }}\n    >\n      <Flex gap={10} vertical>\n        {loading ? (\n          <Skeleton active />\n        ) : poll.options && poll.options.length > 0 ? (\n          <>\n            {poll.options\n              .slice(0, fromIndex ? 4 : undefined)\n              .sort((a: any, b: any) => {\n                if (a.id < b.id) return -1;\n                if (a.id > b.id) return 1;\n                return 0;\n              })\n              .map((option: any) => (\n                <Row\n                  gutter={10}\n                  key={option.id}\n                  style={{ alignItems: \"center\" }}\n                  wrap={false}\n                >\n                  <Col flex=\"none\">\n                    {(option.userPollSelections &&\n                      option.userPollSelections[0]) ||\n                    `${option.id}` === `${answered}` ? (\n                      <CheckCircleFilled\n                        style={{ color: \"#7a6fee\", fontSize: 30 }}\n                      />\n                    ) : (\n                      <div\n                        style={{\n                          width: 30,\n                          height: 30,\n                          border: `2px solid ${token.colorBorder}`,\n                          borderRadius: \"50%\",\n                          cursor: answered ? \"default\" : \"pointer\",\n                        }}\n                        onClick={\n                          answered\n                            ? undefined\n                            : user\n                            ? onClick\n                              ? onClick\n                              : () => handleVote(option.id)\n                            : () => openLoginModal()\n                        }\n                      />\n                    )}\n                  </Col>\n                  <Col flex=\"auto\">\n                    <Card\n                      style={\n                        // answered &&\n                        // `${option.userPollSelections}` === `${answered}`\n                        //   ? { backgroundColor: \"#7a6fee\" }\n                        //   : undefined\n                        ((option.userPollSelections &&\n                          option.userPollSelections[0]) ||\n                          `${option.id}` === `${answered}`) && {\n                          backgroundColor: \"#7a6fee\",\n                        }\n                      }\n                      bodyStyle={{\n                        padding: 15,\n                      }}\n                    >\n                      <Text\n                        style={{\n                          display: \"block\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                          whiteSpace: \"nowrap\",\n                          color:\n                            (option.userPollSelections &&\n                              option.userPollSelections[0]) ||\n                            `${option.id}` === `${answered}`\n                              ? \"#fff\"\n                              : undefined,\n                        }}\n                      >\n                        {option.option}\n                      </Text>\n                    </Card>\n                  </Col>\n                  <Col\n                    flex=\"none\"\n                    style={{ minWidth: 40, textAlign: \"center\" }}\n                  >\n                    <Text style={{ fontSize: \"1.1em\" }}>{option.count}</Text>\n                  </Col>\n                </Row>\n              ))}\n            {poll.options.length > 4 && fromIndex === true && (\n              <Text\n                style={{ textAlign: \"center\", zIndex: 1000 }}\n                onClick={() => navigate(`/webboards/${webboardId}`)}\n              >\n                {t(\"and more options...\")}\n              </Text>\n            )}\n          </>\n        ) : (\n          <Result icon={<InboxOutlined />} title={t(\"no option\")} />\n        )}\n      </Flex>\n      {contextHolder}\n    </Card>\n  );\n}\n", "import { Form, Select, Space, Tooltip, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { Globe, Lock } from \"lucide-react\";\nconst { Text } = Typography;\n\ninterface PrivateFieldSelectionProps {\n  fieldName: string;\n}\n\nexport function PrivateFieldSelection(props: PrivateFieldSelectionProps) {\n  const { fieldName } = props;\n  const { t } = useTranslation();\n\n  return (\n    <Form.Item name={fieldName} style={{ marginBottom: 0 }}>\n      <Select\n        style={{ width: 60 }}\n        dropdownStyle={{ minWidth: 120 }}\n        optionLabelProp=\"selectedLabel\"\n        options={[\n          {\n            selectedLabel: (\n              <Tooltip placement=\"bottom\" title={t(\"private\")} arrow={false}>\n                <Lock size={17} style={{ color: \"#7a6fee\" }} />\n              </Tooltip>\n            ),\n            value: \"private\",\n            label: (\n              <Space size={10}>\n                <Lock size={17} style={{ color: \"#7a6fee\" }} />\n                <Text style={{ color: \"#7a6fee\" }}>{t(\"private\")}</Text>\n              </Space>\n            ),\n          },\n          {\n            selectedLabel: (\n              <Tooltip placement=\"bottom\" title={t(\"public\")} arrow={false}>\n                <Globe size={17} style={{ color: \"#7a6fee\" }} />\n              </Tooltip>\n            ),\n            value: \"public\",\n            label: (\n              <Space size={10}>\n                <Globe size={17} style={{ color: \"#7a6fee\" }} />\n                <Text style={{ color: \"#7a6fee\" }}>{t(\"public\")}</Text>\n              </Space>\n            ),\n          },\n        ]}\n      />\n    </Form.Item>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Avatar, Card, Flex } from \"antd\";\n\ninterface ReactionsBoxProps {\n  data: any;\n  onReactionSelect: (option: number | string) => void;\n}\n\nexport function ReactionsBox(props: ReactionsBoxProps) {\n  const { data, onReactionSelect } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  return (\n    <Card\n      bordered={false}\n      bodyStyle={{\n        padding: 10,\n        width: 260,\n        maxHeight: 260,\n        overflow: \"auto\",\n      }}\n    >\n      <Flex gap={10} wrap=\"wrap\">\n        {data &&\n          data.length > 0 &&\n          data.map((option: any) => (\n            <Avatar\n              key={option.id}\n              shape=\"square\"\n              src={`${cdnUrl}/${option.image}`}\n              size={40}\n              onClick={() => onReactionSelect(option.id)}\n              style={{ cursor: \"pointer\" }}\n            />\n          ))}\n      </Flex>\n    </Card>\n  );\n}\n", "import React from \"react\";\nimport { Card, Space, Typography } from \"antd\";\nconst { Text } = Typography;\n\ninterface ResponsiveImageCardProps {\n  image: string;\n  label: string;\n  onClick?: (e: any) => void;\n}\n\nexport const ResponsiveImageCard: React.FC<ResponsiveImageCardProps> = (\n  props: ResponsiveImageCardProps\n) => {\n  const { image, label, onClick } = props;\n  return (\n    <Card\n      onClick={onClick}\n      bordered={false}\n      bodyStyle={{ padding: 20, textAlign: \"center\" }}\n      style={onClick ? { cursor: \"pointer\" } : {}}\n    >\n      <Space direction=\"vertical\" size={10} style={{ display: \"flex\" }}>\n        <div style={{ paddingInline: \"2.5%\" }}>\n          <div\n            style={{\n              width: \"100%\",\n              paddingBottom: \"100%\",\n              marginInline: \"auto\",\n              borderRadius: \"50%\",\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n              backgroundImage: image,\n              overflow: \"hidden\",\n            }}\n          />\n        </div>\n        <Text>{label}</Text>\n      </Space>\n    </Card>\n  );\n};\n", "interface SvgTextProps {\n  color: string;\n  message: string;\n}\n\nexport const SvgText: React.FC<SvgTextProps> = (props: SvgTextProps) => {\n  const { color, message } = props;\n  return (\n    <div className=\"svg-text\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 360.96 358.98\"\n        style={{ width: \"100%\", height: \"auto\" }}\n      >\n        <text\n          style={{\n            color: color,\n            fontFamily: \"FC Twist VF\",\n            transform: \"translate(40px, 202px)\",\n            fontSize: \"62px\",\n            fill: color,\n          }}\n        >\n          {message}\n        </text>\n      </svg>\n    </div>\n  );\n};\n", "import { Space, theme, Typography } from \"antd\";\nimport { indexOf, isArray } from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nconst { Text } = Typography;\nconst { useToken } = theme;\n\ninterface TiltCheckProps {\n  fieldName: string;\n  labelKey?: string;\n  labelValue?: string;\n  multiple?: boolean;\n  options: any[];\n  initialValues?: any;\n  onSelect: (name: string, values: any) => void;\n}\n\nexport function TiltCheck(props: TiltCheckProps) {\n  const {\n    fieldName,\n    labelKey,\n    labelValue,\n    multiple,\n    options,\n    onSelect,\n    initialValues,\n  } = props;\n  const [values, setValues] = useState<any>(initialValues);\n  const { token } = useToken();\n\n  const isActive = useCallback(\n    (value: string | number) => {\n      if (multiple) {\n        return indexOf(values, `${value}`) > -1 || indexOf(values, value) > -1;\n      } else {\n        return values === value;\n      }\n    },\n    [values]\n  );\n\n  const handleClicked = useCallback(\n    (value: number | string) => {\n      let newValues: any;\n      if (multiple) {\n        newValues = [];\n        if (values && isArray(values)) {\n          newValues = [...values];\n        }\n        let existedIndex = indexOf(values, value);\n        if (existedIndex < 0) {\n          existedIndex = indexOf(values, `${value}`);\n        }\n        if (existedIndex > -1) {\n          newValues.splice(existedIndex, 1);\n        } else {\n          newValues.push(value);\n        }\n      } else {\n        if (`${values}` === `${value}`) {\n          newValues = null;\n        } else {\n          newValues = value;\n        }\n      }\n      onSelect(fieldName, newValues);\n      setValues(newValues);\n    },\n    [onSelect, values]\n  );\n\n  useEffect(() => {\n    setValues(initialValues);\n  }, [initialValues]);\n\n  return (\n    <Space wrap size={5} style={{ display: \"flex\" }}>\n      {options.map((option: any, index: number) => (\n        <TiltButton\n          color={\n            isActive(option[labelValue ? labelValue : \"id\"])\n              ? \"primary\"\n              : \"transparent\"\n          }\n          key={`${fieldName}-${option[labelValue ? labelValue : \"id\"]}`}\n          onClick={() => handleClicked(option[labelValue ? labelValue : \"id\"])}\n          style={{\n            borderColor: token.colorBorder,\n            fontStyle: \"italic\",\n            fontWeight: 400,\n            paddingBlock: 6,\n          }}\n        >\n          <Text>{option[labelKey ? labelKey : \"label\"]}</Text>\n        </TiltButton>\n      ))}\n    </Space>\n  );\n}\n", "import { Link, useLocation } from \"@remix-run/react\";\nimport { Tooltip } from \"antd\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\n\ninterface TiltMenusProps {\n  menus: any[];\n  direction?: string;\n  position?: string;\n  activeFromQueryString?: boolean;\n  preventScrollReset?: boolean;\n  style?: React.CSSProperties;\n}\n\nexport const TiltMenus: React.FC<TiltMenusProps> = (props: TiltMenusProps) => {\n  const {\n    activeFromQueryString,\n    direction,\n    menus,\n    position,\n    preventScrollReset,\n    style,\n  } = props;\n  const { scheme } = useContext(AppContext);\n  const location = useLocation();\n\n  const renderLink = (menu: any) => {\n    return (\n      <Link\n        className={`tilt-menu-link${\n          activeFromQueryString ? \" query-string\" : \"\"\n        }${\n          (!activeFromQueryString &&\n            (location.pathname === menu.link ||\n              (menu.link !== \"/\" &&\n                location.pathname.indexOf(menu.link) > -1))) ||\n          (menu.link === \".\" &&\n            location.pathname.split(\"/\").filter((p: string) => p.length > 0)\n              .length === menu.level) ||\n          (activeFromQueryString &&\n            (location.search === menu.link.substring(1) ||\n              (location.search === \"?index\" && menu.link === \".\")))\n            ? \" active\"\n            : \"\"\n        }`}\n        to={menu.link}\n        preventScrollReset={preventScrollReset ? preventScrollReset : false}\n        target={menu.link.indexOf(\"http\") === 0 ? \"_blank\" : undefined}\n      >\n        {menu.label}\n      </Link>\n    );\n  };\n\n  return (\n    <ul\n      className={`tilt-menu${position ? ` ${position} ` : \"\"}${\n        direction ? ` ${direction} ` : \"\"\n      } ${scheme}`}\n      style={style}\n    >\n      {menus.map((menu: any, index: number) => (\n        <li key={index} className=\"tilt-menu-item\">\n          {menu.tooltip ? (\n            <Tooltip title={menu.tooltip} placement=\"bottom\" arrow={false}>\n              {renderLink(menu)}\n            </Tooltip>\n          ) : (\n            renderLink(menu)\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n", "import { Alert, Space, Typography, theme, notification } from \"antd\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { Copy } from \"lucide-react\";\nconst { useToken } = theme;\nconst { Text } = Typography;\n\ninterface ToCopyFieldProps {\n  alertMessage?: string;\n  copyMessage?: string;\n  fontSize?: string;\n  plain?: boolean;\n  style?: React.CSSProperties;\n  text: string;\n}\n\nexport function ToCopyField(props: ToCopyFieldProps) {\n  const { t } = useTranslation();\n  const { alertMessage, copyMessage, fontSize, plain, style, text } = props;\n  const { token } = useToken();\n  const [messageApi, contextHolder] = notification.useNotification();\n  const styleProperties = {\n    ...style,\n    cursor: \"pointer\",\n    border: \"none\",\n    backgroundColor: token.colorBgBase,\n  };\n\n  const handleCopyMessage = (e: any) => {\n    navigator.clipboard.writeText(copyMessage ? copyMessage : text);\n    messageApi.open({\n      type: \"success\",\n      message: alertMessage ? alertMessage : t(\"join team link copied\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  return (\n    <>\n      {plain ? (\n        <Space onClick={handleCopyMessage} className=\"text-hover-copy\" size={5}>\n          <Text style={{ color: \"inherit\" }}>{text}</Text>\n          <Copy className=\"text-hover-copy-icon\" style={{ color: \"#7a6fee\" }} />\n        </Space>\n      ) : (\n        <Alert\n          onClick={handleCopyMessage}\n          message={\n            <Text\n              style={{\n                display: \"block\",\n                fontSize: fontSize ? fontSize : undefined,\n                fontWeight: 600,\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {text}\n            </Text>\n          }\n          action={<CopyOutlined style={{ color: \"#7a6fee\", paddingLeft: 5 }} />}\n          style={styleProperties}\n        />\n      )}\n\n      {contextHolder}\n    </>\n  );\n}\n", "import { Avatar, Badge, Tooltip } from \"antd\";\nimport { MinusCircleOutlined, UserOutlined } from \"@ant-design/icons\";\n\ninterface UserAvatarProps {\n  dashed?: boolean;\n  display?: string;\n  name?: string;\n  onClick?: (e: any) => void;\n  onRemove?: (e: any) => void;\n  size?: number;\n}\n\nexport function UserAvatar(props: UserAvatarProps) {\n  const { dashed, display, name, onClick, onRemove, size } = props;\n  let output = display ? (\n    <div\n      onClick={onClick ? onClick : undefined}\n      style={{ cursor: onClick ? \"pointer\" : \"default\" }}\n    >\n      {name ? (\n        <Tooltip placement=\"bottom\" title={name} arrow={false}>\n          <Avatar src={display} size={size ? size : 60} />\n        </Tooltip>\n      ) : (\n        <Avatar src={display} size={size ? size : 60} />\n      )}\n    </div>\n  ) : (\n    <div\n      style={{\n        display: \"flex\",\n        padding: 4,\n        border: `1px ${dashed ? \"dashed\" : \"solid\"} #c0b4b7`,\n        borderRadius: \"50%\",\n        height: size ? size : \"60px\",\n        width: size ? size : \"60px\",\n        lineHeight: size ? size : \"60px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: onClick ? \"pointer\" : \"default\",\n      }}\n      onClick={onClick ? onClick : undefined}\n    >\n      <UserOutlined\n        style={{\n          fontSize: 20,\n          color: \"#c0b4b7\",\n        }}\n      />\n    </div>\n  );\n\n  if (onRemove) {\n    return (\n      <Badge\n        count={\n          <div\n            style={{\n              display: \"flex\",\n              backgroundColor: \"#c43025\",\n              padding: 3,\n              borderRadius: \"50%\",\n              cursor: \"pointer\",\n            }}\n            onClick={onRemove}\n          >\n            <MinusCircleOutlined\n              style={{ fontSize: 12, color: \"#fff\", strokeWidth: 2 }}\n            />\n          </div>\n        }\n      >\n        {output}\n      </Badge>\n    );\n  } else {\n    return output;\n  }\n}\n", "import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, List, Typography } from \"antd\";\n\nimport { TiltButton } from \"./TiltButton\";\nconst { Text, Title } = Typography;\n\ninterface WebboardUsageRulesProps {\n  onCancel: () => void;\n}\n\nexport const WebboardUsageRules: React.FC<WebboardUsageRulesProps> = (\n  props: WebboardUsageRulesProps\n) => {\n  const { t } = useTranslation();\n  const { onCancel } = props;\n\n  const rules = [\n    \"weebboard usage rule 1\",\n    \"weebboard usage rule 2\",\n    \"weebboard usage rule 3\",\n    \"weebboard usage rule 4\",\n    \"weebboard usage rule 5\",\n    \"weebboard usage rule 6\",\n    \"weebboard usage rule 7\",\n    \"weebboard usage rule 8\",\n    \"weebboard usage rule 9\",\n    \"weebboard usage rule 10\",\n    \"weebboard usage rule 11\",\n    \"weebboard usage rule 12\",\n    \"weebboard usage rule 13\",\n  ] as string[];\n\n  return (\n    <Flex vertical gap={20}>\n      <Title level={3} style={{ margin: 0 }}>\n        {t(\"Webboard usage rules\")}\n      </Title>\n      <List>\n        {rules.map((rule: string, index: number) => (\n          <List.Item key={`rule-${index}`}>\n            <Text>{t(rule)}</Text>\n          </List.Item>\n        ))}\n      </List>\n      <Flex justify=\"center\">\n        <TiltButton color=\"primary\" onClick={onCancel}>\n          {t(\"close\")}\n        </TiltButton>\n      </Flex>\n    </Flex>\n  );\n};\n", "import { Button, Card, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text, Title } = Typography;\n\ninterface AcceptCookiesFormProps {\n  onAccept: (accepted: boolean) => void;\n}\n\nexport const AcceptCookiesForm: React.FC<AcceptCookiesFormProps> = (\n  props: AcceptCookiesFormProps\n) => {\n  const { onAccept } = props;\n  const { t } = useTranslation();\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 999,\n        backgroundColor: \"rgba(0, 0, 0, 0.4)\",\n      }}\n    >\n      <Card\n        style={{\n          position: \"absolute\",\n          left: \"5%\",\n          bottom: 20,\n          width: \"90%\",\n        }}\n      >\n        <Title level={4} style={{ marginBottom: 5 }}>\n          {t(\"cookies usage\")}\n        </Title>\n        <Space direction=\"vertical\" size={15}>\n          <Text>\n            {t(\"allow cookies messages\")}\n            <a\n              style={{ marginLeft: \"6px\" }}\n              href=\"/privacy-policies\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {t(\"cookies policy\")}\n            </a>\n          </Text>\n          <Space wrap>\n            <Button onClick={() => onAccept(false)}>{t(\"reject\")}</Button>\n            <Button\n              type=\"primary\"\n              onClick={() => onAccept(true)}\n              style={{ color: \"#000\" }}\n            >\n              {t(\"accept\")}\n            </Button>\n          </Space>\n        </Space>\n      </Card>\n    </div>\n  );\n};\n", "import * as React from \"react\";\nimport { ConfigProvider } from \"antd\";\nimport { resetGlobalState } from \"react-use-websocket\";\n\ninterface ThemeProviderProps {\n  mode?: string;\n  brandColor?: string;\n  children: any;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = (\n  props: ThemeProviderProps\n) => {\n  const { brandColor, children, mode } = props;\n  const primaryBrand = \"#d5f87c\";\n  const borderColor = \"#dfdfdf\";\n  const boderColorDark = \"#3e3e3e\";\n  const boxShadow = \"0 12px 10px -10px rgba(0, 0, 0, 0.2)\";\n  const boxShadowDark = \"0 12px 10px -10px rgba(0, 0, 0, 0.6)\";\n\n  const lightToken = {\n    colorBgBase: \"#eee\",\n    colorBgContainer: \"#fff\",\n    colorBgElevated: \"#f8f8f8\",\n    colorBgLayout: \"#f8f8f8\",\n    colorBgHeader: \"#fff\",\n    colorPrimary: brandColor ? brandColor : primaryBrand,\n    colorBorder: borderColor,\n    colorBorderBg: borderColor,\n    colorTextBase: \"#231f20\",\n    fontFamily: \"FC Twist VF\",\n    fontSize: 16,\n  };\n  const darkToken = {\n    colorBgBase: \"#000\",\n    colorBgContainer: \"#231F20\",\n    colorBgElevated: \"#121212\",\n    colorBgLayout: \"#121212\",\n    colorBgHeader: \"#000\",\n    colorPrimary: brandColor ? brandColor : primaryBrand,\n    colorBorder: boderColorDark,\n    colorBorderBg: boderColorDark,\n    colorTextBase: \"#ffffff\",\n    colorLink: \"#ffffff\",\n    fontFamily: \"FC Twist VF\",\n    fontSize: 16,\n  };\n  return (\n    <ConfigProvider\n      theme={{\n        token: mode === \"dark\" ? darkToken : lightToken,\n        components: {\n          Button: {\n            primaryColor: \"#000\",\n            colorTextLightSolid: \"#000\",\n            controlHeightLG: 50,\n          },\n          Checkbox: {\n            colorBorder: \"#8861f2\",\n            colorPrimary: \"#8861f2\",\n            colorPrimaryHover: \"#8861f2\",\n            controlInteractiveSize: 20,\n          },\n          Card: {\n            padding: 12,\n            paddingLG: 18,\n            lineWidth: 0,\n            boxShadow: mode === \"dark\" ? boxShadowDark : boxShadow,\n          },\n          Carousel: {\n            dotWidth: 30,\n            dotActiveWidth: 30,\n            colorBgContainer: primaryBrand,\n          },\n          DatePicker: {\n            colorBorder: mode === \"dark\" ? boderColorDark : borderColor,\n            colorBgContainer: \"transparent\",\n            controlHeight: 46,\n            controlOutlineWidth: 0,\n          },\n          Divider: {\n            colorSplit: mode === \"dark\" ? boderColorDark : borderColor,\n          },\n          Form: {\n            marginLG: 10,\n            paddingXS: 5,\n          },\n          Input: {\n            addonBg: \"transparent\",\n            colorBorder: mode === \"dark\" ? boderColorDark : borderColor,\n            colorBgContainer: \"transparent\",\n            paddingBlock: 8,\n          },\n          Layout: {\n            headerBg: mode === \"dark\" ? \"#000\" : \"#fff\",\n          },\n          Menu: {\n            fontSize: 16,\n            itemBg: \"transparent\",\n            itemSelectedColor: \"#201c1d\",\n            itemSelectedBg: primaryBrand,\n          },\n          Modal: {\n            contentBg: mode === \"dark\" ? \"#222\" : \"#fff\",\n          },\n          Result: {\n            colorInfo: \"#7a6fee\",\n          },\n          Select: {\n            colorBgContainer: \"transparent\",\n            colorBorder: mode === \"dark\" ? boderColorDark : borderColor,\n            optionSelectedBg: primaryBrand,\n            optionSelectedColor: \"#000\",\n            controlHeight: 40,\n            controlOutlineWidth: 0,\n          },\n          Switch: {\n            colorPrimary: \"#7b46cb\",\n            colorPrimaryHover: \"#7b46cb\",\n            controlHeight: 40,\n          },\n          Tooltip: {\n            colorTextLightSolid: mode === \"dark\" ? \"#000\" : \"#fff\",\n          },\n        },\n      }}\n    >\n      {children}\n    </ConfigProvider>\n  );\n};\n", "import type { Session } from '@remix-run/node';\nimport axios from 'axios';\n\nconst baseURL = process.env.APP_API_BASE_URL;\n\nexport const client = axios.create({\n  baseURL,\n});\n\nexport function clientFromSession(session?: Session) {\n  const baseURL = process.env.APP_API_BASE_URL;\n\n  const c = axios.create({\n    baseURL,\n  });\n\n  if (session === undefined) {\n    return c;\n  }\n\n  const accessToken = session.get('accessToken');\n  if (accessToken && accessToken !== '') {\n    c.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n  }\n\n  return c;\n}\n\nexport default client;\n", "import type { AxiosRequestConfig } from \"axios\";\n\nexport function loginEmail(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/login/email`,\n    data,\n  };\n}\n\nexport function loginPhoneNumber(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/login/phone-number`,\n    data,\n  };\n}\n\nexport function socialLogin(\n  provider: string,\n  id: string,\n  metadata: any,\n  email?: string\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: \"/api/v1/auth/login/social\",\n    data: { provider, id, metadata, email },\n  };\n}\n\nexport function forgotPassword(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: \"/api/v1/auth/forgot-password\",\n    data,\n  };\n}\n\nexport function searchEmail(email: string): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/auth/search/email?email=${encodeURIComponent(email)}`,\n  };\n}\n\nexport function searchPhoneNumber(phoneNumber: string): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/auth/search/phone-number?phoneNumber=${phoneNumber}`,\n  };\n}\n\nexport function sendOtpEmail(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/otp/email`,\n    data,\n  };\n}\n\nexport function sendOtpPhoneNumber(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/otp/phone-number`,\n    data,\n  };\n}\n\nexport function reSendOtpEmail(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/otp/email/resend`,\n    data,\n  };\n}\n\nexport function reSendOtpPhoneNumber(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/otp/phone-number/resend`,\n    data,\n  };\n}\n\nexport function verifyEmailOtp(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/otp/email/verify`,\n    data,\n  };\n}\n\nexport function verifyPhoneNumberOtp(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/otp/phone-number/verify`,\n    data,\n  };\n}\n\nexport function registerEmail(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/otp/email/register`,\n    data,\n  };\n}\n\nexport function registerPhoneNumber(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/otp/phone-number/register`,\n    data,\n  };\n}\n", "import type { AxiosRequestConfig } from \"axios\";\n\nexport function getExportPendingTeams(id: number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/organizers/v1/tournaments/${id}/teams/export?status=pending`,\n  };\n}\n\nexport function getExportApprovedTeams(id: number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/organizers/v1/tournaments/${id}/teams/export?status=approved`,\n  };\n}\n\nexport function createTournament(data: any): AxiosRequestConfig {\n  const {\n    requirementFields,\n    isOnline,\n    isKycRequired,\n    isDiscordIdRequired,\n    isEmailRequired,\n    isPhoneNumberRequired,\n    isIgnRequired,\n    isTournamentPost,\n    additionalPlayerCount,\n    ...values\n  } = data;\n\n  const arrayContainsNull = (arr: any) => {\n    return arr.some((item: any) => item === null);\n  };\n\n  const dataToSend = {\n    ...values,\n    requirementFields: data.requirementFields ? data.requirementFields : [],\n    isOnline: data.isOnline ? data.isOnline : false,\n    isKycRequired: data.isKycRequired ? data.isKycRequired : false,\n    isDiscordIdRequired: data.isDiscordIdRequired\n      ? data.isDiscordIdRequired\n      : false,\n    isEmailRequired: data.isEmailRequired ? data.isEmailRequired : false,\n    isPhoneNumberRequired: data.isPhoneNumberRequired\n      ? data.isPhoneNumberRequired\n      : false,\n    isIgnRequired: data.isIgnRequired ? data.isIgnRequired : false,\n    isSlipRequired: data.isSlipRequired ? data.isSlipRequired : false,\n    isTournamentPost: data.isTournamentPost ? data.isTournamentPost : true,\n    additionalPlayerCount: data.additionalPlayerCount\n      ? data.additionalPlayerCount\n      : 0,\n    prize: arrayContainsNull(data.prize) ? [\"\", \"\", \"\"] : data.prize,\n  };\n\n  return {\n    method: \"POST\",\n    url: `/organizers/v1/tournaments`,\n    data: dataToSend,\n  };\n}\n\nexport function updateTournament(data: any, id: number): AxiosRequestConfig {\n  const { requirementFields, prize, ...values } = data;\n  const dataToSend = {\n    ...values,\n    requirementFields: data.requirementFields ? data.requirementFields : [],\n    prize: data.prize ? data.prize : [\"\", \"\", \"\"],\n  };\n\n  return {\n    method: \"PUT\",\n    url: `/organizers/v1/tournaments/${id}`,\n    data: dataToSend,\n  };\n}\n\nexport function deleteTournament(id: string): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/organizers/v1/tournaments/${id}`,\n  };\n}\n\nexport function approveTeam(\n  teamId: number,\n  remark?: string\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: \"/organizers/v1/teams/approve\",\n    data: { remark: remark ? remark : \"\" },\n  };\n}\n\nexport function bulkApproveTeams(teamIds: any): AxiosRequestConfig {\n  // Input array containing strings\n  const inputArray = teamIds;\n\n  // Split the string, convert to numbers, and store in a new array\n  const outputArray = inputArray[0].split(\",\").map(function (item: any) {\n    return parseInt(item, 10); // Use parseFloat(item) for decimal numbers\n  });\n\n  return {\n    method: \"PATCH\",\n    url: `/organizers/v1/teams/approve`,\n    data: { ids: outputArray },\n  };\n}\n\nexport function bulkRejectTeams(\n  teamIds: number[],\n  remark?: string\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/v1/organizer/bulk-approve`,\n    data: { ids: teamIds, remark: remark ? remark : \"\" },\n  };\n}\n\nexport function rejectTeam(\n  teamId: number,\n  remark?: string\n): AxiosRequestConfig {\n  return {\n    method: \"PATCH\",\n    url: `/organizers/v1/teams/${teamId}/reject`,\n    data: { remark: remark ? remark : \"\" },\n  };\n}\n\nexport function removeTeam(\n  teamId: number,\n  remark?: string\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/organizers/v1/teams/${teamId}/remove`,\n    data: { remark: remark ? remark : \"\" },\n  };\n}\n", "import type { AxiosRequestConfig } from \"axios\";\n\nexport function getTournaments(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tournaments`,\n    params,\n  };\n}\n\nexport function getHomeBanner(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/banners/home`,\n    params,\n  };\n}\n\nexport function getTournamentsPaginate(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tournaments/paginate`,\n    params,\n  };\n}\n\nexport function getGames(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/games`,\n    params,\n  };\n}\n\nexport function getGamesWithRanksAndModes(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/games/with-ranks-and-modes`,\n    params,\n  };\n}\n\nexport function getRelatedTournaments(\n  tournamentId: number\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tournaments/relate/${tournamentId}`,\n  };\n}\n\nexport function getTournament(id: number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tournaments/${id}`,\n  };\n}\n\nexport function getTournamentTeam(id: number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tournaments/${id}/teams`,\n  };\n}\n\nexport function getTournamentTeamApproved(id: number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tournaments/${id}/teams?status=approved`,\n  };\n}\n\nexport function getTournamentTeamPending(id: number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tournaments/${id}/teams?status=pending`,\n  };\n}\n\nexport function getTeam(uuid: string | undefined): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/teams/${uuid}`,\n  };\n}\n\nexport function getUserFromUuid(uuid: string): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/profile/${uuid}`,\n  };\n}\n\nexport function getUserSummaryFromUuid(uuid: string): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/profile/${uuid}/summary`,\n  };\n}\n\nexport function getJoinedTournament(uuid: string): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/${uuid}/tournaments`,\n  };\n}\n\nexport function getAllTournamentByOrganizer(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/organizers/v1/tournaments?status=all`,\n  };\n}\n\n/////////////\n// Pending //\n/////////////\nexport function getWebboard(id: string | number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/posts/${id}`,\n  };\n}\n\nexport function getWebboards(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/posts`,\n    params,\n  };\n}\n\nexport function getWebboardsInfo(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/webboards`,\n    params,\n  };\n}\n\nexport function getCommentsFromWebboardId(\n  id: string | number,\n  params?: any\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/posts/${id}/comments`,\n    params,\n  };\n}\n\nexport function getCommentPosition(\n  postId: string | number,\n  commentId: string | number\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/posts/${postId}/comments/${commentId}/position`,\n  };\n}\n\nexport function getWebboardRooms(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/rooms`,\n    params,\n  };\n}\n\nexport function getWebboardTags(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tags`,\n    params,\n  };\n}\n\nexport function getReactions(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/reactions`,\n    params,\n  };\n}\n\nexport function getParties(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `api/v1/party-matchings`,\n    params,\n  };\n}\n\nexport function getParty(\n  id: number | string,\n  gameId: number | string | undefined\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/party-matchings/${id}?game=${gameId}`,\n  };\n}\n\nexport function getTournamentWebboard(id: string | number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/posts/${id}`,\n  };\n}\n\nexport function getSearchUser(params?: any): AxiosRequestConfig {\n  // Rename userName to name in searchParams\n  if (params.userName) {\n    params.name = params.userName;\n    delete params.userName; // Remove userName from searchParams\n  }\n\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/search`,\n    params,\n  };\n}\n", "import type { AxiosRequestConfig } from \"axios\";\n\nexport function me(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: \"/api/v1/users/me\",\n  };\n}\n\nexport function getMyGameProfiles(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: \"/api/v1/users/games\",\n  };\n}\n\nexport function getMyAsset(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: \"/api/v1/frames/me\",\n  };\n}\n\nexport function refreshToken(refreshToken: string): AxiosRequestConfig {\n  const headers = { Authorization: `Bearer ${refreshToken}` };\n  return {\n    method: \"POST\",\n    url: \"/api/v1/auth/refresh-token\",\n    headers,\n  };\n}\n\nexport function submitKyc(data: any): AxiosRequestConfig {\n  const submitData = JSON.parse(data);\n  return {\n    method: \"POST\",\n    url: `/api/v1/auth/verify-id-card`,\n    data: submitData,\n  };\n}\n\nexport function updateProfile(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/profile`,\n    data,\n  };\n}\n\nexport function updateFrame(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/frames/update-user-frame`,\n    data: { frameId: data },\n  };\n}\n\nexport function noFrame(): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/frames/remove-user-frame`,\n  };\n}\n\nexport function updateGameProfile(data: any): AxiosRequestConfig {\n  const sanitizedString = data.gameProfiles.replace(/'/g, \"\");\n  const gameProfilesArray = JSON.parse(sanitizedString);\n\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/games`,\n    data: { gameProfiles: gameProfilesArray },\n  };\n}\n\nexport function updateSignature(data: any): AxiosRequestConfig {\n  return {\n    method: \"PATCH\",\n    url: `/api/v1/users/signature`,\n    data,\n  };\n}\n\nexport function getMyTeamFromTournamentId(\n  tournamentId: number\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/tournaments/${tournamentId}/my-team`,\n  };\n}\n\nexport function createTeam(tournamentId: any, data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/tournaments/${tournamentId}/teams`,\n    data: JSON.parse(data),\n  };\n}\n\nexport function currentUserLike(uuid: string | undefined): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/${uuid}/is-liked`,\n  };\n}\n\nexport function allLikeByUser(\n  uuid: string | undefined,\n  params?: any\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/${uuid}/liked-by`,\n    params,\n  };\n}\n\nexport function likeToggleUser(uuid: string | undefined): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/users/${uuid}/toggle-like`,\n  };\n}\n\nexport function createTeamMember(\n  teamUuid: string | undefined,\n  data: any\n): AxiosRequestConfig {\n  const submitData = JSON.parse(data);\n  return {\n    method: \"POST\",\n    url: `/api/v1/teams/${teamUuid}/join`,\n    data: submitData,\n  };\n}\n\nexport function updateTeamMember(\n  teamMemberUuid: any,\n  data: any\n): AxiosRequestConfig {\n  const submitData = JSON.parse(data);\n  return {\n    method: \"PUT\",\n    url: `/api/v1/teams/${teamMemberUuid}/members`,\n    data: submitData,\n  };\n}\n\nexport function updateTeam(tournamentId: any, data: any): AxiosRequestConfig {\n  const submitData = JSON.parse(data);\n  return {\n    method: \"PUT\",\n    url: `/api/v1/tournaments/${tournamentId}/teams`,\n    data: submitData,\n  };\n}\n\nexport function deleteTeamMember(\n  teamUuid: string,\n  userUuid: string\n): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/teams/${teamUuid}/members/${userUuid}`,\n  };\n}\n\nexport function leaveTeam(teamUuid: string): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/teams/${teamUuid}/leave`,\n  };\n}\n\nexport function submitTeam(teamUuid: string): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/teams/${teamUuid}`,\n  };\n}\n\nexport function deleteTeam(teamUuid: string): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/teams/${teamUuid}`,\n  };\n}\n\nexport function updateDisplayImage(data: any): AxiosRequestConfig {\n  return {\n    method: \"PATCH\",\n    url: `/api/v1/users/display-image`,\n    data: { displayImage: data },\n  };\n}\n\nexport function updateCoverImage(data: any): AxiosRequestConfig {\n  return {\n    method: \"PATCH\",\n    url: `/api/v1/users/cover-image`,\n    data: { coverImage: data },\n  };\n}\n\n/////////////\n// Pending //\n/////////////\nexport function createWebboard(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/posts`,\n    data,\n  };\n}\n\nexport function reportWebboard(\n  id: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/posts/${id}/report`,\n    data,\n  };\n}\n\nexport function reportComment(\n  id: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/comments/${id}/report`,\n    data,\n  };\n}\n\nexport function deleteWebboard(id: string | number): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/posts/${id}`,\n  };\n}\n\nexport function deleteComment(id: string | number): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/comments/${id}`,\n  };\n}\n\nexport function reactionWebboard(\n  id: string | number,\n  reactionId: string | number\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/posts/${id}/reactions/${reactionId}`,\n  };\n}\n\nexport function reactionComment(\n  id: string | number,\n  reactionId: string | number\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/comments/${id}/reactions/${reactionId}`,\n  };\n}\n\nexport function submitPoll(\n  id: string | number,\n  choiceId: string | number\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/polls/${id}/options/${choiceId}`,\n  };\n}\n\nexport function getMyPollAnswer(id: string | number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/polls/${id}/answer`,\n  };\n}\n\nexport function createComment(\n  postId: string | number,\n  comment: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/posts/${postId}/comments`,\n    data: comment,\n  };\n}\n\nexport function getComment(id: string | number): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/comments/${id}`,\n  };\n}\n\nexport function updateComment(\n  commentId: string | number,\n  comment: any\n): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/comments/${commentId}`,\n    data: comment,\n  };\n}\n\nexport function updateWebboard(\n  id: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/posts/${id}`,\n    data,\n  };\n}\n\nexport function getMyActiveParties(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `api/v1/party-matchings/self`,\n    params,\n  };\n}\n\nexport function getMyPartyRequests(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/v1/party-requests/my`,\n    params,\n  };\n}\n\nexport function createParty(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings`,\n    data,\n  };\n}\n\nexport function boostParty(id: string | number): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${id}/boost`,\n  };\n}\n\nexport function updateParty(\n  id: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"PATCH\",\n    url: `/api/v1/party-matchings/${id}`,\n    data,\n  };\n}\n\nexport function leaveParty(id: string | number): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${id}/leave`,\n  };\n}\n\nexport function createPartyMember(\n  partyId: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${partyId}/lock-slot`,\n    data,\n  };\n}\n\nexport function deletePartyMember(\n  partyId: string | number,\n  data: { memberId: string | number }\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${partyId}/kick`,\n    data,\n  };\n}\n\nexport function updatePartyMember(\n  id: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${id}/change-in-game-name`,\n    data,\n  };\n}\n\nexport function getPartyRequests(\n  id: string | number,\n  gameId: string | number\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/party-matchings/${id}/requesters?game=${gameId}`,\n  };\n}\n\nexport function getPartyChats(\n  partyId: string | number,\n  gameId: string | number\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/party-matchings/${partyId}/chats?game=${gameId}`,\n  };\n}\n\nexport function sendMessageToPartyChat(\n  partyId: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${partyId}/chats`,\n    data,\n  };\n}\n\nexport function getPartyRequest(\n  id: string | number,\n  gameId: string | number\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/party-matchings/${id}/my-request?game=${gameId}`,\n  };\n}\n\nexport function approvePartyRequest(\n  partyId: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${partyId}/accept`,\n    data,\n  };\n}\n\nexport function rejectPartyRequest(\n  partyId: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${partyId}/reject`,\n    data,\n  };\n}\n\nexport function deletePartyRequest(\n  partyId: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${partyId}/cancel-request`,\n    data,\n  };\n}\n\nexport function createPartyRequest(\n  partyId: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${partyId}/request`,\n    data,\n  };\n}\n\nexport function joinParty(\n  partyId: string | number,\n  data: any\n): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/party-matchings/${partyId}/join`,\n    data,\n  };\n}\n\nexport function acceptBuySellAgreement(): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/users/accept-buy-sell-agreement`,\n  };\n}\n\nexport function getNotifications(params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/notifications`,\n    params,\n  };\n}\n\nexport function getUnreadNotificationsCount(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/notifications/unread`,\n  };\n}\n\nexport function readAllNotifications(): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/notifications/read-all`,\n  };\n}\n\nexport function getMyWebboards(uuid: string, params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/${uuid}/posts`,\n    params,\n  };\n}\n\nexport function getMyComments(uuid: string, params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/${uuid}/comments`,\n    params,\n  };\n}\n\nexport function submitFeedback(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/users/feedback`,\n    data: data,\n  };\n}\n\nexport function getExperiencesTitle(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/experiences`,\n  };\n}\n\nexport function getExperiences(\n  params: any,\n  firstGameParam: any\n): AxiosRequestConfig {\n  params = Object.keys(params).length !== 0 ? params : firstGameParam;\n\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/experiences/titles`,\n    params,\n  };\n}\n\nexport function createExpereinceTitle(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/users/experiences/titles`,\n    data,\n  };\n}\n\nexport function createExpereince(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/users/experiences`,\n    data,\n  };\n}\n\nexport function editExperienceTitle(id: number, data: any): AxiosRequestConfig {\n  return {\n    method: \"PATCH\",\n    url: `/api/v1/users/experiences/titles/${id}`,\n    data,\n  };\n}\n\nexport function editExperience(id: number, data: any): AxiosRequestConfig {\n  const { rankingGameId, ...rest } = data;\n\n  return {\n    method: \"PATCH\",\n    url: `/api/v1/users/experiences/${id}`,\n    data: rest,\n  };\n}\n\nexport function deleteExperience(id: any): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/users/experiences/${id}`,\n  };\n}\n\nexport function deleteExperienceTitle(id: any): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/users/experiences/titles/${id}`,\n  };\n}\n\nexport function getAlbum(uuid: string, params?: any): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/albums?userUuid=${uuid}&take=1000`,\n  };\n}\n\nexport function createAlbum(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/albums`,\n    data,\n  };\n}\n\nexport function editAlbum(id: number, data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/albums/${id}`,\n    data,\n  };\n}\n\nexport function deleteAlbum(id: any): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/albums/${id}`,\n  };\n}\n\nexport function deletePhotoAlbum(\n  albumId: any,\n  photoId: any\n): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/albums/${albumId}/photos/${photoId}`,\n  };\n}\n\nexport function getSingleAlbum(id: string): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/albums/${id}`,\n  };\n}\n\nexport function getPhotosSingleAlbum(\n  id: string,\n  params?: any\n): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/albums/${id}/photos`,\n    params,\n  };\n}\n\nexport function addAlbumPhotos(id: string, data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/albums/${id}/photos`,\n    data,\n  };\n}\n\nexport function getPersonalDetails(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/personal-details`,\n  };\n}\n\nexport function createPersonalDetails(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/users/personal-details`,\n    data,\n  };\n}\n\nexport function updatePersonalDetails(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/personal-details`,\n    data,\n  };\n}\n\nexport function getUserGameLists(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/ranking-games/games`,\n  };\n}\n\nexport function getUserGameInfo(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/ranking-games`,\n  };\n}\n\nexport function createUserInGame(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/users/ranking-games`,\n    data,\n  };\n}\n\nexport function editUserInGame(id: number, data: any): AxiosRequestConfig {\n  const { experienceTitleId, ...rest } = data;\n\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/ranking-games/${id}`,\n    data: rest,\n  };\n}\n\nexport function deleteUserInGame(id: any): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/users/ranking-games/${id}`,\n  };\n}\n\nexport function getAchievement(): AxiosRequestConfig {\n  return {\n    method: \"GET\",\n    url: `/api/v1/users/achievements`,\n  };\n}\n\nexport function createAchievement(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/users/achievements`,\n    data,\n  };\n}\n\nexport function editAchievementTitle(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/achievements/titles`,\n    data,\n  };\n}\n\nexport function editAchievement(id: number, data: any): AxiosRequestConfig {\n  const { type, ...rest } = data;\n\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/achievements/${id}`,\n    data: rest,\n  };\n}\n\nexport function deleteAchievement(id: any): AxiosRequestConfig {\n  return {\n    method: \"DELETE\",\n    url: `/api/v1/users/achievements/${id}`,\n  };\n}\n\nexport function sortingAlbums(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/albums/sort`,\n    data,\n  };\n}\n\nexport function sortingMyGames(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/ranking-games/sort`,\n    data,\n  };\n}\n\nexport function sortingMyExperienceTitle(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/experiences/titles/sort`,\n    data,\n  };\n}\n\nexport function sortingMyAcheivementTitle(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/achievements/titles/sort`,\n    data,\n  };\n}\n\nexport function sortingMyAcheivement(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/achievements/sort`,\n    data,\n  };\n}\n\nexport function sortingProfile(data: any): AxiosRequestConfig {\n  return {\n    method: \"PUT\",\n    url: `/api/v1/users/profile/sort`,\n    data,\n  };\n}\n", "import type { AxiosRequestConfig } from \"axios\";\nimport axios from \"axios\";\n\nexport function generateUploadPath(data: any): AxiosRequestConfig {\n  const { isSlip, ...values } = data;\n\n  return {\n    method: \"POST\",\n    url: `/api/v1/images/upload`,\n    data: { ...values, isSlip: isSlip === \"true\" ? true : false },\n  };\n}\n\nexport function generateUploadPathMultiple(data: any): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/images/upload/multiple`,\n    data,\n  };\n}\n\nexport async function uploadFile(\n  type: string,\n  presignedUrl: string,\n  data: any\n) {\n  const headers = {\n    \"Content-Type\": type,\n    \"X-Amz-Acl\": \"public-read\",\n  } as any;\n  let output = null;\n  let res = null;\n\n  res = await axios({\n    method: \"PUT\",\n    url: presignedUrl,\n    headers,\n    data,\n  });\n\n  if (res.data) {\n    output = res.data;\n  }\n\n  return { output, ok: true };\n}\n", "import type { AxiosRequestConfig } from \"axios\";\n\nexport function claimReward(rarity: string): AxiosRequestConfig {\n  return {\n    method: \"POST\",\n    url: `/api/v1/frames/claim`,\n    data: { rarity },\n  };\n}\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigation,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { notification, Skeleton } from \"antd\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport { useCallback, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as APIServer from \"~/api\";\nimport { dummyComments, Pagination } from \"~/components/common\";\nimport { WebboardLists } from \"~/components/pages/Webboard\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport { resetFetcher } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { uuid } = params;\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let commentRes: any;\n  let comments: any;\n  const me = session.get(\"me\");\n\n  try {\n    if (uuid !== undefined) {\n      if (me) {\n        commentRes = await APIServer.clientFromSession(session).request(\n          APIServer.getMyComments(uuid, searchParams)\n        );\n      } else {\n        commentRes = await APIServer.clientFromSession().request(\n          APIServer.getMyComments(uuid, searchParams)\n        );\n      }\n\n      if (commentRes.data) {\n        comments = commentRes.data;\n      }\n    }\n  } catch (e) {\n    comments = dummyComments; // FIXME: remove this out\n    console.log(\"my comments error\", e);\n  }\n  return json({ searchParams, comments });\n};\n\nexport default function UserMyComments() {\n  const { searchParams, comments } = useLoaderData();\n  const revalidator = useRevalidator();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const [api, contextHolder] = notification.useNotification();\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-webboard\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <>\n      {navigation.state === \"loading\" &&\n      navigation.location.pathname === location.pathname ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <WebboardLists\n            data={comments.items}\n            fetcher={fetcher}\n            isMyWebboard={true}\n          />\n          <Pagination\n            currentPage={comments.page}\n            totalPages={comments.totalPages}\n            onPageClicked={handleChangePage}\n          />\n        </>\n      )}\n      {contextHolder}\n    </>\n  );\n}\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigation,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { notification, Skeleton } from \"antd\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport { useCallback, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as APIServer from \"~/api\";\nimport { dummyWebboards, Pagination } from \"~/components/common\";\nimport { WebboardLists } from \"~/components/pages/Webboard\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport { resetFetcher } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { uuid } = params;\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let webboardRes: any;\n  let webboards: any;\n  const me = session.get(\"me\");\n\n  try {\n    if (uuid !== undefined) {\n      if (me) {\n        webboardRes = await APIServer.clientFromSession(session).request(\n          APIServer.getMyWebboards(uuid, searchParams)\n        );\n      } else {\n        webboardRes = await APIServer.clientFromSession().request(\n          APIServer.getMyWebboards(uuid, searchParams)\n        );\n      }\n      if (webboardRes.data) {\n        webboards = webboardRes.data;\n      }\n    }\n  } catch (e) {\n    webboards = dummyWebboards; // FIXME: remove this out\n    console.log(\"my webboards error\", e);\n  }\n  return json({ searchParams, webboards });\n};\n\nexport default function UserMyWebboards() {\n  const { searchParams, webboards } = useLoaderData();\n  const revalidator = useRevalidator();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const [api, contextHolder] = notification.useNotification();\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-webboard\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <>\n      {navigation.state === \"loading\" &&\n      navigation.location.pathname === location.pathname ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <WebboardLists\n            data={webboards.items}\n            fetcher={fetcher}\n            isMyWebboard={true}\n          />\n          <Pagination\n            currentPage={webboards.page}\n            totalPages={webboards.totalPages}\n            onPageClicked={handleChangePage}\n          />\n        </>\n      )}\n      {contextHolder}\n    </>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { Form, Input, Result, Space, Typography } from \"antd\";\nimport { LoadingOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { TextEditor, TiltButton } from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n} from \"@remix-run/node\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nconst { Text, Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  let personalDetails: any[] = [];\n  try {\n    const personalDetailsRes = await APIServer.clientFromSession(\n      session\n    ).request(APIServer.getPersonalDetails());\n    if (personalDetailsRes.data) {\n      personalDetails = personalDetailsRes.data;\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({ personalDetails });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = JSON.parse(entries.data);\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        console.log(\"e\", e.response.data);\n\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\nexport default function SettingsPersonalDetails() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { personalDetails } = useLoaderData();\n  const [textEditorLoading, setTextEditorLoading] = useState<boolean>(true);\n  const { scheme } = useContext(AppContext);\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  // const action = personalDetails[0]?.title ? \"update\" : \"update\";\n  const action = \"update\";\n\n  const initialValues = personalDetails\n    ? { personalDetails: personalDetails.details }\n    : {\n        personalDetails: [\n          {\n            id: 1,\n            title: \"12312\",\n            description: \"\",\n            createdAt: \"2024-04-25T15:51:54.467Z\",\n          },\n        ],\n      };\n\n  const handlePersonalDetails = (values: any) => {\n    submit(\n      {\n        data: JSON.stringify(values),\n        action: action,\n      },\n      { method: \"post\" }\n    );\n  };\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Space size={10} direction=\"vertical\" style={{ marginBottom: 20 }}>\n        <Title level={2} style={{ margin: 0 }}>\n          {t(\"personal details\")}\n        </Title>\n      </Space>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"dynamic_form_complex\"\n        style={{\n          maxWidth: 600,\n        }}\n        autoComplete=\"off\"\n        initialValues={initialValues}\n        onFinish={handlePersonalDetails}\n      >\n        <Form.List name=\"personalDetails\">\n          {(fields, { add, remove }) => (\n            <div\n              style={{\n                display: \"flex\",\n                rowGap: 16,\n                flexDirection: \"column\",\n              }}\n            >\n              {fields.map((field, index: number) => (\n                // <Card\n                //   size=\"small\"\n                //   title={`Item ${field.name + 1}`}\n                //   key={field.key}\n                //   bordered={false}\n                //   extra={\n                // <CloseOutlined\n                //   onClick={() => {\n                //     remove(field.name);\n                //   }}\n                // />\n                //   }\n                // >\n                <div key={field.key}>\n                  <Form.Item\n                    label=\"id\"\n                    name={[\"id\"]}\n                    style={{ display: \"none\" }}\n                  />\n\n                  <Space\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    <Text\n                      style={{ fontWeight: 600, fontSize: \"inherit\" }}\n                      className=\"required\"\n                    >\n                      {t(\"title personal details\")}\n                    </Text>\n                    <div\n                      onClick={() => {\n                        remove(field.name);\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {index === 0 ? null : (\n                        <Space style={{ color: \"#D61515\" }}>\n                          <DeleteOutlined />\n                          <Text\n                            style={{\n                              fontWeight: 600,\n                              fontSize: \"inherit\",\n                              color: \"#D61515\",\n                            }}\n                          >\n                            {t(\"delete detail box\")}\n                          </Text>\n                        </Space>\n                      )}\n                    </div>\n                  </Space>\n                  <Form.Item\n                    key=\"title\"\n                    name={[field.name, \"title\"]} // Use the correct name path\n                    rules={[\n                      {\n                        required: true,\n                        message: t(\"please input title\"),\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  {!textEditorLoading ? (\n                    <>\n                      <Text\n                        style={{\n                          fontWeight: 600,\n                          fontSize: \"inherit\",\n                        }}\n                        className=\"required\"\n                      >\n                        {t(\"detail personal details\")}\n                      </Text>\n                      <Space\n                        size={10}\n                        direction=\"vertical\"\n                        style={{ display: \"flex\", marginTop: 10 }}\n                      >\n                        <Form.Item\n                          key=\"detail\"\n                          name={[field.name, \"detail\"]} // Use the correct name path\n                          rules={[\n                            {\n                              required: true,\n                              message: t(\"please input detail\"),\n                            },\n                          ]}\n                        >\n                          <TextEditor\n                            id=\"detail\"\n                            initialValues={\n                              initialValues?.personalDetails[index]?.detail\n                            }\n                            fetcher={fetcher}\n                            onChange={(values: any) =>\n                              form.setFieldValue(\"detail\", values)\n                            }\n                          />\n                        </Form.Item>\n                      </Space>\n                    </>\n                  ) : (\n                    <Result\n                      icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n                    />\n                  )}\n                </div>\n              ))}\n\n              <TiltButton\n                color={`${scheme}-base`}\n                onClick={() => add()}\n                style={{ marginTop: 20 }}\n              >\n                + {t(\"Add Item\")}\n              </TiltButton>\n            </div>\n          )}\n        </Form.List>\n\n        <Form.Item noStyle shouldUpdate>\n          {() => (\n            <Typography>\n              <pre>{JSON.stringify(form.getFieldsValue(), null, 2)}</pre>\n            </Typography>\n          )}\n        </Form.Item>\n      </Form>\n      <TiltButton\n        color=\"primary\"\n        onClick={form.submit}\n        style={{ marginTop: 20 }}\n      >\n        {t(\"save\")}\n      </TiltButton>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.sortingMyAcheivementTitle(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully sorted my achievement title`,\n    });\n    await commitSession(session);\n\n    return json({\n      success: \"sort-my achievement title\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to sorted my achievement title\",\n    });\n    await commitSession(session);\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.sortingMyExperienceTitle(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully sorted my experience title`,\n    });\n    await commitSession(session);\n\n    return json({\n      success: \"sort-my experience title\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to create my experience title\",\n    });\n    await commitSession(session);\n    return null;\n  }\n};\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Card, Result } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport * as APIServer from \"~/api\";\nimport { TournamentGrid } from \"~/components/pages/Tournament\";\nimport { joinTournaments } from \"~/utils/helper\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const session = await getSessionFromRequest(request);\n  const { uuid } = params;\n  const accessToken = session.get(\"accessToken\");\n  let uuidUser = \"\" as string;\n  let tournaments: any[] = [];\n  let transformedTournaments: any[] = [];\n  let joinedTournaments: any[] = [];\n  let transformedJoinedTournaments: any[] = [];\n  if (uuid) {\n    try {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getJoinedTournament(uuid)\n      );\n      if (tournamentRes.data) {\n        tournaments = tournamentRes.data;\n      }\n\n      transformedTournaments = tournaments.map((item) => {\n        return {\n          id: item.tournament.id,\n          name: item.tournament.name,\n          nameEn: item.tournament.nameEn,\n          discordUrl: item.tournament.discordUrl,\n          registrationStartDate: item.tournament.registrationStartDate,\n          registrationEndDate: item.tournament.registrationEndDate,\n          startDate: item.tournament.startDate,\n          endDate: item.tournament.endDate,\n          maxTeam: item.tournament.maxTeam,\n          playerCount: item.tournament.playerCount,\n          additionalPlayerCount: item.tournament.additionalPlayerCount,\n          type: item.tournament.type,\n          status: item.tournament.status,\n          finalRoundLocation: item.tournament.finalRoundLocation,\n          finalRoundLocationEn: item.tournament.finalRoundLocationEn,\n          prize: item.tournament.prize,\n          description: item.tournament.description,\n          descriptionEn: item.tournament.descriptionEn,\n          qualificationRules: item.tournament.qualificationRules,\n          qualificationRulesEn: item.tournament.qualificationRulesEn,\n          isOnline: item.tournament.isOnline,\n          bannerImageUrl: item.tournament.bannerImageUrl,\n          thumbnailImageUrl: item.tournament.thumbnailImageUrl,\n          remark: item.tournament.remark,\n          isKycRequired: item.tournament.isKycRequired,\n          isDiscordIdRequired: item.tournament.isDiscordIdRequired,\n          isEmailRequired: item.tournament.isEmailRequired,\n          isPhoneNumberRequired: item.tournament.isPhoneNumberRequired,\n          isIgnRequired: item.tournament.isIgnRequired,\n          requirementFields: item.tournament.requirementFields,\n          organizerId: item.tournament.organizerId,\n          gameId: item.tournament.gameId,\n          organizer: item.tournament.organizer,\n          game: item.tournament.game,\n          createdDate: item.tournament.createdDate,\n          updatedDate: item.tournament.updatedDate,\n        };\n      });\n      tournaments = transformedTournaments;\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n  }\n\n  if (accessToken) {\n    const accessTokenDecoded: any = jwt_decode(accessToken);\n    uuidUser = accessTokenDecoded.sub;\n    try {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getJoinedTournament(uuidUser)\n      );\n      if (tournamentRes.data) {\n        joinedTournaments = tournamentRes.data;\n      }\n\n      transformedJoinedTournaments = joinedTournaments.map((item) => {\n        return {\n          id: item.tournament.id,\n          name: item.tournament.name,\n          nameEn: item.tournament.nameEn,\n          discordUrl: item.tournament.discordUrl,\n          registrationStartDate: item.tournament.registrationStartDate,\n          registrationEndDate: item.tournament.registrationEndDate,\n          startDate: item.tournament.startDate,\n          endDate: item.tournament.endDate,\n          maxTeam: item.tournament.maxTeam,\n          playerCount: item.tournament.playerCount,\n          additionalPlayerCount: item.tournament.additionalPlayerCount,\n          type: item.tournament.type,\n          status: item.tournament.status,\n          finalRoundLocation: item.tournament.finalRoundLocation,\n          finalRoundLocationEn: item.tournament.finalRoundLocationEn,\n          prize: item.tournament.prize,\n          description: item.tournament.description,\n          descriptionEn: item.tournament.descriptionEn,\n          qualificationRules: item.tournament.qualificationRules,\n          qualificationRulesEn: item.tournament.qualificationRulesEn,\n          isOnline: item.tournament.isOnline,\n          bannerImageUrl: item.tournament.bannerImageUrl,\n          thumbnailImageUrl: item.tournament.thumbnailImageUrl,\n          remark: item.tournament.remark,\n          isKycRequired: item.tournament.isKycRequired,\n          isDiscordIdRequired: item.tournament.isDiscordIdRequired,\n          isEmailRequired: item.tournament.isEmailRequired,\n          isPhoneNumberRequired: item.tournament.isPhoneNumberRequired,\n          isIgnRequired: item.tournament.isIgnRequired,\n          requirementFields: item.tournament.requirementFields,\n          organizerId: item.tournament.organizerId,\n          gameId: item.tournament.gameId,\n          organizer: item.tournament.organizer,\n          game: item.tournament.game,\n          createdDate: item.tournament.createdDate,\n          updatedDate: item.tournament.updatedDate,\n        };\n      });\n      tournaments = joinTournaments(\n        transformedTournaments,\n        transformedJoinedTournaments\n      );\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n  }\n  return json({ uuid, tournaments });\n};\n\nexport default function UserJoinedTournaments() {\n  const { tournaments } = useLoaderData();\n  const { t } = useTranslation();\n\n  return tournaments.length ? (\n    <TournamentGrid loading={tournaments === null} data={tournaments} />\n  ) : (\n    <Card style={{ borderRadius: 10 }}>\n      <Result icon={<InboxOutlined />} title={t(\"no past tournament\")} />\n    </Card>\n  );\n}\n", "import { Space } from \"antd\";\nimport { CalendarOutlined } from \"@ant-design/icons\";\nimport dayjs from \"dayjs\";\n\ninterface TournamentDateProps {\n  startDate: string;\n  endDate: string;\n  size?: number;\n}\n\nexport function TournamentDate(props: TournamentDateProps) {\n  const { startDate, endDate, size } = props;\n\n  return (\n    <Space\n      direction=\"horizontal\"\n      size={5}\n      style={size ? { fontSize: size } : {}}\n    >\n      <CalendarOutlined />\n      {`${dayjs(startDate).format(\"DD MMM\")} - ${dayjs(endDate).format(\n        \"DD MMM\"\n      )}`}\n    </Space>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Card, Skeleton, Space, Typography } from \"antd\";\nimport { TournamentDate, TournamentEntryHeader, TournamentEntryLabel } from \".\";\nimport { Author, TiltButton } from \"~/components/common\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { useContext } from \"react\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { renderData } from \"~/utils/helper\";\n\nconst { Title } = Typography;\n\ninterface TournamentEntryProps {\n  data: any;\n  loading?: boolean;\n}\n\nexport function TournamentEntry(props: TournamentEntryProps) {\n  const { t } = useTranslation();\n  const { user } = useContext(AuthContext);\n  const { locale } = useContext(AppContext);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { data, loading } = props;\n  const navigate = useNavigate();\n  const itemHeadStyle = {\n    position: \"relative\",\n    width: \"100%\",\n    paddingBottom: \"50%\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundImage:\n      data && data.thumbnailImageUrl\n        ? `url(\"${cdnUrl}/${data.thumbnailImageUrl}\")`\n        : `url(\"/image/placeholder.png\")`, // change this to tournamet image,\n  } as any;\n\n  const handleClick = () => {\n    navigate(`/tournaments/${data.id}`);\n  };\n\n  if (loading) {\n    return (\n      <Card bordered={false} style={{ borderRadius: 10 }}>\n        <Skeleton active />\n      </Card>\n    );\n  }\n\n  return (\n    <Space\n      onClick={handleClick}\n      direction=\"vertical\"\n      size={0}\n      style={{ display: \"flex\", height: \"100%\", cursor: \"pointer\" }}\n    >\n      <Card\n        bordered={false}\n        style={{ borderRadius: 10, zIndex: 1 }}\n        headStyle={itemHeadStyle}\n        bodyStyle={{ padding: 15 }}\n        title={\n          <TournamentEntryHeader\n            game={data.game}\n            participants={data.maxTeam}\n            reward={data.totalPrize}\n          />\n        }\n      >\n        <Space direction=\"vertical\" size={3} style={{ display: \"flex\" }}>\n          <Title\n            level={5}\n            style={{\n              margin: 0,\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n            }}\n          >\n            {renderData(data, \"name\", locale)}\n          </Title>\n          <TournamentDate\n            startDate={data.startDate}\n            endDate={data.endDate}\n            size={13}\n          />\n          <Author\n            avatarSize={20}\n            fontSize={13}\n            displayImage={\n              data?.organizer?.displayImage\n                ? `${cdnUrl}/${data?.organizer?.displayImage}`\n                : undefined\n            }\n          >\n            {data?.organizer?.displayName\n              ? data?.organizer?.displayName\n              : user.displayName}\n          </Author>\n          {data.status === \"opening\" ? (\n            <TiltButton color=\"primary\" style={{ marginTop: 15 }}>\n              {t(\"attend\")}\n            </TiltButton>\n          ) : data.status === \"joined\" ? (\n            <TiltButton color=\"secondary\" style={{ marginTop: 15 }}>\n              {t(\"attended\")}\n            </TiltButton>\n          ) : (\n            <div style={{ height: 40, marginTop: 15 }} />\n          )}\n        </Space>\n      </Card>\n      <div style={{ paddingInline: 15 }}>\n        <TournamentEntryLabel\n          status={data.status}\n          startDate={data.registrationStartDate}\n          endDate={data.registrationEndDate}\n        />\n      </div>\n    </Space>\n  );\n}\n", "import { Space, Tag } from \"antd\";\nimport { TournamentGame, TournamentReward } from \".\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface TournamentEntryHeaderProps {\n  game: string;\n  participants: number;\n  reward: number;\n}\n\nexport function TournamentEntryHeader(props: TournamentEntryHeaderProps) {\n  const { t } = useTranslation();\n  const { game, participants, reward } = props;\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"10px 15px\",\n      }}\n    >\n      <Space\n        style={{\n          display: \"flex\",\n          flex: \"0 0 auto\",\n          justifyContent: \"space-between\",\n          alignItems: \"start\",\n        }}\n      >\n        <Tag color=\"#000\" bordered={false}>\n          {`${participants} ${t(\"teams\")}`}\n        </Tag>\n        <TournamentGame size={36} game={game} />\n      </Space>\n      <Space\n        style={{ display: \"flex\", flex: \"auto\", alignItems: \"end\" }}\n        size={0}\n      >\n        <TournamentReward reward={reward} />\n      </Space>\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { Card, Space, Typography, theme } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nconst { useToken } = theme;\nconst { Text } = Typography;\n\ninterface TournamentEntryLabelProps {\n  status: string;\n  startDate?: string;\n  endDate?: string;\n}\n\nexport function TournamentEntryLabel(props: TournamentEntryLabelProps) {\n  const { status, startDate, endDate } = props;\n  const { token } = useToken();\n  const { t } = useTranslation();\n  let label: React.ReactNode;\n\n  switch (status) {\n    case \"ongoing\":\n      label = <Text style={{ color: \"#000\" }}>{t(\"tournament ongoing\")}</Text>;\n      break;\n    case \"upcoming\":\n      label = (\n        <Space direction=\"horizontal\" size={5} wrap>\n          <Text>{t(\"opening registration\")}</Text>\n          {startDate && (\n            <Text style={{ fontWeight: 600 }}>\n              {dayjs(startDate).format(\"DD MMM YYYY\")}\n            </Text>\n          )}\n        </Space>\n      );\n      break;\n    case \"finished\":\n      label = <Text>{t(\"tournament finished\")}</Text>;\n      break;\n    default:\n      label = (\n        <Space direction=\"horizontal\" size={5} wrap>\n          <Text>{t(\"opening registration\")}</Text>\n          {startDate && (\n            <Text style={{ fontWeight: 600 }}>\n              {`${t(\"today\")} - ${dayjs(endDate).format(\"DD MMM YYYY\")}`}\n            </Text>\n          )}\n        </Space>\n      );\n      break;\n  }\n\n  return (\n    <Card\n      bodyStyle={{ padding: 10, textAlign: \"center\" }}\n      bordered={false}\n      style={{\n        borderRadius: 10,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0,\n        backgroundColor:\n          status === \"ongoing\" ? token.colorPrimary : token.colorBgBase,\n      }}\n    >\n      {label}\n    </Card>\n  );\n}\n", "import dayjs from \"dayjs\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  DatePicker,\n  Divider,\n  Form,\n  Image,\n  Input,\n  notification,\n  Result,\n  Row,\n  Select,\n  Space,\n  Switch,\n  Typography,\n} from \"antd\";\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport { FileUploader, TextEditor, TiltButton } from \"~/components/common\";\nimport { isArray } from \"lodash\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\n\ninterface TournamentFormProps {\n  fetcher: any;\n  form: any;\n  games: any;\n  initialAdditionalLength?: number;\n  prizeInitialAdditionalLength?: number;\n  loading?: boolean;\n  submitLabel: string;\n  edit?: boolean;\n}\n\nexport function TournamentForm(props: TournamentFormProps) {\n  const {\n    fetcher,\n    form,\n    games,\n    initialAdditionalLength,\n    prizeInitialAdditionalLength,\n    loading,\n    submitLabel,\n  } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [textEditorLoading, setTextEditorLoading] = useState<boolean>(true);\n  const [additionalFieldsLength, setAdditionalFieldsLength] = useState<number>(\n    initialAdditionalLength ? initialAdditionalLength : 0\n  );\n  const [prizeAdditionalFieldsLength, setPrizeAdditionalFieldsLength] =\n    useState<number>(\n      prizeInitialAdditionalLength ? prizeInitialAdditionalLength : 3\n    );\n\n  const gameOptions: any[] = [];\n  if (isArray(games) && games.length > 0) {\n    games.map((game: any) => {\n      gameOptions.push({\n        label: game.name,\n        value: game.id,\n      });\n    });\n  }\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleAddMoreFields = () => {\n    setAdditionalFieldsLength((previous) => 1 + previous);\n  };\n\n  const handleAddMorePrizeFields = () => {\n    setPrizeAdditionalFieldsLength((previous) => 1 + previous);\n  };\n\n  const valueZeroRemart = t(\"value must be higher than 0\");\n\n  const handleDeleteAdditionalField = useCallback(\n    (index: number) => {\n      if (\n        index != additionalFieldsLength - 1 &&\n        additionalFieldsLength - 1 > 0\n      ) {\n        Array(additionalFieldsLength - 1)\n          .fill(\"\")\n          .map((field, i) => {\n            if (i >= index) {\n              form.setFieldsValue({\n                [`additionalFields[${i}][\"isRequired\"]`]: form.getFieldValue(\n                  `additionalFields[${i + 1}][\"isRequired\"]`\n                ),\n                [`additionalFields[${i}][\"type\"]`]: form.getFieldValue(\n                  `additionalFields[${i + 1}][\"type\"]`\n                ),\n                [`additionalFields[${i}][\"name\"]`]: form.getFieldValue(\n                  `additionalFields[${i + 1}][\"name\"]`\n                ),\n                [`additionalFields[${i}][\"nameEn\"]`]: form.getFieldValue(\n                  `additionalFields[${i + 1}][\"nameEn\"]`\n                ),\n              });\n            }\n          });\n      }\n      form.resetFields([\n        `additionalFields[${additionalFieldsLength - 1}][\"isRequired\"]`,\n        `additionalFields[${additionalFieldsLength - 1}][\"type\"]`,\n        `additionalFields[${additionalFieldsLength - 1}][\"name\"]`,\n        `additionalFields[${additionalFieldsLength - 1}][\"nameEn\"]`,\n      ]);\n      setAdditionalFieldsLength((previous) => previous - 1);\n    },\n    [additionalFieldsLength, form]\n  );\n\n  const handleDeletePrizeAdditionalField = useCallback(\n    (index: number) => {\n      if (\n        index != prizeAdditionalFieldsLength - 1 &&\n        prizeAdditionalFieldsLength - 1 > 0\n      ) {\n        Array(prizeAdditionalFieldsLength - 1)\n          .fill(\"\")\n          .map((field, i) => {\n            if (i >= index) {\n              form.setFieldsValue({\n                [`prize[${i}]`]: form.getFieldValue(`prize[${i + 1}]`),\n              });\n            }\n          });\n      }\n      form.resetFields([`prize[${prizeAdditionalFieldsLength - 1}]`]);\n      setPrizeAdditionalFieldsLength((previous) => previous - 1);\n    },\n    [prizeAdditionalFieldsLength, form]\n  );\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"thumbnailImageUrl\") {\n        form.setFieldValue(\"thumbnailImageUrl\", fetcher.data.key);\n      }\n      if (fetcher.data.field === \"bannerImageUrl\") {\n        form.setFieldValue(\"bannerImageUrl\", fetcher.data.key);\n      }\n      setUploading(false);\n    }\n  }, [form, fetcher.data]);\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <>\n      <Row gutter={20}>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"gameId\"\n            name=\"gameId\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please select game\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"game\")}\n              </Text>\n            }\n          >\n            <Select options={gameOptions} />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"type\"\n            name=\"type\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please select tournament type\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"tournament type\")}\n              </Text>\n            }\n          >\n            <Select\n              options={[\n                {\n                  label: t(\"single elimination\"),\n                  value: \"single_elimination\",\n                },\n              ]}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8} style={{ display: \"none\" }}>\n          <Form.Item\n            key=\"isOnline\"\n            name=\"isOnline\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is online\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item\n        key=\"name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: t(\"please input tournament name\"),\n          },\n        ]}\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"tournament name\")}\n          </Text>\n        }\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        key=\"nameEn\"\n        name=\"nameEn\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"tournament name (English)\")}\n          </Text>\n        }\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        key=\"discordUrl\"\n        name=\"discordUrl\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"discord url\")}\n          </Text>\n        }\n      >\n        <Input />\n      </Form.Item>\n      <Row gutter={20}>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isKycRequired\"\n            name=\"isKycRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is kyc required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isDiscordIdRequired\"\n            name=\"isDiscordIdRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is discordId required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isEmailRequired\"\n            name=\"isEmailRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is email required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isPhoneNumberRequired\"\n            name=\"isPhoneNumberRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is phone Number required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isIgnRequired\"\n            name=\"isIgnRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is ign required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isSlipRequired\"\n            name=\"isSlipRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is slip required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Divider />\n      <Space\n        direction=\"vertical\"\n        size={5}\n        style={{ display: \"flex\", marginBottom: 20 }}\n      >\n        <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n          <Col flex=\"auto\">\n            <Text className=\"required\" style={{ fontWeight: 600 }}>\n              {t(\"please upload thumnail image\")} ({t(\"recommended ratio\")} 2:1)\n            </Text>\n          </Col>\n          <Col flex=\"none\">\n            <Form.Item\n              key=\"thumbnailImageUrl\"\n              name=\"thumbnailImageUrl\"\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please upload thumnail image\")} ${t(\n                    \"recommended ratio\"\n                  )} 2:1`,\n                },\n              ]}\n            >\n              <FileUploader\n                fetcher={fetcher}\n                fieldName={\"thumbnailImageUrl\"}\n                onUploading={setUploading}\n                onErrorFileTooLarge={handleFileTooLarge}\n              >\n                <Space size={5} style={{ cursor: \"pointer\" }}>\n                  <EditOutlined style={{ color: \"#8263ea\" }} />\n                  <Text>{t(\"upload\")}</Text>\n                </Space>\n              </FileUploader>\n            </Form.Item>\n          </Col>\n        </Row>\n        {uploading ? (\n          <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n        ) : form && form.getFieldValue(\"thumbnailImageUrl\") ? (\n          <Image\n            preview={false}\n            style={{ maxWidth: 400 }}\n            src={`${cdnUrl}/${form.getFieldValue(\"thumbnailImageUrl\")}`}\n          />\n        ) : (\n          <></>\n        )}\n      </Space>\n      <Space\n        direction=\"vertical\"\n        size={5}\n        style={{ display: \"flex\", marginBottom: 20 }}\n      >\n        <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n          <Col flex=\"auto\">\n            <Text className=\"required\" style={{ fontWeight: 600 }}>\n              {t(\"please upload banner image\")} ({t(\"recommended ratio\")} 3:1)\n            </Text>\n          </Col>\n          <Col flex=\"none\">\n            <Form.Item\n              key=\"bannerImageUrl\"\n              name=\"bannerImageUrl\"\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please upload banner image\")} ${t(\n                    \"recommended ratio\"\n                  )} 3:1`,\n                },\n              ]}\n            >\n              <FileUploader\n                fetcher={fetcher}\n                fieldName={\"bannerImageUrl\"}\n                onUploading={setUploading}\n                onErrorFileTooLarge={handleFileTooLarge}\n              >\n                <Space size={5} style={{ cursor: \"pointer\" }}>\n                  <EditOutlined style={{ color: \"#8263ea\" }} />\n                  <Text>{t(\"upload\")}</Text>\n                </Space>\n              </FileUploader>\n            </Form.Item>\n          </Col>\n        </Row>\n        {uploading ? (\n          <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n        ) : form && form.getFieldValue(\"bannerImageUrl\") ? (\n          <Image\n            preview={false}\n            style={{ maxWidth: 400 }}\n            src={`${cdnUrl}/${form.getFieldValue(\"bannerImageUrl\")}`}\n          />\n        ) : (\n          <></>\n        )}\n      </Space>\n      <Divider />\n      <Row gutter={20}>\n        <Col span={12}>\n          <Form.Item\n            name=\"registrationStartDate\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"registration start date\")}\n              </Text>\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"please select registration start date\")}`,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  } else {\n                    if (getFieldValue(\"registrationEndDate\")) {\n                      if (\n                        value.isBefore(\n                          dayjs(getFieldValue(\"registrationEndDate\"))\n                        )\n                      ) {\n                        return Promise.resolve();\n                      }\n                    } else {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"start date must be before end date\");\n                  }\n                },\n              }),\n            ]}\n          >\n            <DatePicker\n              name=\"registrationStartDate\"\n              showToday={false}\n              allowClear={false}\n              placeholder=\"DD/MM/YYYY\"\n              format=\"DD/MM/YYYY\"\n              style={{ display: \"flex\" }}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            name=\"registrationEndDate\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"registration end date\")}\n              </Text>\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"please select registration end date\")}`,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || !getFieldValue(\"registrationStartDate\")) {\n                    return Promise.resolve();\n                  }\n                  if (\n                    value.isAfter(dayjs(getFieldValue(\"registrationStartDate\")))\n                  ) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    \"end date must be after the start date\"\n                  );\n                },\n              }),\n            ]}\n          >\n            <DatePicker\n              name=\"registrationEndDate\"\n              showToday={false}\n              allowClear={false}\n              placeholder=\"DD/MM/YYYY\"\n              format=\"DD/MM/YYYY\"\n              style={{ display: \"flex\" }}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={20}>\n        <Col span={12}>\n          <Form.Item\n            name=\"startDate\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"start date\")}\n              </Text>\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"please select start date\")}`,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  } else {\n                    if (getFieldValue(\"endDate\")) {\n                      if (value.isBefore(dayjs(getFieldValue(\"endDate\")))) {\n                        return Promise.resolve();\n                      }\n                    } else {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      \"start date must be before end date and at least 2 days later than today\"\n                    );\n                  }\n                },\n              }),\n            ]}\n          >\n            <DatePicker\n              name=\"startDate\"\n              showToday={false}\n              allowClear={false}\n              placeholder=\"DD/MM/YYYY\"\n              format=\"DD/MM/YYYY\"\n              style={{ display: \"flex\" }}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            name=\"endDate\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"end date\")}\n              </Text>\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"please select end date\")}`,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || !getFieldValue(\"startDate\")) {\n                    return Promise.resolve();\n                  }\n                  if (value.isAfter(dayjs(getFieldValue(\"startDate\")))) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    \"end date must be after the start date\"\n                  );\n                },\n              }),\n            ]}\n          >\n            <DatePicker\n              name=\"endDate\"\n              showToday={false}\n              allowClear={false}\n              placeholder=\"DD/MM/YYYY\"\n              format=\"DD/MM/YYYY\"\n              style={{ display: \"flex\" }}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Divider />\n      <Row gutter={20}>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"maxTeam\"\n            name=\"maxTeam\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input max team\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"maximum team\")}\n              </Text>\n            }\n          >\n            <Select\n              options={[\n                {\n                  value: 8,\n                  label: \"8\",\n                },\n                {\n                  value: 16,\n                  label: \"16\",\n                },\n                {\n                  value: 32,\n                  label: \"32\",\n                },\n                {\n                  value: 64,\n                  label: \"64\",\n                },\n                {\n                  value: 128,\n                  label: \"128\",\n                },\n                {\n                  value: 256,\n                  label: \"256\",\n                },\n                {\n                  value: 512,\n                  label: \"512\",\n                },\n              ]}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"playerCount\"\n            name=\"playerCount\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input number of required player\"),\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"required players\")}\n              </Text>\n            }\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"additionalPlayerCount\"\n            name=\"additionalPlayerCount\"\n            rules={[\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"additional player\")}\n              </Text>\n            }\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Divider />\n      <Form.Item\n        key=\"finalRoundLocation\"\n        name=\"finalRoundLocation\"\n        // rules={[\n        //   {\n        //     required: true,\n        //     message: t(\"final round location\"),\n        //   },\n        // ]}\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"final round location\")}\n          </Text>\n        }\n      >\n        <Input.TextArea rows={4} />\n      </Form.Item>\n      <Form.Item\n        key=\"finalRoundLocationEn\"\n        name=\"finalRoundLocationEn\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"final round location (English)\")}\n          </Text>\n        }\n      >\n        <Input.TextArea rows={4} />\n      </Form.Item>\n      <Divider />\n      <Form.Item\n        key=\"totalPrize\"\n        name=\"totalPrize\"\n        // rules={[\n        //   {\n        //     required: true,\n        //     message: t(\"please input tournament name\"),\n        //   },\n        // ]}\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"total prize\")}\n          </Text>\n        }\n      >\n        <Input type=\"number\" />\n      </Form.Item>\n      <Row gutter={[20, 10]} style={{ marginTop: 15, marginBottom: 10 }}>\n        <Col flex=\"auto\">\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"prize additional fields\")}\n          </Text>\n        </Col>\n      </Row>\n      {prizeAdditionalFieldsLength > 0 && (\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          {Array(prizeAdditionalFieldsLength)\n            .fill(\"\")\n            .map((field, index: number) => (\n              <Row\n                key={index}\n                gutter={[10, 15]}\n                style={{ alignItems: \"center\" }}\n              >\n                <div style={{ marginLeft: \"6px\", marginRight: \"10px\" }}>\n                  {t(\"prizeNumber\")} {index + 1}\n                </div>\n                <Col flex=\"auto\">\n                  <Form.Item\n                    name={`prize[${index}]`}\n                    style={{ marginBottom: 0 }}\n                    rules={[\n                      {\n                        validator: async () => {\n                          if (prizeAdditionalFieldsLength > 10) {\n                            return Promise.reject(\n                              new Error(t(\"maximum 10 prizes\"))\n                            );\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Input placeholder={t(\"prize\")} />\n                  </Form.Item>\n                </Col>\n                <Col flex=\"none\">\n                  <Button\n                    danger\n                    icon={<DeleteOutlined />}\n                    onClick={() => handleDeletePrizeAdditionalField(index)}\n                  />\n                </Col>\n              </Row>\n            ))}\n        </Space>\n      )}\n      <Space style={{ marginTop: \"10px\" }}>\n        <Button\n          icon={<PlusOutlined />}\n          style={{\n            backgroundColor: \"#7a6fee\",\n            color: \"#fff\",\n          }}\n          onClick={handleAddMorePrizeFields}\n        >\n          {t(\"add more prize\")}\n        </Button>\n        {prizeAdditionalFieldsLength > 10 && (\n          <div style={{ color: \"red\" }}>{t(\"maximum 10 prizes\")}</div>\n        )}\n      </Space>\n      {/* <Row gutter={20}>\n        <Col span={24} md={8}>\n          <Form.Item\n            key={`prize[0]`}\n            name={`prize[0]`}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(`1st prize`)}\n              </Text>\n            }\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n          >\n            <Input type=\"number\" min=\"0\" />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key={`prize[1]`}\n            name={`prize[1]`}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(`2nd prize`)}\n              </Text>\n            }\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n          >\n            <Input type=\"number\" min=\"0\" />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key={`prize[2]`}\n            name={`prize[2]`}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(`3rd prize`)}\n              </Text>\n            }\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n          >\n            <Input type=\"number\" min=\"0\" />\n          </Form.Item>\n        </Col>\n      </Row> */}\n      <Divider />\n      {!textEditorLoading ? (\n        <Space size={10} direction=\"vertical\" style={{ display: \"flex\" }}>\n          <Form.Item\n            key=\"description\"\n            name=\"description\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input description\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"description\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"description\"\n              initialValues={form.getFieldValue(\"description\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"description\", values)\n              }\n            />\n          </Form.Item>\n          <Form.Item\n            key=\"descriptionEn\"\n            name=\"descriptionEn\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"descriptionEn\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"descriptionEn\"\n              initialValues={form.getFieldValue(\"descriptionEn\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"descriptionEn\", values)\n              }\n            />\n          </Form.Item>\n        </Space>\n      ) : (\n        <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n      )}\n      <Divider />\n      {!textEditorLoading ? (\n        <Space size={10} direction=\"vertical\" style={{ display: \"flex\" }}>\n          <Form.Item\n            key=\"qualificationRules\"\n            name=\"qualificationRules\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input qualification rules\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"qualification rules\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"qualificationRules\"\n              initialValues={form.getFieldValue(\"qualificationRules\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"qualificationRules\", values)\n              }\n            />\n          </Form.Item>\n          <Form.Item\n            key=\"qualificationRulesEn\"\n            name=\"qualificationRulesEn\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"qualification rules (English)\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"qualificationRulesEn\"\n              initialValues={form.getFieldValue(\"qualificationRulesEn\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"qualificationRulesEn\", values)\n              }\n            />\n          </Form.Item>\n          <Form.Item\n            key=\"bracketContent\"\n            name=\"bracketContent\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"Upload bracket\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"bracketContent\"\n              initialValues={form.getFieldValue(\"bracketContent\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"bracketContent\", values)\n              }\n            />\n          </Form.Item>\n        </Space>\n      ) : (\n        <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n      )}\n      <Row gutter={20} justify=\"space-between\">\n        <Col>\n          <Space>\n            <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n              {t(\"create tournament post\")}\n            </Text>\n            <Form.Item\n              key=\"isTournamentPost\"\n              name=\"isTournamentPost\"\n              valuePropName=\"checked\"\n              style={{ marginTop: \"10px\" }}\n            >\n              <Switch defaultChecked />\n            </Form.Item>\n          </Space>\n        </Col>\n        <Col style={{ marginTop: \"14px\" }}>\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"tournament Q&A post title can be edited on webboard\")}\n          </Text>\n        </Col>\n      </Row>\n      <Divider />\n      <Row gutter={[20, 10]} style={{ marginBottom: 20 }}>\n        <Col flex=\"auto\">\n          <Title level={4} style={{ margin: 0 }}>\n            {t(\"additional fields\")}\n          </Title>\n        </Col>\n        <Col flex=\"none\">\n          {/* <Button\n            icon={<PlusOutlined />}\n            style={{ backgroundColor: \"#7a6fee\", color: \"#fff\" }}\n            onClick={handleAddMoreFields}\n          >\n            {t(\"add more\")}\n          </Button> */}\n          <Space style={{ marginTop: \"10px\" }}>\n            <Button\n              icon={<PlusOutlined />}\n              style={{ backgroundColor: \"#7a6fee\", color: \"#fff\" }}\n              onClick={handleAddMoreFields}\n            >\n              {t(\"add more\")}\n            </Button>\n            {additionalFieldsLength > 10 && (\n              <div style={{ color: \"red\" }}>{t(\"maximum 10 fields\")}</div>\n            )}\n          </Space>\n        </Col>\n      </Row>\n      {additionalFieldsLength > 0 && (\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          {Array(additionalFieldsLength)\n            .fill(\"\")\n            .map((field, index: number) => (\n              <Row\n                key={index}\n                gutter={[10, 15]}\n                style={{ alignItems: \"center\" }}\n              >\n                <Col flex=\"none\">\n                  <Form.Item\n                    name={`requirementFields[${index}][\"isRequired\"]`}\n                    valuePropName=\"checked\"\n                    style={{ marginBottom: 0 }}\n                    rules={[\n                      {\n                        validator: async () => {\n                          if (additionalFieldsLength > 10) {\n                            return Promise.reject(\n                              new Error(t(\"maximum 10 fields\"))\n                            );\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Checkbox>{t(\"required\")}</Checkbox>\n                  </Form.Item>\n                </Col>\n                <Col flex=\"none\">\n                  <Form.Item\n                    name={`requirementFields[${index}][\"type\"]`}\n                    style={{ marginBottom: 0 }}\n                  >\n                    <Select\n                      style={{ width: 120 }}\n                      options={[\n                        {\n                          label: t(\"text input\"),\n                          value: \"text\",\n                        },\n                        {\n                          label: t(\"date picker\"),\n                          value: \"date\",\n                        },\n                      ]}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col flex=\"auto\">\n                  <Form.Item\n                    name={`requirementFields[${index}][\"name\"]`}\n                    style={{ marginBottom: 0 }}\n                    rules={[\n                      {\n                        required: true,\n                        message: t(\"please input name\"),\n                      },\n                    ]}\n                  >\n                    <Input placeholder={t(\"name\")} />\n                  </Form.Item>\n                </Col>\n                <Col flex=\"auto\">\n                  <Form.Item\n                    name={`requirementFields[${index}][\"nameEn\"]`}\n                    style={{ marginBottom: 0 }}\n                  >\n                    <Input placeholder={t(\"name (English)\")} />\n                  </Form.Item>\n                </Col>\n                <Col flex=\"none\">\n                  <Button\n                    danger\n                    icon={<DeleteOutlined />}\n                    onClick={() => handleDeleteAdditionalField(index)}\n                  />\n                </Col>\n              </Row>\n            ))}\n        </Space>\n      )}\n      {contextHolder}\n      {loading ? (\n        <TiltButton color=\"secondary\" style={{ marginTop: 40 }}>\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </TiltButton>\n      ) : (\n        <TiltButton\n          color=\"primary\"\n          onClick={() => form.submit()}\n          style={{ marginTop: 40 }}\n        >\n          {submitLabel}\n        </TiltButton>\n      )}\n    </>\n  );\n}\n", "import {\n  Avatar,\n  Card,\n  Col,\n  Row,\n  Skeleton,\n  Space,\n  theme,\n  Typography,\n} from \"antd\";\nimport { TournamentDate } from \".\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { Author } from \"~/components/common\";\nimport { renderData } from \"~/utils/helper\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface TournamentHeroProps {\n  data: any;\n  loading?: boolean;\n}\n\nexport function TournamentHero(props: TournamentHeroProps) {\n  const { token } = useToken();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const { locale } = useContext(AppContext);\n  const { data, loading } = props;\n  const cardStyle = {\n    position: \"relative\",\n    display: \"flex\",\n    height: 350,\n    flexDirection: \"column\",\n    borderRadius: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundImage:\n      data && data.bannerImageUrl\n        ? `url(\"${cdnUrl}/${data.bannerImageUrl}\")`\n        : undefined,\n  } as any;\n  const bodyStyle = {\n    display: \"flex\",\n    flex: \"auto\",\n    alignItems: \"end\",\n    width: \"100%\",\n    paddingInline: \"3.5%\",\n    maxWidth: 1440,\n    marginInline: \"auto\",\n    paddingBlock: 20,\n  } as any;\n  const overlayStyle = {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  } as any;\n\n  return (\n    <>\n      <Card bordered={false} style={cardStyle} bodyStyle={bodyStyle}>\n        <div style={overlayStyle} />\n        {loading ? (\n          <Skeleton active />\n        ) : (\n          <Space size={15} style={{ display: \"flex\", position: \"relative\" }}>\n            <Avatar\n              size={72}\n              src={data.game.iconUrl ? `${cdnUrl}/${data.game.iconUrl}` : \"\"}\n            >\n              {data.game.name}\n            </Avatar>\n            <Space direction=\"vertical\" size={5}>\n              <Title level={2} style={{ margin: 0, color: \"#fff\" }}>\n                {renderData(data, \"name\", locale)}\n              </Title>\n              <Row style={{ color: \"#fff\" }} gutter={[15, 10]} wrap>\n                <Col>\n                  <TournamentDate\n                    startDate={data.startDate}\n                    endDate={data.endDate}\n                  />\n                </Col>\n                <Col>\n                  <Author\n                    displayImage={\n                      data.organizer && data.organizer.displayImage\n                        ? `${cdnUrl}/${data.organizer.displayImage}`\n                        : undefined\n                    }\n                  >\n                    {data.organizer.displayName}\n                  </Author>\n                </Col>\n              </Row>\n            </Space>\n          </Space>\n        )}\n      </Card>\n      <div\n        style={{ paddingInline: \"3.5%\", maxWidth: 1440, marginInline: \"auto\" }}\n      >\n        <Card\n          bodyStyle={{ padding: \"10px 15px\" }}\n          bordered={false}\n          style={{\n            borderRadius: 10,\n            borderTopLeftRadius: 0,\n            borderTopRightRadius: 0,\n            backgroundColor: token.colorBgBase,\n          }}\n        >\n          <Space\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            wrap\n          >\n            <Space size={5}>\n              <Text>{t(\"opening registration\")}</Text>\n              <Text style={{ fontWeight: 600 }}>\n                {dayjs(data.registrationStartDate).format(\"DD MMM YYYY\")}\n              </Text>\n            </Space>\n            <Space size={5}>\n              <Text>{t(\"participants\")}</Text>\n              <Card\n                style={{ borderRadius: 6, backgroundColor: \"transparent\" }}\n                bodyStyle={{ padding: \"0 10px\" }}\n              >\n                <Space size={4}>\n                  <Text style={{ fontWeight: 600, fontSize: \"1.5em\" }}>\n                    {data.maxTeam.toLocaleString()}\n                  </Text>\n                  <Text style={{ fontSize: \"0.9em\" }}>{t(\"teams\")}</Text>\n                </Space>\n              </Card>\n            </Space>\n          </Space>\n        </Card>\n      </div>\n    </>\n  );\n}\n", "import { useContext } from \"react\";\nimport { Link } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Col, Row, Select, Skeleton, Space, Typography, theme } from \"antd\";\nimport { ControlOutlined, HistoryOutlined } from \"@ant-design/icons\";\nimport { AuthContext } from \"~/contexts\";\nimport { isArray } from \"lodash\";\n\nconst { useToken } = theme;\nconst { Text } = Typography;\n\ninterface TournamentIndexHeaderProps {\n  initialValues: any;\n  items: any;\n  games: any;\n  onGameChanged: (game: string) => void;\n}\n\nexport function TournamentIndexHeader(props: TournamentIndexHeaderProps) {\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const { user } = useContext(AuthContext);\n  const { initialValues, items, games, onGameChanged } = props;\n\n  const gameOptions = [\n    {\n      label: t(\"all games\"),\n      value: \"\",\n    },\n  ];\n  if (isArray(games) && games.length > 0) {\n    games.map((game: any) => {\n      gameOptions.push({\n        label: game.name,\n        value: game.name,\n      });\n    });\n  }\n\n  return (\n    <>\n      <Select\n        defaultValue={initialValues.game ? initialValues.game : \"\"}\n        onSelect={onGameChanged}\n        options={gameOptions}\n        style={{ width: 140, marginBottom: 20 }}\n      />\n      <Row style={{ marginBottom: 20 }}>\n        <Col flex=\"none\">\n          <Skeleton active loading={items === null} paragraph={false} title>\n            <Text style={{ color: token.colorTextSecondary }}>{`${\n              items ? items.length : 0\n            } ${t(\"items\")}`}</Text>\n          </Skeleton>\n        </Col>\n        {user && (\n          <Col flex=\"auto\" style={{ textAlign: \"right\" }}>\n            <Space direction=\"horizontal\" size={15}>\n              <Link\n                to={`/users/${user.userName ? user.userName : user.uuid}`}\n                style={{ color: token.colorTextBase }}\n              >\n                <Space direction=\"horizontal\" size={5}>\n                  <ControlOutlined style={{ color: \"#7063f4\" }} />\n                  {t(\"dashboard\")}\n                </Space>\n              </Link>\n              <Link\n                to={`/users/${\n                  user?.userName ? user.userName : user.uuid\n                }/joined-tournaments`}\n                style={{ color: token.colorTextBase }}\n              >\n                <Space direction=\"horizontal\" size={5}>\n                  <HistoryOutlined style={{ color: \"#7063f4\" }} />\n                  {t(\"history\")}\n                </Space>\n              </Link>\n            </Space>\n          </Col>\n        )}\n      </Row>\n    </>\n  );\n}\n", "import { Button, Card, Space } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface TournamentInvitationAlertProps {\n  data: any;\n  onClick: (team: any) => void;\n}\n\nexport function TournamentInvitationAlert(\n  props: TournamentInvitationAlertProps\n) {\n  const { data, onClick } = props;\n  const { t } = useTranslation();\n\n  if (!data || data.length <= 0) {\n    return null;\n  }\n\n  return (\n    <Card\n      bodyStyle={{ padding: \"10px 15px\" }}\n      bordered={false}\n      style={{\n        backgroundColor: \"#7164f4\",\n        color: \"#fff\",\n        border: 0,\n        marginTop: 30,\n      }}\n    >\n      <Space style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Space size={5}>\n          <InfoCircleOutlined />\n          {`${t(\"tournament invitation to\")} \"${data.name}\"`}\n        </Space>\n        <Button\n          type=\"primary\"\n          size=\"middle\"\n          style={{ color: \"#000\", borderRadius: 4 }}\n          onClick={(e: any) => onClick(data)}\n        >\n          {t(\"join\")}\n        </Button>\n      </Space>\n    </Card>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Avatar } from \"antd\";\n\ninterface TournamentGameProps {\n  game: any;\n  size?: number;\n}\n\nexport function TournamentGame(props: TournamentGameProps) {\n  const { game, size } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  return (\n    <Avatar\n      size={size ? size : 45}\n      src={game.iconUrl ? `${cdnUrl}/${game.iconUrl}` : \"\"}\n    >\n      {game.name}\n    </Avatar>\n  );\n}\n", "import { Col, Row, Typography } from \"antd\";\nimport { TournamentEntry } from \".\";\nconst { Title } = Typography;\n\ninterface TournamentGridProps {\n  data: any[] | null;\n  loading?: boolean;\n  title?: string;\n}\n\nexport function TournamentGrid(props: TournamentGridProps) {\n  const { data, loading, title } = props;\n  const dummy = Array(8).fill(\"\");\n  const entries = loading ? dummy : data ? data : [];\n\n  return (\n    <>\n      {title && (\n        <Title level={4} style={{ marginTop: 0, marginBottom: 30 }}>\n          {title}\n        </Title>\n      )}\n      <Row gutter={[20, 20]}>\n        {entries.map((item: any, index: number) => (\n          <Col span={24} md={6} key={loading ? `dummy-${index}` : item.id}>\n            <TournamentEntry data={item} loading={loading} />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n", "import { Tag } from \"antd\";\nimport { TrophyOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { toNumber } from \"lodash\";\n\ninterface TournamentRewardProps {\n  reward: number | string;\n}\n\nexport function TournamentReward(props: TournamentRewardProps) {\n  const { t } = useTranslation();\n  const { reward } = props;\n\n  return reward ? (\n    <Tag\n      icon={<TrophyOutlined />}\n      style={{ margin: 0, lineHeight: \"24px\", fontSize: 12 }}\n      color=\"#7063f4\"\n    >\n      {toNumber(reward).toLocaleString()} {t(\"thb\")}\n    </Tag>\n  ) : null;\n}\n", "import { useTranslation } from \"react-i18next\";\n// import { Space } from \"antd\";\n// import { EditOutlined } from \"@ant-design/icons\";\n\nexport const TournamentSingleMenu: any = (isOrganizer: boolean) => {\n  const { t } = useTranslation();\n  const menus = [\n    {\n      link: \".\",\n      level: 2,\n      label: <span>{t(\"detail_1\")}</span>,\n    },\n    {\n      link: \"schedule\",\n      label: <span>{t(\"tournament schedule\")}</span>,\n    },\n    {\n      link: \"teams\",\n      label: <span>{t(\"participants\")}</span>,\n    },\n    {\n      link: \"webboard\",\n      label: <span>{t(\"tournament board\")}</span>,\n    },\n  ];\n\n  // if (isOrganizer) {\n  //   menus.push({\n  //     link: \"edit\",\n  //     label: (\n  //       <Space size={5}>\n  //         <EditOutlined /> {t(\"edit\")}\n  //       </Space>\n  //     ),\n  //   });\n  // }\n  return { menus };\n};\n", "import { Card, Col, Row, Space, theme, Typography } from \"antd\";\nimport { toNumber } from \"lodash\";\nimport { useTranslation } from \"react-i18next\";\nconst { useToken } = theme;\nconst { Text, Title } = Typography;\n\ninterface TournamentSingleRewardsProps {\n  reward: any[];\n}\n\nexport function TournamentSingleRewards(props: TournamentSingleRewardsProps) {\n  const { t } = useTranslation();\n  const { reward } = props;\n  const { token } = useToken();\n\n  return (\n    <Row\n      style={{\n        position: \"relative\",\n        paddingBottom: \"5px\",\n        // paddingBlock: 20,\n        // paddingInline: \"3.5%\",\n        overflowX: \"auto\",\n        scrollbarColor: \"#999 transparent\",\n        scrollbarWidth: \"thin\",\n      }}\n      gutter={[20, 20]}\n      wrap={false}\n    >\n      {reward\n        .filter((r: any) => r !== \"\") // Filter out rewards with empty string values\n        .map((r: any, index: number) => (\n          <Col\n            span={reward.length >= 3 ? 8 : 24 / reward.length}\n            key={`reward-${index}`}\n          >\n            <Card\n              bordered={false}\n              bodyStyle={{ padding: 15 }}\n              style={{\n                height: \"100%\",\n                borderRadius: 10,\n                backgroundColor:\n                  index === 0\n                    ? \"#8861f2\"\n                    : index === 1\n                    ? token.colorPrimary\n                    : token.colorBgBase,\n              }}\n            >\n              <Space direction=\"vertical\">\n                <Text\n                  style={\n                    index === 0\n                      ? { color: \"#fff\" }\n                      : index === 1\n                      ? { color: \"#000\" }\n                      : {}\n                  }\n                >\n                  {`${t(\"reward #\")} ${index + 1}`}\n                </Text>\n                <Title\n                  level={3}\n                  style={\n                    index === 0\n                      ? { color: \"#fff\", margin: 0 }\n                      : index === 1\n                      ? { color: \"#000\", margin: 0 }\n                      : { margin: 0 }\n                  }\n                >\n                  {toNumber(r)\n                    ? `${toNumber(r).toLocaleString()} ${t(\"thb\")}`\n                    : r}\n                </Title>\n              </Space>\n            </Card>\n          </Col>\n        ))}\n    </Row>\n    // <Row gutter={[20, 20]}>\n    //   {reward\n    //     .filter((r: any) => r !== \"\") // Filter out rewards with empty string values\n    //     .map((r: any, index: number) => (\n    //       <Col span={24} md={columnWidth} key={`reward-${index}`}>\n    //         <Card\n    //           bordered={false}\n    //           bodyStyle={{ padding: 15 }}\n    //           style={{\n    //             height: \"100%\",\n    //             borderRadius: 10,\n    //             backgroundColor:\n    //               index === 0\n    //                 ? \"#8861f2\"\n    //                 : index === 1\n    //                 ? token.colorPrimary\n    //                 : token.colorBgBase,\n    //           }}\n    //         >\n    //           <Space direction=\"vertical\">\n    //             <Text\n    //               style={\n    //                 index === 0\n    //                   ? { color: \"#fff\" }\n    //                   : index === 1\n    //                   ? { color: \"#000\" }\n    //                   : {}\n    //               }\n    //             >\n    //               {`${t(\"reward #\")} ${index + 1}`}\n    //             </Text>\n    //             <Title\n    //               level={3}\n    //               style={\n    //                 index === 0\n    //                   ? { color: \"#fff\", margin: 0 }\n    //                   : index === 1\n    //                   ? { color: \"#000\", margin: 0 }\n    //                   : { margin: 0 }\n    //               }\n    //             >{`${toNumber(r).toLocaleString()} ${t(\"thb\")}`}</Title>\n    //           </Space>\n    //         </Card>\n    //       </Col>\n    //     ))}\n    // </Row>\n  );\n}\n", "import { Carousel } from \"antd\";\nimport { TournamentSliderItem } from \".\";\n\ninterface TournamentSliderProps {\n  data: any[];\n}\n\nexport function TournamentSlider(props: TournamentSliderProps) {\n  const { data } = props;\n\n  return (\n    <Carousel dots={{ className: \"left\" }} arrows={true}>\n      {data.map((item: any) => (\n        <TournamentSliderItem key={item.id} data={item} />\n      ))}\n    </Carousel>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Card,\n  Col,\n  Row,\n  Skeleton,\n  Space,\n  Tag,\n  theme,\n  Typography,\n} from \"antd\";\nimport { TournamentDate, TournamentReward } from \".\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Author } from \"~/components/common\";\nimport { renderData } from \"~/utils/helper\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\nconst { useToken } = theme;\nconst { Title } = Typography;\n\ninterface TournamentSliderItemProps {\n  data: any;\n  loading?: boolean;\n}\n\nexport function TournamentSliderItem(props: TournamentSliderItemProps) {\n  const { t } = useTranslation();\n  const { data, loading } = props;\n  const { token } = useToken();\n  const { locale } = useContext(AppContext);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const navigate = useNavigate();\n  const itemStyle = {\n    position: \"relative\",\n    display: \"flex\",\n    height: 400,\n    flexDirection: \"column\",\n    borderRadius: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundImage:\n      data && data.bannerImageUrl && data.bannerImageUrl !== \"-\"\n        ? `url(\"${cdnUrl}/${data.bannerImageUrl}\")`\n        : undefined,\n    cursor: \"pointer\",\n  } as any;\n  const itemBodyStyle = {\n    display: \"flex\",\n    flex: \"auto\",\n    paddingBottom: 48,\n    alignItems: \"end\",\n  } as any;\n  const itemHeadStyle = {\n    position: \"relative\",\n    border: 0,\n    flex: \"0 0 auto\",\n    zIndex: 1,\n  } as any;\n  const overlayStyle = {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n    background:\n      \"linear-gradient(0deg, rgba(0, 0, 0, 0.50) 0%, rgba(0, 0, 0, 0.50) 100%)\",\n  } as any;\n\n  const handleItemClicked = () => {\n    navigate(`/tournaments/${data.id}`);\n  };\n\n  return (\n    <Card\n      bordered={false}\n      onClick={handleItemClicked}\n      style={itemStyle}\n      bodyStyle={itemBodyStyle}\n      headStyle={itemHeadStyle}\n      title={\n        <Tag\n          color={token.colorPrimary}\n          style={{ color: \"#201d1d\", fontWeight: 600 }}\n        >\n          {t(\"featured tournament\")}\n        </Tag>\n      }\n    >\n      <div style={overlayStyle} />\n      {loading ? (\n        <Skeleton active />\n      ) : (\n        <Space\n          direction=\"vertical\"\n          size={10}\n          style={{ display: \"flex\", position: \"relative\" }}\n        >\n          {data.game && data.game.iconUrl && (\n            <Avatar\n              size={45}\n              src={\n                data.game.iconUrl && data.game.iconUrl !== \"-\"\n                  ? `${cdnUrl}/${data.game.iconUrl}`\n                  : \"\"\n              }\n            >\n              {data.game.name}\n            </Avatar>\n          )}\n          <Title level={2} style={{ margin: 0, color: \"#fff\" }}>\n            {renderData(data, \"name\", locale)}\n          </Title>\n          <Row style={{ color: \"#fff\" }} gutter={[15, 10]} wrap>\n            <Col>\n              <TournamentReward reward={data.prize[0]} />\n            </Col>\n            <Col>\n              <TournamentDate\n                startDate={data.startDate}\n                endDate={data.endDate}\n              />\n            </Col>\n            {data.organizer && data.organizer.displayName && (\n              <Col>\n                <Author\n                  displayImage={\n                    data.organizer && data.organizer.displayImage\n                      ? `${cdnUrl}/${data.organizer.displayImage}`\n                      : undefined\n                  }\n                >\n                  {data.organizer.displayName}\n                </Author>\n              </Col>\n            )}\n          </Row>\n        </Space>\n      )}\n    </Card>\n  );\n}\n", "import { useCallback, useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Card, Col, Input, Modal, Row, Space, Typography } from \"antd\";\nimport { EditOutlined, ExclamationCircleFilled } from \"@ant-design/icons\";\nimport {\n  InlineAvatar,\n  TiltButton,\n  ToCopyField,\n  UserAvatar,\n} from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nconst { Text, Title } = Typography;\n\ninterface TournamentTeamProps {\n  additionalMembers?: number;\n  data: any;\n  displayInviteLink?: boolean;\n  minMembers?: number;\n  onDelete?: () => void;\n  onEdit?: (e: any) => void;\n  onOrganizerAction?: (action: string, remark?: string) => void;\n  onRemoveTeamMember?: (teamUuid: string, memberUuid: string) => void;\n  onSubmit?: (e: any) => void;\n  style?: any;\n  submitAction?: string;\n}\n\nexport function TournamentTeam(props: TournamentTeamProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const {\n    additionalMembers,\n    data,\n    displayInviteLink,\n    minMembers,\n    onDelete,\n    onEdit,\n    onOrganizerAction,\n    onRemoveTeamMember,\n    onSubmit,\n    style,\n    submitAction,\n  } = props;\n  const [remark, setRemark] = useState<string>(\"\");\n  const { baseUrl, scheme } = useContext(AppContext);\n  const navigate = useNavigate();\n  const minimumParticipants = minMembers ? minMembers : 5;\n  const [modal, contextHolder] = Modal.useModal();\n  const slots = Array(\n    additionalMembers\n      ? minimumParticipants + additionalMembers\n      : minimumParticipants\n  ).fill(\"\");\n  const requiredSlots = Array(minimumParticipants).fill(\"\");\n\n  const joinTeamUrl = data ? `${baseUrl}/teams/${data.uuid}/join` : \"\";\n  const members = data && data.members ? data.members : [];\n  const moreMembers = minimumParticipants - members.length;\n  let cardStyle = {\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  if (style) {\n    cardStyle = { ...cardStyle, ...style };\n  }\n\n  const handleUserClicked = (uuid: string) => {\n    navigate(`/users/${uuid}`);\n  };\n\n  const handleRemarkChange = (e: any) => {\n    setRemark(e.target.value);\n  };\n\n  const handleOrganizerAction = useCallback(\n    (action: string) => {\n      if (onOrganizerAction) {\n        modal.confirm({\n          title: `${t(`are you sure to ${action} team`)}?`,\n          icon: <ExclamationCircleFilled />,\n          okText: t(\"confirm\"),\n          cancelText: t(\"cancel\"),\n          maskClosable: true,\n          onOk() {\n            onOrganizerAction(action, remark);\n            setRemark(\"\");\n          },\n        });\n      }\n    },\n    [remark]\n  );\n\n  const handleRemoveTeamMember = (teamUuid: string, memberUuid: string) => {\n    if (onRemoveTeamMember) {\n      modal.confirm({\n        title: `${t(`are you sure to delete team member`)}?`,\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        okType: \"danger\",\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          onRemoveTeamMember(teamUuid, memberUuid);\n        },\n      });\n    }\n  };\n\n  return (\n    <Card style={cardStyle} bordered={false}>\n      <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n        {data ? (\n          <>\n            <Row wrap={false}>\n              <Col flex=\"auto\">\n                <InlineAvatar\n                  avatarUrl={data.displayImage}\n                  title={data.name}\n                  subtitle={\n                    data.createdBy ? (\n                      <Text>{`${t(\"by\")} ${data.createdBy.username}`}</Text>\n                    ) : null\n                  }\n                />\n              </Col>\n              {onEdit && (\n                <Col flex=\"none\">\n                  <EditOutlined\n                    onClick={onEdit}\n                    style={{ cursor: \"pointer\", color: \"#8263ea\" }}\n                  />\n                </Col>\n              )}\n            </Row>\n            <Title level={5} style={{ fontSize: 14, margin: 0 }}>\n              {t(\"team members\")}\n            </Title>\n          </>\n        ) : (\n          <Title level={4} style={{ marginTop: 0 }}>\n            {t(\"my team\")}\n          </Title>\n        )}\n        <Space direction=\"vertical\" size={30} style={{ display: \"flex\" }}>\n          <Row gutter={[15, 15]} wrap justify=\"center\">\n            {slots.map((slot: any, index: number) => (\n              <Col key={`team-member-${index}`}>\n                {members[index] ? (\n                  <UserAvatar\n                    size={50}\n                    display={\n                      members[index].user.displayImage\n                        ? `${cdnUrl}/${members[index].user.displayImage}`\n                        : \"/image/user-placeholder.png\"\n                    }\n                    name={members[index].user.displayName}\n                    onClick={(e: any) =>\n                      handleUserClicked(\n                        data?.members[index]?.user?.userName\n                          ? data.members[index].user.userName\n                          : data.members[index].user.uuid\n                      )\n                    }\n                    onRemove={\n                      onRemoveTeamMember && index != 0\n                        ? (e: any) =>\n                            handleRemoveTeamMember(\n                              data.uuid,\n                              data.members[index].user.uuid\n                            )\n                        : undefined\n                    }\n                  />\n                ) : (\n                  <UserAvatar\n                    size={50}\n                    dashed={index > minimumParticipants - 1}\n                  />\n                )}\n              </Col>\n            ))}\n          </Row>\n          {slots.length - members.length > 0 && displayInviteLink && data && (\n            <Space\n              direction=\"vertical\"\n              size={10}\n              style={{ display: \"flex\", textAlign: \"center\" }}\n            >\n              {joinTeamUrl && <ToCopyField text={joinTeamUrl} />}\n              {requiredSlots.length - members.length <= 0 ? (\n                <Text>{t(\"Member limit reached\")}</Text>\n              ) : (\n                <Text>\n                  {t(\"you require\")} {moreMembers} {t(\"more member\")}\n                </Text>\n              )}\n            </Space>\n          )}\n          {!data && (\n            <Space\n              direction=\"vertical\"\n              size={10}\n              style={{ display: \"flex\", textAlign: \"center\" }}\n            >\n              <Text>{t(\"you are not in a team\")}</Text>\n            </Space>\n          )}\n          {onSubmit && (\n            <TiltButton\n              color={submitAction === \"leave\" ? \"danger\" : \"primary\"}\n              onClick={onSubmit}\n            >\n              {t(`${submitAction} team`)}\n            </TiltButton>\n          )}\n          {submitAction === \"submit\" && (\n            <TiltButton color=\"danger\" onClick={onDelete}>\n              {t(\"delete team\")}\n            </TiltButton>\n          )}\n        </Space>\n      </Space>\n      {onOrganizerAction && (\n        <Space\n          style={{ display: \"flex\", marginTop: 20 }}\n          direction=\"vertical\"\n          size={15}\n        >\n          {data.status === \"pending\" ? (\n            <Title level={5} style={{ fontSize: 14, margin: 0 }}>\n              {t(\"reject comment\")}\n            </Title>\n          ) : (\n            <div>\n              <Title\n                level={5}\n                // className=\"required\"\n                style={{ fontSize: 14, margin: 0 }}\n              >\n                {t(\"remove comment\")}\n              </Title>\n              <Text>{t(\"removed team members have to create a new team\")}</Text>\n            </div>\n          )}\n          <Input.TextArea\n            rows={4}\n            onChange={handleRemarkChange}\n            value={remark}\n          />\n          {data.status === \"pending\" ? (\n            <Row gutter={10}>\n              <Col span={24}>\n                <TiltButton\n                  color=\"danger\"\n                  onClick={() => handleOrganizerAction(\"reject\")}\n                >\n                  {t(\"reject team\")}\n                </TiltButton>\n              </Col>\n              {/* <Col span={12}>\n                <TiltButton\n                  color=\"primary\"\n                  onClick={() => handleOrganizerAction(\"approve\")}\n                >\n                  {t(\"approve team\")}\n                </TiltButton>\n              </Col> */}\n            </Row>\n          ) : (\n            <Row>\n              <Col span={24}>\n                <TiltButton\n                  color=\"danger\"\n                  onClick={() => handleOrganizerAction(\"remove\")}\n                >\n                  {t(\"remove team\")}\n                </TiltButton>\n              </Col>\n            </Row>\n          )}\n        </Space>\n      )}\n      {contextHolder}\n    </Card>\n  );\n}\n", "import {\n  Avatar,\n  Card,\n  Checkbox,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Result,\n  Row,\n  Space,\n  Typography,\n  notification,\n  theme,\n  Image,\n} from \"antd\";\nimport {\n  EditOutlined,\n  LoadingOutlined,\n  CameraOutlined,\n} from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useFetcher, useMatches } from \"@remix-run/react\";\nimport {\n  FileUploader,\n  ImageSelector,\n  OverlayBg,\n  TiltButton,\n} from \"~/components/common\";\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface TournamentTeamFormProps {\n  form?: any;\n  team?: any;\n  onCancel?: (e: any) => void | undefined;\n  isSlipRequired?: boolean;\n  onSubmit: (values: any) => void;\n  submitLabel: string;\n}\n\nconst randomNumber = Math.floor(Math.random() * 8) + 1;\n\nexport function TournamentTeamForm(props: TournamentTeamFormProps) {\n  const { form, isSlipRequired, onCancel, onSubmit, submitLabel, team } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [messageApi, contextHolder] = notification.useNotification();\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { token } = useToken();\n  const displayImageField = \"logo\";\n  const [previewImage, setPreviewImage] = useState<string>();\n  const [isContactPerson, setIsContactPerson] = useState<boolean>(\n    team && team.isContactPerson ? team.isContactPerson : false\n  );\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [isSlip, setIsSlip] = useState<boolean>(false);\n  const [previewUploadImage, setPreviewUploadImage] = useState<any>();\n\n  const avatarStyle = {\n    position: \"absolute\",\n    left: \"1.5%\",\n    bottom: -30,\n    padding: 2,\n    border: `5px solid ${token.colorBgLayout}`,\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n  } as any;\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleContactPersonChange = (e: any) => {\n    setIsContactPerson(e.target.checked);\n  };\n\n  const handleSelectPresetImage = useCallback(\n    (image: any) => {\n      form.setFieldValue(displayImageField, image.key);\n      setPreviewImage(image.url);\n    },\n    [form]\n  );\n\n  const displayPresetImages = Array(8)\n    .fill(\"\")\n    .map(\n      (arg: string, index: number) =>\n        `${cdnUrl}/profile-teams/profile-team-${index + 1}.jpg`\n    );\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"slipImageUrl\") {\n        form.setFieldValue(\"slipImageUrl\", fetcher.data.key);\n        setIsSlip(fetcher.data.isSlip);\n        setPreviewUploadImage(fetcher.data.previewImage);\n      }\n      setUploading(false);\n    }\n  }, [form, fetcher.data]);\n\n  return (\n    <Form\n      form={form}\n      onFinish={onSubmit}\n      initialValues={team}\n      layout=\"vertical\"\n    >\n      <Title level={4} style={{ margin: 0 }}>\n        {t(team ? \"team info\" : \"create team\")}\n      </Title>\n      <Divider style={{ marginBlock: 15 }} />\n      <Space direction=\"vertical\" size={0} style={{ display: \"flex\" }}>\n        <Form.Item\n          key={displayImageField}\n          name={displayImageField}\n          initialValue={`profile-teams/profile-team-${randomNumber}.jpg`}\n          style={{ margin: \"0px\", marginBottom: \"25px\", padding: \"0px\" }}\n          rules={[\n            {\n              required: true,\n              message: t(\"please input team logo\"),\n            },\n          ]}\n        >\n          <Row style={{ marginBottom: 10 }}>\n            <Col flex=\"auto\">\n              <Space direction=\"vertical\" size={5}>\n                <Text style={{ fontWeight: 600 }}>{t(\"team logo\")}</Text>\n                {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n                  <Avatar size={75}>\n                    <LoadingOutlined style={{ fontSize: 24 }} spin />\n                  </Avatar>\n                ) : (\n                  <div style={{ marginTop: \"60px\", marginBottom: \"60px\" }}>\n                    <div style={avatarStyle} className=\"hover-show-parent\">\n                      <Avatar\n                        size={75}\n                        src={\n                          previewImage\n                            ? previewImage\n                            : team && team.logo\n                            ? `${cdnUrl}/${team.logo}`\n                            : `${cdnUrl}/profile-teams/profile-team-${randomNumber}.jpg`\n                        }\n                      />\n                      <ImageSelector\n                        title={t(\"select display image\")}\n                        fetcher={fetcher}\n                        fieldName={displayImageField}\n                        onSelect={handleSelectPresetImage}\n                        presetImages={displayPresetImages}\n                        presetRound\n                      >\n                        <OverlayBg\n                          className=\"hover-show-child\"\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          <CameraOutlined\n                            style={{ fontSize: 30, color: \"#fff\" }}\n                          />\n                        </OverlayBg>\n                      </ImageSelector>\n                    </div>\n                  </div>\n                )}\n              </Space>\n            </Col>\n            <Col flex=\"none\">\n              <ImageSelector\n                title={t(\"select display image\")}\n                fetcher={fetcher}\n                fieldName={displayImageField}\n                onSelect={handleSelectPresetImage}\n                presetImages={displayPresetImages}\n                presetRound\n              >\n                <Space size={5} style={{ cursor: \"pointer\" }}>\n                  <EditOutlined style={{ color: \"#8263ea\" }} />\n                  <Text>{t(\"change\")}</Text>\n                </Space>\n              </ImageSelector>\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item\n          key=\"name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: t(\"please input team name\"),\n            },\n          ]}\n          label={\n            <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n              {t(\"team name\")}\n            </Text>\n          }\n        >\n          <Input />\n        </Form.Item>\n        {isSlipRequired && (\n          <Space\n            direction=\"vertical\"\n            size={5}\n            style={{ display: \"flex\", marginBottom: 20 }}\n          >\n            <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n              <Col flex=\"auto\">\n                <Text\n                  className={isSlipRequired ? \"required\" : undefined}\n                  style={{ fontWeight: 600 }}\n                >\n                  {t(\"upload slip image\")}\n                </Text>\n              </Col>\n              <Col flex=\"none\">\n                <Form.Item\n                  key=\"slipImageUrl\"\n                  name=\"slipImageUrl\"\n                  rules={[\n                    {\n                      required: true,\n                      message: `${t(\"please upload slip image\")}`,\n                    },\n                  ]}\n                >\n                  <FileUploader\n                    fetcher={fetcher}\n                    fieldName={\"slipImageUrl\"}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                    isSlip={true}\n                  >\n                    <Space size={5} style={{ cursor: \"pointer\" }}>\n                      <EditOutlined style={{ color: \"#8263ea\" }} />\n                      <Text>{t(\"upload\")}</Text>\n                    </Space>\n                  </FileUploader>\n                </Form.Item>\n              </Col>\n            </Row>\n            {uploading ? (\n              <Result\n                icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n              />\n            ) : form && form.getFieldValue(\"slipImageUrl\") ? (\n              <Image\n                preview={false}\n                style={{ maxWidth: \"400px\" }}\n                alt=\"slip\"\n                src={\n                  !isSlip\n                    ? `${cdnUrl}/${form.getFieldValue(\"slipImageUrl\")}`\n                    : `data:image/png;base64,${previewUploadImage}`\n                }\n              />\n            ) : (\n              <></>\n            )}\n          </Space>\n        )}\n        <Form.Item\n          key=\"isContactPerson\"\n          name=\"isContactPerson\"\n          initialValue={false}\n          valuePropName=\"checked\"\n        >\n          <Checkbox onChange={handleContactPersonChange}>\n            <Text>{t(\"you are team contact person\")}</Text>\n          </Checkbox>\n        </Form.Item>\n        {isContactPerson === false && (\n          <Card>\n            <Title level={4} style={{ margin: 0 }}>\n              {t(\"contact person\")}\n            </Title>\n            <Divider style={{ marginBlock: 15 }} />\n            <Form.Item\n              key=\"contactName\"\n              name=\"contactName\"\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"contact person name\")}\n                </Text>\n              }\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please input contactName\")}`,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              key=\"contactEmail\"\n              name=\"contactEmail\"\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"contact person email\")}\n                </Text>\n              }\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please input email\")}`,\n                },\n              ]}\n            >\n              <Input type=\"email\" />\n            </Form.Item>\n            <Form.Item\n              key=\"contactPhoneNumber\"\n              name=\"contactPhoneNumber\"\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"contact person phone\")}\n                </Text>\n              }\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please input phone number\")}`,\n                },\n              ]}\n            >\n              <Input type=\"tel\" />\n            </Form.Item>\n          </Card>\n        )}\n      </Space>\n      <Row gutter={15} style={{ marginTop: 20 }}>\n        <Col span={12}>\n          <TiltButton color=\"secondary\" onClick={onCancel}>\n            {t(\"cancel\")}\n          </TiltButton>\n        </Col>\n        <Col span={12}>\n          {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n            <TiltButton color=\"secondary\">\n              <LoadingOutlined style={{ fontSize: 24 }} spin />\n            </TiltButton>\n          ) : (\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {submitLabel}\n            </TiltButton>\n          )}\n        </Col>\n      </Row>\n      {contextHolder}\n    </Form>\n  );\n}\n", "import { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Card,\n  DatePicker,\n  Divider,\n  Form,\n  Input,\n  Space,\n  theme,\n  Typography,\n} from \"antd\";\nimport { ArrowLeftOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport { InlineAvatar, TiltButton } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nimport { useMatches } from \"@remix-run/react\";\nimport dayjs from \"dayjs\";\n\nconst { useToken } = theme;\nconst { Text, Title } = Typography;\n\ninterface TournamentTeamMemberFormProps {\n  currentTeam?: any;\n  loading?: boolean;\n  isDiscordIdRequired: boolean;\n  isEmailRequired: boolean;\n  isPhoneNumberRequired: boolean;\n  isIgnRequired: boolean;\n  additionalFields?: any;\n  onBack?: (e: any) => void | undefined;\n  team: any;\n  onSubmit: (values: any) => void;\n  submitLabel: string;\n}\n\nexport function TournamentTeamMemberForm(props: TournamentTeamMemberFormProps) {\n  const { t } = useTranslation();\n  const {\n    isDiscordIdRequired,\n    isEmailRequired,\n    isPhoneNumberRequired,\n    isIgnRequired,\n    additionalFields,\n    loading,\n    onBack,\n    onSubmit,\n    submitLabel,\n    team,\n    currentTeam,\n  } = props;\n  const [form] = Form.useForm();\n  const { token } = useToken();\n  const { user } = useContext(AuthContext);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  let userMemberData = null as any;\n  let initialData = null as any;\n  if (currentTeam) {\n    userMemberData = currentTeam.members.find(\n      (member: any) => member.userId === user.id\n    );\n    initialData = userMemberData;\n  }\n\n  // const handleSubmitForm = useCallback(\n  //   (values: any) => {\n  //     if (needSubmitKyc && values.acceptWhalletConsent) {\n  //       onSubmit(\"submit-kyc\", values);\n  //     } else if (!team.id) {\n  //       onSubmit(\"create-team\", { ...values, ...team });\n  //     } else if (myTeamMember) {\n  //       onSubmit(\"update-team-member\", { ...values, id: myTeamMember.id });\n  //     } else {\n  //       onSubmit(\"join-team\", { ...values, teamId: team.id });\n  //     }\n  //   },\n  //   [team]\n  // );\n\n  const handleSubmitForm = (values: any) => {\n    // Extract values from form fields\n    const { email, phoneNumber, discordId, ign, ...additionalFields } = values;\n\n    // Create customfields array with name and value pairs\n    const customFields = Object.entries(additionalFields).map(\n      ([name, value]) => ({\n        name,\n        value,\n      })\n    );\n\n    // Prepare the final data object to be submitted\n    const formData = {\n      email,\n      phoneNumber,\n      discordId,\n      ign,\n      customFields,\n    };\n\n    // Call the onSubmit function with the formatted data\n    onSubmit(formData);\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={handleSubmitForm}\n      initialValues={initialData ? initialData : null}\n      layout=\"vertical\"\n    >\n      {onBack && (\n        <Space\n          size={5}\n          style={{ cursor: \"pointer\", marginBottom: 20 }}\n          onClick={onBack}\n        >\n          <ArrowLeftOutlined />\n          <Text>{t(\"back to edit team\")}</Text>\n        </Space>\n      )}\n      <Title level={4} style={{ margin: 0 }}>\n        {t(\"player info\")}\n      </Title>\n      <Divider style={{ marginBlock: 15 }} />\n      <Title level={5}>Team Name</Title>\n      <Card\n        bordered={false}\n        style={{ backgroundColor: token.colorBgBase, marginBottom: 15 }}\n        bodyStyle={{ padding: 10 }}\n      >\n        <InlineAvatar\n          avatarUrl={`${cdnUrl}/${team?.logo}`}\n          title={team?.name}\n          subtitle={\n            team?.createdBy ? (\n              <Text>{`${t(\"by\")} ${team?.createdBy.username}`}</Text>\n            ) : null\n          }\n        />\n      </Card>\n      <Form.Item\n        name=\"email\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"email\")}\n          </Text>\n        }\n        initialValue={\n          user?.profile.profileEmail ? user.profile.profileEmail : null\n        }\n        rules={\n          submitLabel === \"Create Team\" ||\n          submitLabel === \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E35\u0E21\" ||\n          isEmailRequired\n            ? [\n                {\n                  required: true,\n                  message: `${t(\"please input email\")}`,\n                },\n              ]\n            : []\n        }\n      >\n        <Input type=\"email\" />\n      </Form.Item>\n      <Form.Item\n        name=\"phoneNumber\"\n        initialValue={\n          user?.profile.profilePhoneNumber\n            ? user.profile.profilePhoneNumber\n            : null\n        }\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"phone number\")}\n          </Text>\n        }\n        rules={\n          submitLabel === \"Create Team\" ||\n          submitLabel === \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E35\u0E21\" ||\n          isPhoneNumberRequired\n            ? [\n                {\n                  required: true,\n                  message: `${t(\"please input phone\")}`,\n                },\n              ]\n            : []\n        }\n      >\n        <Input type=\"tel\" />\n      </Form.Item>\n      <Form.Item\n        name=\"discordId\"\n        initialValue={user?.profile.discordId ? user.profile.discordId : null}\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"discord id\")}\n          </Text>\n        }\n        rules={\n          isDiscordIdRequired\n            ? [\n                {\n                  required: true,\n                  message: `${t(\"please input discord id\")}`,\n                },\n              ]\n            : []\n        }\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"ign\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"game username\")}\n          </Text>\n        }\n        rules={\n          isIgnRequired\n            ? [\n                {\n                  required: true,\n                  message: `${t(\"please input game username\")}`,\n                },\n              ]\n            : []\n        }\n      >\n        <Input />\n      </Form.Item>\n      {additionalFields &&\n        additionalFields.length > 0 &&\n        additionalFields.map((field: any, index: number) => (\n          <Form.Item\n            key={field.name}\n            name={field.name}\n            initialValue={\n              initialData\n                ? field.type === \"date\"\n                  ? dayjs(initialData.customFields[index]?.value)\n                  : initialData.customFields[index]?.value\n                  ? initialData.customFields[index]?.value\n                  : null\n                : null\n            }\n            rules={[\n              {\n                required: field.isRequired,\n                message: `${t(\"please input data\")}`,\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(field.name)}\n              </Text>\n            }\n          >\n            {field.type === \"date\" ? (\n              <DatePicker\n                showToday={false}\n                allowClear\n                placeholder=\"DD/MM/YYYY\"\n                format=\"DD/MM/YYYY\"\n                style={{ display: \"flex\" }}\n              />\n            ) : (\n              <Input />\n            )}\n          </Form.Item>\n        ))}\n      {loading ? (\n        <TiltButton color=\"secondary\">\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </TiltButton>\n      ) : (\n        <TiltButton\n          color=\"primary\"\n          onClick={() => form.submit()}\n          style={{ marginTop: 20 }}\n        >\n          {submitLabel}\n        </TiltButton>\n      )}\n    </Form>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  let output = null;\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.acceptBuySellAgreement()\n    );\n    const { data } = await APIServer.clientFromSession(session).request(\n      APIServer.me()\n    );\n    session.set(\"me\", data);\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: \"Successfully accepted buy sell agreements\",\n    });\n    output = { success: \"accept-buy-sell-agreement\" };\n  } catch (e) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: \"accept buy sell failed\",\n    });\n  }\n  await commitSession(session);\n\n  return json(output);\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const displayImage = formData.get(\"displayImage\") as string;\n  const assetId = formData.get(\"assetId\") as string;\n  let assetIdNumber: any;\n  if (assetId) {\n    assetIdNumber = assetId.match(/\\d+/) as any;\n  }\n\n  if (displayImage) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.updateDisplayImage(displayImage)\n      );\n      const { data } = await APIServer.clientFromSession(session).request(\n        APIServer.me()\n      );\n      session.set(\"me\", data);\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: \"Successfully uploaded display image\",\n      });\n    } catch (e) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"upload failed\",\n      });\n    }\n  }\n  if (assetIdNumber) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.updateFrame(Number(assetIdNumber[0]))\n      );\n      const { data } = await APIServer.clientFromSession(session).request(\n        APIServer.me()\n      );\n      session.set(\"me\", data);\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: \"Successfully uploaded frame image\",\n      });\n    } catch (e: any) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: e.response.data.message,\n      });\n    }\n  }\n  await commitSession(session);\n\n  return json(null);\n};\n", "import { useTranslation } from \"react-i18next\";\nimport { Outlet } from \"@remix-run/react\";\nimport { type LoaderFunction } from \"@remix-run/node\";\nimport { Col, Flex, Row, Space } from \"antd\";\nimport { CommentOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport { TiltMenus } from \"~/components/common\";\n// import { getSessionFromRequest } from \"~/session.server\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  // const session = await getSessionFromRequest(request);\n  // const me = session.get(\"me\");\n  // const { uuid } = params;\n\n  // if (!me || !me.uuid || `${me.uuid}` !== `${uuid}`) {\n  //   return redirect(\"/\");\n  // }\n\n  try {\n    return null;\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n  return null;\n};\n\nexport default function UserMyConversations() {\n  const { t } = useTranslation();\n\n  return (\n    <Row gutter={[20, 0]}>\n      <Col span={24} md={6}>\n        <Flex vertical gap={20}>\n          <TiltMenus\n            direction=\"vertical\"\n            menus={[\n              {\n                link: \".\",\n                level: 3,\n                label: (\n                  <Space size={10}>\n                    <MessageOutlined />\n                    {t(\"my webboards\")}\n                  </Space>\n                ),\n              },\n              {\n                link: \"comments\",\n                label: (\n                  <Space size={10}>\n                    <CommentOutlined />\n                    {t(\"my comments\")}\n                  </Space>\n                ),\n              },\n            ]}\n          />\n        </Flex>\n      </Col>\n      <Col span={24} md={18}>\n        <Outlet />\n      </Col>\n    </Row>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  console.log(\"from  action title\", toSubmitData);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.createExpereinceTitle(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully created experience title`,\n    });\n    await commitSession(session);\n\n    // console.log(\"experienceRes\", experienceRes);\n\n    return json({\n      success: \"create-experience-title\",\n      action: \"created\",\n    });\n  } catch (e: any) {\n    console.log(\"e\", e.response.data);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to create experience\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-experience\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\");\n\n  if (id) {\n    try {\n      const experienceRes = await APIServer.clientFromSession(session).request(\n        APIServer.deleteExperienceTitle(id)\n      );\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully deleted experience title`,\n      });\n      return redirect(`/settings/experiences`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    } catch (e: any) {\n      console.log(\"e\", e.response.data);\n\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"delete failed\",\n      });\n      console.log(\"e\", e);\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n\n  try {\n    const resUnreadNoti = await APIServer.clientFromSession(session).request(\n      APIServer.getUnreadNotificationsCount()\n    );\n    if (resUnreadNoti.data && resUnreadNoti.data.count) {\n      return json({ unreadCount: resUnreadNoti.data.count });\n    } else {\n      return json(null);\n    }\n  } catch (e) {\n    return json(null);\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const coverImage = formData.get(\"coverImage\") as string;\n\n  if (coverImage) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.updateCoverImage(coverImage)\n      );\n      const { data } = await APIServer.clientFromSession(session).request(\n        APIServer.me()\n      );\n      session.set(\"me\", data);\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: \"Successfully uploaded cover image\",\n      });\n    } catch (e) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"upload failed\",\n      });\n    }\n  }\n  await commitSession(session);\n  return json(null);\n};\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigation,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport {\n  Card,\n  Col,\n  Divider,\n  Empty,\n  Form,\n  Modal,\n  notification,\n  Row,\n  Skeleton,\n  Space,\n  Typography,\n} from \"antd\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as APIServer from \"~/api\";\nimport { dummyWebboards, Pagination, TiltButton } from \"~/components/common\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { AlbumForm } from \"~/components/pages/User/AlbumForm\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { AlbumIndexEntry } from \"~/components/pages/User/AlbumIndexEntry\";\nimport { LuBook } from \"react-icons/lu\";\nimport { ArrowUpDown } from \"lucide-react\";\nconst { Text } = Typography;\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { uuid } = params;\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let albumRes: any;\n  let albums: any;\n  const me = session.get(\"me\");\n\n  try {\n    if (uuid !== undefined) {\n      if (me) {\n        albumRes = await APIServer.clientFromSession(session).request(\n          APIServer.getAlbum(uuid, searchParams)\n        );\n      } else {\n        albumRes = await APIServer.clientFromSession().request(\n          APIServer.getAlbum(uuid, searchParams)\n        );\n      }\n      if (albumRes.data) {\n        albums = albumRes.data;\n      }\n    }\n  } catch (e) {\n    albums = dummyWebboards; // FIXME: remove this out\n    console.log(\"my albums error\", e);\n  }\n  return json({ searchParams, albums, uuid });\n};\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport default function MyAlbums() {\n  const { searchParams, albums, uuid } = useLoaderData();\n  const revalidator = useRevalidator();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const [api, contextHolder] = notification.useNotification();\n  const [openCreateAlbumModal, setOpenCreateAlbumModal] = useState(false);\n  const [sortingModal, setSortingModal] = useState<boolean>(false);\n  const [albumsList, setAlbumsList] = useState<any>(albums.items);\n  const [form] = Form.useForm();\n  const isOwner = (user && user.uuid === uuid) || user?.userName === uuid;\n\n  const handleOpenCreateAlbumModal = () => {\n    setOpenCreateAlbumModal(true);\n  };\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  const handleToggleSortingMode = () => {\n    setSortingModal(!sortingModal);\n  };\n\n  const onChangeSortItems = (items: any) => {\n    setAlbumsList(items);\n  };\n\n  const onCloseSortingModal = () => {\n    setSortingModal(false);\n  };\n\n  const handleSubmitSorting = () => {\n    setSortingModal(false);\n    const itemsId = {\n      albumIds: albumsList.map((item: any, index: number) => item.id),\n    };\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-albums`,\n      }\n    );\n  };\n\n  useEffect(() => {\n    setAlbumsList(albums.items && albums.items.length ? albums.items : []);\n  }, [albums.items]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n\n    if (fetcher.data.albums.items) {\n      setAlbumsList(fetcher.data.albums.items);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-album\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <>\n      {navigation.state === \"loading\" &&\n      navigation.location.pathname === location.pathname ? (\n        <Skeleton active />\n      ) : (\n        <Card\n          style={{\n            borderRadius: 12,\n            boxShadow:\n              scheme === \"dark\"\n                ? \"0px 12px 10px -10px rgba(0, 0, 0, 0.6)\"\n                : \"0px 12px 10px -10px rgba(0, 0, 0, 0.2)\",\n            border: \"none\",\n          }}\n        >\n          <Row\n            justify=\"space-between\"\n            style={{ alignItems: \"center\" }}\n            gutter={[0, 10]}\n          >\n            <Col flex=\"auto\">\n              <Space\n                style={{\n                  fontWeight: 600,\n                  marginRight: \"10px\",\n                  fontSize: \"24px\",\n                }}\n              >\n                <LuBook style={{ color: \"#7C6FF6\" }} />\n                <Text style={{ fontSize: \"24px\", fontWeight: 600 }}>\n                  {t(\"my albums\")}\n                </Text>\n              </Space>\n            </Col>\n            {isOwner && (\n              <Col>\n                <Space size={15} align=\"center\">\n                  {albumsList.length > 0 && (\n                    <Space\n                      align=\"center\"\n                      onClick={handleToggleSortingMode}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <ArrowUpDown\n                        style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }}\n                      />\n                      {t(\"sort order\")}\n                    </Space>\n                  )}\n                  <TiltButton\n                    color=\"primary\"\n                    onClick={handleOpenCreateAlbumModal}\n                  >\n                    {t(\"create album\")}\n                  </TiltButton>\n                </Space>\n              </Col>\n            )}\n          </Row>\n          <Divider style={{ marginBlock: 10 }} />\n          <Modal\n            {...modalProps}\n            onCancel={() => setOpenCreateAlbumModal(false)}\n            open={openCreateAlbumModal}\n          >\n            <AlbumForm\n              fetcher={fetcher}\n              form={form}\n              onCancel={() => setOpenCreateAlbumModal(false)}\n              action=\"create\"\n            />\n          </Modal>\n          {albumsList && albumsList.length ? (\n            <Row gutter={[30, 30]}>\n              {albumsList.map((album: any, index: number) => (\n                <Col key={index} span={12} md={8}>\n                  <AlbumIndexEntry album={album} uuid={uuid} />\n                </Col>\n              ))}\n            </Row>\n          ) : (\n            <Empty description={<span>{t(\"no data\")}</span>} />\n          )}\n          <Pagination\n            currentPage={albums.page}\n            totalPages={albums.totalPages}\n            onPageClicked={handleChangePage}\n          />\n        </Card>\n      )}\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingModal(false)}\n        open={sortingModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={albumsList}\n            onChange={onChangeSortItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onCloseSortingModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  notification,\n  Row,\n  Space,\n  Switch,\n  Typography,\n  Image,\n  Card,\n} from \"antd\";\nimport { EditOutlined, LoadingOutlined } from \"@ant-design/icons\";\n// import { AuthContext } from \"~/contexts\";\nimport { FileUploader, TiltButton } from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nimport { TbPhotoPlus } from \"react-icons/tb\";\nconst { Text, Title } = Typography;\n// const { useToken } = theme;\n\ninterface AlbumFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  initialValues?: any;\n  onCancel: () => void;\n}\n\nexport function AlbumForm(props: AlbumFormProps) {\n  const { fetcher, form, initialValues, onCancel, action } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [defaultValues, setDefaultValues] = useState<any>(initialValues);\n  const [previewCover, setPreviewCover] = useState<string | null>(\n    initialValues?.cover\n  );\n\n  const photosStyle = {\n    position: \"relative\",\n    height: 150,\n    width: 120,\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundColor: \"#EEEEEE\",\n  } as any;\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleSubmit = useCallback(\n    (values: any) => {\n      const { isPrivate, ...rest } = values;\n\n      fetcher.submit(\n        {\n          data: JSON.stringify({\n            ...rest,\n            isPrivate: isPrivate ? isPrivate : false,\n            id: defaultValues ? defaultValues.id : undefined,\n          }),\n        },\n        action === \"create\"\n          ? {\n              method: \"post\",\n              action: `/resources/create-album`,\n            }\n          : {\n              method: \"put\",\n              action: `/resources/edit-album`,\n            }\n      );\n      form.setFieldsValue(initialValues);\n      form.setFieldValue(\"cover\", null);\n      setPreviewCover(null);\n      form.resetFields();\n      onCancel();\n    },\n    [fetcher, form, onCancel]\n  );\n\n  useEffect(() => {\n    if (initialValues && fetcher.data && fetcher.data.success) {\n      if (fetcher.data.success) {\n        form.setFieldsValue(initialValues);\n        setPreviewCover(initialValues?.cover);\n      }\n    }\n  }, [initialValues, form, fetcher.data]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"cover\") {\n        form.setFieldValue(\"cover\", fetcher.data.key);\n        setPreviewCover(fetcher.data.key);\n      }\n\n      setUploading(false);\n    }\n  }, [form, fetcher.data, fetcher.state]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={initialValues}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {action === \"create\" ? t(\"create album\") : t(\"edit album\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          {/* <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n            <Col flex=\"auto\">\n              <Text className=\"required\" style={{ fontWeight: 600 }}>\n                {t(\"upload cover image\")} ({t(\"recommended resolution\")}{\" \"}\n                1920x1080 px)\n              </Text>\n            </Col>\n            <Col flex=\"none\">\n              <Form.Item\n                key=\"cover\"\n                name=\"cover\"\n                rules={[\n                  {\n                    required: true,\n                    message: `${t(\"upload cover image\")} ${t(\n                      \"recommended resolution\"\n                    )} 1920x1080 px`,\n                  },\n                ]}\n              >\n                <FileUploader\n                  fetcher={fetcher}\n                  fieldName={\"cover\"}\n                  onUploading={setUploading}\n                  onErrorFileTooLarge={handleFileTooLarge}\n                >\n                  <Space size={5} style={{ cursor: \"pointer\" }}>\n                    <EditOutlined style={{ color: \"#8263ea\" }} />\n                    <Text>{t(\"upload\")}</Text>\n                  </Space>\n                </FileUploader>\n              </Form.Item>\n            </Col>\n          </Row>\n          {uploading ? (\n            <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n          ) : previewCover ? (\n            <Image\n              preview={false}\n              style={{ maxWidth: 400 }}\n              src={`${cdnUrl}/${previewCover}`}\n            />\n          ) : (\n            false\n          )} */}\n          <Form.Item\n            key=\"cover\"\n            name=\"cover\"\n            style={{ margin: \"0px\", padding: \"0px\" }}\n            rules={[\n              {\n                required: true,\n                message: `${t(\"upload cover image\")} ${t(\n                  \"recommended resolution\"\n                )} 1920x1080 px`,\n              },\n            ]}\n          >\n            <Row>\n              <Col flex=\"auto\">\n                <Space direction=\"vertical\" size={5}>\n                  <Text style={{ fontWeight: 600 }}>\n                    {t(\"upload cover image\")} ({t(\"recommended resolution\")}{\" \"}\n                    1920x1080 px)\n                  </Text>\n                  {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n                    <Card\n                      bordered={false}\n                      style={{\n                        ...photosStyle,\n                        textAlign: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"15px 0\",\n                      }}\n                    >\n                      <LoadingOutlined\n                        style={{\n                          fontSize: 24,\n                          margin: \"40px auto\",\n                        }}\n                        spin\n                      />\n                    </Card>\n                  ) : (\n                    <div>\n                      {!form.getFieldValue(\"cover\") && !initialValues && (\n                        <FileUploader\n                          fetcher={fetcher}\n                          fieldName={\"cover\"}\n                          // maxUpload={5}\n                          onUploading={setUploading}\n                          onErrorFileTooLarge={handleFileTooLarge}\n                        >\n                          <Card\n                            bordered={false}\n                            style={{\n                              ...photosStyle,\n                              backgroundImage: `url(\"${cdnUrl}/${\n                                initialValues\n                                  ? previewCover\n                                  : form.getFieldValue(\"cover\")\n                              }\")`,\n                              textAlign: \"center\",\n                              justifyContent: \"center\",\n                              margin: \"15px 0\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            {!form.getFieldValue(\"cover\") && !previewCover && (\n                              <div\n                                style={{\n                                  textAlign: \"center\",\n                                  margin: 0,\n                                  position: \"absolute\",\n                                  top: \"50%\",\n                                  left: \"50%\",\n                                  msTransform: \"translate(-50%,-50%)\",\n                                  transform: \"translate(-50%, -50%)\",\n                                }}\n                              >\n                                <Space size={5} style={{ color: \"black\" }}>\n                                  <TbPhotoPlus />\n                                  {t(\"add\")}\n                                </Space>\n                              </div>\n                            )}\n                          </Card>\n                        </FileUploader>\n                      )}\n                      {(form.getFieldValue(\"cover\") || initialValues) && (\n                        <Image\n                          style={{\n                            marginTop: \"15px\",\n                            position: \"relative\",\n                            height: 150,\n                            width: 120,\n                            borderRadius: 5,\n                            backgroundSize: \"cover\",\n                            backgroundPosition: \"center\",\n                            backgroundColor: \"#EEEEEE\",\n                          }}\n                          src={`${cdnUrl}/${\n                            initialValues\n                              ? previewCover\n                              : form.getFieldValue(\"cover\")\n                          }`}\n                          preview={true}\n                        />\n                      )}\n                    </div>\n                  )}\n                </Space>\n              </Col>\n              {(form.getFieldValue(\"cover\") || initialValues) && (\n                <Col flex=\"none\">\n                  <FileUploader\n                    fetcher={fetcher}\n                    fieldName={\"cover\"}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                  >\n                    <Space size={5} style={{ cursor: \"pointer\" }}>\n                      <EditOutlined style={{ color: \"#8263ea\" }} />\n                      <Text>{t(\"change\")}</Text>\n                    </Space>\n                  </FileUploader>\n                </Col>\n              )}\n            </Row>\n          </Form.Item>\n          <Form.Item\n            key=\"name\"\n            name=\"name\"\n            required={false}\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (!value || value === \"\") {\n                    const message = t(\"please input album name\");\n                    return Promise.reject(new Error(message));\n                  }\n                  if (value.length > 30) {\n                    const message = t(\n                      \"album name must contain only 30 charaters\"\n                    );\n                    return Promise.reject(new Error(message));\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"album name\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input\n              count={{\n                show: true,\n                max: 30,\n              }}\n            />\n          </Form.Item>\n          <Form.Item\n            key=\"description\"\n            name=\"description\"\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (value && value.length > 500) {\n                    const message = t(\n                      \"description must contain only 500 charaters\"\n                    );\n                    return Promise.reject(new Error(message));\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            label={\n              <Space size={5}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"description\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input.TextArea\n              placeholder={t(\"input description\")}\n              autoSize={{\n                minRows: 5,\n              }}\n              count={{\n                show: true,\n                max: 500,\n              }}\n            />\n          </Form.Item>\n          <Space size={10}>\n            <Form.Item\n              key=\"isPrivate\"\n              name=\"isPrivate\"\n              valuePropName=\"checked\"\n              noStyle\n            >\n              <Switch />\n            </Form.Item>\n            <Text>{t(\"private album\")}</Text>\n          </Space>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {action === \"create\" ? t(\"create album\") : t(\"edit album\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {contextHolder}\n    </div>\n  );\n}\n", "import React, { useMemo, useState } from \"react\";\nimport type { ReactNode } from \"react\";\nimport {\n  DndContext,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from \"@dnd-kit/core\";\nimport type { Active, UniqueIdentifier } from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  arrayMove,\n  sortableKeyboardCoordinates,\n} from \"@dnd-kit/sortable\";\n\nimport { SortableOverlay } from \"./SortableOverlay\";\nimport { DragHandle, SortableItem } from \"./SortableItem\";\n\ninterface BaseItem {\n  id: UniqueIdentifier;\n}\n\ninterface Props<T extends BaseItem> {\n  items: T[];\n  onChange(items: T[]): void;\n  renderItem(item: T, items: T[]): ReactNode;\n}\n\nexport function SortableList<T extends BaseItem>({\n  items,\n  onChange,\n  renderItem,\n}: Props<T>) {\n  const [active, setActive] = useState<Active | null>(null);\n  const activeItem = useMemo(\n    () => items.find((item) => item.id === active?.id),\n    [active, items]\n  );\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  return (\n    <DndContext\n      sensors={sensors}\n      onDragStart={({ active }) => {\n        setActive(active);\n      }}\n      onDragEnd={({ active, over }) => {\n        if (over && active.id !== over?.id) {\n          const activeIndex = items.findIndex(({ id }) => id === active.id);\n          const overIndex = items.findIndex(({ id }) => id === over.id);\n\n          onChange(arrayMove(items, activeIndex, overIndex));\n        }\n        setActive(null);\n      }}\n      onDragCancel={() => {\n        setActive(null);\n      }}\n    >\n      <SortableContext items={items}>\n        <div className=\"SortableList\">\n          {items.map((item) => (\n            <React.Fragment key={item.id}>\n              {renderItem(item, items)}\n            </React.Fragment>\n          ))}\n        </div>\n      </SortableContext>\n      <SortableOverlay>\n        {activeItem ? renderItem(activeItem, items) : null}\n      </SortableOverlay>\n    </DndContext>\n  );\n}\n\nSortableList.Item = SortableItem;\nSortableList.DragHandle = DragHandle;\n", "import type { PropsWithChildren } from \"react\";\nimport { DragOverlay, defaultDropAnimationSideEffects } from \"@dnd-kit/core\";\nimport type { DropAnimation } from \"@dnd-kit/core\";\n\nconst dropAnimationConfig: DropAnimation = {\n  sideEffects: defaultDropAnimationSideEffects({\n    styles: {\n      active: {\n        opacity: \"0.4\",\n      },\n    },\n  }),\n};\n\ninterface Props {}\n\nexport function SortableOverlay({ children }: PropsWithChildren<Props>) {\n  return (\n    <DragOverlay dropAnimation={dropAnimationConfig}>{children}</DragOverlay>\n  );\n}\n", "import React, { createContext, useContext, useMemo } from \"react\";\nimport type { CSSProperties, PropsWithChildren } from \"react\";\nimport type {\n  DraggableSyntheticListeners,\n  UniqueIdentifier,\n} from \"@dnd-kit/core\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { Button } from \"antd\";\nimport { MdDragHandle } from \"react-icons/md\";\n\ninterface Props {\n  id: UniqueIdentifier;\n}\n\ninterface Context {\n  attributes: Record<string, any>;\n  listeners: DraggableSyntheticListeners;\n  ref(node: HTMLElement | null): void;\n}\n\nconst SortableItemContext = createContext<Context>({\n  attributes: {},\n  listeners: undefined,\n  ref() {},\n});\n\nexport function SortableItem({ children, id }: PropsWithChildren<Props>) {\n  const {\n    attributes,\n    isDragging,\n    listeners,\n    setNodeRef,\n    setActivatorNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n  const context = useMemo(\n    () => ({\n      attributes,\n      listeners,\n      ref: setActivatorNodeRef,\n    }),\n    [attributes, listeners, setActivatorNodeRef]\n  );\n  const style: CSSProperties = {\n    opacity: isDragging ? 0.4 : undefined,\n    transform: CSS.Translate.toString(transform),\n    transition,\n  };\n\n  return (\n    <SortableItemContext.Provider value={context}>\n      <div className=\"SortableItem\" ref={setNodeRef} style={style}>\n        {children}\n      </div>\n    </SortableItemContext.Provider>\n  );\n}\n\nexport function DragHandle() {\n  const { attributes, listeners, ref } = useContext(SortableItemContext);\n\n  return (\n    <Button\n      type=\"text\"\n      className=\"DragHandle\"\n      {...attributes}\n      {...listeners}\n      ref={ref}\n    >\n      <MdDragHandle style={{ color: \"#7C6FF6\", fontSize: \"32px\" }} />\n      {/* <Text>{t(\"Drag\")}</Text> */}\n    </Button>\n  );\n}\n", "import { Link, useMatches } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Space, Typography } from \"antd\";\nimport { LuLock } from \"react-icons/lu\";\nconst { Text } = Typography;\n\ninterface AlbumIndexEntryProps {\n  album: any;\n  uuid: string;\n}\n\nexport function AlbumIndexEntry(props: AlbumIndexEntryProps) {\n  const { t } = useTranslation();\n  const { album, uuid } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  return (\n    <Link to={`/users/${uuid}/my-album/${album.id}`}>\n      <Space direction=\"vertical\" size={10} style={{ display: \"flex\" }}>\n        <div\n          style={{\n            width: \"100%\",\n            paddingBottom: \"60%\",\n            borderRadius: 12,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            backgroundImage:\n              album && album.cover && album.cover !== \"-\"\n                ? `url(\"${cdnUrl}/${album.cover}\")`\n                : undefined,\n          }}\n        />\n        <Space direction=\"vertical\" size={0} style={{ display: \"flex\" }}>\n          <Space size={8}>\n            {album.isPrivate && <LuLock style={{ fontSize: \"1em\" }} />}\n            <Text>{album.name}</Text>\n          </Space>\n          {album.totalPhotos && album.totalPhotos !== \"0\" && (\n            <Text>{`${album.totalPhotos} ${t(\"images\")}`}</Text>\n          )}\n        </Space>\n      </Space>\n    </Link>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    const achievementRes = await APIServer.clientFromSession(session).request(\n      APIServer.editAchievementTitle(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully updated achievement title`,\n    });\n    await commitSession(session);\n\n    // console.log(\"achievementRes\", achievementRes.data);\n\n    return json({\n      success: \"update-achievement\",\n      action: \"updated\",\n    });\n  } catch (e: any) {\n    console.log(\"e\", e.response.data);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to updated achievement title\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-achievement\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.sortingMyAcheivement(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully sorted my achievement`,\n    });\n    await commitSession(session);\n\n    return json({\n      success: \"sort-my achievement\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to sorted my achievement\",\n    });\n    await commitSession(session);\n    return null;\n  }\n};\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Card, Result, Space } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport * as APIServer from \"~/api\";\nimport { TournamentGrid } from \"~/components/pages/Tournament\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"~/contexts\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport jwt_decode from \"jwt-decode\";\nimport { joinTournaments } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const session = await getSessionFromRequest(request);\n  const { uuid } = params;\n  const accessToken = session.get(\"accessToken\");\n  let uuidUser = \"\" as string;\n  let tournaments: any[] = [];\n  let joinedTournaments: any[] = [];\n  let transformedJoinedTournaments: any[] = [];\n  if (uuid) {\n    try {\n      const tournamentRes = await APIServer.clientFromSession(session).request(\n        APIServer.getAllTournamentByOrganizer()\n      );\n      if (tournamentRes.data) {\n        tournaments = tournamentRes.data;\n      }\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n  }\n\n  if (accessToken) {\n    const accessTokenDecoded: any = jwt_decode(accessToken);\n    uuidUser = accessTokenDecoded.sub;\n    try {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getJoinedTournament(uuidUser)\n      );\n      if (tournamentRes.data) {\n        joinedTournaments = tournamentRes.data;\n      }\n\n      transformedJoinedTournaments = joinedTournaments.map((item) => {\n        return {\n          id: item.tournament.id,\n          name: item.tournament.name,\n          nameEn: item.tournament.nameEn,\n          discordUrl: item.tournament.discordUrl,\n          registrationStartDate: item.tournament.registrationStartDate,\n          registrationEndDate: item.tournament.registrationEndDate,\n          startDate: item.tournament.startDate,\n          endDate: item.tournament.endDate,\n          maxTeam: item.tournament.maxTeam,\n          playerCount: item.tournament.playerCount,\n          additionalPlayerCount: item.tournament.additionalPlayerCount,\n          type: item.tournament.type,\n          status: item.tournament.status,\n          finalRoundLocation: item.tournament.finalRoundLocation,\n          finalRoundLocationEn: item.tournament.finalRoundLocationEn,\n          prize: item.tournament.prize,\n          description: item.tournament.description,\n          descriptionEn: item.tournament.descriptionEn,\n          qualificationRules: item.tournament.qualificationRules,\n          qualificationRulesEn: item.tournament.qualificationRulesEn,\n          isOnline: item.tournament.isOnline,\n          bannerImageUrl: item.tournament.bannerImageUrl,\n          thumbnailImageUrl: item.tournament.thumbnailImageUrl,\n          remark: item.tournament.remark,\n          isKycRequired: item.tournament.isKycRequired,\n          isDiscordIdRequired: item.tournament.isDiscordIdRequired,\n          isEmailRequired: item.tournament.isEmailRequired,\n          isPhoneNumberRequired: item.tournament.isPhoneNumberRequired,\n          isIgnRequired: item.tournament.isIgnRequired,\n          requirementFields: item.tournament.requirementFields,\n          organizerId: item.tournament.organizerId,\n          gameId: item.tournament.gameId,\n          organizer: item.tournament.organizer,\n          game: item.tournament.game,\n          createdDate: item.tournament.createdDate,\n          updatedDate: item.tournament.updatedDate,\n        };\n      });\n      tournaments = joinTournaments(tournaments, transformedJoinedTournaments);\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n  }\n\n  return json({ uuid, tournaments });\n};\n\nexport default function UserMyTournaments() {\n  const { user } = useContext(AuthContext);\n  const { uuid, tournaments } = useLoaderData();\n  const { t } = useTranslation();\n\n  const draftTournaments = tournaments.filter(\n    (tournament: any) => tournament.status === \"draft\"\n  );\n  const pendingTournaments = tournaments.filter(\n    (tournament: any) => tournament.status === \"pending\"\n  );\n  const approvedTournaments = tournaments.filter(\n    (tournament: any) =>\n      tournament.status !== \"draft\" &&\n      tournament.status !== \"pending\" &&\n      tournament.status !== \"rejected\"\n  );\n\n  return !tournaments.length ? (\n    <Card style={{ borderRadius: 10 }}>\n      <Result icon={<InboxOutlined />} title={t(\"no past tournament\")} />\n    </Card>\n  ) : tournaments === null ? (\n    <TournamentGrid loading data={null} />\n  ) : (\n    <Space size={50} direction=\"vertical\" style={{ display: \"flex\" }}>\n      {user && user.uuid === uuid && draftTournaments.length ? (\n        <TournamentGrid data={draftTournaments} title={t(\"draft\")} />\n      ) : (\n        <></>\n      )}\n      {user && user.uuid === uuid && pendingTournaments.length ? (\n        <TournamentGrid data={pendingTournaments} title={t(\"pending\")} />\n      ) : (\n        <></>\n      )}\n      {approvedTournaments.length && (\n        <TournamentGrid\n          data={approvedTournaments}\n          title={user && user.uuid === uuid ? t(\"approved\") : undefined}\n        />\n      )}\n    </Space>\n  );\n}\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const gameId = formData.get('gameId') as string;\n  const requestId = formData.get('requestId') as string;\n  const partyId = formData.get('partyId') as string;\n  let newParty: any = null;\n\n  if (requestId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.approvePartyRequest(partyId, { requestId: +requestId })\n      );\n      if (partyId) {\n        const partyRes = await APIServer.clientFromSession().request(\n          APIServer.getParty(partyId, gameId)\n        );\n        if (partyRes && partyRes.data && partyRes.data.party) {\n          newParty = partyRes.data.party;\n        }\n      }\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `successfully approved request`,\n      });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'approve request failed',\n      });\n    }\n  }\n  await commitSession(session);\n  return json({ success: `approve-party-request`, partyId, party: newParty });\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  console.log(\"in action edit\");\n\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n  const experienceId = toSubmitData.id;\n\n  try {\n    const experienceRes = await APIServer.clientFromSession(session).request(\n      APIServer.editExperienceTitle(experienceId, toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully updated experience title`,\n    });\n    await commitSession(session);\n\n    return json({\n      success: \"update-experience\",\n      action: \"updated\",\n      experienceTitleId: 1,\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to updated experience\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-experience\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport {\n  Button,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Modal,\n  Result,\n  Row,\n  Space,\n  Typography,\n  notification,\n} from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { TextEditor, TiltButton } from \"~/components/common\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n  redirect,\n} from \"@remix-run/node\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { ArrowUpDown, Trash2 } from \"lucide-react\";\nconst { Text, Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  let personalDetails = [];\n  try {\n    const personalDetailsRes = await APIServer.clientFromSession(\n      session\n    ).request(APIServer.getPersonalDetails());\n    if (personalDetailsRes.data) {\n      personalDetails = personalDetailsRes.data;\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({ personalDetails });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = JSON.parse(entries.data);\n  const uuid = entries.uuid;\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n        return redirect(`/users/${uuid}`, {\n          headers: {\n            \"Set-Cookie\": await commitSession(session),\n          },\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n\n      break;\n    case \"sorting\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully sorted personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\n// Modal properties\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n};\n\nexport default function SettingsPersonalDetails() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { personalDetails } = useLoaderData();\n  const [textEditorLoading, setTextEditorLoading] = useState(true);\n  const [messageApi, contextHolder] = notification.useNotification();\n\n  const { scheme } = useContext(AppContext);\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  const [sortingModal, setSortingModal] = useState<boolean>(false);\n  const { user } = useContext(AuthContext);\n\n  // State to manage the list of personal details\n  const [personalDetailsList, setPersonalDetailsList] = useState(\n    personalDetails?.details?.length > 0\n      ? personalDetails.details.map((detail: any, index: number) => ({\n          title: detail.title,\n          detail: detail.detail,\n          id: index + 1,\n        }))\n      : [\n          {\n            id: 1,\n            title: \"\",\n            detail: \"\",\n          },\n        ]\n  );\n\n  const handleToggleSortingMode = () => {\n    setSortingModal(!sortingModal);\n  };\n\n  const onChangeSortItems = (items: any) => {\n    setPersonalDetailsList(items);\n  };\n\n  const onCloseSortingModal = () => {\n    setSortingModal(false);\n  };\n\n  const handleSubmitSorting = () => {\n    setSortingModal(false);\n    form.setFieldsValue({ personalDetails: personalDetailsList });\n    const newValues = { personalDetails: personalDetailsList };\n    submit(\n      {\n        data: JSON.stringify(newValues),\n        action: \"sorting\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  const handleRemove = (index: any) => {\n    setPersonalDetailsList((prevList: any) =>\n      prevList.filter((_: any, i: any) => i !== index)\n    );\n  };\n\n  const handlePersonalDetails = (values: any) => {\n    submit(\n      {\n        data: JSON.stringify(values),\n        uuid: user.uuid,\n        action: \"update\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Space size={10} style={{ marginBottom: 20 }}>\n        <Title level={2} style={{ margin: 0 }}>\n          {t(\"personal details\")}\n        </Title>\n        {personalDetails?.details?.length > 0 && (\n          <Button\n            type=\"text\"\n            style={{\n              marginTop: 2,\n              marginRight: 10,\n              fontWeight: 600,\n              textAlign: \"center\",\n            }}\n            onClick={handleToggleSortingMode}\n          >\n            <ArrowUpDown\n              style={{\n                color: \"#7C6FF6\",\n                fontSize: \"1.2em\",\n                marginRight: \"5px\",\n              }}\n            />\n            {t(\"sort order\")}\n          </Button>\n        )}\n      </Space>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"dynamic_form_complex\"\n        initialValues={{ personalDetails: personalDetailsList }}\n        onFinish={handlePersonalDetails}\n      >\n        <Form.List name=\"personalDetails\">\n          {(fields, { add, remove }) => (\n            <div\n              style={{\n                display: \"flex\",\n                rowGap: 16,\n                flexDirection: \"column\",\n              }}\n            >\n              {fields.map((field, index) => (\n                <div key={field.key}>\n                  <Space\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    <Text style={{ fontWeight: 600 }} className=\"required\">\n                      {t(\"title personal details\")}\n                    </Text>\n                    <div\n                      onClick={() => {\n                        handleRemove(index);\n                        remove(field.name); // Update the form state\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <Space style={{ color: \"#D61515\" }}>\n                        <Trash2 />\n                        <Text\n                          style={{\n                            fontWeight: 600,\n                            fontSize: \"inherit\",\n                            color: \"#D61515\",\n                          }}\n                        >\n                          {t(\"delete detail box\")}\n                        </Text>\n                      </Space>\n                    </div>\n                  </Space>\n\n                  <Form.Item\n                    name={[field.name, \"title\"]}\n                    rules={[\n                      () => ({\n                        validator(_, value) {\n                          if (!value || value === \"\") {\n                            const message = t(\n                              \"please input title personal detail\"\n                            );\n                            return Promise.reject(new Error(message));\n                          }\n                          if (value.length > 30) {\n                            const message = t(\n                              \"title must contain only 30 charaters\"\n                            );\n                            return Promise.reject(new Error(message));\n                          }\n                          return Promise.resolve();\n                        },\n                      }),\n                    ]}\n                  >\n                    <Input\n                      count={{\n                        show: true,\n                        max: 30,\n                      }}\n                    />\n                  </Form.Item>\n\n                  {!textEditorLoading ? (\n                    <>\n                      <Text\n                        style={{\n                          fontWeight: 600,\n                          fontSize: \"inherit\",\n                        }}\n                        className=\"required\"\n                      >\n                        {t(\"detail personal details\")}\n                      </Text>\n                      <Form.Item\n                        name={[field.name, \"detail\"]}\n                        rules={[\n                          { required: true, message: t(\"please input detail\") },\n                        ]}\n                      >\n                        <TextEditor\n                          id={`detail${index}`}\n                          initialValues={personalDetailsList[index]?.detail}\n                          fetcher={fetcher}\n                          onChange={(values) =>\n                            form.setFieldValue(\n                              `personalDetails[${index}].detail`,\n                              values\n                            )\n                          }\n                        />\n                      </Form.Item>\n                    </>\n                  ) : (\n                    <Result\n                      icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n                    />\n                  )}\n                </div>\n              ))}\n\n              <TiltButton\n                color={`${scheme}-base`}\n                onClick={() => {\n                  if (fields.length < 3) {\n                    add();\n                  } else {\n                    messageApi.open({\n                      type: \"error\",\n                      message: t(\"you can only add up to 3 personal details\"),\n                      duration: 5,\n                      placement: \"bottomRight\",\n                    });\n                  }\n                }}\n                style={{ marginTop: 20 }}\n              >\n                + {t(\"Add Item\")}\n              </TiltButton>\n            </div>\n          )}\n        </Form.List>\n\n        <TiltButton\n          color=\"primary\"\n          onClick={form.submit}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"save\")}\n        </TiltButton>\n      </Form>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingModal(false)}\n        open={sortingModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={personalDetailsList}\n            onChange={onChangeSortItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">\n                    {item.rankingGame?.name\n                      ? item.rankingGame.name\n                      : item.title}\n                  </TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onCloseSortingModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      {contextHolder}\n    </div>\n  );\n}\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get('data') as string;\n  const partyId = formData.get('partyId') as string;\n  const gameId = formData.get('gameId') as string;\n  const { isPrivate, hasParty, ...toSubmitData } = JSON.parse(data);\n\n  let partyRequest: any = null; // FIXME: change this to null\n\n  if (hasParty === true) {\n    session.flash('flashMessage', {\n      type: 'error',\n      message: `Already has a party`,\n    });\n    await commitSession(session);\n    return null;\n  }\n\n  if (partyId) {\n    try {\n      // const requestsRes =\n      //   isPrivate === true\n      //     ? await APIServer.clientFromSession(session).request(\n      //         APIServer.createPartyRequest(partyId, toSubmitData)\n      //       )\n      //     : await APIServer.clientFromSession(session).request(\n      //         APIServer.joinParty(partyId, toSubmitData)\n      //       );\n\n      const requestsRes = await APIServer.clientFromSession(session).request(\n        APIServer.joinParty(partyId, toSubmitData)\n      );\n\n      if (requestsRes.data) {\n        partyRequest = isPrivate === false ? null : requestsRes.data;\n      }\n      const { data } = await APIServer.clientFromSession(session).request(\n        APIServer.me()\n      );\n\n      session.set('me', data);\n      session.flash('flashMessage', {\n        type: 'success',\n        message: isPrivate\n          ? `successfully created request`\n          : `successfully joined party`,\n      });\n      await commitSession(session);\n      return json({\n        success: isPrivate === false ? 'join-party' : 'create-party-request',\n        request: partyRequest,\n        gameId: gameId,\n        partyId: partyId,\n      });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'create party request failed',\n      });\n      await commitSession(session);\n      // return json({\n      //   success:\n      //     partyRequest.status === 'approved'\n      //       ? 'join-party'\n      //       : 'create-party-request',\n      //   request: partyRequest,\n      //   gameId: gameId,\n      //   partyId: partyId,\n      // }); // FIXME: remove this out\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const requestId = formData.get('requestId') as string;\n  const partyId = formData.get('partyId') as string;\n  const gameId = formData.get('gameId') as string;\n  let partyRequest: any = null; // FIXME: change this to null\n\n  if (requestId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.deletePartyRequest(partyId, { requestId: +requestId })\n      );\n      if (partyId) {\n        const requestsRes = await APIServer.clientFromSession(session).request(\n          APIServer.getPartyRequest(partyId, gameId)\n        );\n        if (requestsRes.data) {\n          partyRequest = requestsRes.data;\n        }\n      }\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `successfully deleted request`,\n      });\n      await commitSession(session);\n      return json({\n        success: 'delete-party-request',\n        request: partyRequest,\n        partyId: partyId,\n      });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'delete party request failed',\n      });\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async () => {\n  let featuredTournaments: any[] = [];\n  try {\n    const tournamentRes = await APIServer.clientFromSession().request(\n      APIServer.getTournaments({ featured: true })\n    );\n    if (tournamentRes.data) {\n      featuredTournaments = tournamentRes.data;\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n\n  return json({ featuredTournaments });\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const requestId = formData.get('requestId') as string;\n  const partyId = formData.get('partyId') as string;\n\n  if (requestId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.rejectPartyRequest(partyId, { requestId: +requestId })\n      );\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `successfully rejected request`,\n      });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'reject request failed',\n      });\n    }\n  }\n  await commitSession(session);\n  return json({ success: `reject-party-request`, partyId });\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const partyId = formData.get(\"partyId\") as string;\n  const data = formData.get(\"data\") as string;\n  const toSubmitData = JSON.parse(data);\n\n  if (partyId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.sendMessageToPartyChat(partyId, toSubmitData)\n      );\n      //   session.flash('flashMessage', {\n      //     type: 'success',\n      //     message: `successfully send a message`,\n      //   });\n      //   await commitSession(session);\n      return json({\n        success: \"success-sending-a-message\",\n      });\n    } catch (e) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"send a message failed\",\n      });\n      await commitSession(session);\n      return { sendFailed: true };\n    }\n  }\n};\n", "import { useRouteLoaderData } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Card, Result, Typography, theme } from \"antd\";\n\nconst { useToken } = theme;\n\nconst { Title } = Typography;\n\nexport default function TournamentSingleSchedule() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.tournaments.$id\");\n  const { tournament } = routeLoader;\n  const { t } = useTranslation();\n  const { token } = useToken();\n\n  return (\n    <>\n      <Title level={3} style={{ marginBottom: 30 }}>\n        {t(\"tournament schedule\")}\n      </Title>\n      {tournament.bracketContent ? (\n        // <Image src={tournament.scheduleImageUrl} />\n        // <div\n        //   className=\"ctrlg-html\"\n        //   style={{ color: token.colorTextBase }}\n        //   dangerouslySetInnerHTML={{\n        //     __html: `${renderData(\n        //       tournament.bracketContent,\n        //       \"description\",\n        //       locale\n        //     )}`,\n        //   }}\n        // />\n        <div\n          className=\"ctrlg-html\"\n          style={{ color: token.colorTextBase }}\n          dangerouslySetInnerHTML={{\n            __html: `${tournament.bracketContent}`,\n          }}\n        />\n      ) : (\n        // <div>{tournament.bracketContent}</div>\n        <Card style={{ borderRadius: 10 }}>\n          <Result title={t(\"schedule hasn't yet been released\")} />\n        </Card>\n      )}\n    </>\n  );\n}\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigate,\n  useNavigation,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Element, scroller } from \"react-scroll\";\nimport { Card, notification, Skeleton } from \"antd\";\nimport { isEmpty, isNil, omitBy, toNumber } from \"lodash\";\nimport { dummyComments, dummyWebboard, Pagination } from \"~/components/common\";\nimport {\n  WebboardSingleCommentBox,\n  WebboardSingleComments,\n  WebboardSinglePost,\n} from \"~/components/pages/Webboard\";\nimport * as APIServer from \"~/api\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { resetFetcher } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { id } = params;\n  let webboard: any = null;\n  let comments: any = null;\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let reactionOptions: any[] = [];\n  let tournament: any;\n\n  if (id) {\n    try {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getTournament(toNumber(id))\n      );\n\n      if (tournamentRes.data) {\n        tournament = tournamentRes.data;\n      }\n\n      const webboardRes = await APIServer.clientFromSession().request(\n        APIServer.getTournamentWebboard(tournament.post.id)\n      );\n      if (webboardRes && webboardRes.data) {\n        webboard = webboardRes.data;\n        const reactionRes = await APIServer.clientFromSession().request(\n          APIServer.getReactions()\n        );\n        const commentRes = await APIServer.clientFromSession().request(\n          APIServer.getCommentsFromWebboardId(tournament.post.id, searchParams)\n        );\n        if (commentRes && commentRes.data) {\n          comments = commentRes.data;\n        }\n        if (reactionRes.data) {\n          reactionOptions = reactionRes.data;\n        }\n      }\n    } catch (e) {\n      webboard = dummyWebboard; // FIXME: remove this out\n      comments = dummyComments; // FIXME: remove this out\n    }\n  }\n\n  return json({ id, comments, reactionOptions, searchParams, webboard });\n};\n\nexport default function TournamentSingleWebboard() {\n  const { id, comments, reactionOptions, searchParams, webboard } =\n    useLoaderData();\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const location = useLocation();\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n  const navigation = useNavigation();\n  const submit = useSubmit();\n  const navigate = useNavigate();\n  const revalidator = useRevalidator();\n  const [api, contextHolder] = notification.useNotification();\n  const [quotedComment, setQuotedComment] = useState<any>(null);\n\n  const handleReplyComment = (comment: any) => {\n    setQuotedComment(comment);\n    scroller.scrollTo(\"comment-box\", {\n      duration: 1000,\n      delay: 100,\n      smooth: true,\n      offset: -80,\n    });\n  };\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"create-comment\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        setQuotedComment(null);\n        api.open({\n          message: t(\"successfully commented\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, id, revalidator]);\n\n  useEffect(() => {\n    if (location.hash && location.hash.length > 0) {\n      let commentId: string = \"\";\n      commentId = location.hash.replace(\"#comment-\", \"comment-\");\n      if (commentId.length > 0) {\n        scroller.scrollTo(commentId, {\n          duration: 1000,\n          delay: 100,\n          smooth: true,\n          offset: -80,\n        });\n        setTimeout(() => {\n          navigate(location.pathname, { preventScrollReset: true });\n        }, 1200);\n      }\n    }\n  }, [location]);\n\n  return (\n    <div>\n      <WebboardSinglePost\n        data={webboard}\n        fetcher={fetcher}\n        reactionOptions={reactionOptions}\n      />\n      {navigation.state === \"loading\" &&\n      navigation.location.pathname === location.pathname ? (\n        <Card>\n          <Skeleton active />\n        </Card>\n      ) : comments.items.length > 0 ? (\n        <WebboardSingleComments\n          data={comments.items}\n          fetcher={fetcher}\n          reactionOptions={reactionOptions}\n          onReplyComment={handleReplyComment}\n        />\n      ) : (\n        <></>\n      )}\n      {user && (\n        <Element name=\"comment-box\">\n          <Card\n            bordered={false}\n            style={{\n              marginBottom: 20,\n              borderRadius: 10,\n              boxShadow:\n                scheme === \"dark\"\n                  ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n                  : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n            }}\n          >\n            <WebboardSingleCommentBox\n              disabled={revalidator.state !== \"idle\"}\n              fetcher={fetcher}\n              postId={webboard.id}\n              refComment={quotedComment}\n            />\n          </Card>\n        </Element>\n      )}\n      {comments.totalPages > 1 && (\n        <Pagination\n          currentPage={comments.page}\n          totalPages={comments.totalPages}\n          onPageClicked={handleChangePage}\n        />\n      )}\n      {contextHolder}\n    </div>\n  );\n}\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigation,\n  useNavigate,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Button, Flex, Form, Modal, notification, Skeleton, Space } from \"antd\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as APIServer from \"~/api\";\nimport { dummyWebboards, TiltButton } from \"~/components/common\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { AlbumForm } from \"~/components/pages/User/AlbumForm\";\nimport { AuthContext } from \"~/contexts\";\nimport { AlbumSingle } from \"~/components/pages/User/AlbumSingle\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { uuid, id } = params;\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let singleAlbumRes: any;\n  let singleAlbum: any;\n  let singlePhotosAlbumRes: any;\n  let singlePhotosAlbum: any;\n  const me = session.get(\"me\");\n\n  try {\n    if (id !== undefined) {\n      if (me) {\n        singleAlbumRes = await APIServer.clientFromSession(session).request(\n          APIServer.getSingleAlbum(id)\n        );\n        singlePhotosAlbumRes = await APIServer.clientFromSession(\n          session\n        ).request(APIServer.getPhotosSingleAlbum(id, searchParams));\n      } else {\n        singleAlbumRes = await APIServer.clientFromSession().request(\n          APIServer.getSingleAlbum(id)\n        );\n        singlePhotosAlbumRes = await APIServer.clientFromSession().request(\n          APIServer.getPhotosSingleAlbum(id, searchParams)\n        );\n      }\n      if (singleAlbumRes.data) {\n        singleAlbum = singleAlbumRes.data;\n      }\n      if (singlePhotosAlbumRes.data) {\n        singlePhotosAlbum = singlePhotosAlbumRes.data;\n      }\n    }\n  } catch (e) {\n    singleAlbum = dummyWebboards; // FIXME: remove this out\n  }\n  return json({ searchParams, singleAlbum, singlePhotosAlbum, uuid });\n};\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport default function UserMyWebboards() {\n  const { searchParams, singleAlbum, singlePhotosAlbum, uuid } =\n    useLoaderData();\n  const revalidator = useRevalidator();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const navigate = useNavigate();\n  const { user } = useContext(AuthContext);\n  const [api, contextHolder] = notification.useNotification();\n  const [openCreateAlbumModal, setOpenCreateAlbumModal] = useState(false);\n  const [items, setItems] = useState<any>([...singlePhotosAlbum.items]);\n  const [form] = Form.useForm();\n  const isOwner = user && user.uuid === uuid;\n\n  const navigateToAlbums = () => {\n    navigate(`/users/${uuid}/my-album`);\n  };\n\n  const handleOpenCreateAlbumModal = () => {\n    setOpenCreateAlbumModal(true);\n  };\n\n  const handleLoadMore = useCallback(() => {\n    const newSearchParams = {\n      ...searchParams,\n      offset: singlePhotosAlbum.items.length,\n    };\n    const queryString = new URLSearchParams(\n      omitBy(newSearchParams, isNil)\n    ).toString();\n\n    fetcher.load(`.?${queryString}`);\n  }, [singlePhotosAlbum.items, searchParams]);\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-album\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  useEffect(() => {\n    setItems([...singlePhotosAlbum.items]);\n  }, [singlePhotosAlbum]);\n\n  useEffect(() => {\n    if (fetcher.data?.singlePhotosAlbum) {\n      setItems((items: any[]) => [\n        ...items,\n        ...fetcher.data?.singlePhotosAlbum.items,\n      ]);\n    }\n  }, [fetcher.data]);\n\n  return (\n    <>\n      {navigation.state === \"loading\" &&\n      navigation.location.pathname === location.pathname ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <Space style={{ marginBottom: 10 }}>\n            <TiltButton color=\"primary\" onClick={navigateToAlbums}>\n              {t(\"back to albums\")}\n            </TiltButton>\n          </Space>\n          <Modal\n            {...modalProps}\n            onCancel={() => setOpenCreateAlbumModal(false)}\n            open={openCreateAlbumModal}\n          >\n            <AlbumForm\n              fetcher={fetcher}\n              form={form}\n              onCancel={() => setOpenCreateAlbumModal(false)}\n              action=\"create\"\n            />\n          </Modal>\n          <Flex vertical gap={20}>\n            <AlbumSingle\n              fetcher={fetcher}\n              key={singleAlbum.id}\n              data={singleAlbum}\n              photos={items}\n              isMyWebboard={true}\n              uuid={uuid}\n            />\n          </Flex>\n          {singlePhotosAlbum && items.length < singlePhotosAlbum.total && (\n            <div style={{ textAlign: \"center\", marginTop: 20 }}>\n              <Button onClick={handleLoadMore} size=\"large\">\n                {t(\"load more\")}\n              </Button>\n            </div>\n          )}\n        </>\n      )}\n      {contextHolder}\n    </>\n  );\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport {\n  Card,\n  Col,\n  Flex,\n  Row,\n  theme,\n  Typography,\n  notification,\n  Space,\n  Spin,\n  Image,\n  Tooltip,\n  Button,\n  Modal,\n} from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { useTranslation } from \"react-i18next\";\nimport { AlbumEntryControl } from \"./AlbumEntryControl\";\nimport {\n  LockOutlined,\n  DeleteOutlined,\n  ExclamationCircleFilled,\n} from \"@ant-design/icons\";\nimport { LuHelpCircle, LuImagePlus } from \"react-icons/lu\";\nimport { FileUploaderMultiple } from \"~/components/common\";\nconst { useToken } = theme;\nconst { Text, Title } = Typography;\n\ninterface AlbumSingleProps {\n  data: any;\n  uuid: string;\n  photos: any;\n  fetcher?: any;\n  isMyWebboard?: boolean;\n}\n\nexport function AlbumSingle(props: AlbumSingleProps) {\n  const { data, uuid, photos, fetcher } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const isOwner = user && data && data.userId && data.userId === user.id;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [visible, setVisible] = useState<any>(false);\n  const [hoveredPhoto, setHoveredPhoto] = useState<string | null>(null);\n  const [modal, contextHolder2] = Modal.useModal();\n\n  const photosStyle = {\n    height: 200,\n    opacity: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  } as any;\n\n  const cardStyle = {\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\" ? \"none\" : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n    border: \"none\",\n  };\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleDelete = useCallback(\n    (photoId: string) => {\n      modal.confirm({\n        title: `${t(`are you sure you want to delete this photo?`)}`,\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        okType: \"danger\",\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          fetcher.submit(\n            { albumId: data.id, photoId: photoId },\n            {\n              method: \"post\",\n              action: `/resources/delete-photo-album`,\n            }\n          );\n        },\n      });\n    },\n    [fetcher]\n  );\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"paths\" && fetcher.data.imageKeyOnlyList) {\n        fetcher.submit(\n          {\n            paths: JSON.stringify({ paths: fetcher.data.imageKeyOnlyList }),\n            id: data.id,\n          },\n          {\n            method: \"put\",\n            action: \"/resources/upload-album-paths\",\n            encType: \"multipart/form-data\",\n          }\n        );\n      }\n      setUploading(false);\n    }\n  }, [fetcher.data]);\n\n  return (\n    <>\n      <Card style={cardStyle}>\n        <Flex gap={20} vertical>\n          <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n            <Title level={5}>\n              {data.isPrivate ? (\n                <LockOutlined\n                  style={{ color: \"#7C6FF6\", marginRight: \"5px\" }}\n                />\n              ) : (\n                \"\"\n              )}\n              {data.name}\n            </Title>\n            <AlbumEntryControl\n              fetcher={fetcher}\n              id={data.id}\n              userUuid={uuid}\n              isOwner={isOwner}\n              isForumAdmin={isForumAdmin}\n              initialValues={data}\n              postType=\"album\"\n            />\n          </Flex>\n          <Text>{data.description}</Text>\n          <Row gutter={[20, 20]} wrap>\n            {isOwner && (\n              <Col span={12} md={6}>\n                {uploading ? (\n                  <div\n                    style={{\n                      position: \"relative\",\n                      width: \"100%\",\n                      paddingBottom: \"60%\",\n                      borderRadius: 12,\n                      backgroundColor: token.colorBgLayout,\n                    }}\n                  >\n                    <Space\n                      direction=\"vertical\"\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        textAlign: \"center\",\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                      }}\n                    >\n                      <Spin size=\"large\" style={{ color: \"#7C6FF6\" }} />\n                      <Text style={{ color: \"#7C6FF6\", margin: 0 }}>\n                        {t(\"uploading\")}\n                      </Text>\n                    </Space>\n                  </div>\n                ) : (\n                  <FileUploaderMultiple\n                    fetcher={fetcher}\n                    fieldName={\"paths\"}\n                    maxUpload={5}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                  >\n                    <div\n                      style={{\n                        position: \"relative\",\n                        width: \"100%\",\n                        paddingBottom: \"60%\",\n                        borderRadius: 12,\n                        backgroundColor: token.colorBgLayout,\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      <Space\n                        direction=\"horizontal\"\n                        size={10}\n                        style={{\n                          position: \"absolute\",\n                          top: \"50%\",\n                          left: \"50%\",\n                          transform: \"translate(-50%, -50%)\",\n                        }}\n                      >\n                        <LuImagePlus style={{ fontSize: \"1.5em\" }} />\n                        <Title level={5} style={{ margin: 0 }}>\n                          {t(\"upload images in album\")}\n                        </Title>\n                      </Space>\n                    </div>\n                    <div style={{ position: \"absolute\", top: -10, right: 0 }}>\n                      <Tooltip\n                        placement=\"top\"\n                        arrow={false}\n                        title={`${t(\"recommended resolution\")} 1920x1080 px`}\n                      >\n                        <LuHelpCircle\n                          size={24}\n                          style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                        />\n                      </Tooltip>\n                    </div>\n                  </FileUploaderMultiple>\n                )}\n              </Col>\n            )}\n            {uploading && photos.length === 0 ? (\n              <Col span={12} md={6}>\n                <Card\n                  bordered={false}\n                  style={{\n                    ...photosStyle,\n                  }}\n                />\n              </Col>\n            ) : (\n              false\n            )}\n            {photos.map((photo: any, index: number) => (\n              <Col\n                key={index}\n                span={12}\n                md={6}\n                onMouseEnter={() => setHoveredPhoto(photo.path)}\n                onMouseLeave={() => setHoveredPhoto(null)}\n              >\n                <div\n                  style={{\n                    width: \"100%\",\n                    paddingBottom: \"60%\",\n                    borderRadius: 12,\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                    backgroundImage: `url(\"${cdnUrl}/${photo.path}\")`,\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setVisible(photo.path)}\n                >\n                  <Image\n                    style={{ display: \"none\" }}\n                    wrapperStyle={{ display: \"none\" }}\n                    src={`${cdnUrl}/${photo.path}`}\n                    preview={{\n                      visible: visible === photo.path,\n                      src: `${cdnUrl}/${photo.path}`,\n                      onVisibleChange: (value) => {\n                        setVisible(value);\n                      },\n                    }}\n                  />\n                  {hoveredPhoto === photo.path && isOwner && (\n                    // <Button\n                    //   type=\"primary\"\n                    //   shape=\"circle\"\n                    //   icon={<DeleteOutlined />}\n                    //   style={{\n                    // position: \"absolute\",\n                    // top: 10,\n                    // right: 10,\n                    //   }}\n                    //   onClick={(e) => {\n                    //     e.stopPropagation();\n                    //     handleDelete(photo.id);\n                    //   }}\n                    // />\n                    <Text\n                      style={{\n                        position: \"absolute\",\n                        top: 10,\n                        right: 15,\n                        fontSize: 18,\n                        cursor: \"pointer\",\n                        color: \"#ffff\",\n                        backgroundColor: \"#f5222d\",\n                        padding: \"0 5px\",\n                        borderRadius: 5,\n                      }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDelete(photo.id);\n                      }}\n                    >\n                      <DeleteOutlined />\n                    </Text>\n                  )}\n                </div>\n              </Col>\n            ))}\n          </Row>\n        </Flex>\n        {contextHolder}\n        {contextHolder2}\n      </Card>\n    </>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Input, Modal, Space, Typography, Select, Form } from \"antd\";\nimport {\n  AlertOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  ExclamationCircleFilled,\n} from \"@ant-design/icons\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { AlbumForm } from \"./AlbumForm\";\n\nconst { Text, Title } = Typography;\n\ninterface AlbumEntryControlProps {\n  fetcher?: any;\n  id: string;\n  userUuid: string;\n  ignoreShare?: boolean;\n  isOwner?: boolean;\n  isForumAdmin?: boolean;\n  onEditClicked?: () => void;\n  postType?: string;\n  initialValues?: any;\n}\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport function AlbumEntryControl(props: AlbumEntryControlProps) {\n  const {\n    fetcher,\n    id,\n    userUuid,\n    ignoreShare,\n    isOwner,\n    isForumAdmin,\n    postType,\n    initialValues,\n  } = props;\n  const { t } = useTranslation();\n  const { baseUrl } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const [reason, setReason] = useState<string>(\"\");\n  const [modal, contextHolder] = Modal.useModal();\n  const [reportModal, setReportModal] = useState<boolean>(false);\n  const [openCreateAlbumModal, setOpenCreateAlbumModal] = useState(false);\n  const [form] = Form.useForm();\n\n  const albumUrl = `${baseUrl}/users/${userUuid}/my-album/${id}`;\n  const { Option } = Select;\n\n  const handleOpenCreateAlbumModal = () => {\n    setOpenCreateAlbumModal(true);\n  };\n\n  const openReportModal = () => {\n    setReportModal(true);\n  };\n\n  const closeReportModal = () => {\n    setReportModal(false);\n  };\n\n  const onReasonChanged = (e: any) => {\n    setReason(e.target.value);\n  };\n\n  const [selectedReason, setSelectedReason] = useState<string>(\"\");\n\n  const reasonOptions = [\n    { label: \" Inappropriate Content\", value: \"Inappropriate Content\" },\n    { label: \"Violence\", value: \"Violence\" },\n    { label: \"Harassment\", value: \"Harassment\" },\n    { label: \" False Information\", value: \"False Information\" },\n    { label: \"Spam\", value: \"Spam\" },\n    { label: \"Unauthorized Sales\", value: \"Unauthorized Sales\" },\n    { label: \"Others\", value: \"Others\" },\n  ];\n\n  const onReasonSelected = (value: string) => {\n    if (value !== \"Others\") {\n      setReason(value);\n    } else {\n      setReason(\"\");\n    }\n    setSelectedReason(value);\n  };\n\n  const reasonSelect = (\n    <Select\n      style={{ width: \"100%\" }}\n      onChange={onReasonSelected}\n      value={selectedReason ? selectedReason : undefined}\n      disabled={fetcher.state !== \"idle\"}\n      placeholder={t(\"select reason\")}\n      listHeight={300}\n    >\n      {reasonOptions.map((option) => (\n        <Option key={option.value} value={option.value}>\n          {option.label}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  const submitReport = useCallback(() => {\n    if (reason.length > 0) {\n      fetcher.submit(\n        { reason, id, type: postType },\n        {\n          method: \"post\",\n          action: `/resources/report-post`,\n        }\n      );\n    }\n  }, [fetcher, postType, reason]);\n\n  const handleDeleteAlbum = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure you want to delete this album?`)}`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id: initialValues.id, uuid: user.uuid },\n          {\n            method: \"post\",\n            action: `/resources/delete-album`,\n          }\n        );\n      },\n    });\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success === `report-${postType ? postType : \"webboard\"}` &&\n      fetcher.state === \"idle\"\n    ) {\n      setReason(\"\");\n      setReportModal(false);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType]);\n\n  return (\n    <>\n      <Space size={15}>\n        {!ignoreShare && (\n          <ShareDropDown\n            copiedMessage={t(\"album url copied\")}\n            postUrl={albumUrl}\n          />\n        )}\n        {isOwner && (\n          <>\n            <Text\n              style={{ fontSize: 18, cursor: \"pointer\" }}\n              onClick={handleOpenCreateAlbumModal}\n            >\n              <EditOutlined />\n            </Text>\n            <Text\n              style={{\n                fontSize: 18,\n                cursor: \"pointer\",\n                color: \"#ffff\",\n                backgroundColor: \"#f5222d\",\n                padding: \"0 5px\",\n                borderRadius: 5,\n              }}\n              onClick={handleDeleteAlbum}\n            >\n              <DeleteOutlined />\n            </Text>\n          </>\n        )}\n      </Space>\n      <Modal\n        {...modalProps}\n        onCancel={() => setOpenCreateAlbumModal(false)}\n        open={openCreateAlbumModal}\n      >\n        <AlbumForm\n          fetcher={fetcher}\n          form={form}\n          onCancel={() => setOpenCreateAlbumModal(false)}\n          initialValues={initialValues}\n          action=\"edit\"\n        />\n      </Modal>\n      <Modal\n        closeIcon={false}\n        footer={null}\n        open={reportModal}\n        onCancel={closeReportModal}\n      >\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          <Title level={4} style={{ margin: 0 }}>\n            {t(\"please input reason to report\")}\n          </Title>\n          {reasonSelect}\n          {selectedReason === \"Others\" && (\n            <Input.TextArea\n              rows={4}\n              onChange={onReasonChanged}\n              value={reason}\n              disabled={fetcher.state !== \"idle\"}\n            />\n          )}\n          <TiltButton\n            color=\"danger\"\n            onClick={submitReport}\n            disabled={!reason.length || fetcher.state !== \"idle\"}\n          >\n            {t(\"report\")}\n          </TiltButton>\n        </Space>\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get('data') as string;\n  const gameId = formData.get('gameId') as string;\n  const partyId = formData.get('partyId') as string;\n  const toSubmitData = JSON.parse(data);\n  let newParty: any = null;\n\n  if (partyId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.createPartyMember(partyId, toSubmitData)\n      );\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `successfully created party member`,\n      });\n      const partyRes = await APIServer.clientFromSession().request(\n        APIServer.getParty(partyId, gameId)\n      );\n      if (partyRes && partyRes.data && partyRes.data.party) {\n        newParty = partyRes.data.party;\n      }\n      await commitSession(session);\n      return json({\n        success: 'create-party-member',\n        party: newParty,\n      });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'failed to create party member',\n      });\n      await commitSession(session);\n      return null;\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    const partyRes = await APIServer.clientFromSession(session).request(\n      APIServer.createUserInGame(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully add user in game`,\n    });\n    await commitSession(session);\n    return json({\n      success: \"create-party\",\n      gameId: partyRes.data ? partyRes.data.gameId : null,\n    });\n  } catch (e: any) {\n    console.log(\"error from create\", e);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data.message,\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-party\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const memberId = formData.get('memberId') as string;\n  const gameId = formData.get('gameId') as string;\n  const partyId = formData.get('partyId') as string;\n  let newParty: any = null;\n\n  if (memberId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.deletePartyMember(partyId, { memberId: +memberId })\n      );\n      if (partyId) {\n        const partyRes = await APIServer.clientFromSession().request(\n          APIServer.getParty(partyId, gameId)\n        );\n        if (partyRes && partyRes.data && partyRes.data.party) {\n          newParty = partyRes.data.party;\n        }\n      }\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `successfully deleted member`,\n      });\n      await commitSession(session);\n      return json({ success: 'delete-party-member', party: newParty });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'delete party member failed',\n      });\n      await commitSession(session);\n      return json({ success: 'delete-party-member', party: newParty }); // FIXME: remove this out\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\");\n\n  if (id) {\n    try {\n      const experienceRes = await APIServer.clientFromSession(session).request(\n        APIServer.deleteUserInGame(id)\n      );\n\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully deleted user in game`,\n      });\n      await commitSession(session);\n\n      return json({\n        success: \"delete-experience\",\n        action: \"deleted\",\n        experienceTitleId: experienceRes.data.experienceTitleId,\n      });\n    } catch (e: any) {\n      console.log(\"e\", e.response.data);\n\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"delete failed\",\n      });\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const gameId = formData.get('gameId') as string;\n  const partyId = formData.get('partyId') as string;\n  const data = formData.get('data') as string;\n  const toSubmitData = JSON.parse(data);\n  let newParty: any = null;\n\n  if (toSubmitData.memberId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.updatePartyMember(partyId, toSubmitData)\n      );\n      if (partyId) {\n        const partyRes = await APIServer.clientFromSession().request(\n          APIServer.getParty(partyId, gameId)\n        );\n        if (partyRes && partyRes.data && partyRes.data.party) {\n          newParty = partyRes.data.party;\n        }\n      }\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `successfully update party member`,\n      });\n      await commitSession(session);\n      return json({\n        success: 'update-party-member',\n        party: newParty,\n      });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'update party member failed',\n      });\n      await commitSession(session);\n      return null;\n    }\n  }\n};\n", "import { useContext, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Modal,\n  Row,\n  Space,\n  Typography,\n  notification,\n} from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { TiltButton } from \"~/components/common\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n  redirect,\n} from \"@remix-run/node\";\n\nimport * as APIServer from \"~/api\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport { MyAchievementEntry } from \"~/components/pages/User/MyAchievementEntry\";\nimport { AchievementForm } from \"~/components/pages/User/AchievementForm\";\nimport { AchievementTitleForm } from \"~/components/pages/User/AchievementTitleForm\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { ArrowUpDown, PenLine } from \"lucide-react\";\nconst { Title, Text } = Typography;\n\nlet defaultGame: any;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let achievements = [];\n  let firstGameId = null;\n  let games: any[] = [];\n  try {\n    const achievementsRes = await APIServer.clientFromSession(session).request(\n      APIServer.getAchievement()\n    );\n    // if (achievementsRes.data) {\n    //   achievements = achievementsRes.data;\n    // }\n    if (achievementsRes.data) {\n      achievements = achievementsRes.data.map(\n        (achievement: any, index: number) => ({\n          ...achievement,\n          id: index + 1, // Generate unique id for each achievement\n        })\n      );\n    }\n\n    const gameRes = await APIServer.clientFromSession(session).request(\n      APIServer.getUserGameLists()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n      defaultGame = games.find((game: any) => `${game.name}` === `VALORANT`);\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({\n    achievements,\n    firstGameId,\n    games,\n    defaultGame,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = entries.data ? JSON.parse(entries.data) : null;\n  const uuid = entries.uuid;\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"save-to-profile-index\":\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `successfully saved to profile index`,\n      });\n      return redirect(`/users/${uuid}`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\n// Modal properties\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n};\n\n// Main component\nexport default function SettingsMyGames() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  // const matches = useMatches();\n  // const { cdnUrl } = matches[0].data;\n  const { user } = useContext(AuthContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const { achievements } = useLoaderData();\n  const [achievementBrandTitleModal, setAchievementBrandTitleModal] =\n    useState(false);\n  const [achievementTournamentTitleModal, setAchievementTournamentTitleModal] =\n    useState(false);\n  const [achievementOthersTitleModal, setAchievementOthersTitleModal] =\n    useState(false);\n  const [achievementBrandModal, setAchievementBrandModal] = useState(false);\n  const [achievementTournamentModal, setAchievementTournamentModal] =\n    useState(false);\n  const [achievementOthersModal, setAchievementOthersModal] = useState(false);\n  const [achievementLists, setAchievementLists] = useState(achievements);\n  const [brandItems, setBrandItems] = useState<any>(\n    achievementLists.find((item: any) => item.type === \"brand\")\n  );\n  const [brandItemsLists, setBrandItemsLists] = useState<any[]>(\n    brandItems.userAchievements\n  );\n  const [tournamentItems, setTournamentItems] = useState<any>(\n    achievementLists.find((item: any) => item.type === \"tournament\")\n  );\n\n  const [tournamentItemsLists, setTournamentItemsLists] = useState<any[]>(\n    tournamentItems.userAchievements\n  );\n  const [othersItems, setOthersItems] = useState<any>(\n    achievementLists.find((item: any) => item.type === \"others\")\n  );\n  const [othersItemsLists, setOthersItemsLists] = useState<any[]>(\n    othersItems.userAchievements\n  );\n  const [sortingBrandModal, setSortingBrandModal] = useState<boolean>(false);\n  const [sortingTournamentModal, setSortingTournamentModal] =\n    useState<boolean>(false);\n\n  const [sortingOthersModal, setSortingOthersModal] = useState<boolean>(false);\n  const [sortingTypeModal, setSortingTypeModal] = useState<boolean>(false);\n  const containerRef = useRef(null);\n\n  const { scheme } = useContext(AppContext);\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  const [brandForm] = Form.useForm();\n  const [tournamentForm] = Form.useForm();\n  const [othersForm] = Form.useForm();\n\n  const [brandTitleForm] = Form.useForm();\n  const [tournamentTitleForm] = Form.useForm();\n  const [othersTitleForm] = Form.useForm();\n  const submit = useSubmit();\n\n  const handleSubmitToProfileIndex = () => {\n    submit(\n      {\n        uuid: user.uuid,\n        action: \"save-to-profile-index\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  const onChangeSortBrandtems = (items: any) => {\n    setBrandItemsLists(items);\n  };\n\n  const onChangeSortTournamenttems = (items: any) => {\n    setTournamentItemsLists(items);\n  };\n\n  const onChangeSortOtherstems = (items: any) => {\n    setOthersItemsLists(items);\n  };\n\n  const onChangeSortTypeItems = (items: any) => {\n    setAchievementLists(items);\n  };\n\n  const handleToggleBrandSortingMode = () => {\n    setSortingBrandModal(!sortingBrandModal);\n  };\n\n  const onClosesortingBrandModal = () => {\n    setSortingBrandModal(false);\n  };\n\n  const handleToggleTournamentSortingMode = () => {\n    setSortingTournamentModal(!sortingBrandModal);\n  };\n\n  const onClosesortingTournamentModal = () => {\n    setSortingTournamentModal(false);\n  };\n\n  const handleToggleOthersSortingMode = () => {\n    setSortingOthersModal(!sortingBrandModal);\n  };\n\n  const onClosesortingOthersModal = () => {\n    setSortingOthersModal(false);\n  };\n\n  const onClosesortingTypeModal = () => {\n    setSortingTypeModal(false);\n  };\n\n  const handleToggleTypeSortingMode = () => {\n    setSortingTypeModal(!sortingBrandModal);\n  };\n\n  const handleSubmitTypeSorting = () => {\n    setSortingTypeModal(false);\n    const itemsId = {\n      order: achievementLists.map((item: any, index: number) => item.type),\n    };\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"put\",\n        action: `/resources/sorting-my-achievement-title`,\n      }\n    );\n  };\n\n  const handleSubmitBrandSorting = () => {\n    setSortingBrandModal(false);\n    const itemsId = {\n      type: \"brand\",\n      userAchievementIds: brandItemsLists.map(\n        (item: any, index: number) => item.id\n      ),\n    };\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-my-achievement`,\n      }\n    );\n  };\n\n  const handleSubmitTournamentSorting = () => {\n    setSortingTournamentModal(false);\n    const itemsId = {\n      type: \"tournament\",\n      userAchievementIds: tournamentItemsLists.map(\n        (item: any, index: number) => item.id\n      ),\n    };\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-my-achievement`,\n      }\n    );\n  };\n\n  const handleSubmitOthersSorting = () => {\n    setSortingOthersModal(false);\n    const itemsId = {\n      type: \"others\",\n      userAchievementIds: othersItemsLists.map(\n        (item: any, index: number) => item.id\n      ),\n    };\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-my-achievement`,\n      }\n    );\n  };\n\n  useEffect(() => {\n    const container = containerRef.current as any;\n\n    if (container) {\n      // Array of the child divs\n      const divs = Array.from(container.children);\n\n      // Sort by a custom logic: in this example, based on a static order array\n      const orderMap = {\n        brand: brandItems.sortOrder,\n        tournament: tournamentItems.sortOrder,\n        others: othersItems.sortOrder,\n        // brand: 1,\n        // tournament: 2,\n        // others: 3,\n      } as any;\n\n      const sortedDivs = divs.sort(\n        (a: any, b: any) => orderMap[a.id] - orderMap[b.id]\n      );\n\n      // Re-append sorted divs\n      container.innerHTML = \"\"; // Clear existing elements\n      sortedDivs.forEach((div) => {\n        container.appendChild(div);\n      });\n    }\n  }, [brandItems.sortOrder, othersItems.sortOrder, tournamentItems.sortOrder]);\n\n  useEffect(() => {\n    setAchievementLists(\n      achievements && achievements.length ? achievements : []\n    );\n  }, [achievements]);\n\n  useEffect(() => {\n    setBrandItems(achievementLists.find((item: any) => item.type === \"brand\"));\n    setTournamentItems(\n      achievementLists.find((item: any) => item.type === \"tournament\")\n    );\n    setOthersItems(\n      achievementLists.find((item: any) => item.type === \"others\")\n    );\n    setBrandItemsLists(brandItems.userAchievements);\n    setOthersItemsLists(othersItems.userAchievements);\n    setTournamentItemsLists(tournamentItems.userAchievements);\n  }, [\n    achievementLists,\n    brandItems.userAchievements,\n    othersItems.userAchievements,\n    tournamentItems.userAchievements,\n  ]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n\n    if (fetcher.data.achievements) {\n      setAchievementLists(fetcher.data.achievements);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   setAchievementLists([...achievements]);\n  // }, [achievements]);\n\n  // useEffect(() => {\n  //   if (fetcher.data && fetcher.data.success) {\n  //     if (\n  //       fetcher.data.success &&\n  //       fetcher.data.success !== \"create-achievement-title\"\n  //     ) {\n  //       console.log(\"fetcher.data.success\", fetcher.data.success);\n  //       fetcher.load(`.?rankingGameId=2`);\n  //       messageApi.open({\n  //         type: \"success\",\n  //         message: t(`Successfully ${fetcher.data.action} achievement`),\n  //         duration: 5,\n  //         placement: \"bottomRight\",\n  //       });\n  //     }\n  //   }\n  // }, [fetcher.data]);\n  const photosStyle = {\n    position: \"relative\",\n    height: 150,\n    width: 120,\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    // cursor: \"pointer\",\n  } as any;\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <div>\n        <Space\n          size={10}\n          direction=\"horizontal\"\n          style={{\n            marginBottom: 20,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Title level={2}>{t(\"my achievement\")}</Title>\n        </Space>\n\n        <div ref={containerRef}>\n          <div id=\"brand\">\n            <Flex justify=\"space-between\">\n              <div>\n                <Text\n                  style={{\n                    fontWeight: 600,\n                    fontSize: \"inherit\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  {brandItems?.title}\n                </Text>\n                <Space\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setAchievementBrandTitleModal(true)}\n                >\n                  <PenLine style={{ color: \"#7C6FF6\" }} />\n                  <Text>{t(\"change\")}</Text>\n                </Space>\n              </div>\n              {brandItems?.userAchievements.length > 0 && (\n                <Text\n                  style={{\n                    marginRight: 10,\n                    marginTop: 0,\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={handleToggleBrandSortingMode}\n                >\n                  <Space>\n                    <ArrowUpDown\n                      style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }}\n                    />\n                    {t(\"sort order\")}\n                  </Space>\n                </Text>\n              )}\n            </Flex>\n            <Flex gap={20} align=\"flex-start\" style={{ overflow: \"auto\" }}>\n              <div>\n                <Card\n                  bordered={false}\n                  style={{\n                    ...photosStyle,\n                    backgroundColor: \"#EEEEEE\",\n                    textAlign: \"center\",\n                    justifyContent: \"center\",\n                    margin: \"15px 0\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setAchievementBrandModal(true)}\n                >\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      margin: 0,\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      msTransform: \"translate(-50%,-50%)\",\n                      transform: \"translate(-50%, -50%)\",\n                    }}\n                  >\n                    <Space size={5} style={{ color: \"black\" }}>\n                      <PlusOutlined />\n                      {t(\"add\")}\n                    </Space>\n                  </div>\n                </Card>\n              </div>\n              {brandItems?.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index}>\n                    <MyAchievementEntry\n                      data={achievement}\n                      fetcher={fetcher}\n                      isMyWebboard={true}\n                      type=\"brand\"\n                    />\n                  </div>\n                )\n              )}\n            </Flex>\n            <Divider style={{ marginBlock: 20 }} />\n          </div>\n          <div id=\"tournament\">\n            <Flex justify=\"space-between\">\n              <div>\n                <Text\n                  style={{\n                    fontWeight: 600,\n                    fontSize: \"inherit\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  {tournamentItems.title}\n                </Text>\n                <Space\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setAchievementTournamentTitleModal(true)}\n                >\n                  <PenLine style={{ color: \"#7C6FF6\" }} />\n                  <Text>{t(\"change\")}</Text>\n                </Space>\n              </div>\n              {tournamentItems?.userAchievements.length > 0 && (\n                <Text\n                  style={{\n                    marginRight: 10,\n                    marginTop: 0,\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={handleToggleTournamentSortingMode}\n                >\n                  <Space>\n                    <ArrowUpDown\n                      style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }}\n                    />\n                    {t(\"sort order\")}\n                  </Space>\n                </Text>\n              )}\n            </Flex>\n            <Flex gap={20} align=\"flex-start\" style={{ overflow: \"auto\" }}>\n              <div>\n                <Card\n                  bordered={false}\n                  style={{\n                    ...photosStyle,\n                    backgroundColor: \"#EEEEEE\",\n                    textAlign: \"center\",\n                    justifyContent: \"center\",\n                    margin: \"15px 0\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setAchievementTournamentModal(true)}\n                >\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      margin: 0,\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      msTransform: \"translate(-50%,-50%)\",\n                      transform: \"translate(-50%, -50%)\",\n                    }}\n                  >\n                    <Space size={5} style={{ color: \"black\" }}>\n                      <PlusOutlined />\n                      {t(\"add\")}\n                    </Space>\n                  </div>\n                </Card>\n              </div>\n              {tournamentItems.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index}>\n                    <MyAchievementEntry\n                      data={achievement}\n                      fetcher={fetcher}\n                      isMyWebboard={true}\n                      type=\"tournament\"\n                    />\n                  </div>\n                )\n              )}\n            </Flex>\n            <Divider style={{ marginBlock: 20 }} />\n          </div>\n          <div id=\"others\">\n            <Flex justify=\"space-between\">\n              <div>\n                <Text\n                  style={{\n                    fontWeight: 600,\n                    fontSize: \"inherit\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  {othersItems.title}\n                </Text>\n                <Space\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setAchievementOthersTitleModal(true)}\n                >\n                  <PenLine style={{ color: \"#7C6FF6\" }} />\n                  <Text>{t(\"change\")}</Text>\n                </Space>\n              </div>\n              {othersItems?.userAchievements.length > 0 && (\n                <Text\n                  style={{\n                    marginRight: 10,\n                    marginTop: 0,\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={handleToggleOthersSortingMode}\n                >\n                  <Space>\n                    <ArrowUpDown\n                      style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }}\n                    />\n                    {t(\"sort order\")}\n                  </Space>\n                </Text>\n              )}\n            </Flex>\n            <Flex gap={20} align=\"flex-start\" style={{ overflow: \"auto\" }}>\n              <div>\n                <Card\n                  bordered={false}\n                  style={{\n                    ...photosStyle,\n                    backgroundColor: \"#EEEEEE\",\n                    textAlign: \"center\",\n                    justifyContent: \"center\",\n                    margin: \"15px 0\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setAchievementOthersModal(true)}\n                >\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      margin: 0,\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      msTransform: \"translate(-50%,-50%)\",\n                      transform: \"translate(-50%, -50%)\",\n                    }}\n                  >\n                    <Space size={5} style={{ color: \"black\" }}>\n                      <PlusOutlined />\n                      {t(\"add\")}\n                    </Space>\n                  </div>\n                </Card>\n              </div>\n              {othersItems.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index}>\n                    <MyAchievementEntry\n                      data={achievement}\n                      fetcher={fetcher}\n                      isMyWebboard={true}\n                      type=\"others\"\n                    />\n                  </div>\n                )\n              )}\n            </Flex>\n            <Divider style={{ marginBlock: 20 }} />\n          </div>\n        </div>\n        <Flex justify=\"space-between\" style={{ marginBottom: 10 }}>\n          <div>\n            <Text\n              style={{\n                fontWeight: 600,\n                fontSize: \"inherit\",\n                marginRight: \"10px\",\n              }}\n            >\n              {t(\"display order\")}\n            </Text>\n          </div>\n          <Text\n            style={{\n              marginRight: 10,\n              marginTop: 0,\n              fontWeight: 600,\n              textAlign: \"center\",\n              cursor: \"pointer\",\n            }}\n            onClick={handleToggleTypeSortingMode}\n          >\n            <Space>\n              <ArrowUpDown style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }} />\n              {t(\"sort order\")}\n            </Space>\n          </Text>\n        </Flex>\n        <Space direction=\"vertical\">\n          {achievementLists.map((achievement: any, index: number) => (\n            <div key={index}>\n              {index + 1}. {achievement.title}\n            </div>\n          ))}\n        </Space>\n        <TiltButton\n          color=\"primary\"\n          onClick={handleSubmitToProfileIndex}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"save\")}\n        </TiltButton>\n      </div>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementBrandModal(false)}\n        open={achievementBrandModal}\n      >\n        <AchievementForm\n          fetcher={fetcher}\n          form={brandForm}\n          action=\"create\"\n          type=\"brand\"\n          onCancel={() => setAchievementBrandModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementTournamentModal(false)}\n        open={achievementTournamentModal}\n      >\n        <AchievementForm\n          fetcher={fetcher}\n          form={tournamentForm}\n          action=\"create\"\n          type=\"tournament\"\n          onCancel={() => {\n            setAchievementTournamentModal(false);\n          }}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementOthersModal(false)}\n        open={achievementOthersModal}\n      >\n        <AchievementForm\n          fetcher={fetcher}\n          form={othersForm}\n          action=\"create\"\n          type=\"others\"\n          onCancel={() => setAchievementOthersModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementBrandTitleModal(false)}\n        open={achievementBrandTitleModal}\n      >\n        <AchievementTitleForm\n          fetcher={fetcher}\n          form={brandTitleForm}\n          action=\"update\"\n          type=\"brand\"\n          initialValues={brandItems}\n          onCancel={() => setAchievementBrandTitleModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementTournamentTitleModal(false)}\n        open={achievementTournamentTitleModal}\n      >\n        <AchievementTitleForm\n          fetcher={fetcher}\n          form={tournamentTitleForm}\n          action=\"update\"\n          type=\"tournament\"\n          initialValues={tournamentItems}\n          onCancel={() => setAchievementTournamentTitleModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementOthersTitleModal(false)}\n        open={achievementOthersTitleModal}\n      >\n        <AchievementTitleForm\n          fetcher={fetcher}\n          form={othersTitleForm}\n          action=\"update\"\n          type=\"others\"\n          initialValues={othersItems}\n          onCancel={() => setAchievementOthersTitleModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingBrandModal(false)}\n        open={sortingBrandModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={brandItemsLists}\n            onChange={onChangeSortBrandtems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onClosesortingBrandModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitBrandSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingTournamentModal(false)}\n        open={sortingTournamentModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={tournamentItemsLists}\n            onChange={onChangeSortTournamenttems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton\n                color=\"secondary\"\n                onClick={onClosesortingTournamentModal}\n              >\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton\n                color=\"primary\"\n                onClick={handleSubmitTournamentSorting}\n              >\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingOthersModal(false)}\n        open={sortingOthersModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={othersItemsLists}\n            onChange={onChangeSortOtherstems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onClosesortingOthersModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitOthersSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingTypeModal(false)}\n        open={sortingTypeModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={achievementLists}\n            onChange={onChangeSortTypeItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.title}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onClosesortingTypeModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitTypeSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      {contextHolder}\n    </div>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport { Card, Typography } from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { useTranslation } from \"react-i18next\";\nimport { MyArchievementEntryControl } from \"./MyArchievementEntryControl\";\nconst { Text, Title } = Typography;\n\ninterface MyAchievementEntryProps {\n  data: any;\n  fetcher?: any;\n  type?: string;\n  isMyWebboard?: boolean;\n}\n\nexport function MyAchievementEntry(props: MyAchievementEntryProps) {\n  const { t } = useTranslation();\n  const { data, fetcher, type } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const isOwner = true;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  const photosStyle = {\n    position: \"relative\",\n    height: 150,\n    width: 120,\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundColor: \"rgba(233, 233, 233, 1)\",\n    // cursor: \"pointer\",\n  } as any;\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const gameCard = (\n    <Card\n      bordered={false}\n      style={{\n        ...photosStyle,\n        backgroundImage: `url(\"${cdnUrl}/${data.image}\")`,\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        margin: \"15px 0\",\n      }}\n    >\n      <div\n        style={{\n          marginLeft: \"30px\",\n          marginTop: \"-20px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <MyArchievementEntryControl\n          fetcher={fetcher}\n          id={data.id}\n          isOwner={isOwner}\n          isForumAdmin={isForumAdmin}\n          type={type}\n          initialValues={data}\n          postType=\"experience\"\n        />\n      </div>\n    </Card>\n  );\n\n  return <>{gameCard}</>;\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Input, Modal, Space, Typography, Select, Form } from \"antd\";\nimport { AlertOutlined, ExclamationCircleFilled } from \"@ant-design/icons\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { AchievementForm } from \"./AchievementForm\";\nimport { PenLine, Trash2 } from \"lucide-react\";\n\nconst { Text, Title } = Typography;\n\ninterface MyArchievementEntryControlProps {\n  fetcher?: any;\n  id: string;\n  ignoreShare?: boolean;\n  isOwner?: boolean;\n  isForumAdmin?: boolean;\n  onEditClicked?: () => void;\n  type?: string;\n  postType?: string;\n  initialValues?: any;\n}\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport function MyArchievementEntryControl(\n  props: MyArchievementEntryControlProps\n) {\n  const { fetcher, id, isOwner, isForumAdmin, postType, initialValues, type } =\n    props;\n  const { t } = useTranslation();\n  const [reason, setReason] = useState<string>(\"\");\n  const [modal, contextHolder] = Modal.useModal();\n  const [reportModal, setReportModal] = useState<boolean>(false);\n  const [gameInfoModal, setGameInfoModal] = useState(false);\n  const [form] = Form.useForm();\n\n  const { Option } = Select;\n\n  const handleOpenCreateExperienceModal = () => {\n    setGameInfoModal(true);\n  };\n\n  const handleLeaveParty = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure you want to delete this achievement?`)}`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id: initialValues.id },\n          {\n            method: \"post\",\n            action: `/resources/delete-achievement`,\n          }\n        );\n      },\n    });\n  }, [fetcher]);\n\n  const openReportModal = () => {\n    setReportModal(true);\n  };\n\n  const deletePost = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete this post`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id, type: postType },\n          {\n            method: \"delete\",\n            action: `/resources/delete-post`,\n          }\n        );\n      },\n    });\n  }, [fetcher, id, postType]);\n\n  const menus = [\n    {\n      label: (\n        <Space size={10} style={{ color: \"#f5222d\" }}>\n          <AlertOutlined />\n          {t(\"report\")}\n        </Space>\n      ),\n      onClick: openReportModal,\n    },\n  ] as any[];\n  if (isOwner || isForumAdmin) {\n    menus.push({\n      label: (\n        <Space size={10}>\n          <Trash2 />\n          {t(\"delete\")}\n        </Space>\n      ),\n      onClick: deletePost,\n    });\n  }\n  useEffect(() => {\n    setReason(\"\");\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success === `report-${postType ? postType : \"webboard\"}` &&\n      fetcher.state === \"idle\"\n    ) {\n      setReason(\"\");\n      setReportModal(false);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType]);\n\n  return (\n    <>\n      <Space size={5}>\n        {/* {!ignoreShare && (\n          <ShareDropDown copiedMessage=\"album url copied\" postUrl={albumUrl} />\n        )} */}\n        {isOwner && (\n          <>\n            <Text\n              style={{\n                fontSize: 18,\n                cursor: \"pointer\",\n                color: \"#ffff\",\n                backgroundColor: \"#000000\",\n                padding: \"0 5px\",\n                borderRadius: 5,\n              }}\n              onClick={handleOpenCreateExperienceModal}\n            >\n              <PenLine />\n            </Text>\n            <Text\n              style={{\n                fontSize: 18,\n                cursor: \"pointer\",\n                color: \"#ffff\",\n                backgroundColor: \"#f5222d\",\n                padding: \"0 5px\",\n                borderRadius: 5,\n              }}\n              onClick={handleLeaveParty}\n            >\n              <Trash2 />\n            </Text>\n          </>\n        )}\n      </Space>\n      <Modal\n        {...modalProps}\n        onCancel={() => setGameInfoModal(false)}\n        open={gameInfoModal}\n      >\n        <AchievementForm\n          fetcher={fetcher}\n          form={form}\n          action=\"update\"\n          type={type}\n          onCancel={() => setGameInfoModal(false)}\n          initialValues={initialValues}\n        />\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  notification,\n  Row,\n  Space,\n  Typography,\n  Card,\n  Image,\n} from \"antd\";\nimport { LoadingOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { FileUploader, TiltButton } from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nimport { flattenObject } from \"~/utils/helper\";\nimport { TbPhotoPlus } from \"react-icons/tb\";\nconst { Text, Title } = Typography;\n\ninterface AchievementFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  type?: string;\n  initialValues?: any;\n  onCancel: () => void;\n}\n\nexport function AchievementForm(props: AchievementFormProps) {\n  const { fetcher, form, initialValues, onCancel, action, type } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  // const { user } = useContext(AuthContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [previewImage, setPreviewImage] = useState<string | null>(\n    initialValues?.image\n  );\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const photosStyle = {\n    position: \"relative\",\n    height: 150,\n    width: 120,\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundColor: \"#EEEEEE\",\n  } as any;\n\n  const handleSubmit = (values: any) => {\n    const { isPrivate, ...rest } = values;\n    fetcher.submit(\n      {\n        data: JSON.stringify({\n          ...rest,\n          type: type,\n          id: initialValues?.id,\n        }),\n      },\n      action === \"create\"\n        ? {\n            method: \"post\",\n            action: `/resources/create-achievement`,\n          }\n        : {\n            method: \"put\",\n            action: `/resources/edit-achievement`,\n          }\n    );\n    setPreviewImage(null);\n    form.setFieldValue(\"image\", null);\n    form.resetFields();\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (initialValues && fetcher.data && fetcher.data.success) {\n      if (fetcher.data.success) {\n        form.setFieldsValue(flattenObject(initialValues));\n        setPreviewImage(initialValues?.image);\n      }\n    }\n  }, [initialValues, form]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"image\") {\n        form.setFieldValue(\"image\", fetcher.data.key);\n      }\n\n      setUploading(false);\n    }\n  }, [form, fetcher.data, fetcher.state]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={flattenObject(initialValues)}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {action === \"create\" ? t(\"add achievement\") : t(\"edit achievement\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          <Form.Item\n            key=\"image\"\n            name=\"image\"\n            style={{ margin: \"0px\", padding: \"0px\" }}\n            rules={[\n              {\n                required: true,\n                message: t(\"please input achievement image\"),\n              },\n            ]}\n          >\n            <Row>\n              <Col flex=\"auto\">\n                <Space direction=\"vertical\" size={5}>\n                  <Text style={{ fontWeight: 600 }}>\n                    {t(\"achievement image\")}\n                  </Text>\n                  {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n                    <Card\n                      bordered={false}\n                      style={{\n                        ...photosStyle,\n                        textAlign: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"15px 0\",\n                      }}\n                    >\n                      <LoadingOutlined\n                        style={{\n                          fontSize: 24,\n                          margin: \"40px auto\",\n                        }}\n                        spin\n                      />\n                    </Card>\n                  ) : (\n                    <div>\n                      {!form.getFieldValue(\"image\") && !initialValues && (\n                        <FileUploader\n                          fetcher={fetcher}\n                          fieldName={\"image\"}\n                          // maxUpload={5}\n                          onUploading={setUploading}\n                          onErrorFileTooLarge={handleFileTooLarge}\n                        >\n                          <Card\n                            bordered={false}\n                            style={{\n                              ...photosStyle,\n                              backgroundImage: `url(\"${cdnUrl}/${\n                                initialValues\n                                  ? previewImage\n                                  : form.getFieldValue(\"image\")\n                              }\")`,\n                              textAlign: \"center\",\n                              justifyContent: \"center\",\n                              margin: \"15px 0\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            {!form.getFieldValue(\"image\") && !previewImage && (\n                              <div\n                                style={{\n                                  textAlign: \"center\",\n                                  margin: 0,\n                                  position: \"absolute\",\n                                  top: \"50%\",\n                                  left: \"50%\",\n                                  msTransform: \"translate(-50%,-50%)\",\n                                  transform: \"translate(-50%, -50%)\",\n                                }}\n                              >\n                                <Space size={5} style={{ color: \"black\" }}>\n                                  <TbPhotoPlus />\n                                  {t(\"add\")}\n                                </Space>\n                              </div>\n                            )}\n                          </Card>\n                        </FileUploader>\n                      )}\n                      {(form.getFieldValue(\"image\") || initialValues) && (\n                        <Image\n                          style={{\n                            marginTop: \"15px\",\n                            position: \"relative\",\n                            height: 150,\n                            width: 120,\n                            borderRadius: 5,\n                            backgroundSize: \"cover\",\n                            backgroundPosition: \"center\",\n                            backgroundColor: \"#EEEEEE\",\n                          }}\n                          src={`${cdnUrl}/${\n                            initialValues\n                              ? previewImage\n                              : form.getFieldValue(\"image\")\n                          }`}\n                          preview={true}\n                        />\n                      )}\n                    </div>\n                  )}\n                </Space>\n              </Col>\n              {(form.getFieldValue(\"image\") || initialValues) && (\n                <Col flex=\"none\">\n                  <FileUploader\n                    fetcher={fetcher}\n                    fieldName={\"image\"}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                  >\n                    <Space size={5} style={{ cursor: \"pointer\" }}>\n                      <EditOutlined style={{ color: \"#8263ea\" }} />\n                      <Text>{t(\"change\")}</Text>\n                    </Space>\n                  </FileUploader>\n                </Col>\n              )}\n            </Row>\n          </Form.Item>\n          <Form.Item\n            key=\"name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input achievement name\"),\n              },\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"achievement name\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            key=\"url\"\n            name=\"url\"\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"achievement url\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {action === \"create\" ? t(\"create achievement\") : t(\"edit\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {contextHolder}\n    </div>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  notification,\n  Row,\n  Space,\n  Typography,\n} from \"antd\";\nimport { TiltButton } from \"~/components/common\";\nimport { flattenObject } from \"~/utils/helper\";\nconst { Text, Title } = Typography;\n\ninterface AchievementTitleFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  type?: string;\n  initialValues?: any;\n  onCancel: () => void;\n}\n\nexport function AchievementTitleForm(props: AchievementTitleFormProps) {\n  const { fetcher, form, initialValues, onCancel, action, type } = props;\n  const { t } = useTranslation();\n  // const { user } = useContext(AuthContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n\n  const handleSubmit = (values: any) => {\n    const { isPrivate, ...rest } = values;\n    fetcher.submit(\n      {\n        data: JSON.stringify({\n          ...rest,\n          type: type,\n          id: initialValues?.id,\n        }),\n      },\n      {\n        method: \"put\",\n        action: `/resources/edit-achievement-title`,\n      }\n    );\n    form.resetFields();\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (initialValues) {\n      form.setFieldsValue(flattenObject(initialValues));\n    }\n  }, [initialValues, form, fetcher.data]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"image\") {\n        form.setFieldValue(\"image\", fetcher.data.key);\n      }\n\n      setUploading(false);\n    }\n  }, [form, fetcher.data, fetcher.state]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={flattenObject(initialValues)}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {action === \"create\"\n            ? t(\"add achievement title\")\n            : t(\"edit achievement title\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          <Form.Item\n            key=\"title\"\n            name=\"title\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input achievement title\"),\n              },\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"achievement title\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {action === \"create\"\n                ? t(\"create achievement\")\n                : t(\"edit achievement\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {contextHolder}\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  console.log(\"toSubmitData\", toSubmitData);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.createAchievement(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully created achievement`,\n    });\n    await commitSession(session);\n\n    return json({\n      success: \"create-achievement\",\n      action: \"created\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to create achievement\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-achievement\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\");\n\n  if (id) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.deleteAchievement(id)\n      );\n\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully deleted achievement}`,\n      });\n\n      await commitSession(session);\n\n      return json({\n        success: \"delete-achievement\",\n        action: \"deleted\",\n      });\n    } catch (e: any) {\n      console.log(\"e\", e.response.data);\n\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"delete failed\",\n      });\n      console.log(\"e\", e);\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const albumId = formData.get(\"albumId\");\n  const photoId = formData.get(\"photoId\");\n\n  if (albumId && albumId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.deletePhotoAlbum(albumId, photoId)\n      );\n\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully deleted photo`,\n      });\n\n      await commitSession(session);\n\n      return json({\n        success: \"delete-photo\",\n        action: \"deleted\",\n      });\n    } catch (e: any) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"delete failed\",\n      });\n      console.log(\"e\", e);\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const paths = formData.get(\"paths\") as string;\n  const id = formData.get(\"id\") as string;\n  const photosPath = JSON.parse(paths);\n\n  if (id) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.addAlbumPhotos(id, JSON.parse(paths))\n      );\n\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `successfully upload photos`,\n      });\n      await commitSession(session);\n      return json({\n        success: \"add-album-photos\",\n      });\n    } catch (e) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"upload photos failed\",\n      });\n      await commitSession(session);\n      return null;\n    }\n  }\n};\n", "import { useRouteLoaderData } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { Col, Row, Space, theme, Typography } from \"antd\";\nimport { CalendarOutlined, EnvironmentOutlined } from \"@ant-design/icons\";\nimport { CardWithLabel } from \"~/components/common\";\nimport { TournamentSingleRewards } from \"~/components/pages/Tournament\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\nimport { renderData } from \"~/utils/helper\";\nconst { useToken } = theme;\n\nconst { Text, Title } = Typography;\n\nexport default function TournamentSingleDetail() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.tournaments.$id\");\n  const { tournament } = routeLoader;\n  const { locale } = useContext(AppContext);\n  const { t } = useTranslation();\n  const { token } = useToken();\n\n  return (\n    <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n      <TournamentSingleRewards reward={tournament.prize} />\n      <Row gutter={[20, 20]}>\n        <Col span={24} md={12}>\n          <CardWithLabel\n            label={t(\"tournament date\")}\n            detail={`${dayjs(tournament.startDate).format(\"DD MMM\")} - ${dayjs(\n              tournament.endDate\n            ).format(\"DD MMM\")}`}\n            icon={<CalendarOutlined style={{ color: \"#8861f2\" }} />}\n          />\n        </Col>\n        <Col span={24} md={12}>\n          <CardWithLabel\n            label={t(\"tournament location\")}\n            detail={\n              tournament.finalRoundLocation\n                ? renderData(tournament, \"finalRoundLocation\", locale)\n                : \"-\"\n            }\n            icon={<EnvironmentOutlined style={{ color: \"#8861f2\" }} />}\n          />\n        </Col>\n      </Row>\n      <Space\n        size={10}\n        direction=\"vertical\"\n        style={{ display: \"flex\", marginTop: 20 }}\n      >\n        <Title level={4}>{t(\"detail_2\")}</Title>\n        <div\n          className=\"ctrlg-html\"\n          style={{ color: token.colorTextBase }}\n          dangerouslySetInnerHTML={{\n            __html: `${renderData(tournament, \"description\", locale)}`,\n          }}\n        />\n      </Space>\n      <Space\n        size={10}\n        direction=\"vertical\"\n        style={{ display: \"flex\", marginTop: 20 }}\n      >\n        <Title level={4}>{t(\"rules\")}</Title>\n        <Text>\n          <div\n            className=\"ctrlg-html\"\n            style={{ color: token.colorTextBase }}\n            dangerouslySetInnerHTML={{\n              __html: renderData(tournament, \"qualificationRules\", locale),\n            }}\n          />\n        </Text>\n      </Space>\n    </Space>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    const experienceRes = await APIServer.clientFromSession(session).request(\n      APIServer.createExpereince(toSubmitData)\n    );\n    // session.flash(\"flashMessage\", {\n    //   type: \"success\",\n    //   message: `successfully created experience`,\n    // });\n    // await commitSession(session);\n\n    // console.log(\"experienceRes\", experienceRes);\n\n    return json({\n      success: \"create-experience\",\n      action: \"created\",\n      experienceTitleId: experienceRes.data.experienceTitleId,\n    });\n  } catch (e: any) {\n    console.log(\"error\", e);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to create experience\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-experience\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\");\n\n  if (id) {\n    try {\n      const experienceRes = await APIServer.clientFromSession(session).request(\n        APIServer.deleteExperience(id)\n      );\n\n      return json({\n        success: \"delete-experience\",\n        action: \"deleted\",\n        experienceTitleId: experienceRes.data.experienceTitleId,\n      });\n    } catch (e: any) {\n      console.log(\"e\", e.response.data);\n\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"delete failed\",\n      });\n      console.log(\"e\", e);\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\") as string;\n\n  if (id) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.deleteTournament(id)\n      );\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully deleted tournament}`,\n      });\n      return redirect(`/tournaments`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    } catch (e: any) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"delete failed\",\n      });\n      console.log(\"e\", e);\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n  const gameInfoId = toSubmitData.id;\n\n  console.log(\"toSubmitData\", toSubmitData);\n\n  try {\n    const partyRes = await APIServer.clientFromSession(session).request(\n      APIServer.editUserInGame(gameInfoId, toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully updated user in game`,\n    });\n    await commitSession(session);\n    return json({\n      success: \"create-party\",\n      gameId: partyRes.data ? partyRes.data.gameId : null,\n    });\n  } catch (e: any) {\n    // console.log(\"error from create\", e);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data.message,\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-party\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { Form, Input, Modal, Result, Space, Typography } from \"antd\";\nimport { LoadingOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { GameSelect, TextEditor, TiltButton } from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n} from \"@remix-run/node\";\n\nimport * as APIServer from \"~/api\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nconst { Text, Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  let personalDetails = [];\n  let games = [];\n  try {\n    const personalDetailsRes = await APIServer.clientFromSession(\n      session\n    ).request(APIServer.getPersonalDetails());\n    if (personalDetailsRes.data) {\n      personalDetails = personalDetailsRes.data;\n    }\n    const gameRes = await APIServer.clientFromSession(session).request(\n      APIServer.getGamesWithRanksAndModes()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({ personalDetails, games });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = JSON.parse(entries.data);\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\n// Modal properties\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n};\n\n// Main component\nexport default function SettingsMyGames() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { personalDetails, games } = useLoaderData();\n  const [textEditorLoading, setTextEditorLoading] = useState(true);\n  const [gameModal, setGameModal] = useState(false);\n  const [newGameCallback, setNewGameCallback] = useState<any>(null); // Callback to add new detail\n  const { scheme } = useContext(AppContext);\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n\n  const [personalDetailsList, setPersonalDetailsList] = useState(\n    personalDetails.details.length > 0\n      ? personalDetails.details.map((detail: any) => ({\n          title: detail.title,\n          detail: detail.detail,\n        }))\n      : [\n          {\n            id: 1,\n            title: \"\",\n            detail: \"\",\n          },\n        ]\n  );\n\n  const handleRemove = (index: any) => {\n    setPersonalDetailsList((prevList: any) =>\n      prevList.filter((_: any, i: any) => i !== index)\n    );\n  };\n\n  const openGameModal = (callback: any) => {\n    setNewGameCallback(callback); // Set callback for when game is selected\n    setGameModal(true);\n  };\n\n  const closeGameModal = () => {\n    setGameModal(false);\n    setNewGameCallback(null); // Clear the callback when modal is closed\n  };\n\n  const handleGameChanged = (gameId: any) => {\n    if (newGameCallback) {\n      // Add new item with the game title\n      newGameCallback({\n        title: gameId,\n        detail: \"\",\n      });\n    }\n    closeGameModal(); // Close modal after selection\n  };\n\n  const handlePersonalDetails = (values: any) => {\n    submit(\n      {\n        data: JSON.stringify(values),\n        action: \"update\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Space size={10} direction=\"vertical\" style={{ marginBottom: 20 }}>\n        <Title level={2} style={{ margin: 0 }}>\n          {t(\"my games\")}\n        </Title>\n      </Space>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"dynamic_form_complex\"\n        initialValues={{ personalDetails: personalDetailsList }}\n        onFinish={handlePersonalDetails}\n      >\n        <Form.List name=\"personalDetails\">\n          {(fields, { add, remove }) => (\n            <div\n              style={{\n                display: \"flex\",\n                rowGap: 16,\n                flexDirection: \"column\",\n              }}\n            >\n              {fields.map((field, index) => (\n                <div key={field.key}>\n                  <Space\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    <Text style={{ fontWeight: 600 }} className=\"required\">\n                      {t(\"title personal details\")}\n                    </Text>\n                    {index > 0 && (\n                      <div\n                        onClick={() => {\n                          handleRemove(index);\n                          remove(field.name);\n                        }}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <Space style={{ color: \"#D61515\" }}>\n                          <DeleteOutlined />\n                          <Text\n                            style={{\n                              fontWeight: 600,\n                              fontSize: \"inherit\",\n                              color: \"#D61515\",\n                            }}\n                          >\n                            {t(\"delete detail box\")}\n                          </Text>\n                        </Space>\n                      </div>\n                    )}\n                  </Space>\n\n                  <Form.Item\n                    name={[field.name, \"title\"]}\n                    rules={[\n                      { required: true, message: t(\"please input title\") },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n\n                  {!textEditorLoading ? (\n                    <>\n                      <Text\n                        style={{\n                          fontWeight: 600,\n                          fontSize: \"inherit\",\n                        }}\n                        className=\"required\"\n                      >\n                        {t(\"detail personal details\")}\n                      </Text>\n                      <Form.Item\n                        name={[field.name, \"detail\"]}\n                        rules={[\n                          { required: true, message: t(\"please input detail\") },\n                        ]}\n                      >\n                        <TextEditor\n                          id=\"detail\"\n                          initialValues={personalDetailsList[index]?.detail}\n                          fetcher={fetcher}\n                          onChange={(values) =>\n                            form.setFieldValue(\n                              `personalDetails[${index}].detail`,\n                              values\n                            )\n                          }\n                        />\n                      </Form.Item>\n                    </>\n                  ) : (\n                    <Result\n                      icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n                    />\n                  )}\n                </div>\n              ))}\n\n              <TiltButton\n                color={`${scheme}-base`}\n                onClick={() =>\n                  openGameModal((newDetail: any) => add(newDetail))\n                } // Pass the callback to add new detail\n                style={{ marginTop: 20 }}\n              >\n                + {t(\"Add Item\")}\n              </TiltButton>\n            </div>\n          )}\n        </Form.List>\n\n        <TiltButton\n          color=\"primary\"\n          onClick={form.submit}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"save\")}\n        </TiltButton>\n      </Form>\n\n      <Modal\n        {...modalProps}\n        width={600}\n        onCancel={closeGameModal}\n        open={gameModal}\n      >\n        <GameSelect games={games} onGameSelect={handleGameChanged} />\n      </Modal>\n    </div>\n  );\n}\n", "import { useCallback, useContext, useState } from \"react\";\nimport {\n  useLoaderData,\n  useMatches,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Col,\n  Divider,\n  Input,\n  Modal,\n  Result,\n  Row,\n  Space,\n  Typography,\n} from \"antd\";\nimport { DownloadOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport { ResponsiveImageCard, TiltButton } from \"~/components/common\";\nimport { TournamentTeam } from \"~/components/pages/Tournament\";\nimport * as APIServer from \"~/api\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { isString, remove, toNumber } from \"lodash\";\nimport { AuthContext } from \"~/contexts\";\n\nconst { Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { id } = params;\n  const session = await getSessionFromRequest(request);\n  const user = session.get(\"me\");\n\n  let exportPendingTeams: any[] = [];\n  let exportApprovedTeams: any[] = [];\n  let teams: any[] = [];\n  let teamsPending: any[] = [];\n  let tournament: any;\n\n  if (id !== undefined) {\n    try {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getTournament(toNumber(id))\n      );\n\n      if (tournamentRes.data) {\n        tournament = tournamentRes.data;\n      }\n      const isOrganizerAndOwenr = tournament.organizer.id === user?.id;\n\n      if (isOrganizerAndOwenr) {\n        const teamsExportApprovedRes = await APIServer.clientFromSession(\n          session\n        ).request(APIServer.getExportApprovedTeams(Number(id)));\n        teamsExportApprovedRes.data.members.forEach((member: any) => {\n          if (member.slipimageurl) {\n            member.slipimageurl += `?t=${teamsExportApprovedRes.data.slipToken}`;\n          }\n        });\n        if (teamsExportApprovedRes.data) {\n          exportApprovedTeams = teamsExportApprovedRes.data.members;\n        }\n\n        const teamsExportPendingRes = await APIServer.clientFromSession(\n          session\n        ).request(APIServer.getExportPendingTeams(Number(id)));\n        teamsExportPendingRes.data.members.forEach((member: any) => {\n          if (member.slipimageurl) {\n            member.slipimageurl += `?t=${teamsExportPendingRes.data.slipToken}`;\n          }\n        });\n\n        if (teamsExportPendingRes.data) {\n          exportPendingTeams = teamsExportPendingRes.data.members;\n        }\n\n        const teamsPendingRes = await APIServer.clientFromSession().request(\n          APIServer.getTournamentTeamPending(Number(id))\n        );\n        if (teamsPendingRes.data) {\n          teamsPending = teamsPendingRes.data;\n        }\n      }\n    } catch (e: any) {\n      console.log(\"error\", e);\n    }\n\n    try {\n      const teamsRes = await APIServer.clientFromSession().request(\n        APIServer.getTournamentTeamApproved(Number(id))\n      );\n\n      if (teamsRes.data) {\n        teams = teamsRes.data;\n      }\n    } catch (e: any) {\n      console.log(\"error\", e);\n    }\n  }\n\n  return json({\n    id,\n    exportPendingTeams,\n    exportApprovedTeams,\n    teams,\n    teamsPending,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const currentAction = formdata.get(\"action\");\n  const teamId = Number(formdata.get(\"teamId\"));\n  const teamIds: any = formdata.get(\"teamIds\");\n\n  const remark =\n    formdata.get(\"remark\") && isString(formdata.get(\"remark\"))\n      ? (formdata.get(\"remark\") as string)\n      : \"\";\n  let success: any = null;\n\n  try {\n    switch (currentAction) {\n      case \"approve\":\n        await APIServer.clientFromSession(session).request(\n          APIServer.approveTeam(teamId)\n        );\n        break;\n      case \"reject\":\n        await APIServer.clientFromSession(session).request(\n          APIServer.rejectTeam(teamId, remark)\n        );\n\n        break;\n      case \"remove\":\n        await APIServer.clientFromSession(session).request(\n          APIServer.removeTeam(teamId, remark)\n        );\n        break;\n      case \"bulk-approve\":\n        if (teamIds.length > 0) {\n          await APIServer.clientFromSession(session).request(\n            APIServer.bulkApproveTeams([teamIds])\n          );\n        }\n        break;\n      case \"bulk-reject\":\n        if (teamIds.length > 0) {\n          await APIServer.clientFromSession(session).request(\n            APIServer.bulkRejectTeams(teamIds, remark)\n          );\n        }\n        break;\n    }\n    success = currentAction;\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully ${currentAction}`,\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message:\n        e.errors && e.errors.length > 1 ? e.errors[0] : e.response.data.message,\n    });\n  }\n  return json(\n    { success },\n    {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n\nexport default function TournamentSingleTeams() {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { exportPendingTeams, exportApprovedTeams, teams, teamsPending } =\n    useLoaderData();\n  const submit = useSubmit();\n  const routeLoader = useRouteLoaderData(\"routes/_app.tournaments.$id\");\n  const { user } = useContext(AuthContext);\n  const { tournament } = routeLoader;\n  const { t } = useTranslation();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const { jsonToCSV } = usePapaParse();\n  const [checkedIds, setCheckedIds] = useState<number[]>([]);\n  const [teamModalId, setTeamModalId] = useState<null | number>(null);\n  const [teamModalStatus, setTeamModalStatus] = useState<null | string>(null);\n  const [remark, setRemark] = useState<string>(\"\");\n  const [remarkModal, setRemarkModal] = useState<boolean>(false);\n  const isOrganizerAndOwenr = tournament.organizer.id === user?.id;\n\n  const organizerActionAvailable =\n    isOrganizerAndOwenr && tournament.status === \"opening\";\n\n  const approvedTeams = teams.filter(\n    (teams: any) => teams.status === \"approved\"\n  );\n\n  const pendingTeams = teamsPending;\n\n  const handleTeamClicked = (teamId: number, status: string) => {\n    setTeamModalId(teamId);\n    setTeamModalStatus(status);\n  };\n\n  const handleCloseModal = () => {\n    setTeamModalId(null);\n    setTeamModalStatus(null);\n  };\n\n  const handleRemarkChanged = (e: any) => {\n    setRemark(e.target.value);\n  };\n\n  const handleSelectTeam = useCallback(\n    (teamId: number) => {\n      if (checkedIds.includes(teamId)) {\n        remove(checkedIds, (id) => id === teamId);\n      } else {\n        checkedIds.push(teamId);\n      }\n      setCheckedIds([...checkedIds]);\n    },\n    [checkedIds]\n  );\n\n  const handleSelectAll = useCallback(\n    (e: any) => {\n      if (checkedIds.length != pendingTeams.length) {\n        setCheckedIds(pendingTeams.map((team: any) => team.id));\n      } else {\n        setCheckedIds([]);\n      }\n    },\n    [checkedIds, pendingTeams]\n  );\n\n  const handleOrganizerAction = useCallback(\n    (action: string, remark?: string) => {\n      if (teamModalId) {\n        submit(\n          { action: action, remark: remark ? remark : \"\", teamId: teamModalId },\n          { method: \"post\" }\n        );\n        setTeamModalId(null);\n        setTeamModalStatus(null);\n      }\n    },\n    [teamModalId]\n  );\n\n  const handleBulkApprove = useCallback(() => {\n    submit(\n      {\n        action: \"bulk-approve\",\n        teamIds: checkedIds,\n      },\n      { method: \"post\" }\n    );\n  }, [checkedIds]);\n\n  const handleBulkReject = useCallback(() => {\n    submit(\n      {\n        action: \"bulk-reject\",\n        remark: remark ? remark : \"\",\n        teamIds: checkedIds,\n      },\n      { method: \"post\" }\n    );\n    setRemark(\"\");\n    setRemarkModal(false);\n  }, [checkedIds, remark]);\n\n  return (\n    <>\n      <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n        {organizerActionAvailable &&\n          pendingTeams &&\n          pendingTeams.length > 0 && (\n            <>\n              <Row\n                style={{ alignItems: \"center\", marginBottom: 20 }}\n                gutter={[10, 20]}\n              >\n                {isOrganizerAndOwenr && (\n                  <Col flex=\"auto\">\n                    <Space size={10} style={{ display: \"flex\" }}>\n                      <Title level={4} style={{ margin: 0 }}>\n                        {t(\"pending teams\")}\n                      </Title>\n                      <CSVDownloader\n                        type={Type.Link}\n                        filename={\"pending-teams\"}\n                        bom={true}\n                        data={jsonToCSV([...exportPendingTeams])}\n                      >\n                        <Button\n                          icon={<DownloadOutlined />}\n                          style={{\n                            backgroundColor: \"#7a6fee\",\n                            border: \"none\",\n                            color: \"#fff\",\n                          }}\n                        >\n                          {t(\"export all\")}\n                        </Button>\n                      </CSVDownloader>\n                    </Space>\n                  </Col>\n                )}\n\n                <Col flex=\"none\">\n                  <Space size={10} style={{ display: \"flex\" }}>\n                    <Checkbox\n                      onChange={handleSelectAll}\n                      checked={checkedIds.length == pendingTeams.length}\n                    >\n                      {t(\"select all\")}\n                    </Checkbox>\n                    {checkedIds.length > 0 && (\n                      <Space size={5}>\n                        <Button type=\"primary\" onClick={handleBulkApprove}>\n                          {t(\"approve\")}\n                        </Button>\n                      </Space>\n                    )}\n                  </Space>\n                </Col>\n              </Row>\n              <Row gutter={[5, 5]}>\n                {pendingTeams.map((team: any, index: number) => (\n                  <Col key={`pending-${index}`} span={12} sm={8} md={6} lg={4}>\n                    <ResponsiveImageCard\n                      image={\n                        team && team.logo\n                          ? `url(\"${cdnUrl}/${team.logo}\")`\n                          : `url(\"/image/placeholder.png\")`\n                      }\n                      label={team.name}\n                      onClick={(e: any) =>\n                        handleTeamClicked(team.id, team.status)\n                      }\n                    />\n                    <span style={{ position: \"absolute\", top: 10, right: 10 }}>\n                      <Checkbox\n                        onChange={() => handleSelectTeam(team.id)}\n                        checked={checkedIds.includes(team.id)}\n                      />\n                    </span>\n                  </Col>\n                ))}\n              </Row>\n              <Divider />\n            </>\n          )}\n        <>\n          <Space size={10} style={{ display: \"flex\" }}>\n            <Title level={4} style={{ margin: 0 }}>\n              {t(\"tournament participants\")}\n            </Title>\n            {isOrganizerAndOwenr && (\n              <CSVDownloader\n                type={Type.Link}\n                filename={\"approved-teams\"}\n                bom={true}\n                data={jsonToCSV([...exportApprovedTeams])}\n              >\n                <Button\n                  icon={<DownloadOutlined />}\n                  style={{\n                    backgroundColor: \"#7a6fee\",\n                    border: \"none\",\n                    color: \"#fff\",\n                  }}\n                >\n                  {t(\"export all\")}\n                </Button>\n              </CSVDownloader>\n            )}\n          </Space>\n\n          {approvedTeams.length > 0 ? (\n            <Row gutter={[5, 5]}>\n              {approvedTeams.map((team: any, index: number) => (\n                <Col key={`approved-${index}`} span={12} sm={8} md={6} lg={4}>\n                  <ResponsiveImageCard\n                    image={\n                      team && team.logo\n                        ? `url(\"${cdnUrl}/${team.logo}\")`\n                        : `url(\"/image/placeholder.png\")`\n                    }\n                    label={team.name}\n                    onClick={(e: any) =>\n                      handleTeamClicked(team.id, team.status)\n                    }\n                  />\n                </Col>\n              ))}\n            </Row>\n          ) : (\n            <Card style={{ borderRadius: 10 }}>\n              <Result icon={<InboxOutlined />} title={t(\"no participant\")} />\n            </Card>\n          )}\n        </>\n      </Space>\n      <Modal\n        closeIcon={false}\n        footer={null}\n        open={teamModalId !== null}\n        onCancel={handleCloseModal}\n        style={{ backgroundColor: \"transparent\" }}\n        styles={{ body: { backgroundColor: \"transparent\" } }}\n        modalRender={(modal) => modal}\n      >\n        {teamModalId !== null && (\n          <TournamentTeam\n            data={\n              teamModalStatus === \"approved\"\n                ? teams.find((team: any) => team.id === teamModalId)\n                : teamsPending.find((team: any) => team.id === teamModalId)\n            }\n            onOrganizerAction={\n              organizerActionAvailable ? handleOrganizerAction : undefined\n            }\n            additionalMembers={tournament.additionalPlayerCount}\n            minMembers={tournament.playerCount}\n            style={{\n              backgroundColor: \"transparent\",\n              boxShadow: \"none\",\n            }}\n          />\n        )}\n      </Modal>\n      <Modal\n        closeIcon={false}\n        footer={null}\n        open={remarkModal}\n        onCancel={() => setRemarkModal(false)}\n      >\n        <Space size={20} direction=\"vertical\" style={{ display: \"flex\" }}>\n          <Title level={4} style={{ margin: 0 }}>\n            {t(\"remark\")}\n          </Title>\n          <Input.TextArea\n            rows={4}\n            value={remark}\n            onChange={handleRemarkChanged}\n          />\n          <Row gutter={10}>\n            <Col span={12}>\n              <TiltButton\n                color=\"secondary\"\n                onClick={() => setRemarkModal(false)}\n              >\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"danger\" onClick={handleBulkReject}>\n                {t(\"confirm\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </Space>\n      </Modal>\n    </>\n  );\n}\n", "import { type LoaderFunction, json } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  const postId = url.searchParams.get(\"postId\");\n  const commentId = url.searchParams.get(\"commentId\");\n\n  try {\n    if (!postId || !commentId) {\n      throw new Error(\"Post ID and Comment ID are required.\");\n    }\n\n    const commentPosition = await APIServer.clientFromSession().request(\n      APIServer.getCommentPosition(postId, commentId)\n    );\n\n    return json(commentPosition.data);\n  } catch (error) {}\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  console.log(\"in action edit\");\n\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n  const achievementId = toSubmitData.id;\n\n  try {\n    const achievementRes = await APIServer.clientFromSession(session).request(\n      APIServer.editAchievement(achievementId, toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully updated achievement`,\n    });\n    await commitSession(session);\n\n    // console.log(\"achievementRes\", achievementRes.data);\n\n    return json({\n      success: \"update-achievement\",\n      action: \"updated\",\n    });\n  } catch (e: any) {\n    console.log(\"e\", e.response.data);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to updated achievement\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-achievement\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.sortingMyGames(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully sorted my games`,\n    });\n    await commitSession(session);\n\n    return json({\n      success: \"sort-my games\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to create my games\",\n    });\n    await commitSession(session);\n    return null;\n  }\n};\n", "import { useEffect } from \"react\";\nimport { Card, Result } from \"antd\";\nimport {\n  redirect,\n  type ActionFunction,\n  type LoaderFunction,\n} from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\nimport { useSubmit } from \"@remix-run/react\";\nimport { googleAuthenticator } from \"~/configs/oAuth2.server\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { Loading } from \"~/components/common\";\n\nexport const loader: LoaderFunction = async ({ request }: any) => {\n  return null;\n};\n\nexport const action: ActionFunction = async ({ request }: any) => {\n  let session = await getSessionFromRequest(request);\n  const lastVisited = session.get(\"redirectUri\") || session.get(\"lastVisited\");\n  const uuidTeamToJoin = session.get(\"uuidTeamToJoin\");\n  let toJoinTeams = session.get(\"toJoinTeams\");\n\n  let profile: any;\n  try {\n    profile = await googleAuthenticator.authenticate(\"google\", request, {\n      throwOnError: true,\n    });\n\n    if (profile) {\n      try {\n        const resMe = await APIServer.clientFromSession().request(\n          APIServer.socialLogin(\n            profile.provider.toLowerCase(),\n            profile.id,\n            profile,\n            profile.email\n          )\n        );\n        if (resMe.data) {\n          session.set(\"accessToken\", resMe.data.accessToken);\n          session.set(\"refreshToken\", resMe.data.refreshToken);\n          try {\n            const { data } = await APIServer.clientFromSession(session).request(\n              APIServer.me()\n            );\n            session.set(\"me\", data);\n          } catch (e) {\n            console.log(\"e\", e);\n          }\n        }\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n    }\n\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully login`,\n    });\n\n    if (toJoinTeams) {\n      return redirect(`/teams/${uuidTeamToJoin}/join`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    } else {\n      return redirect(lastVisited, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    }\n  } catch (error) {\n    return redirect(lastVisited, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  }\n};\n\nexport default function GoogleCallback() {\n  const submit = useSubmit();\n\n  const handleCallback = () => {\n    const payload = {\n      action: \"googleCallback\",\n    };\n\n    submit(payload, { method: \"post\" });\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      handleCallback();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <Card style={{ height: 400 }} bordered={false}>\n      <Loading />\n    </Card>\n  );\n}\n\nexport function ErrorBoundary({ error }: any) {\n  return <Result status=\"error\" title={error.message} />;\n}\n", "import { Authenticator } from 'remix-auth';\nimport { LineStrategy } from 'lib/oauth2-strategy/line';\nimport { GoogleStrategy } from 'lib/oauth2-strategy/google';\nimport { authSessionStorage } from './auth-session-server';\n\nconst appUrl = process.env.APP_URL as string;\n\n//Line\nconst lineChannelID = process.env.LINE_CHANNEL_ID as string;\nconst lineChannelSecret = process.env.LINE_CHANNEL_SECRET as string;\n\nexport let lineAuthenticator = new Authenticator(authSessionStorage);\nlet lineStrategy = new LineStrategy(\n  {\n    channelID: lineChannelID,\n    channelSecret: lineChannelSecret,\n    callbackURL: `${appUrl}/auth/line/callback`,\n  },\n  async ({ profile }) => {\n    return profile;\n  }\n);\n\nlineAuthenticator.use(lineStrategy);\n\n//Google\nconst googleClientId = process.env.GOOGLE_CLIENT_ID as string;\nconst googleClientSecret = process.env.GOOGLE_CLIENT_SECRET as string;\n\nexport let googleAuthenticator = new Authenticator(authSessionStorage);\nlet googleStrategy = new GoogleStrategy(\n  {\n    clientID: googleClientId,\n    clientSecret: googleClientSecret,\n    callbackURL: `${appUrl}/auth/google/callback`,\n  },\n  async ({ accessToken, refreshToken, extraParams, profile }) => {\n    // Get the user data from your DB or API using the tokens and profile\n    return profile;\n  }\n);\n\ngoogleAuthenticator.use(googleStrategy);\n", "import axios from 'axios';\nimport url from 'url';\nimport type { StrategyVerifyCallback } from 'remix-auth';\nimport { AuthorizationError } from 'remix-auth';\nimport type {\n  OAuth2Profile,\n  OAuth2StrategyVerifyParams,\n} from 'remix-auth-oauth2';\nimport { OAuth2Strategy } from 'remix-auth-oauth2';\n\nconst lineAuthorizedUrl = process.env.LINE_AUTHORIZED_URL as string;\nconst lineApiUrl = process.env.LINE_API_URL as string;\n\nexport interface LineStrategyOptions {\n  channelID: string;\n  channelSecret: string;\n  callbackURL: string;\n  scope?: LineScope[] | string;\n}\n\n/**\n * @see https://developers.line.biz/en/docs/line-login/integrate-line-login/#scopes\n */\nexport type LineScope = 'profile' | 'openid' | 'email';\n\nexport interface LineProfile extends OAuth2Profile {\n  id: string;\n  displayName: string;\n  pictureUrl: string | null;\n  email: string;\n  _json: any;\n}\n\nexport interface LineExtraParams\n  extends Record<string, string | number | null> {\n  idToken: string;\n  tokenType: string;\n  accessTokenExpiresIn: number | null;\n  scope: string;\n}\n\nexport const LineStrategyDefaultName = 'line';\nexport const LineStrategyScopeSeperator = ' ';\nexport const LineStrategyDefaultScope = ['profile', 'openid', 'email'].join(\n  LineStrategyScopeSeperator\n);\n\nexport class LineStrategy<User> extends OAuth2Strategy<\n  User,\n  LineProfile,\n  LineExtraParams\n> {\n  name = LineStrategyDefaultName;\n\n  private userInfoURL = `${lineApiUrl}/oauth2/v2.1/verify`;\n  private userAgent: string;\n  private channelID: string;\n\n  constructor(\n    { channelID, channelSecret, callbackURL, scope }: LineStrategyOptions,\n    verify: StrategyVerifyCallback<\n      User,\n      OAuth2StrategyVerifyParams<LineProfile, LineExtraParams>\n    >\n  ) {\n    super(\n      {\n        clientID: channelID,\n        clientSecret: channelSecret,\n        callbackURL,\n        responseType: 'code',\n        authorizationURL: `${lineAuthorizedUrl}/oauth2/v2.1/authorize`,\n        tokenURL: `${lineApiUrl}/oauth2/v2.1/token`,\n      },\n      verify\n    );\n    this.scope = this.getScope(scope);\n    this.channelID = channelID;\n    this.userAgent = 'Remix Auth';\n  }\n\n  //Allow users the option to pass a scope string, or typed array\n  private getScope(scope: LineStrategyOptions['scope']) {\n    if (!scope) {\n      return LineStrategyDefaultScope;\n    } else if (Array.isArray(scope)) {\n      return scope.join(LineStrategyScopeSeperator);\n    }\n\n    return scope;\n  }\n\n  // protected authorizationParams() {\n  //   return new URLSearchParams({\n  //     scope: this.scope.join(LineStrategyScopeSeperator),\n  //   });\n  // }\n\n  protected async userProfile(\n    _accessToken: string,\n    extraParams: LineExtraParams\n  ): Promise<LineProfile> {\n    try {\n      const params = new url.URLSearchParams({\n        id_token: extraParams.idToken,\n        client_id: this.channelID,\n      });\n\n      const response = await axios.post(this.userInfoURL, params.toString(), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'User-Agent': this.userAgent,\n        },\n      });\n\n      let data: any = await response.data;\n\n      let profile: LineProfile = {\n        provider: 'Line',\n        id: data.sub,\n        displayName: data.name,\n        pictureUrl: data.picture,\n        email: data.email ? data.email : null,\n        _json: data,\n      };\n\n      return profile;\n    } catch (error) {\n      throw new AuthorizationError('getUserProfileError', {\n        name: 'getUserProfileError',\n        message: 'Axios Error',\n      });\n    }\n  }\n\n  protected async getAccessToken(response: Response): Promise<{\n    accessToken: string;\n    refreshToken: string;\n    extraParams: LineExtraParams;\n  }> {\n    let data = new URLSearchParams(await response.json());\n\n    let accessToken = data.get('access_token');\n    if (!accessToken)\n      throw new AuthorizationError('Missing access token.', {\n        name: 'MissingAccessToken',\n        message: 'Access token is missing.',\n      });\n\n    let tokenType = data.get('token_type');\n    if (!tokenType)\n      throw new AuthorizationError('Missing token type.', {\n        name: 'MissingTokenType',\n        message: 'Token type is missing.',\n      });\n\n    let idToken = data.get('id_token');\n    if (!idToken)\n      throw new AuthorizationError('Missing id token.', {\n        name: 'MissingIdToken',\n        message: 'Id token is missing.',\n      });\n\n    let scope = data.get('scope');\n    if (!scope)\n      throw new AuthorizationError('Missing scope.', {\n        name: 'MissingScope',\n        message: 'Scope is missing.',\n      });\n\n    let refreshToken = data.get('refresh_token') ?? '';\n    let accessTokenExpiresIn = parseExpiresIn(data.get('expires_in'));\n\n    return {\n      accessToken,\n      refreshToken,\n      extraParams: {\n        idToken,\n        tokenType,\n        accessTokenExpiresIn,\n        scope,\n      },\n    } as const;\n  }\n}\n\nfunction parseExpiresIn(value: string | null): number | null {\n  if (!value) return null;\n\n  try {\n    return Number.parseInt(value, 10);\n  } catch {\n    return null;\n  }\n}\n", "import type { StrategyVerifyCallback } from 'remix-auth';\nimport type {\n  OAuth2Profile,\n  OAuth2StrategyVerifyParams,\n} from 'remix-auth-oauth2';\nimport { OAuth2Strategy } from 'remix-auth-oauth2';\n\nconst googleAuthorizedUrl = process.env.GOOGLE_AUTHORIZED_URL as string;\nconst googleTokenUrl = process.env.GOOGLE_TOKEN_URL as string;\nconst googleApiUrl = process.env.GOOGLE_API_URL as string;\n\nexport type GoogleScope = 'openid' | 'email' | 'profile';\n\nexport type GoogleStrategyOptions = {\n  clientID: string;\n  clientSecret: string;\n  callbackURL: string;\n  scope?: GoogleScope[] | string;\n  accessType?: 'online' | 'offline';\n  includeGrantedScopes?: boolean;\n  prompt?: 'none' | 'consent' | 'select_account';\n  hd?: string;\n  loginHint?: string;\n};\n\nexport type GoogleProfile = {\n  id: string;\n  displayName: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  avatarUrl: string;\n  _json: {\n    sub: string;\n    name: string;\n    given_name: string;\n    family_name: string;\n    picture: string;\n    locale: string;\n    email: string;\n    email_verified: boolean;\n    hd: string;\n  };\n} & OAuth2Profile;\n\nexport type GoogleExtraParams = {\n  expires_in: 3920;\n  token_type: 'Bearer';\n  scope: string;\n  id_token: string;\n} & Record<string, string | number>;\n\nexport const GoogleStrategyDefaultName = 'google';\nexport const GoogleStrategyScopeSeperator = ' ';\nexport const GoogleStrategyDefaultScopes = [\n  'openid',\n  'https://www.googleapis.com/auth/userinfo.profile',\n  'https://www.googleapis.com/auth/userinfo.email',\n].join(GoogleStrategyScopeSeperator);\n\nexport class GoogleStrategy<User> extends OAuth2Strategy<\n  User,\n  GoogleProfile,\n  GoogleExtraParams\n> {\n  public name = GoogleStrategyDefaultName;\n\n  private readonly accessType: string;\n\n  private readonly prompt?: 'none' | 'consent' | 'select_account';\n\n  private readonly includeGrantedScopes: boolean;\n\n  private readonly hd?: string;\n\n  private readonly loginHint?: string;\n\n  private readonly userInfoURL = `${googleApiUrl}/oauth2/v3/userinfo`;\n\n  constructor(\n    {\n      clientID,\n      clientSecret,\n      callbackURL,\n      scope,\n      accessType,\n      includeGrantedScopes,\n      prompt,\n      hd,\n      loginHint,\n    }: GoogleStrategyOptions,\n    verify: StrategyVerifyCallback<\n      User,\n      OAuth2StrategyVerifyParams<GoogleProfile, GoogleExtraParams>\n    >\n  ) {\n    super(\n      {\n        clientID,\n        clientSecret,\n        callbackURL,\n        authorizationURL: `${googleAuthorizedUrl}/o/oauth2/v2/auth`,\n        tokenURL: `${googleTokenUrl}/token`,\n      },\n      verify\n    );\n    this.scope = this.getScope(scope);\n    this.accessType = accessType ?? 'online';\n    this.includeGrantedScopes = includeGrantedScopes ?? false;\n    this.prompt = prompt;\n    this.hd = hd;\n    this.loginHint = loginHint;\n  }\n\n  protected authorizationParams(): URLSearchParams {\n    const params = new URLSearchParams({\n      // scope: this.scope.join(GoogleStrategyScopeSeperator),\n      access_type: this.accessType,\n      include_granted_scopes: String(this.includeGrantedScopes),\n    });\n    if (this.prompt) {\n      params.set('prompt', this.prompt);\n    }\n    if (this.hd) {\n      params.set('hd', this.hd);\n    }\n    if (this.loginHint) {\n      params.set('login_hint', this.loginHint);\n    }\n    return params;\n  }\n\n  protected async userProfile(accessToken: string): Promise<GoogleProfile> {\n    const response = await fetch(this.userInfoURL, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    const raw: GoogleProfile['_json'] = await response.json();\n    const profile: GoogleProfile = {\n      provider: 'google',\n      id: raw.sub,\n      displayName: raw.name,\n      firstName: raw.given_name,\n      lastName: raw.family_name,\n      email: raw.email,\n      avatarUrl: raw.picture,\n      _json: raw,\n    };\n    return profile;\n  }\n\n  // Allow users the option to pass a scope string, or typed array\n  private getScope(scope: GoogleStrategyOptions['scope']) {\n    if (!scope) {\n      return GoogleStrategyDefaultScopes;\n    } else if (Array.isArray(scope)) {\n      return scope.join(GoogleStrategyScopeSeperator);\n    }\n\n    return scope;\n  }\n}\n", "// app/services/session.server.ts\nimport { createCookieSessionStorage } from '@remix-run/node';\n\nconst cookieSecret = process.env.APP_COOKIE_SECRET as string;\nconst cookieSecure = process.env.APP_COOKIE_SECURE as string;\nconst maxAge = 60 * 60 * 6;\n// export the whole sessionStorage object\nexport let authSessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '_auth_session', // use any name you want here\n    sameSite: 'lax', // this helps with CSRF\n    path: '/', // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: [cookieSecret], // replace this with an actual secret\n    secure: cookieSecure === 'true', // enable this in prod only\n    maxAge: maxAge,\n  },\n});\n\n// you can also export the methods individually for your own usage\nexport let { getSession, commitSession, destroySession } = authSessionStorage;\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useMatches,\n  useNavigate,\n  useSubmit,\n} from \"@remix-run/react\";\nimport {\n  Avatar,\n  Button,\n  Col,\n  Divider,\n  Form,\n  Modal,\n  Row,\n  Space,\n  Tabs,\n  Typography,\n  notification,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  EditOutlined,\n  ExclamationCircleFilled,\n  VerticalAlignMiddleOutlined,\n} from \"@ant-design/icons\";\nimport { TiltButton } from \"~/components/common\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n  redirect,\n} from \"@remix-run/node\";\n\nimport * as APIServer from \"~/api\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport { ExperienceForm } from \"~/components/pages/User/ExperiencesForm\";\nimport { isNil, omitBy } from \"lodash\";\nimport { ExperienceEntry } from \"~/components/pages/User/ExpereinceEntry\";\nimport { ExperienceTitleForm } from \"~/components/pages/User/ExperiencesTitleForm\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { ArrowUpDown } from \"lucide-react\";\nconst { Title, Text } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let experiencesTitle = [];\n  let experiences = [];\n  let firstGameId = null;\n  try {\n    const experiencesTitleRes = await APIServer.clientFromSession(\n      session\n    ).request(APIServer.getExperiencesTitle());\n    if (experiencesTitleRes.data) {\n      experiencesTitle = experiencesTitleRes.data;\n    }\n    if (experiencesTitleRes.data) {\n      // experiencesTitle = experiencesTitleRes.data.map(\n      //   (experienceTitle: any, index: number) => ({\n      //     ...experienceTitle,\n\n      //   })\n      // );\n      experiencesTitle = experiencesTitleRes.data.map(\n        (item: any, index: number) =>\n          item.id\n            ? {\n                ...item,\n                haveOrignalId: true,\n              }\n            : { ...item, id: index + 1, haveOrignalId: false }\n      );\n    }\n    firstGameId = experiencesTitle[0]?.rankingGameId\n      ? { rankingGameId: experiencesTitle[0]?.rankingGameId }\n      : { experienceTitleId: experiencesTitle[0]?.id };\n\n    const experiencesRes = await APIServer.clientFromSession(session).request(\n      APIServer.getExperiences(searchParams, firstGameId)\n    );\n    if (experiencesRes.data) {\n      experiences = experiencesRes.data;\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({ experiencesTitle, experiences, firstGameId });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = entries.data ? JSON.parse(entries.data) : null;\n  const uuid = entries.uuid;\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"save-to-profile-index\":\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `successfully saved to profile index`,\n      });\n      return redirect(`/users/${uuid}`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\n// Modal properties\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n};\n\n// Main component\nexport default function SettingsExperiences() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const { experiencesTitle, experiences } = useLoaderData();\n  const [experienceModal, setExperienceModal] = useState(false);\n  const [experienceTitleModal, setExperienceTitleModal] = useState(false);\n  const [experienceEditTitleModal, setExperienceEditTitleModal] =\n    useState(false);\n\n  const [experienceLists, setExperienceLists] = useState<[]>(experiences);\n  const [experienceTitleLists, setExperienceTitleLists] =\n    useState<[]>(experiencesTitle);\n  const [experienceTitleSortLists, setExperienceTitleSortLists] =\n    useState<[]>(experiencesTitle);\n\n  const [gameId, setGameId] = useState<number | undefined>(\n    experiencesTitle[0]?.rankingGameId\n  );\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  const [titleType, setTitleType] = useState<string | undefined>(\n    experiencesTitle[0]?.rankingGameId ? \"rankingGameId\" : \"experienceTitleId\"\n  );\n  const [activeTabKey, setActiveTabKey] = useState<number>(0); // Initialize active tab key state\n\n  const tabItems = (titleItems: any, items: any) =>\n    titleItems &&\n    titleItems.length &&\n    titleItems.map((game: any, index: number) => ({\n      key: index,\n      label: (\n        <div style={{ position: \"relative\" }}>\n          <Avatar\n            src={`${cdnUrl}/${\n              game.rankingGame?.icon\n                ? game.rankingGame?.icon\n                : game?.icon\n                ? game.icon\n                : null\n            }`}\n            size={40}\n            style={{\n              margin: screenSize === \"greaterThanSM\" ? \"0 8px\" : \"0 4px\",\n              boxShadow:\n                scheme === \"dark\"\n                  ? \"0px 5px 10px -2px rgba(0, 0, 0, 0.6)\"\n                  : \"0px 5px 10px -2px rgba(0, 0, 0, 0.2)\",\n              opacity: activeTabKey === index ? 1 : 0.5,\n            }}\n          />\n          {game.icon && (\n            <div\n              style={{\n                position: \"absolute\",\n                top: -10,\n                right: 1,\n                zIndex: 1000,\n              }}\n              onClick={() => openTitleExperienceModal(game)}\n            >\n              <Avatar size={20} style={{ backgroundColor: \"black\" }}>\n                <EditOutlined />\n              </Avatar>\n            </div>\n          )}\n        </div>\n      ),\n      children: fetcher.state === \"idle\" && (\n        <>\n          <Title level={4}>\n            {game.rankingGame?.name ? game.rankingGame?.name : game.title}\n          </Title>\n          {items.map((experience: any, index: number) => (\n            <div key={index}>\n              <ExperienceEntry\n                data={experience}\n                fetcher={fetcher}\n                isMyWebboard={true}\n              />\n            </div>\n          ))}\n        </>\n      ),\n    }));\n\n  const [gameItems, setGameItems] = useState<any>(\n    tabItems(experienceTitleLists, experienceLists)\n  );\n\n  const [editTitleValue, setEditTitleValue] = useState<any>();\n  const [modal, contextHolder2] = Modal.useModal();\n  const [sortingModal, setSortingModal] = useState<boolean>(false);\n  const { user } = useContext(AuthContext);\n\n  const [form] = Form.useForm();\n  const submit = useSubmit();\n\n  const [titleForm] = Form.useForm();\n  const [titleEditForm] = Form.useForm();\n  const navigate = useNavigate();\n  const operations = (\n    <Avatar\n      icon={<PlusOutlined style={{ color: \"black\" }} />}\n      size={40}\n      style={{ backgroundColor: \"#f7f7f7\", cursor: \"pointer\" }}\n      onClick={() => openExperienceTitleModal()}\n    />\n  );\n\n  const handleToggleSortingMode = () => {\n    setSortingModal(!sortingModal);\n  };\n\n  const onChangeSortItems = (items: any) => {\n    setExperienceTitleSortLists(items);\n  };\n\n  const onCloseSortingModal = () => {\n    setSortingModal(false);\n  };\n\n  const handleSubmitSorting = () => {\n    setSortingModal(false);\n    const itemsId = {\n      order: experienceTitleSortLists.map((item: any, index: number) =>\n        item.haveOrignalId\n          ? {\n              experienceTitleId: item.id,\n            }\n          : { rankingGameId: item.rankingGameId }\n      ),\n    };\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-my-experience-title`,\n      }\n    );\n  };\n\n  const handleSubmitToProfileIndex = () => {\n    submit(\n      {\n        uuid: user.uuid,\n        action: \"save-to-profile-index\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  const openExperienceModal = () => {\n    setExperienceModal(true);\n  };\n\n  const openTitleExperienceModal = (value: any) => {\n    setEditTitleValue(value);\n    setExperienceEditTitleModal(true);\n  };\n\n  const openExperienceTitleModal = () => {\n    setExperienceTitleModal(true);\n  };\n\n  useEffect(() => {\n    setExperienceLists(experiences && experiences.length ? experiences : []);\n  }, [experiences, fetcher]);\n\n  useEffect(() => {\n    setGameItems(tabItems(experienceTitleLists, experienceLists));\n  }, [experienceLists, experienceTitleLists]);\n\n  useEffect(() => {\n    setExperienceTitleLists(\n      experiencesTitle && experiencesTitle.length ? experiencesTitle : []\n    );\n    setExperienceTitleSortLists(\n      experiencesTitle && experiencesTitle.length ? experiencesTitle : []\n    );\n  }, [experiencesTitle, fetcher]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n\n    if (fetcher.data.experiences) {\n      setExperienceLists(fetcher.data.experiences);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n\n    if (fetcher.data.experiencesTitle) {\n      setExperienceTitleLists(fetcher.data.experiencesTitle);\n      setExperienceTitleSortLists(fetcher.data.experiencesTitle);\n    }\n  }, [fetcher.data]);\n\n  const handleDeleteExperienceTitle = useCallback(() => {\n    if (fetcher.state === \"idle\") {\n      modal.confirm({\n        title: `${t(`are you sure you want to delete this expereince title?`)}`,\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        okType: \"danger\",\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          fetcher.submit(\n            { id: editTitleValue.id },\n            {\n              method: \"post\",\n              action: `/resources/delete-experience-title`,\n            }\n          );\n          setExperienceEditTitleModal(false);\n        },\n      });\n    }\n  }, [fetcher]);\n\n  const onChange = (key: any) => {\n    const param = experiencesTitle[key]?.rankingGameId\n      ? { rankingGameId: experiencesTitle[key]?.rankingGameId }\n      : { experienceTitleId: experiencesTitle[key]?.id };\n    const newSearchParams = param;\n\n    const queryString = new URLSearchParams(\n      omitBy(newSearchParams, isNil)\n    ).toString();\n    setGameId(\n      experiencesTitle[key]?.rankingGameId\n        ? experiencesTitle[key]?.rankingGameId\n        : experiencesTitle[key]?.id\n    );\n    setTitleType(\n      experiencesTitle[key]?.rankingGameId\n        ? \"rankingGameId\"\n        : \"experienceTitleId\"\n    );\n\n    setActiveTabKey(key);\n\n    fetcher.load(`.?${queryString}`);\n  };\n\n  useEffect(() => {\n    if (\n      fetcher.data &&\n      fetcher.data.success &&\n      fetcher.data.experienceTitleId\n    ) {\n      if (\n        // fetcher.data.success &&\n        // fetcher.data.success !== \"create-experience-title\" &&\n        // fetcher.data.success !== \"delete-experience-title\"\n        fetcher.data.success &&\n        fetcher.data.success !== \"create-experience-title\"\n      ) {\n        fetcher.load(`.?experienceTitleId=${fetcher.data.experienceTitleId}`);\n        messageApi.open({\n          type: \"success\",\n          message: t(`Successfully ${fetcher.data.action} experience`),\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n        navigate(\"/settings/experiences\");\n      }\n    }\n    // else if (\n    //   fetcher.data &&\n    //   fetcher.data.success &&\n    //   fetcher.data.success === \"delete-experience-title\"\n    // ) {\n    //   // fetcher.load(`.?rankingGameId=${8}`);\n    //   messageApi.open({\n    //     type: \"success\",\n    //     message: t(`Successfully ${fetcher.data.action} experience title`),\n    //     duration: 5,\n    //     placement: \"bottomRight\",\n    //   });\n    //   navigate(\"/settings/experiences\");\n    // }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <Space\n          size={10}\n          style={{\n            marginBottom: 20,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Title level={2}>{t(\"experiences\")}</Title>\n          <Button\n            type=\"text\"\n            style={{\n              marginTop: 2,\n              marginRight: 10,\n              fontWeight: 600,\n              textAlign: \"center\",\n            }}\n            onClick={handleToggleSortingMode}\n          >\n            <ArrowUpDown\n              style={{\n                color: \"#7C6FF6\",\n                fontSize: \"1.2em\",\n                marginRight: \"5px\",\n              }}\n            />\n            {t(\"sort order\")}\n          </Button>\n        </Space>\n        <div>\n          <Tabs\n            items={gameItems}\n            onChange={onChange}\n            tabBarExtraContent={operations}\n          />\n        </div>\n        <div>\n          <TiltButton\n            color={`${scheme}-base`}\n            onClick={() => openExperienceModal()}\n            style={{ marginTop: 20 }}\n          >\n            + {t(\"add experince\")}\n          </TiltButton>\n        </div>\n        <TiltButton\n          color=\"primary\"\n          onClick={handleSubmitToProfileIndex}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"save\")}\n        </TiltButton>\n      </div>\n      <Modal\n        {...modalProps}\n        onCancel={() => setExperienceModal(false)}\n        open={experienceModal}\n      >\n        <ExperienceForm\n          fetcher={fetcher}\n          form={form}\n          gameId={gameId}\n          titleType={titleType}\n          onCancel={() => setExperienceModal(false)}\n          action=\"create\"\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setExperienceTitleModal(false)}\n        open={experienceTitleModal}\n      >\n        <ExperienceTitleForm\n          fetcher={fetcher}\n          form={titleForm}\n          gameId={gameId}\n          onCancel={() => setExperienceTitleModal(false)}\n          action=\"create\"\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setExperienceEditTitleModal(false)}\n        open={experienceEditTitleModal}\n      >\n        <ExperienceTitleForm\n          fetcher={fetcher}\n          form={titleEditForm}\n          gameId={gameId}\n          onCancel={() => setExperienceEditTitleModal(false)}\n          action=\"edit\"\n          initialValues={fetcher.state === \"idle\" && editTitleValue}\n          handleDeleteExperienceTitle={handleDeleteExperienceTitle}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingModal(false)}\n        open={sortingModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={experienceTitleSortLists}\n            onChange={onChangeSortItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">\n                    {item.rankingGame?.name\n                      ? item.rankingGame.name\n                      : item.title}\n                  </TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onCloseSortingModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      {contextHolder}\n      {contextHolder2}\n    </div>\n  );\n}\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  notification,\n  Row,\n  Space,\n  // theme,\n  Typography,\n  DatePicker,\n  Switch,\n} from \"antd\";\n// import { AuthContext } from \"~/contexts\";\nimport { TiltButton } from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nimport dayjs from \"dayjs\";\nimport { flattenObject } from \"~/utils/helper\";\nconst { Text, Title } = Typography;\n// const { useToken } = theme;\n\ninterface ExperienceFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  initialValues?: any;\n  titleType?: string;\n  gameId: number | undefined;\n  onCancel: () => void;\n}\n\nexport function ExperienceForm(props: ExperienceFormProps) {\n  const { fetcher, form, initialValues, onCancel, action, gameId, titleType } =\n    props;\n\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  // const { token } = useToken();\n  // const { user } = useContext(AuthContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [isPresent, setIsPresent] = useState<boolean>(\n    initialValues ? (initialValues.endDate === null ? true : false) : false\n  ); // State for \"present\" switch\n  let initialData = {} as any;\n\n  if (initialValues) {\n    const { startDate, endDate, ...rest } = initialValues;\n    initialData = {\n      ...rest,\n      startDate:\n        initialValues?.startDate &&\n        dayjs(initialValues.startDate).toISOString(),\n      endDate:\n        initialValues?.endDate && dayjs(initialValues.endDate).toISOString(),\n    };\n  }\n\n  const handlePresentChange = (checked: boolean) => {\n    setIsPresent(checked);\n    if (checked) {\n      form.setFieldValue(\"endDate\", null); // Set end date to null\n    }\n  };\n\n  const handleSubmit = (values: any) => {\n    const { isPrivate, ...rest } = values;\n\n    // Create a new object for submission with the common fields\n    let submissionData = {\n      ...rest,\n      id: initialValues?.id, // include initialValues ID if it exists\n    };\n\n    // Conditionally add or remove fields based on titleType\n    if (action === \"edit\") {\n      submissionData = {\n        ...submissionData,\n      };\n    } else if (titleType === \"experienceTitleId\") {\n      submissionData = {\n        ...submissionData,\n        experienceTitleId: gameId,\n      };\n    } else {\n      submissionData = {\n        ...submissionData,\n        rankingGameId: gameId,\n      };\n    }\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(submissionData),\n      },\n      action === \"create\"\n        ? {\n            method: \"post\",\n            action: `/resources/create-experience`,\n          }\n        : {\n            method: \"put\",\n            action: `/resources/edit-experience`,\n          }\n    );\n    form.resetFields();\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (initialValues) {\n      form.setFieldsValue(flattenObject(initialData));\n    }\n  }, [initialValues, form]); // Dependency array includes initialValues and form\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"cover\") {\n        form.setFieldValue(\"cover\", fetcher.data.key);\n      }\n\n      setUploading(false);\n    }\n  }, [form, fetcher.data, fetcher.state]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={flattenObject(initialData)}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {action === \"create\" ? t(\"add experience\") : t(\"edit experience\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          <Form.Item\n            key=\"name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input experience name\"),\n              },\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"team name or tournament name\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n          <Row gutter={20}>\n            <Col span={12}>\n              <Form.Item\n                name=\"startDate\"\n                label={\n                  <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                    {t(\"experience start date\")}\n                  </Text>\n                }\n                rules={[\n                  {\n                    required: true,\n                    message: `${t(\"please select experience start date\")}`,\n                  },\n                  ({ getFieldValue }) => ({\n                    validator(_, value) {\n                      if (!value) {\n                        return Promise.resolve();\n                      } else {\n                        if (getFieldValue(\"endDate\")) {\n                          if (value.isBefore(getFieldValue(\"endDate\"))) {\n                            return Promise.resolve();\n                          }\n                        } else {\n                          return Promise.resolve();\n                        }\n                        return Promise.reject(\n                          \"start date must be before end date\"\n                        );\n                      }\n                    },\n                  }),\n                ]}\n              >\n                <DatePicker\n                  name=\"startDate\"\n                  showToday={false}\n                  allowClear={false}\n                  placeholder=\"DD/MM/YYYY\"\n                  format=\"DD/MM/YYYY\"\n                  style={{ display: \"flex\" }}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"endDate\"\n                label={\n                  <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                    {t(\"experience end date\")}\n                  </Text>\n                }\n                rules={[\n                  {\n                    required: !isPresent,\n                    message: `${t(\"please select experience end date\")}`,\n                  },\n                  ({ getFieldValue }) => ({\n                    validator(_, value) {\n                      if (!value || !getFieldValue(\"startDate\")) {\n                        return Promise.resolve();\n                      }\n                      if (value.isAfter(dayjs(getFieldValue(\"startDate\")))) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\n                        \"end date must be after the start date\"\n                      );\n                    },\n                  }),\n                ]}\n              >\n                <DatePicker\n                  name=\"endDate\"\n                  showToday={false}\n                  allowClear={false}\n                  placeholder=\"DD/MM/YYYY\"\n                  format=\"DD/MM/YYYY\"\n                  style={{ display: \"flex\" }}\n                  disabled={isPresent} // Disable when \"present\" switch is on\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row justify={\"end\"}>\n            <Form.Item key=\"present\" name=\"present\" valuePropName=\"checked\">\n              <Space>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"present\")}\n                </Text>\n                <Switch onChange={handlePresentChange} value={isPresent} />\n              </Space>\n            </Form.Item>\n          </Row>\n\n          <Form.Item\n            key=\"description\"\n            name=\"description\"\n            label={\n              <Space size={5}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"description\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input.TextArea\n              placeholder={t(\"input description\")}\n              autoSize={{\n                minRows: 5,\n              }}\n            />\n          </Form.Item>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {action === \"create\" ? t(\"create experience\") : t(\"edit\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {contextHolder}\n    </div>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport { Card, Flex, Space, Typography } from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { LockOutlined } from \"@ant-design/icons\";\nimport { ExperienceEntryControl } from \"./ExperienceEntryControl\";\nimport dayjs from \"dayjs\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text, Title } = Typography;\n\ninterface ExperienceEntryProps {\n  data: any;\n  rankingGame?: any;\n  fetcher?: any;\n  isMyWebboard?: boolean;\n}\n\nexport function ExperienceEntry(props: ExperienceEntryProps) {\n  const { data, rankingGame, fetcher } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const isOwner = true;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n  const { t } = useTranslation();\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  // Add placeholders if there are fewer than 4 photos\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const cardStyle = {\n    margin: \"10px 0\",\n    borderRadius: \"6px\",\n    border: \"1px solid #E5E4E4\",\n  };\n\n  return (\n    <>\n      <Card style={cardStyle}>\n        <Flex gap={20} vertical>\n          <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n            <Space\n              direction=\"vertical\"\n              size={1}\n              style={{ margin: 0, padding: 0 }}\n            >\n              <Title level={5}>{data.name}</Title>\n              <Text>\n                {dayjs(data.startDate).format(\"MMM YYYY\")} -{\" \"}\n                {data.endDate\n                  ? dayjs(data.endDate).format(\"MMM YYYY\")\n                  : t(\"present\")}\n              </Text>\n            </Space>\n            <ExperienceEntryControl\n              fetcher={fetcher}\n              id={data.id}\n              isOwner={isOwner}\n              isForumAdmin={isForumAdmin}\n              initialValues={data}\n              postType=\"experience\"\n            />\n          </Flex>\n          <Text>{data.description}</Text>\n        </Flex>\n      </Card>\n    </>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Input, Modal, Space, Typography, Select, Form } from \"antd\";\nimport {\n  AlertOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  ExclamationCircleFilled,\n} from \"@ant-design/icons\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { AlbumForm } from \"./AlbumForm\";\nimport { ExperienceForm } from \"./ExperiencesForm\";\n\nconst { Text, Title } = Typography;\n\ninterface ExperienceEntryControlProps {\n  fetcher?: any;\n  id: string;\n  ignoreShare?: boolean;\n  isOwner?: boolean;\n  isForumAdmin?: boolean;\n  onEditClicked?: () => void;\n  postType?: string;\n  initialValues?: any;\n}\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport function ExperienceEntryControl(props: ExperienceEntryControlProps) {\n  const {\n    fetcher,\n    id,\n    ignoreShare,\n    isOwner,\n    isForumAdmin,\n    postType,\n    initialValues,\n  } = props;\n  const { t } = useTranslation();\n  const { baseUrl } = useContext(AppContext);\n  const [reason, setReason] = useState<string>(\"\");\n  const [modal, contextHolder] = Modal.useModal();\n  const [reportModal, setReportModal] = useState<boolean>(false);\n  const [openCreateExperienceModal, setOpenCreateExperienceModal] =\n    useState(false);\n  const [form] = Form.useForm();\n\n  const albumUrl = `${baseUrl}/album/${id}`;\n  const { Option } = Select;\n\n  const handleOpenCreateExperienceModal = () => {\n    setOpenCreateExperienceModal(true);\n  };\n\n  const handleDeleteExperience = useCallback(() => {\n    if (fetcher.state === \"idle\") {\n      modal.confirm({\n        title: `${t(`are you sure you want to delete this expereince?`)}`,\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        okType: \"danger\",\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          fetcher.submit(\n            { id: initialValues.id },\n            {\n              method: \"post\",\n              action: `/resources/delete-experience`,\n            }\n          );\n        },\n      });\n    }\n  }, [fetcher]);\n\n  const openReportModal = () => {\n    setReportModal(true);\n  };\n\n  const closeReportModal = () => {\n    setReportModal(false);\n  };\n\n  const onReasonChanged = (e: any) => {\n    setReason(e.target.value);\n  };\n\n  const [selectedReason, setSelectedReason] = useState<string>(\"\");\n\n  const reasonOptions = [\n    { label: \" Inappropriate Content\", value: \"Inappropriate Content\" },\n    { label: \"Violence\", value: \"Violence\" },\n    { label: \"Harassment\", value: \"Harassment\" },\n    { label: \" False Information\", value: \"False Information\" },\n    { label: \"Spam\", value: \"Spam\" },\n    { label: \"Unauthorized Sales\", value: \"Unauthorized Sales\" },\n    { label: \"Others\", value: \"Others\" },\n  ];\n\n  const onReasonSelected = (value: string) => {\n    if (value !== \"Others\") {\n      setReason(value);\n    } else {\n      setReason(\"\");\n    }\n    setSelectedReason(value);\n  };\n\n  const reasonSelect = (\n    <Select\n      style={{ width: \"100%\" }}\n      onChange={onReasonSelected}\n      value={selectedReason ? selectedReason : undefined}\n      disabled={fetcher.state !== \"idle\"}\n      placeholder={t(\"select reason\")}\n      listHeight={300}\n    >\n      {reasonOptions.map((option) => (\n        <Option key={option.value} value={option.value}>\n          {option.label}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  const submitReport = useCallback(() => {\n    if (reason.length > 0) {\n      fetcher.submit(\n        { reason, id, type: postType },\n        {\n          method: \"post\",\n          action: `/resources/report-post`,\n        }\n      );\n    }\n  }, [fetcher, postType, reason]);\n\n  const deletePost = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete this post`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id, type: postType },\n          {\n            method: \"delete\",\n            action: `/resources/delete-post`,\n          }\n        );\n      },\n    });\n  }, [fetcher, id, postType]);\n\n  const menus = [\n    {\n      label: (\n        <Space size={10} style={{ color: \"#f5222d\" }}>\n          <AlertOutlined />\n          {t(\"report\")}\n        </Space>\n      ),\n      onClick: openReportModal,\n    },\n  ] as any[];\n  if (isOwner || isForumAdmin) {\n    menus.push({\n      label: (\n        <Space size={10}>\n          <DeleteOutlined />\n          {t(\"delete\")}\n        </Space>\n      ),\n      onClick: deletePost,\n    });\n  }\n  useEffect(() => {\n    setReason(\"\");\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success === `report-${postType ? postType : \"webboard\"}` &&\n      fetcher.state === \"idle\"\n    ) {\n      setReason(\"\");\n      setReportModal(false);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType]);\n\n  return (\n    <>\n      <Space size={15}>\n        {/* {!ignoreShare && (\n          <ShareDropDown copiedMessage=\"album url copied\" postUrl={albumUrl} />\n        )} */}\n        {isOwner && (\n          <>\n            <Text\n              style={{ fontSize: 18, cursor: \"pointer\" }}\n              onClick={handleOpenCreateExperienceModal}\n            >\n              <EditOutlined />\n            </Text>\n            <Text\n              style={{ fontSize: 18, cursor: \"pointer\", color: \"#f5222d\" }}\n              onClick={handleDeleteExperience}\n            >\n              <DeleteOutlined />\n            </Text>\n          </>\n        )}\n      </Space>\n      <Modal\n        {...modalProps}\n        onCancel={() => setOpenCreateExperienceModal(false)}\n        open={fetcher.state === \"idle\" && openCreateExperienceModal}\n      >\n        <ExperienceForm\n          fetcher={fetcher}\n          form={form}\n          onCancel={() => setOpenCreateExperienceModal(false)}\n          initialValues={initialValues}\n          action=\"edit\"\n          gameId={initialValues.experienceTitleId}\n        />\n      </Modal>\n      <Modal\n        closeIcon={false}\n        footer={null}\n        open={reportModal}\n        onCancel={closeReportModal}\n      >\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          <Title level={4} style={{ margin: 0 }}>\n            {t(\"please input reason to report\")}\n          </Title>\n          {reasonSelect}\n          {selectedReason === \"Others\" && (\n            <Input.TextArea\n              rows={4}\n              onChange={onReasonChanged}\n              value={reason}\n              disabled={fetcher.state !== \"idle\"}\n            />\n          )}\n          <TiltButton\n            color=\"danger\"\n            onClick={submitReport}\n            disabled={!reason.length || fetcher.state !== \"idle\"}\n          >\n            {t(\"report\")}\n          </TiltButton>\n        </Space>\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  notification,\n  Row,\n  Space,\n  // theme,\n  Typography,\n  Avatar,\n  theme,\n  Modal,\n} from \"antd\";\nimport {\n  LoadingOutlined,\n  CameraOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\n// import { AuthContext } from \"~/contexts\";\nimport { FileUploader, OverlayBg, TiltButton } from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface ExperienceTitleFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  initialValues?: any;\n  gameId: number | undefined;\n  onCancel: () => void;\n  handleDeleteExperienceTitle?: () => void;\n}\n\nexport function ExperienceTitleForm(props: ExperienceTitleFormProps) {\n  const {\n    fetcher,\n    form,\n    initialValues,\n    onCancel,\n    action,\n    gameId,\n    handleDeleteExperienceTitle,\n  } = props;\n\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { token } = useToken();\n  // const { user } = useContext(AuthContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [modal, contextHolder2] = Modal.useModal();\n\n  const avatarStyle = {\n    position: \"absolute\",\n    left: \"1.5%\",\n    bottom: -30,\n    padding: 2,\n    border: `5px solid ${token.colorBgLayout}`,\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n  } as any;\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleSubmit = useCallback(\n    (values: any) => {\n      const { isPrivate, ...rest } = values;\n\n      fetcher.submit(\n        {\n          data: JSON.stringify({\n            ...rest,\n            rankingGameId: gameId,\n            id: initialValues?.id,\n          }),\n        },\n        action === \"create\"\n          ? {\n              method: \"post\",\n              action: `/resources/create-experience-title`,\n            }\n          : {\n              method: \"put\",\n              action: `/resources/edit-experience-title`,\n            }\n      );\n      form.setFieldValue(\"icon\", null);\n      form.resetFields();\n      onCancel();\n    },\n    [fetcher, form, onCancel]\n  );\n\n  useEffect(() => {\n    if (initialValues) {\n      form.setFieldsValue(initialValues);\n    }\n  }, [initialValues, form]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"icon\") {\n        form.setFieldValue(\"icon\", fetcher.data.key);\n      }\n\n      setUploading(false);\n    }\n  }, [form, fetcher.data, fetcher.state]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={initialValues}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {action === \"create\"\n            ? t(\"add experience title\")\n            : t(\"edit experience title\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          <Form.Item\n            key=\"icon\"\n            name=\"icon\"\n            style={{ margin: \"0px\", marginBottom: \"25px\", padding: \"0px\" }}\n            rules={[\n              {\n                required: true,\n                message: (\n                  <div style={{ marginTop: \"17px\" }}>\n                    {t(\"please input game icon\")}\n                  </div>\n                ),\n              },\n            ]}\n          >\n            <Row style={{ marginBottom: 10 }}>\n              <Col flex=\"auto\">\n                <Space direction=\"vertical\" size={5}>\n                  <Text style={{ fontWeight: 600 }}>{t(\"game icon\")}</Text>\n                  {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n                    <Avatar size={75}>\n                      <LoadingOutlined style={{ fontSize: 24 }} spin />\n                    </Avatar>\n                  ) : (\n                    <div style={{ marginTop: \"60px\", marginBottom: \"60px\" }}>\n                      <div style={avatarStyle} className=\"hover-show-parent\">\n                        <OverlayBg\n                          className=\"hover-show-child\"\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          <CameraOutlined\n                            style={{ fontSize: 30, color: \"#fff\" }}\n                          />\n                        </OverlayBg>\n                        <FileUploader\n                          fetcher={fetcher}\n                          fieldName={\"icon\"}\n                          // maxUpload={5}\n                          onUploading={setUploading}\n                          onErrorFileTooLarge={handleFileTooLarge}\n                        >\n                          <Avatar\n                            size={75}\n                            // src={`${cdnUrl}/profile-teams/profile-team-${1}.jpg`}\n                            src={`${cdnUrl}/${form.getFieldValue(\"icon\")}`}\n                          />\n                        </FileUploader>\n                      </div>\n                    </div>\n                  )}\n                </Space>\n              </Col>\n              <Col flex=\"none\">\n                <FileUploader\n                  fetcher={fetcher}\n                  fieldName={\"icon\"}\n                  // maxUpload={5}\n                  onUploading={setUploading}\n                  onErrorFileTooLarge={handleFileTooLarge}\n                >\n                  <Space size={5} style={{ cursor: \"pointer\" }}>\n                    <EditOutlined style={{ color: \"#8263ea\" }} />\n                    <Text>{t(\"change\")}</Text>\n                  </Space>\n                </FileUploader>\n              </Col>\n            </Row>\n          </Form.Item>\n\n          <Form.Item\n            key=\"title\"\n            name=\"title\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input experience title\"),\n              },\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"experience title\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n        </Flex>\n        <Space direction=\"vertical\" style={{ display: \"flex\" }}>\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onCancel}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={() => form.submit()}>\n                {action === \"create\"\n                  ? t(\"create experience\")\n                  : t(\"edit experience\")}\n              </TiltButton>\n            </Col>\n          </Row>\n          {initialValues && (\n            <TiltButton color=\"danger\" onClick={handleDeleteExperienceTitle}>\n              {t(\"delete experience title\")}\n            </TiltButton>\n          )}\n        </Space>\n      </Form>\n      {contextHolder}\n      {contextHolder2}\n    </div>\n  );\n}\n", "import {\n  useFetcher,\n  useLoaderData,\n  useNavigation,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { json, redirect } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { Card, Form } from \"antd\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { TournamentForm } from \"~/components/pages/Tournament/TournamentForm\";\nimport { flattenObject, unflattenObject } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  let games: any[] = [];\n  try {\n    const gameRes = await APIServer.clientFromSession().request(\n      APIServer.getGames()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n  return json({ games });\n};\n\nexport const action: ActionFunction = async ({ params, request }) => {\n  const { id } = params;\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  // const entries = Object.fromEntries(formdata) as any;\n  const data = formdata.get(\"data\") as any;\n  const toSubmitData = JSON.parse(data);\n  let tournament: any = null;\n  if (id) {\n    try {\n      const tournamentRes = await APIServer.clientFromSession(session).request(\n        APIServer.updateTournament(toSubmitData, Number(id))\n      );\n      if (tournamentRes && tournamentRes.data) {\n        tournament = tournamentRes.data;\n      }\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `successfully update tournament`,\n      });\n    } catch (e: any) {\n      console.log(\"error from edit\", e.response.data.message);\n\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: e.response.data.message.data,\n      });\n    }\n    if (tournament) {\n      return redirect(`/tournaments/${tournament.id}`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    } else {\n      return json({ success: false });\n    }\n  } else {\n    return json({ success: false });\n  }\n};\n\nexport default function TournamentEdit() {\n  const { t } = useTranslation();\n  const { games } = useLoaderData();\n  const routeLoader = useRouteLoaderData(\"routes/_app.tournaments.$id\");\n  const { tournament } = routeLoader;\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  const navigation = useNavigation();\n\n  const handleEditTournament = (values: any) => {\n    if (values.isOnline) {\n      const { finalRoundLocation, finalRoundLocationEn, ...value } = values;\n      submit(\n        {\n          data: JSON.stringify(\n            unflattenObject({\n              ...value,\n            })\n          ),\n        },\n        { method: \"post\" }\n      );\n    } else {\n      const { playerCount, additionalPlayerCount, ...rest } = values;\n      submit(\n        {\n          data: JSON.stringify(\n            unflattenObject({\n              ...rest,\n              playerCount: Number(playerCount),\n              additionalPlayerCount: Number(additionalPlayerCount),\n            })\n          ),\n        },\n        { method: \"post\" }\n      );\n    }\n  };\n\n  return (\n    <Card\n      style={{\n        borderRadius: 12,\n        maxWidth: 800,\n        marginInline: \"auto\",\n      }}\n      bodyStyle={{ padding: 30 }}\n    >\n      <Form\n        form={form}\n        onFinish={handleEditTournament}\n        layout=\"vertical\"\n        initialValues={flattenObject(tournament)}\n        scrollToFirstError\n      >\n        <TournamentForm\n          fetcher={fetcher}\n          form={form}\n          games={games}\n          initialAdditionalLength={\n            tournament &&\n            tournament.requirementFields &&\n            tournament.requirementFields.length\n          }\n          prizeInitialAdditionalLength={\n            tournament && tournament.prize && tournament.prize.length\n          }\n          loading={navigation.state !== \"idle\"}\n          submitLabel={t(\"submit\")}\n          edit={true}\n        />\n      </Form>\n    </Card>\n  );\n}\n", "import { useCallback } from \"react\";\nimport { useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { redirect, type LoaderFunction } from \"@remix-run/node\";\nimport { useTranslation } from \"react-i18next\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport { Card, Col, Empty, Flex, Row, Space } from \"antd\";\nimport { BellOutlined } from \"@ant-design/icons\";\nimport { Pagination, TiltMenus, dummyNotifications } from \"~/components/common\";\nimport { AffixMenu } from \"~/components/layouts\";\nimport { getSessionFromRequest, mustAuthenticated } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { UserNotificationEntry } from \"~/components/pages/User/UserNotificationEntry\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  const me = session.get(\"me\");\n  const { uuid } = params;\n\n  if (\n    !me ||\n    !me.uuid ||\n    (`${me.uuid}` !== `${uuid}` && `${me?.userName}` !== `${uuid}`)\n  ) {\n    return redirect(\"/\");\n  }\n\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  // let unreadNotificationsCount = 0;\n  let notifications: any = null;\n  try {\n    // const resUnreadNoti = await APIServer.clientFromSession(session).request(\n    //   APIServer.getUnreadNotificationsCount()\n    // );\n    // if (resUnreadNoti.data) {\n    //   unreadNotificationsCount = resUnreadNoti.data.count;\n    // }\n    const notificationRes = await APIServer.clientFromSession(session).request(\n      APIServer.getNotifications(searchParams)\n    );\n    if (notificationRes.data) {\n      notifications = notificationRes.data;\n    }\n\n    await APIServer.clientFromSession(session).request(\n      APIServer.readAllNotifications()\n    );\n  } catch (e) {\n    notifications = dummyNotifications; // FIXME: remove this out\n    console.log(\"e\", e);\n  }\n  return {\n    notifications,\n    // unreadNotificationsCount,\n    searchParams,\n    uuid,\n  };\n};\n\nexport default function UserMessagesIndex() {\n  const { t } = useTranslation();\n  const { notifications, searchParams, uuid } = useLoaderData();\n  const submit = useSubmit();\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  return (\n    <Row gutter={[20, 0]}>\n      <Col span={24} md={6}>\n        <AffixMenu direction=\"vertical\" offsetTop={20}>\n          <Flex gap={20} vertical>\n            <TiltMenus\n              direction=\"vertical\"\n              menus={[\n                {\n                  link: `/users/${uuid}/messages`,\n                  level: 3,\n                  label: (\n                    <Space size={10}>\n                      {/* <Badge count={unreadNotificationsCount}> */}\n                      <BellOutlined />\n                      {/* </Badge> */}\n                      {t(\"all notifications\")}\n                    </Space>\n                  ),\n                },\n              ]}\n            />\n          </Flex>\n        </AffixMenu>\n      </Col>\n      <Col span={24} md={18}>\n        {notifications &&\n        notifications.items &&\n        notifications.items.length > 0 ? (\n          <>\n            <Flex vertical gap={20}>\n              {notifications.items.map((item: any) => (\n                <UserNotificationEntry data={item} key={item.id} />\n              ))}\n            </Flex>\n            {notifications.totalPages > 1 && (\n              <Pagination\n                currentPage={notifications.page}\n                totalPages={notifications.totalPages}\n                onPageClicked={handleChangePage}\n              />\n            )}\n          </>\n        ) : (\n          <Card>\n            <Empty description={t(\"no notifications\")} />\n          </Card>\n        )}\n      </Col>\n    </Row>\n  );\n}\n", "import React, { useContext } from \"react\";\nimport { Affix, theme } from \"antd\";\nimport { AppContext } from \"~/contexts\";\ninterface AffixMenuProps {\n  children?: any;\n  direction?: \"vertical\" | \"horizontal\";\n  offsetTop?: number;\n}\n\nconst { useToken } = theme;\n\nexport const AffixMenu: React.FC<AffixMenuProps> = (props: AffixMenuProps) => {\n  const { children, direction, offsetTop } = props;\n  const { token } = useToken();\n  const { scheme } = useContext(AppContext);\n\n  return (\n    <Affix offsetTop={offsetTop ? offsetTop : 64}>\n      <div\n        style={{\n          maxWidth: \"100%\",\n          overflowX: \"auto\",\n          overflowY: \"hidden\",\n          backgroundColor: token.colorBgLayout,\n          paddingTop: direction === \"vertical\" ? 0 : 30,\n          paddingBottom: 30,\n          marginBottom: direction === \"vertical\" ? 0 : 30,\n          borderBottom:\n            direction === \"vertical\"\n              ? \"none\"\n              : `1px solid  ${scheme === \"dark\" ? \"#3e3e3e\" : \"#dfdfdf\"}`,\n        }}\n      >\n        {children}\n      </div>\n    </Affix>\n  );\n};\n", "import * as React from \"react\";\nimport { Layout } from \"antd\";\nimport { Navbar, LayoutFooter } from \".\";\nconst { Content } = Layout;\ninterface LayoutDashboardProps {\n  children?: any;\n}\n\nexport const LayoutDashboard: React.FC<LayoutDashboardProps> = (\n  props: LayoutDashboardProps\n) => {\n  const { children } = props;\n\n  return (\n    <Layout style={{ minHeight: \"100vh\", paddingTop: 64, overflowX: \"hidden\" }}>\n      <Navbar />\n      <Content style={{ position: \"relative\" }}>{children}</Content>\n      <LayoutFooter />\n    </Layout>\n  );\n};\n", "import React, { useContext } from \"react\";\nimport { Col, Image, Layout, Row, Space, theme, Typography } from \"antd\";\nimport { AppContext } from \"~/contexts\";\nimport { Link } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Media } from \"../common\";\nconst { Text } = Typography;\nconst { useToken } = theme;\nconst { Footer } = Layout;\n\nexport const LayoutFooter: React.FC<{}> = () => {\n  const { scheme } = useContext(AppContext);\n  const { token } = useToken();\n  const { t } = useTranslation();\n\n  const footerTopPart = (\n    direction: \"horizontal\" | \"vertical\",\n    space: number\n  ) => {\n    return (\n      <Space size={space} direction={direction}>\n        <Image\n          preview={false}\n          src={`/image/logo-with-text-${scheme}.png`}\n          width={150}\n          wrapperStyle={\n            direction === \"vertical\"\n              ? { marginBottom: 30 }\n              : { marginRight: 50 }\n          }\n        />\n        <Link to=\"/\">\n          <Text style={{ fontSize: \"1.2em\" }}>{t(\"home\")}</Text>\n        </Link>\n        <Link to=\"/about\">\n          <Text style={{ fontSize: \"1.2em\" }}>{t(\"about\")}</Text>\n        </Link>\n        <Link to=\"/contact\">\n          <Text style={{ fontSize: \"1.2em\" }}>{t(\"contact\")}</Text>\n        </Link>\n        <Link to=\"/feedback\">\n          <Text style={{ fontSize: \"1.2em\" }}>{t(\"feedback\")}</Text>\n        </Link>\n      </Space>\n    );\n  };\n\n  return (\n    <Footer\n      style={{\n        padding: \"40px 0 0\",\n        backgroundColor: token.colorBgContainer,\n        zIndex: 11,\n      }}\n    >\n      <Space\n        direction=\"vertical\"\n        size={30}\n        style={{\n          display: \"flex\",\n          paddingInline: \"3.5%\",\n          maxWidth: 1440,\n          marginInline: \"auto\",\n          paddingBottom: 20,\n        }}\n      >\n        <Media greaterThan=\"sm\">{footerTopPart(\"horizontal\", 40)}</Media>\n        <Media at=\"sm\">{footerTopPart(\"vertical\", 20)}</Media>\n        <Row gutter={[15, 15]}>\n          <Col xs={24} flex=\"auto\">\n            <Text>\u00A9 CTRL G</Text>\n          </Col>\n          <Col xs={24} flex=\"none\">\n            <Media greaterThan=\"sm\">\n              <Space size={20}>\n                <a href=\"/privacy-policies\" target=\"_blank\">\n                  <Text>{t(\"privacy\")}</Text>\n                </a>\n                <a href=\"/terms-of-service\" target=\"_blank\">\n                  <Text>{t(\"terms\")}</Text>\n                </a>\n              </Space>\n            </Media>\n            <Media at=\"sm\">\n              <Space size={20}>\n                <a href=\"/privacy-policies\" target=\"_blank\">\n                  <Text style={{ fontSize: \"0.8em\" }}>{t(\"privacy\")}</Text>\n                </a>\n                <a href=\"/terms-of-service\" target=\"_blank\">\n                  <Text style={{ fontSize: \"0.8em\" }}>{t(\"terms\")}</Text>\n                </a>\n              </Space>\n            </Media>\n          </Col>\n        </Row>\n      </Space>\n      <Row>\n        <Col span={24} md={16} />\n        <Col span={24} md={8}>\n          <div\n            style={{\n              height: 20,\n              width: \"100%\",\n              backgroundImage: \"url('/image/stripe.png')\",\n            }}\n          />\n        </Col>\n      </Row>\n    </Footer>\n  );\n};\n", "import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Link, useFetcher, useMatches, useNavigate } from \"@remix-run/react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Divider,\n  Drawer,\n  Empty,\n  Image,\n  Input,\n  Layout,\n  List,\n  Row,\n  Skeleton,\n  Space,\n  Typography,\n  theme,\n} from \"antd\";\nimport {\n  MenuFoldOutlined,\n  SearchOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\nimport { Media, Menus, TiltButton, TiltMenus } from \"../common\";\nimport { useTranslation } from \"react-i18next\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { NavbarDropdown, NavbarMobileContent } from \"./\";\nimport { NotifcationIcon } from \"../common/NotificationIcon\";\nimport { debounce, isEmpty, isNil, omitBy } from \"lodash\";\nimport { Search } from \"lucide-react\";\nconst { useToken } = theme;\nconst { Header } = Layout;\n\nexport const Navbar: React.FC = () => {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const matches = useMatches();\n  const { scheme } = useContext(AppContext);\n  const { token } = useToken();\n  const navigate = useNavigate();\n  const { cdnUrl, notificationInterval } = matches[0].data;\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [mobileCollapsed, setMobileCollapsed] = useState<boolean>(false);\n  const [searchResults, setSearchResults] = useState<any>();\n  const [searchResultsList, setSearchResultsList] = useState<any[]>([]);\n  const [searchParams, setSearchParams] = useState<any>({});\n  const [notiCount, setNotiCount] = useState(0);\n  const [hasInterval, setHasInterval] = useState<any>(null);\n  const [openSearch, setOpenSearch] = useState<boolean>(false);\n  const [mouseOverList, setMouseOverList] = useState(false);\n  const [canOpenSearch, setCanOpenSearch] = useState<boolean>(true);\n  // const [loading, setLoading] = useState(false);\n  const { centerMenus, dropdownMenus, mobileMenus } = Menus();\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const tiltButtonStyle = {\n    paddingInline: 15,\n    height: 39.6,\n    lineHeight: \"39.6px\",\n    paddingBlock: 0,\n    marginTop: \"2px\",\n  };\n\n  const searchCardStyle = {\n    height: 54,\n    width: screenSize === \"greaterThanSM\" ? \"40%\" : \"70%\",\n    marginTop: screenSize === \"greaterThanSM\" ? 10 : 120,\n    borderRadius: 5,\n    boxShadow: \"none\",\n    overflow: \"visible\",\n    zIndex: 1,\n    color: \"#white\",\n  };\n  const searchCardBodyStyle = {\n    padding: 5,\n    backgroundColor: scheme === \"dark\" ? \"#121212\" : \"#FFFFFF\",\n    borderRadius: 10,\n    // boxShadow:\n    //   scheme === \"dark\"\n    //     ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n    //     : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n\n    overflow: \"hidden\",\n  };\n\n  const handleOpenSearch = () => {\n    if (canOpenSearch) {\n      setOpenSearch(true);\n    }\n  };\n\n  const handleCloseSearch = () => {\n    console.log(\"close search\");\n    if (!mouseOverList) {\n      // Handle closing the search only if mouse is not over the list\n      setOpenSearch(false);\n    }\n    setCanOpenSearch(false);\n    // After 0.5 seconds, set the flag back to true to allow reopening\n    setTimeout(() => {\n      setCanOpenSearch(true);\n    }, 500);\n    // If mouse is over the list, do nothing\n  };\n  const handleSearch = useCallback((e: any) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    const searchString = e.target.value;\n    let newSearchParams = { ...searchParams };\n    if (searchString.length > 0) {\n      newSearchParams.userName = searchString;\n    } else {\n      delete newSearchParams[\"userName\"];\n    }\n    // submit(\n    //   omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n    //   { method: \"get\", preventScrollReset: true }\n    // );\n    fetcher.submit(\n      // Data to submit\n      omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n      // Options object\n      {\n        method: \"get\",\n        preventScrollReset: true,\n        action: \"/resources/searchUser\",\n      }\n    );\n  }, []);\n\n  /*   const handleLoadMore = useCallback(() => {\n    const newSearchParams = {\n      ...searchParams,\n      offset: searchResultsList.length,\n    };\n    const queryString = new URLSearchParams(\n      omitBy(newSearchParams, isNil)\n    ).toString();\n\n    fetcher.load(`.?${queryString}`);\n  }, [searchResultsList, searchParams]); */\n\n  const handleLoadMore = () => {\n    console.log(\"loadmore\");\n  };\n\n  const handleDebounceSearch = useMemo(\n    () => debounce(handleSearch, 500),\n    [handleSearch]\n  );\n\n  const handleCloseSearchForce = () => {\n    setOpenSearch(false);\n  };\n\n  const handleOpenCollapsed = () => {\n    setMobileCollapsed(true);\n  };\n\n  const handleCloseCollapsed = () => {\n    setMobileCollapsed(false);\n  };\n\n  const getUnreadNoti = () => {\n    if (navigator.onLine) {\n      fetcher.load(`/resources/get-unread-notification`);\n    }\n  };\n\n  const loadMoreData = () => {\n    console.log(\"loadmore data\");\n\n    // const newSearchParams = {\n    //   ...searchParams,\n    //   offset: searchResultsList.length,\n    // };\n\n    // // submit(\n    // //   omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n    // //   { method: \"get\", preventScrollReset: true }\n    // // );\n    // fetcher.submit(\n    //   // Data to submit\n    //   omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n    //   // Options object\n    //   {\n    //     method: \"get\",\n    //     preventScrollReset: true,\n    //     action: \"/resources/searchUser\",\n    //   }\n    // );\n  };\n\n  useEffect(() => {\n    if (user) {\n      if (!hasInterval) {\n        getUnreadNoti();\n        const intervalId = setInterval(() => {\n          if (document.visibilityState === \"visible\") {\n            getUnreadNoti();\n          }\n        }, notificationInterval * 1000);\n        setHasInterval(intervalId);\n        const resetInterval = setTimeout(() => {\n          clearInterval(intervalId);\n          clearTimeout(resetInterval);\n        }, 6 * 3600 * 1000); // to reset interval once time passed by 6 hours\n      }\n    } else if (hasInterval) {\n      clearInterval(hasInterval);\n      setHasInterval(null);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (\n      fetcher.data &&\n      fetcher.data.searchUserResult &&\n      fetcher.data.searchParams &&\n      fetcher.data.loadMore === false\n    ) {\n      setSearchParams(fetcher.data.searchParams);\n      console.log(\n        \"...fetcher.data.searchUserResult?.items\",\n        ...fetcher.data.searchUserResult?.items\n      );\n      setSearchResults(fetcher.data.searchUserResult);\n\n      setSearchResultsList(\n        fetcher.data.searchUserResult?.items &&\n          fetcher.data.searchUserResult?.items.length\n          ? [...fetcher.data.searchUserResult?.items]\n          : []\n      );\n    } else if (\n      fetcher.data &&\n      fetcher.data.searchUserResult &&\n      fetcher.data.loadMore\n    ) {\n      setSearchResults(fetcher.data.searchUserResult);\n      setSearchResultsList([\n        ...searchResultsList,\n        ...fetcher.data.searchUserResult.items,\n      ]);\n    }\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      fetcher.data.unreadCount\n    ) {\n      setNotiCount(fetcher.data.unreadCount);\n    }\n  }, [fetcher]);\n\n  return (\n    <Header\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        paddingInline: 0,\n        zIndex: 999,\n      }}\n    >\n      <Row\n        align=\"middle\"\n        style={{\n          position: \"relative\",\n          paddingInline: \"3.5%\",\n          maxWidth: 1440,\n          marginInline: \"auto\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {openSearch ? (\n            <Card\n              bordered={false}\n              bodyStyle={searchCardBodyStyle}\n              style={searchCardStyle}\n              onMouseEnter={() => setMouseOverList(true)} // Set mouseOverList to true when mouse enters list\n              onMouseLeave={() => setMouseOverList(false)} // Set mouseOverList to false when mouse leaves list\n            >\n              <div\n                className={\n                  scheme === \"dark\"\n                    ? \"search-input-user-dark\"\n                    : \"search-input-user-light\"\n                }\n              >\n                <Input\n                  autoFocus\n                  bordered={false}\n                  onBlur={handleCloseSearch}\n                  prefix={\n                    <Search\n                      // className=\"site-form-item-icon\"\n                      style={{\n                        fontSize: 20,\n                        paddingRight: 10,\n                        width: \"100%\",\n                        color: scheme === \"dark\" ? \"#fff\" : \"#000\",\n                      }}\n                    />\n                  }\n                  defaultValue={\n                    searchParams && searchParams.name ? searchParams.name : \"\"\n                  }\n                  onChange={handleDebounceSearch}\n                />\n              </div>\n\n              <div\n                id=\"scrollableDiv\"\n                style={{ maxHeight: \"400px\", overflowY: \"auto\" }}\n              >\n                {searchParams.name && (\n                  <InfiniteScroll\n                    dataLength={searchResultsList.length}\n                    next={loadMoreData}\n                    hasMore={searchResultsList.length < searchResults?.total}\n                    loader={\n                      <Skeleton\n                        avatar\n                        paragraph={{\n                          rows: 1,\n                        }}\n                        active\n                      />\n                    }\n                    // endMessage={\n                    //   searchResultsList.length > 0 ? (\n                    //     <Divider plain>\n                    //       {t(\"It is all, nothing more\")} \uD83E\uDD10\n                    //     </Divider>\n                    //   ) : null\n                    // }\n                    scrollableTarget=\"scrollableDiv\"\n                  >\n                    {searchResultsList.length ? (\n                      <List\n                        style={{ marginTop: 10 }} // Adjust margin top as needed\n                        bordered={false}\n                        dataSource={searchResultsList}\n                        renderItem={(item: any) => (\n                          <List.Item>\n                            <Space onMouseDown={(e) => e.stopPropagation()}>\n                              <div\n                                style={{\n                                  position: \"relative\", // Set position to relative for the parent div\n                                  padding: \"23.5px\",\n                                  backgroundImage: `url(${cdnUrl}/${item.assetFrame})`,\n                                  backgroundSize: \"cover\",\n                                  backgroundPosition: \"center\",\n                                  width: \"fit-content\", // Adjust the width to fit content\n                                  height: \"fit-content\", // Adjust the height to fit content\n                                  display: \"inline-block\", // Make the div behave as an inline-block\n                                  zIndex: 1,\n                                }}\n                              >\n                                {/* Position the Avatar inside the parent div */}\n                                <div\n                                  style={{\n                                    position: \"absolute\",\n                                    top: \"18.5%\",\n                                    left: \"18.5%\",\n                                  }}\n                                >\n                                  <Avatar\n                                    src={\n                                      // item && item.displayImage && cdnUrl\n                                      //   ? `${cdnUrl}/${item.displayImage}`\n                                      //   : \"/image/user-placeholder.png\"\n                                      `${cdnUrl}/${item.displayImage}`\n                                    }\n                                    size={30}\n                                  />\n                                </div>\n                              </div>\n                              <Typography.Title\n                                level={5}\n                                style={{\n                                  fontSize: \"15px\",\n                                  cursor: \"pointer\",\n                                }}\n                                onClick={() => {\n                                  setMouseOverList(false);\n                                  handleCloseSearchForce();\n                                  navigate(\n                                    `/users/${\n                                      item?.userName ? item.userName : item.uuid\n                                    }`\n                                  );\n                                }}\n                              >\n                                {item.displayName}\n                              </Typography.Title>\n                            </Space>\n                          </List.Item>\n                        )}\n                      />\n                    ) : (\n                      <Empty\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                        description={t(\"no user\")}\n                      />\n                    )}\n                  </InfiniteScroll>\n                )}\n                {/* {searchResultsList &&\n                    searchResultsList.length < searchResults?.total && (\n                      <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>\n                        <Button onClick={handleLoadMore}>Load More</Button>\n                      </div>\n                    )} */}\n              </div>\n            </Card>\n          ) : null}\n          <Media greaterThan=\"sm\">\n            {openSearch ? null : (\n              <TiltMenus\n                position=\"center\"\n                menus={centerMenus}\n                style={{ position: \"relative\", zIndex: 1 }}\n              />\n            )}\n          </Media>\n        </div>\n        <Col flex=\"none\" md={5}>\n          <Link to=\"/\">\n            <Image\n              src=\"/image/logo.png\"\n              preview={false}\n              style={{ height: \"42px\", width: \"auto\" }}\n            />\n          </Link>\n        </Col>\n        <Col flex=\"auto\">\n          <Space\n            direction=\"horizontal\"\n            style={{ display: \"flex\", justifyContent: \"end\" }}\n            size={0}\n          >\n            <Avatar\n              size={40}\n              onClick={openSearch ? handleCloseSearch : handleOpenSearch}\n              style={{\n                backgroundColor:\n                  scheme === \"dark\" ? \"#221f20\" : token.colorBgLayout,\n                color: token.colorTextBase,\n                marginBottom: \"5px\",\n                cursor: \"pointer\",\n                marginRight: \"5px\",\n              }}\n            >\n              {openSearch ? <CloseOutlined /> : <Search />}\n            </Avatar>\n\n            {user && <NotifcationIcon count={notiCount} user={user} />}\n            <Media greaterThan=\"sm\">\n              {user ? (\n                <NavbarDropdown menus={dropdownMenus} />\n              ) : (\n                <Space\n                  size={5}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <NavbarDropdown menus={dropdownMenus} />\n                  <TiltButton\n                    color=\"primary\"\n                    style={tiltButtonStyle}\n                    onClick={() => openLoginModal()}\n                  >\n                    {t(\"connect account\")}\n                  </TiltButton>\n                </Space>\n              )}\n            </Media>\n            <Media at=\"sm\">\n              <Space\n                size={15}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                {user ? (\n                  // <div\n                  //   style={{\n                  //     padding: \"6px\",\n                  //     backgroundImage: `url(${cdnUrl}/${user.assetFrame})`,\n                  //     backgroundSize: \"cover\",\n                  //     backgroundPosition: \"center\",\n                  //   }}\n                  // >\n                  <Avatar\n                    size={40}\n                    onClick={handleOpenCollapsed}\n                    style={{ cursor: \"pointer\" }}\n                    src={\n                      user.displayImage\n                        ? `${cdnUrl}/${user.displayImage}`\n                        : \"/image/placeholder.png\"\n                    }\n                  />\n                ) : (\n                  // </div>\n                  <>\n                    <TiltButton\n                      color=\"primary\"\n                      style={tiltButtonStyle}\n                      onClick={() => openLoginModal()}\n                    >\n                      {t(\"connect account\")}\n                    </TiltButton>\n                    <MenuFoldOutlined\n                      onClick={handleOpenCollapsed}\n                      style={{ display: \"flex\", fontSize: 20 }}\n                    />\n                  </>\n                )}\n                <Drawer\n                  placement=\"right\"\n                  closable={false}\n                  onClose={handleCloseCollapsed}\n                  open={mobileCollapsed}\n                  width={300}\n                  styles={{ body: { padding: 0 } }}\n                >\n                  <NavbarMobileContent\n                    menus={[...mobileMenus, ...dropdownMenus]}\n                    onMenuClicked={handleCloseCollapsed}\n                  />\n                </Drawer>\n              </Space>\n            </Media>\n          </Space>\n        </Col>\n      </Row>\n    </Header>\n  );\n};\n", "import { Avatar, Badge, theme } from \"antd\";\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"~/contexts/AppContext\";\nimport { useLocation } from \"@remix-run/react\";\nimport { Mail } from \"lucide-react\";\nconst { useToken } = theme;\n\ninterface NotifcationIconProps {\n  count: number;\n  user: any;\n}\n\nexport function NotifcationIcon(props: NotifcationIconProps) {\n  const { count, user } = props;\n  const location = useLocation();\n  const { scheme } = useContext(AppContext);\n  const { token } = useToken();\n  const [notiCount, setNotiCount] = useState(count);\n  const regex = new RegExp(\"^/users/[^/]+/messages$\");\n\n  useEffect(() => {\n    setNotiCount(regex.test(location.pathname) ? 0 : count);\n  }, [count, location]);\n\n  return (\n    <a\n      style={{ display: \"flex\", marginRight: 10 }}\n      href={`/users/${user?.userName ? user.userName : user.uuid}/messages`}\n    >\n      <Badge count={notiCount}>\n        <Avatar\n          size={40}\n          style={{\n            backgroundColor:\n              scheme === \"dark\" ? \"#221f20\" : token.colorBgLayout,\n            color: token.colorTextBase,\n          }}\n          icon={<Mail />}\n        />\n      </Badge>\n    </a>\n  );\n}\n", "import { useContext } from \"react\";\nimport { Avatar, Dropdown, Flex, theme, Typography } from \"antd\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { TiltButton } from \"../common\";\n\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { useMatches } from \"@remix-run/react\";\nimport { Settings } from \"lucide-react\";\n\nconst { Text } = Typography;\nconst { useToken } = theme;\n\ninterface NavbarDropdownProps {\n  menus?: any[];\n}\n\nexport const NavbarDropdown: React.FC<NavbarDropdownProps> = (\n  props: NavbarDropdownProps\n) => {\n  const { menus } = props;\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n  const matches = useMatches();\n  const { token } = useToken();\n  const { cdnUrl } = matches[0].data;\n\n  return (\n    <Dropdown\n      menu={{ style: { width: 200 }, items: menus }}\n      trigger={[\"click\"]}\n    >\n      <div style={{ cursor: \"pointer\" }}>\n        {user ? (\n          <Flex gap={10} align=\"center\">\n            <Avatar\n              size={40}\n              src={\n                user.displayImage\n                  ? `${cdnUrl}/${user.displayImage}`\n                  : \"/image/placeholder.png\"\n              }\n            />\n            <Text\n              style={{\n                marginLeft: -25,\n                padding: \"5px 15px 5px 20px\",\n                borderTopRightRadius: 20,\n                borderBottomRightRadius: 20,\n                backgroundColor:\n                  scheme === \"dark\" ? \"#221f20\" : token.colorBgLayout,\n              }}\n            >\n              {user.displayName}\n            </Text>\n          </Flex>\n        ) : (\n          <TiltButton color=\"secondary-brand\">\n            <Settings style={{ display: \"flex\", fontSize: 20 }} />\n          </TiltButton>\n        )}\n      </div>\n    </Dropdown>\n  );\n};\n", "import * as React from \"react\";\nimport { Link, useLocation } from \"@remix-run/react\";\nimport { Image, Layout, Menu, Typography } from \"antd\";\nconst { Content, Footer, Header } = Layout;\nconst { Text } = Typography;\n\ninterface NavbarMobileContentProps {\n  menus?: any[];\n  onMenuClicked: () => void;\n}\n\nexport const NavbarMobileContent: React.FC<NavbarMobileContentProps> = (\n  props: NavbarMobileContentProps\n) => {\n  const location = useLocation();\n  const { menus, onMenuClicked } = props;\n\n  return (\n    <Layout style={{ height: \"100%\" }}>\n      <Header style={{ paddingInline: 30 }}>\n        <Link to=\"/\" style={{ marginBottom: 20 }}>\n          <Image width={100} src=\"/image/logo.png\" preview={false} />\n        </Link>\n      </Header>\n      <Content>\n        <Menu\n          selectedKeys={[location.pathname]}\n          mode=\"inline\"\n          style={{\n            border: \"none\",\n            paddingBlock: 0,\n          }}\n          items={menus}\n          onClick={onMenuClicked}\n        />\n      </Content>\n      <Footer style={{ paddingInline: 30, textAlign: \"center\" }}>\n        <Text style={{ fontSize: \"10px\", letterSpacing: \"3px\" }}>\n          {`v1.0.0`}\n        </Text>\n      </Footer>\n    </Layout>\n  );\n};\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useMatches, useNavigate, useFetcher } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { Avatar, Card, Col, Flex, Skeleton, Row, Typography } from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\n\nconst { Text } = Typography;\n\ninterface UserNotificationEntryProps {\n  data: any;\n}\n\nexport const UserNotificationEntry: React.FC<UserNotificationEntryProps> = (\n  props: UserNotificationEntryProps\n) => {\n  const { data } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [diff, setDiff] = useState<any>(null);\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n  const navigate = useNavigate();\n  const fetcher = useFetcher();\n\n  let cardStyle = {\n    cursor: \"pointer\",\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  const getProperTimeDifference = (date: any) => {\n    if (!date) return null;\n\n    const diffMonths = dayjs().diff(dayjs(date), \"month\");\n    if (diffMonths >= 12) {\n      return { unit: \"year\", value: dayjs().diff(dayjs(date), \"year\") };\n    } else if (diffMonths >= 1) {\n      return { unit: \"month\", value: diffMonths };\n    } else {\n      const diffDays = dayjs().diff(dayjs(date), \"day\");\n      if (diffDays >= 1) {\n        return { unit: \"day\", value: diffDays };\n      } else {\n        const diffHours = dayjs().diff(dayjs(date), \"hour\");\n        if (diffHours >= 1) {\n          return { unit: \"hour\", value: diffHours };\n        } else {\n          const diffMinutes = dayjs().diff(dayjs(date), \"minute\");\n          if (diffMinutes >= 1) {\n            return { unit: \"minute\", value: diffMinutes };\n          } else {\n            const diffSeconds = dayjs().diff(dayjs(date), \"second\");\n            return { unit: \"second\", value: diffSeconds };\n          }\n        }\n      }\n    }\n  };\n\n  const navigateToEntry = useCallback(async () => {\n    if (data.relateType === \"party\") {\n      navigate(\"/parties\");\n    }\n\n    if (\n      data.relateType === \"webboard\" &&\n      data.metadata.postId &&\n      data.metadata.commentId\n    ) {\n      try {\n        fetcher.load(\n          `/resources/comment-position?postId=${data.metadata.postId}&commentId=${data.metadata.commentId}`\n        );\n      } catch (error) {\n        console.error(\"get comment position error\", error);\n        navigate(`/webboards/${data.metadata.postId}`);\n      }\n    }\n\n    if (\n      data.relateType === \"tournament\" &&\n      data.metadata.tournament &&\n      data.metadata.tournament.id &&\n      data.metadata.tournament.deleteAt\n    ) {\n      navigate(`/tournaments`);\n    } else if (\n      data.relateType === \"tournament\" &&\n      data.metadata.tournament &&\n      data.metadata.tournament.id\n    ) {\n      navigate(`/tournaments/${data.metadata.tournament.id}`);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.state !== \"loading\") {\n      const page = fetcher.data.page;\n      const postId = data.metadata.postId;\n      const commentId = data.metadata.commentId;\n\n      if (postId && commentId) {\n        navigate(`/webboards/${postId}?page=${page}#comment-${commentId}`);\n      }\n    }\n  }, [fetcher.data, fetcher.state, data, navigate]);\n\n  useEffect(() => {\n    if (data.createdAt) {\n      setDiff(getProperTimeDifference(data.createdAt));\n    }\n  }, [data]);\n\n  const getNotificationMessage = (\n    context: string,\n    metadata: any,\n    fromUserDisplayName: any\n  ) => {\n    if (context === \"commentPost\") {\n      return `${fromUserDisplayName ? fromUserDisplayName : \"\"} ${t(\n        \"notification:has commented on your post\"\n      )}`;\n    }\n\n    if (context === \"teamTournamentRemove\") {\n      return `${t(\"notification:Your team\")} ${metadata.team.name || \"\"} ${t(\n        \"notification:that has been approved to join\"\n      )} ${metadata.tournament.name || \"\"} ${t(\n        \"notification:tournament has been removed because\"\n      )} ${metadata.team.remark || \"\"}`;\n    }\n\n    if (context === \"commentReply\") {\n      return `${fromUserDisplayName ? fromUserDisplayName : \"\"} ${t(\n        \"notification:has replied to your comment\"\n      )}`;\n    }\n\n    if (context === \"partyRequest\") {\n      return `${fromUserDisplayName ? fromUserDisplayName : \"\"} ${t(\n        \"notification:has sent a request to join your party\"\n      )}`;\n    }\n\n    if (context === \"partyReady\") {\n      return `${t(\n        `notification:Your Party is ready! start gaming by adding friend's username`\n      )}`;\n    }\n\n    if (context === \"partyAccept\") {\n      return `${t(\"notification:Your request to join\")}  ${\n        metadata.partyName || \"\"\n      } ${t(\"notification:party has been accepted\")}`;\n    }\n\n    if (context === \"partyReject\") {\n      return `${t(\"notification:Your request to join\")}  ${\n        metadata.partyName || \"\"\n      } ${t(\"notification:party has been rejected\")}`;\n    }\n\n    if (context === \"teamTournamentApproval\") {\n      return `${t(\"notification:Your team\")} ${metadata.team.name || \"\"} ${t(\n        \"notification:has been approved to join\"\n      )} ${metadata.tournament.name || \"\"} ${t(\"notification:tournament\")}`;\n    }\n\n    if (context === \"teamTournamentRejection\") {\n      return `${t(\"notification:Your team\")} ${metadata.team.name || \"\"} ${t(\n        \"notification:request to join\"\n      )} ${metadata.tournament.name || \"\"} ${t(\n        \"notification:tournament has been rejected because\"\n      )} ${metadata.team.remark || \"\"}`;\n    }\n\n    if (context === \"orgTournamentApproval\") {\n      return `${t(\"notification:Your tournament\")}  ${metadata.name || \"\"} ${t(\n        \"notification:has been approved\"\n      )}`;\n    }\n\n    if (context === \"orgTournamentRejection\") {\n      return `${t(\"notification:Your tournament\")}  ${metadata.name || \"\"} ${t(\n        \"notification:has been rejected because\"\n      )} ${metadata.team.remark || \"\"}`;\n    }\n\n    return \"no data\";\n  };\n\n  return (\n    <Card\n      key={data.id}\n      style={cardStyle}\n      bodyStyle={{ padding: 15 }}\n      onClick={navigateToEntry}\n    >\n      <Row wrap={false} gutter={15} style={{ alignItems: \"flex-start\" }}>\n        <Col flex=\"none\">\n          <Avatar\n            size={50}\n            src={\n              data.fromUser && data.fromUser.displayImage\n                ? `${cdnUrl}/${data.fromUser.displayImage}`\n                : user.displayImage\n                ? `${cdnUrl}/${user.displayImage}`\n                : \"image/placeholder.png\"\n            }\n          />\n        </Col>\n        <Col flex=\"auto\">\n          <Flex vertical gap={5}>\n            <Flex justify=\"space-between\" align=\"flex-start\">\n              <Text>\n                {getNotificationMessage(\n                  data.context,\n                  data.metadata,\n                  data.fromUser?.displayName\n                )}\n              </Text>\n              <Flex>\n                {diff ? (\n                  <Text>{`${diff.value} ${t(`${diff.unit}s ago`)}`}</Text>\n                ) : (\n                  <Skeleton\n                    paragraph={{ width: 50, rows: 1, style: { margin: 0 } }}\n                    title={false}\n                    active\n                  />\n                )}\n              </Flex>\n            </Flex>\n          </Flex>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigate,\n  useNavigation,\n  useRevalidator,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Element, scroller } from \"react-scroll\";\nimport { Affix, Card, Col, notification, Row, Skeleton } from \"antd\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport {\n  BackButton,\n  IndexFilter,\n  KycWizard,\n  Media,\n  Pagination,\n} from \"~/components/common\";\nimport {\n  WebboardSingleCommentBox,\n  WebboardSingleComments,\n  WebboardSinglePost,\n  WebboardTags,\n} from \"~/components/pages/Webboard\";\nimport * as APIServer from \"~/api\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  const { id } = params;\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  const backToIndex = session.get(\"backToIndex\");\n  const me = session.get(\"me\");\n  let comments: any = null;\n  let commentRes: any;\n\n  if (id) {\n    try {\n      if (me) {\n        commentRes = await APIServer.clientFromSession(session).request(\n          APIServer.getCommentsFromWebboardId(id, searchParams)\n        );\n      } else {\n        commentRes = await APIServer.clientFromSession().request(\n          APIServer.getCommentsFromWebboardId(id, searchParams)\n        );\n      }\n\n      if (commentRes && commentRes.data) {\n        comments = commentRes.data;\n      }\n    } catch (e) {\n      console.log(\"webboard single comment error\", e);\n    }\n  }\n\n  await commitSession(session);\n  return json({ id, backToIndex, comments, searchParams });\n};\n\nexport default function WebboardSingle() {\n  const webboardRouteLoader = useRouteLoaderData(\"routes/_app.webboards\");\n  const routeLoader = useRouteLoaderData(\"routes/_app.webboards.$id\");\n  const { id, backToIndex, comments, searchParams } = useLoaderData();\n  const { t } = useTranslation();\n  const navigation = useNavigation();\n  const submit = useSubmit();\n  const navigate = useNavigate();\n  const fetcher = useFetcher();\n  const location = useLocation();\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n  const revalidator = useRevalidator();\n  const { webboard } = routeLoader;\n  const { games, rooms, reactionOptions, tags } = webboardRouteLoader;\n  const [api, contextHolder] = notification.useNotification();\n  const [quotedComment, setQuotedComment] = useState<any>(null);\n  const isBuySell =\n    webboard &&\n    webboard.postRooms.find((r: any) => r.room.nameEn === \"buy sell\");\n\n  const filters = [\n    {\n      type: \"tilt-button\",\n      name: \"rooms\",\n      title: t(\"select room\"),\n      options: rooms.map((room: any) => ({\n        label: t(room.nameEn),\n        value: room.id,\n      })),\n    },\n    {\n      type: \"avatar\",\n      name: \"games\",\n      title: t(\"select game\"),\n      options: games.map((game: any) => ({\n        label: game.name,\n        value: game.id,\n        image: game.iconUrl,\n      })),\n    },\n  ];\n\n  const navigateToIndex = (name: string, value: string | number) => {\n    navigate(`/webboards?${name}=${value}`);\n  };\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n\n      const searchParamsString = new URLSearchParams(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v))\n      ).toString();\n\n      const pathWithoutHash = `${location.pathname}?${searchParamsString}`;\n\n      // submit(\n      //   omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n      //   { method: \"get\", preventScrollReset: true }\n      // );\n\n      navigate(pathWithoutHash, { preventScrollReset: true });\n    },\n    [searchParams, submit]\n  );\n\n  const handleReplyComment = (comment: any) => {\n    setQuotedComment(comment);\n    scroller.scrollTo(\"comment-box\", {\n      duration: 1000,\n      delay: 100,\n      smooth: true,\n      offset: -80,\n    });\n  };\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (\n        fetcher.data.success &&\n        fetcher.data.success === \"create-comment\" &&\n        `${fetcher.data.webboardId}` === `${id}`\n      ) {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        setQuotedComment(null);\n        api.open({\n          message: t(\"Successfully commented\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, id, revalidator]);\n\n  useEffect(() => {\n    if (location.hash && location.hash.length > 0) {\n      let commentId: string = \"\";\n      commentId = location.hash.replace(\"#comment-\", \"comment-\");\n      if (commentId.length > 0) {\n        scroller.scrollTo(commentId, {\n          duration: 1000,\n          delay: 100,\n          smooth: true,\n          offset: -80,\n        });\n        // setTimeout(() => {\n        //   navigate(location.pathname, { preventScrollReset: true });\n        // }, 3000);\n      }\n    }\n  }, [location]);\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Row gutter={[30, 10]}>\n        <Col span={24} md={{ span: 6, order: 0 }}>\n          <Affix offsetTop={80}>\n            <div\n              className=\"hide-scrollbar\"\n              style={{\n                maxHeight: \"calc(100vh - 60px)\",\n                overflowY: \"auto\",\n              }}\n            >\n              <IndexFilter\n                // alwaysActive\n                onFilterClicked={navigateToIndex}\n                filters={filters}\n                mobileAppendChildren={\n                  <WebboardTags data={tags} fetcher={fetcher} mobileStyle />\n                }\n              />\n            </div>\n          </Affix>\n        </Col>\n        <Col span={24} md={{ span: 6, order: 2 }}>\n          <Media greaterThan=\"sm\">\n            <Affix offsetTop={80}>\n              <div>\n                <WebboardTags data={tags} fetcher={fetcher} />\n              </div>\n            </Affix>\n          </Media>\n        </Col>\n        <Col span={24} md={{ span: 12, order: 1 }}>\n          <BackButton\n            // navigateTo={backToIndex ? -2 : null}\n            navigateTo={backToIndex ? -2 : \"/webboards\"}\n            fallbackUrl=\"/webboards\"\n          />\n          <WebboardSinglePost\n            data={webboard}\n            fetcher={fetcher}\n            reactionOptions={reactionOptions}\n          />\n          {navigation.state === \"loading\" &&\n          navigation.location.pathname === location.pathname ? (\n            <Card>\n              <Skeleton active />\n            </Card>\n          ) : comments.items.length > 0 ? (\n            <WebboardSingleComments\n              data={comments.items}\n              fetcher={fetcher}\n              reactionOptions={reactionOptions}\n              onReplyComment={handleReplyComment}\n            />\n          ) : (\n            <></>\n          )}\n          {user && (\n            <Element name=\"comment-box\">\n              <Card\n                bordered={false}\n                style={{\n                  marginBottom: 20,\n                  borderRadius: 10,\n                  boxShadow:\n                    scheme === \"dark\"\n                      ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n                      : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n                }}\n              >\n                {!user.kycLevel && isBuySell ? (\n                  <KycWizard />\n                ) : (\n                  <WebboardSingleCommentBox\n                    disabled={revalidator.state !== \"idle\"}\n                    fetcher={fetcher}\n                    postId={id}\n                    refComment={quotedComment}\n                  />\n                )}\n              </Card>\n            </Element>\n          )}\n          {comments.totalPages > 1 && (\n            <Pagination\n              currentPage={comments.page}\n              totalPages={comments.totalPages}\n              onPageClicked={handleChangePage}\n            />\n          )}\n        </Col>\n      </Row>\n      {contextHolder}\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { parseAndConvert } from \"~/utils/helper\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n  const toSubmitData = parseAndConvert(JSON.parse(data));\n  let webboard: any = null;\n\n  try {\n    const webboardRes = await APIServer.clientFromSession(session).request(\n      APIServer.createWebboard(toSubmitData)\n    );\n    if (webboardRes && webboardRes.data) {\n      webboard = webboardRes.data;\n    }\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully create webboard`,\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.errors && e.errors.length > 1 ? e.errors[0] : e.response.data,\n    });\n  }\n  if (webboard) {\n    return redirect(`/webboards/${webboard.id}`, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  } else {\n    await commitSession(session);\n    return json({ success: false });\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  console.log(\"in action edit\");\n\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n  const experienceId = toSubmitData.id;\n\n  console.log(\"toSubmitData\", toSubmitData);\n\n  try {\n    const experienceRes = await APIServer.clientFromSession(session).request(\n      APIServer.editExperience(experienceId, toSubmitData)\n    );\n    // session.flash(\"flashMessage\", {\n    //   type: \"success\",\n    //   message: `successfully updated experience`,\n    // });\n    await commitSession(session);\n\n    return json({\n      success: \"update-experience\",\n      action: \"updated\",\n      experienceTitleId: experienceRes.data.experienceTitleId,\n    });\n  } catch (e: any) {\n    console.log(\"e\", e.response.data);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to updated experience\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-experience\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import { json, type ActionFunction } from \"@remix-run/node\";\n// import { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { getSessionFromRequest } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }: any) => {\n  let session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n\n  try {\n    const forgotPasswordRes = await APIServer.clientFromSession().request(\n      APIServer.forgotPassword({ email: email })\n    );\n    if (forgotPasswordRes) {\n      const forgotPasswordData = forgotPasswordRes.data;\n    }\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `reset password email has been sent, please return to ctrlg after reset success`,\n    });\n    return json({ sendForgotPassword: true });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data.message,\n    });\n    return json({ sendForgotPassword: true });\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.sortingProfile(toSubmitData)\n    );\n    const { data } = await APIServer.clientFromSession(session).request(\n      APIServer.me()\n    );\n    session.set(\"me\", data);\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully sorted profile`,\n    });\n    await commitSession(session);\n\n    // return redirect(`/users/${uuid}`, {\n    //   headers: {\n    //     \"Set-Cookie\": await commitSession(session),\n    //   },\n    // });\n    return json({\n      success: \"sort-my games\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to create profile\",\n    });\n    await commitSession(session);\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const postId = formData.get(\"postId\") as string;\n  const comment = formData.get(\"comment\") as string;\n  const toSubmitComment = JSON.parse(comment);\n\n  if (postId) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.createComment(postId, toSubmitComment)\n      );\n\n      // session.flash(\"flashMessage\", {\n      //   type: \"success\",\n      //   message: `Successfully commented`,\n      // });\n      // await commitSession(session);\n      return json({\n        success: \"create-comment\",\n        webboardId: postId,\n      });\n    } catch (e) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"comment failed\",\n      });\n      await commitSession(session);\n      return null;\n    }\n  }\n};\n", "import { json, type LoaderFunction } from '@remix-run/node';\nimport * as APIServer from '~/api';\nimport { getSessionFromRequest } from '~/session.server';\nimport { dummyPartyRequests } from '~/components/common';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let requests: any[] = dummyPartyRequests; // FIXME: change this to null\n  if (searchParams.partyId && searchParams.gameId) {\n    try {\n      const requestsRes = await APIServer.clientFromSession(session).request(\n        APIServer.getPartyRequests(searchParams.partyId, searchParams.gameId)\n      );\n      if (requestsRes.data) {\n        requests = requestsRes.data;\n      }\n    } catch (e) {}\n    return json({ requests, partyId: searchParams.partyId });\n  } else {\n    return null;\n  }\n};\n", "import { type LoaderFunction, json } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let searchUserResult: any;\n  let loadMore = false as boolean;\n\n  try {\n    const searchUserRes = await APIServer.clientFromSession().request(\n      APIServer.getSearchUser(searchParams)\n    );\n\n    if (searchUserRes.data) {\n      searchUserResult = searchUserRes.data;\n    }\n\n    // console.log(\"searchUserResult\", searchUserResult);\n  } catch (error: any) {\n    console.error(\"searchUserResult Error\", error.response.data);\n  }\n\n  if (searchParams.hasOwnProperty(\"offset\")) {\n    loadMore = true;\n    console.log(\"The object contains the 'offset' property.\");\n  } else {\n    loadMore = false;\n    console.log(\"The object does not contain the 'offset' property.\");\n  }\n\n  return json({ searchParams, searchUserResult, loadMore });\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.sortingAlbums(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully sorted album`,\n    });\n    await commitSession(session);\n\n    return json({\n      success: \"sort-album\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to create album\",\n    });\n    await commitSession(session);\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const commentId = formData.get(\"commentId\") as string;\n  const comment = formData.get(\"comment\") as string;\n  const toSubmitComment = JSON.parse(comment);\n  let updatedComment: any = null;\n\n  if (commentId) {\n    try {\n      const commentRes = await APIServer.clientFromSession(session).request(\n        APIServer.updateComment(commentId, toSubmitComment)\n      );\n      if (commentRes && commentRes.data) {\n        updatedComment = commentRes.data;\n      }\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully update comment`,\n      });\n      await commitSession(session);\n\n      return json({\n        success: \"update-comment\",\n        postId: commentId,\n        post: updatedComment,\n      });\n    } catch (e: any) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"update comment failed\",\n      });\n      await commitSession(session);\n      return null;\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport {\n  json,\n  unstable_createMemoryUploadHandler,\n  unstable_parseMultipartFormData,\n} from \"@remix-run/node\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { decode } from \"base64-arraybuffer\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const uploadHandler = unstable_createMemoryUploadHandler();\n  const formData = await unstable_parseMultipartFormData(\n    request,\n    uploadHandler\n  );\n\n  const submitData = Object.fromEntries(formData) as any;\n  const inputData = JSON.parse(submitData.inputData);\n  const imagesList = JSON.parse(submitData.imageList);\n  const field = formData.get(\"field\") as string;\n\n  console.log(\"inputData\", inputData);\n\n  // if (submitData.inputData) {\n  //   try {\n  //     const uploadPath = await APIServer.clientFromSession(session).request(\n  //       APIServer.generateUploadPathMultiple(JSON.parse(submitData.inputData))\n  //     );\n\n  //     const uploadPathData = uploadPath.data;\n\n  //     uploadPathData.forEach(async (pathItem: any, index: number) => {\n  //       const targetImage = imagesList.find(\n  //         (image: any) => image.uuid === pathItem.uuid\n  //       );\n\n  //       if (pathItem && pathItem.presignedUrl) {\n  //         console.log(\"before success\");\n\n  //         const uploadRes = await APIServer.uploadFile(\n  //           pathItem.type,\n  //           pathItem.presignedUrl,\n  //           decode(targetImage.file)\n  //         );\n  //         console.log(\"uploadRes\", uploadRes);\n  //         console.log(\"success\");\n\n  //         const imageUrl = pathItem.key;\n  //         console.log(\"imageUrl\", imageUrl);\n\n  //         if (uploadRes.ok) {\n  //           // tempPreview.push({\n  //           //   key: item.key,\n  //           //   name: targetImage.name,\n  //           //   source: targetImage.source,\n  //           //   path: item.keyPath,\n  //           //   isSuccess: true,\n  //           // });\n  //           console.log(\"Ok\");\n  //         } else {\n  //           // tempPreview.push({\n  //           //   key: item.key,\n  //           //   name: targetImage.name,\n  //           //   source: targetImage.source,\n  //           //   path: item.keyPath,\n  //           //   isSuccess: false,\n  //           // });\n  //           console.log(\"Oh no\");\n  //         }\n\n  //         return json({\n  //           field: field,\n  //           url: `${process.env.CDN_URL}/${imageUrl}`,\n  //           key: imageUrl,\n  //           isSlip: true,\n  //           previewImage: \"\",\n  //         });\n  //       }\n  //     });\n  //   } catch (e: any) {\n  //     return json({ error: \"error null\" });\n  //     console.log(\"error from uplpad\", e.response.data);\n  //     console.log(\"error from upload\");\n  //   }\n  // }\n\n  if (submitData.inputData) {\n    try {\n      const uploadPath = await APIServer.clientFromSession(session).request(\n        APIServer.generateUploadPathMultiple(JSON.parse(submitData.inputData))\n      );\n\n      const imageKeyList: any[] = [];\n      const imageKeyOnlyList: any[] = [];\n\n      const uploadPromises = uploadPath.data.map(async (pathItem: any) => {\n        const targetImage = imagesList.find(\n          (image: any) => image.uuid === pathItem.uuid\n        );\n\n        if (pathItem && pathItem.presignedUrl) {\n          await APIServer.uploadFile(\n            pathItem.type,\n            pathItem.presignedUrl,\n            decode(targetImage.file)\n          );\n\n          imageKeyList.push({ key: pathItem.key, uuid: pathItem.uuid }); // Collect the key\n          imageKeyOnlyList.push(pathItem.key);\n        }\n      });\n\n      await Promise.all(uploadPromises);\n\n      return json({ success: true, field, imageKeyList, imageKeyOnlyList });\n    } catch (e) {\n      console.error(\"Error during upload:\", e);\n\n      return json({ error: \"Error during upload\" });\n    }\n  }\n\n  return json(null);\n};\n", "import { useEffect } from \"react\";\nimport { Card, Result } from \"antd\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\nimport { useSubmit } from \"@remix-run/react\";\nimport { lineAuthenticator } from \"~/configs/oAuth2.server\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { Loading } from \"~/components/common\";\n\nexport const loader: LoaderFunction = async ({ request }: any) => {\n  return null;\n};\n\nexport const action: ActionFunction = async ({ request }: any) => {\n  let session = await getSessionFromRequest(request);\n  const lastVisited = session.get(\"redirectUri\") || session.get(\"lastVisited\");\n  const uuidTeamToJoin = session.get(\"uuidTeamToJoin\");\n  let toJoinTeams = session.get(\"toJoinTeams\");\n\n  let profile: any;\n  try {\n    profile = await lineAuthenticator.authenticate(\"line\", request, {\n      throwOnError: true,\n    });\n\n    if (profile) {\n      try {\n        const resMe = await APIServer.clientFromSession().request(\n          APIServer.socialLogin(\n            profile.provider.toLowerCase(),\n            profile.id,\n            profile,\n            profile.email\n          )\n        );\n\n        if (resMe.data) {\n          session.set(\"accessToken\", resMe.data.accessToken);\n          session.set(\"refreshToken\", resMe.data.refreshToken);\n          try {\n            const { data } = await APIServer.clientFromSession(session).request(\n              APIServer.me()\n            );\n            session.set(\"me\", data);\n          } catch (e) {\n            console.log(\"e\", e);\n          }\n        }\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully login`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n        console.log(e);\n      }\n    }\n\n    if (toJoinTeams) {\n      return redirect(`/teams/${uuidTeamToJoin}/join`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    } else {\n      return redirect(lastVisited, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    }\n  } catch (error) {\n    return redirect(lastVisited, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  }\n};\n\nexport default function LineCallback() {\n  const submit = useSubmit();\n\n  const handleCallback = () => {\n    const payload = {\n      action: \"lineCallback\",\n    };\n\n    submit(payload, { method: \"post\" });\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      handleCallback();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <Card style={{ height: 400 }} bordered={false}>\n      <Loading />\n    </Card>\n  );\n}\n\nexport function ErrorBoundary({ error }: any) {\n  return <Result status=\"error\" title={error.message} />;\n}\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { json, type LoaderFunction } from \"@remix-run/node\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigation,\n  useSubmit,\n} from \"@remix-run/react\";\n// import { Button } from \"antd\";\nimport * as APIServer from \"~/api\";\nimport {\n  TournamentIndexHeader,\n  TournamentGrid,\n  TournamentSlider,\n  TournamentSliderItem,\n} from \"~/components/pages/Tournament\";\nimport { Loading, OverlayBg, TiltMenus } from \"~/components/common\";\nimport { AffixMenu } from \"~/components/layouts\";\nimport { omitBy, isNil, isEmpty } from \"lodash\";\nimport jwt_decode from \"jwt-decode\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport { joinTournaments } from \"~/utils/helper\";\nimport { Button } from \"antd\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  const accessToken = session.get(\"accessToken\");\n  let uuid = \"\" as string;\n\n  let tournaments: any[] = [];\n  let games: any[] = [];\n  let joinedTournaments: any[] = [];\n  let transformedJoinedTournaments: any[] = [];\n  let count: number = 0;\n\n  try {\n    const tournamentRes = await APIServer.clientFromSession().request(\n      APIServer.getTournamentsPaginate(searchParams)\n    );\n    const gameRes = await APIServer.clientFromSession().request(\n      APIServer.getGames()\n    );\n    if (tournamentRes.data) {\n      tournaments = tournamentRes.data.data;\n      count = tournamentRes.data.count;\n    }\n    if (gameRes.data) {\n      games = gameRes.data;\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n\n  if (accessToken) {\n    const accessTokenDecoded: any = jwt_decode(accessToken);\n    uuid = accessTokenDecoded.sub;\n    try {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getJoinedTournament(uuid)\n      );\n      if (tournamentRes.data) {\n        joinedTournaments = tournamentRes.data;\n      }\n\n      transformedJoinedTournaments = joinedTournaments.map((item) => {\n        return {\n          id: item.tournament.id,\n          name: item.tournament.name,\n          nameEn: item.tournament.nameEn,\n          discordUrl: item.tournament.discordUrl,\n          registrationStartDate: item.tournament.registrationStartDate,\n          registrationEndDate: item.tournament.registrationEndDate,\n          startDate: item.tournament.startDate,\n          endDate: item.tournament.endDate,\n          maxTeam: item.tournament.maxTeam,\n          playerCount: item.tournament.playerCount,\n          additionalPlayerCount: item.tournament.additionalPlayerCount,\n          type: item.tournament.type,\n          status: item.tournament.status,\n          finalRoundLocation: item.tournament.finalRoundLocation,\n          finalRoundLocationEn: item.tournament.finalRoundLocationEn,\n          totalPrize: item.tournament.totalPrize,\n          prize: item.tournament.prize,\n          description: item.tournament.description,\n          descriptionEn: item.tournament.descriptionEn,\n          qualificationRules: item.tournament.qualificationRules,\n          qualificationRulesEn: item.tournament.qualificationRulesEn,\n          isOnline: item.tournament.isOnline,\n          bannerImageUrl: item.tournament.bannerImageUrl,\n          thumbnailImageUrl: item.tournament.thumbnailImageUrl,\n          remark: item.tournament.remark,\n          isKycRequired: item.tournament.isKycRequired,\n          isDiscordIdRequired: item.tournament.isDiscordIdRequired,\n          isEmailRequired: item.tournament.isEmailRequired,\n          isPhoneNumberRequired: item.tournament.isPhoneNumberRequired,\n          isIgnRequired: item.tournament.isIgnRequired,\n          requirementFields: item.tournament.requirementFields,\n          organizerId: item.tournament.organizerId,\n          gameId: item.tournament.gameId,\n          organizer: item.tournament.organizer,\n          game: item.tournament.game,\n          createdDate: item.tournament.createdDate,\n          updatedDate: item.tournament.updatedDate,\n        };\n      });\n      tournaments = joinTournaments(tournaments, transformedJoinedTournaments);\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n  }\n\n  return json({ searchParams, tournaments, count, games });\n};\n\nexport default function TournamentLayout() {\n  const { searchParams, tournaments, games, count } = useLoaderData();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const { t } = useTranslation();\n  const navigation = useNavigation();\n  const location = useLocation();\n  const [featuredTournaments, setFeaturedTournaments] = useState<any>(null);\n  const [items, setItems] = useState<any>(null);\n\n  const handleLoadMore = useCallback(() => {\n    const newSearchParams = { ...searchParams, offset: items.length };\n    const queryString = new URLSearchParams(\n      omitBy(newSearchParams, isNil)\n    ).toString();\n\n    fetcher.load(`.?${queryString}`);\n  }, [items, searchParams]);\n\n  const handleGameChanged = useCallback(\n    (game: string) => {\n      const newSearchParams = { ...searchParams };\n      if (game && game.length > 0) {\n        newSearchParams[\"game\"] = game;\n      } else {\n        delete newSearchParams[\"game\"];\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams]\n  );\n\n  useEffect(() => {\n    fetcher.load(\"/resources/featured-tournaments\");\n  }, []);\n\n  useEffect(() => {\n    setItems([...tournaments]);\n  }, [tournaments]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n    if (fetcher.data.featuredTournaments) {\n      setFeaturedTournaments(fetcher.data.featuredTournaments);\n    }\n    if (fetcher.data.tournaments) {\n      setItems((items: any[]) => [...items, ...fetcher.data.tournaments]);\n    }\n  }, [fetcher.data]);\n\n  const hasSearchParams =\n    searchParams.game && searchParams.game.length > 0 ? true : false;\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 20,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <div style={{ borderRadius: 10, overflow: \"hidden\" }}>\n        {!featuredTournaments ? (\n          <TournamentSliderItem loading data={null} />\n        ) : (\n          <TournamentSlider data={featuredTournaments} />\n        )}\n      </div>\n      <AffixMenu>\n        <TiltMenus\n          activeFromQueryString\n          menus={[\n            {\n              link: hasSearchParams ? `.?game=${searchParams.game}` : \".\",\n              label: <span>{t(\"all tournaments\")}</span>,\n            },\n            {\n              link: hasSearchParams\n                ? `.?status=upcoming&game=${searchParams.game}`\n                : \".?status=upcoming\",\n              label: <span>{t(\"upcoming tournaments\")}</span>,\n            },\n            {\n              link: hasSearchParams\n                ? `.?status=opening&game=${searchParams.game}`\n                : \".?status=opening\",\n              label: <span>{t(\"opening tournaments\")}</span>,\n            },\n            {\n              link: hasSearchParams\n                ? `.?status=ongoing&game=${searchParams.game}`\n                : \".?status=ongoing\",\n              label: <span>{t(\"ongoing tournaments\")}</span>,\n            },\n            {\n              link: hasSearchParams\n                ? `.?status=finished&game=${searchParams.game}`\n                : \".?status=finished\",\n              label: <span>{t(\"finished tournaments\")}</span>,\n            },\n          ]}\n          preventScrollReset\n        />\n      </AffixMenu>\n      <TournamentIndexHeader\n        initialValues={searchParams}\n        items={items}\n        games={games}\n        onGameChanged={handleGameChanged}\n      />\n      <TournamentGrid\n        loading={\n          navigation.state === \"loading\" &&\n          navigation.location.pathname === location.pathname\n        }\n        data={items}\n      />\n      {items && items.length < count && (\n        <div style={{ textAlign: \"center\", marginTop: 20 }}>\n          <Button onClick={handleLoadMore} size=\"large\">\n            {t(\"load more\")}\n          </Button>\n        </div>\n      )}\n      {navigation.state === \"loading\" && (\n        <OverlayBg style={{ position: \"fixed\", zIndex: 100 }} opacity={0.7}>\n          <Loading />\n        </OverlayBg>\n      )}\n    </div>\n  );\n}\n", "import { useContext, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Space } from \"antd\";\nimport { type V2_MetaFunction, useRouteLoaderData } from \"@remix-run/react\";\nimport { AuthContext } from \"~/contexts\";\nimport { MyGameProfileSection } from \"~/components/pages/User/MyGameProfileSection\";\nimport { MyDetailsSection } from \"~/components/pages/User/MyDetailsSection\";\nimport { MyAlbumsSection } from \"~/components/pages/User/MyAlbumsSection\";\nimport { MyExperiencesSection } from \"~/components/pages/User/MyExperiencesSection\";\nimport { MyAcheivementProfileSection } from \"~/components/pages/User/MyAcheivementProfileSection\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E41\u0E1A\u0E1A Player, Streamer \u0E21\u0E37\u0E2D\u0E2D\u0E32\u0E0A\u0E35\u0E1E\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    {\n      property: \"og:title\",\n      content: `\u0E2D\u0E22\u0E32\u0E01\u0E40\u0E01\u0E34\u0E14\u0E01\u0E47\u0E40\u0E02\u0E49\u0E32\u0E21\u0E32\u0E40\u0E1B\u0E34\u0E14\u0E14\u0E34..\u0E2B\u0E21\u0E32\u0E22\u0E16\u0E36\u0E07 \u0E40\u0E1B\u0E34\u0E14 Player Profile | Ctrlg.gg`,\n    },\n    {\n      property: \"og:image\",\n      content: `https://d2007awoau332v.cloudfront.net/assets/profile.jpg`,\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E42\u0E1B\u0E23\u0E44\u0E1F\u0E25\u0E4C\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E41\u0E1A\u0E1A Player, Streamer \u0E21\u0E37\u0E2D\u0E2D\u0E32\u0E0A\u0E35\u0E1E\",\n    },\n  ];\n};\n\nexport default function UserSingle() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.users.$uuid\");\n  const { userInfo, userSummaryInfo, uuid } = routeLoader;\n  const { user } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const items = [] as any[];\n  const isOwner = user && user.id === userInfo.id;\n  const containerRef = useRef(null);\n\n  if (userInfo.profile.privateEmail !== \"private\" || isOwner) {\n    items.push({\n      key: \"email\",\n      label: t(\"email\"),\n      children: userInfo.profile.profileEmail\n        ? userInfo.profile.profileEmail\n        : \"-\",\n    });\n  }\n  if (userInfo.profile.privatePhone !== \"private\" || isOwner) {\n    items.push({\n      key: \"phone\",\n      label: t(\"phone number\"),\n      children: userInfo.profile.profilePhoneNumber\n        ? userInfo.profile.profilePhoneNumber\n        : \"-\",\n    });\n  }\n  if (userInfo.profile.privateDiscordId !== \"private\" || isOwner) {\n    items.push({\n      key: \"discordId\",\n      label: t(\"discord ID\"),\n      children: userInfo.profile.discordId ? userInfo.profile.discordId : \"-\",\n    });\n  }\n\n  useEffect(() => {\n    const container = containerRef.current as any;\n\n    if (container) {\n      // Array of the child divs\n      const divs = Array.from(container.children);\n\n      // Sort by a custom logic: in this example, based on a static order array\n      const orderMap = {\n        userRankingGames: userSummaryInfo.sortOrder.userRankingGames,\n        userAchievements: userSummaryInfo.sortOrder.userAchievements,\n        userExperiences: userSummaryInfo.sortOrder.userExperiences,\n        personalDetails: userSummaryInfo.sortOrder.personalDetails,\n        albums: userSummaryInfo.sortOrder.albums,\n      } as any;\n\n      const sortedDivs = divs.sort(\n        (a: any, b: any) => orderMap[a.id] - orderMap[b.id]\n      );\n\n      // Re-append sorted divs\n      container.innerHTML = \"\"; // Clear existing elements\n      sortedDivs.forEach((div) => {\n        container.appendChild(div);\n      });\n    }\n  }, [\n    userSummaryInfo.sortOrder.albums,\n    userSummaryInfo.sortOrder.personalDetails,\n    userSummaryInfo.sortOrder.userAchievements,\n    userSummaryInfo.sortOrder.userExperiences,\n    userSummaryInfo.sortOrder.userRankingGames,\n  ]);\n\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        rowGap: \"20px\",\n        columnGap: \"16px\",\n      }}\n    >\n      <div id=\"userRankingGames\">\n        <MyGameProfileSection data={userSummaryInfo.userRankingGames} />\n      </div>\n      <div id=\"userAchievements\">\n        <MyAcheivementProfileSection data={userSummaryInfo.userAchievements} />\n      </div>\n      <div id=\"userExperiences\">\n        <MyExperiencesSection data={userSummaryInfo.userExperiences} />\n      </div>\n      <div id=\"personalDetails\">\n        <MyDetailsSection data={userSummaryInfo.personalDetails?.details} />\n      </div>\n      <div id=\"albums\">\n        <MyAlbumsSection data={userSummaryInfo.albums?.items} uuid={uuid} />\n      </div>\n      {/* <Descriptions\n        layout=\"vertical\"\n        column={{ xs: 2, md: 4, lg: 4, xl: 4, xxl: 6 }}\n        colon={false}\n        items={items}\n      />\n      {userInfo.userGames.length ? (\n        <Row gutter={[30, 20]}>\n          {userInfo.userGames.map((gameUsername: any, index: number) => (\n            <Col key={index} span={12} md={6} lg={4}>\n              {gameUsername.ign && (\n                <>\n                  <Card\n                    bordered={false}\n                    style={{\n                      height: 250,\n                      marginBottom: 5,\n                      borderRadius: 12,\n                      backgroundSize: \"cover\",\n                      backgroundPosition: \"center\",\n                      backgroundImage: `url('${\n                        gameUsername &&\n                        gameUsername.game &&\n                        gameUsername.game.mainImageUrl\n                          ? `${cdnUrl}/${gameUsername.game.mainImageUrl}`\n                          : \"/image/placeholder.png\"\n                      }')`,\n                    }}\n                  />\n                  <Text style={{ fontWeight: 600, fontSize: \"1.1em\" }}>\n                    {gameUsername.ign\n                      ? gameUsername.ign\n                      : gameUsername.gameName}\n                  </Text>\n                </>\n              )}\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <Card style={{ borderRadius: 10 }}>\n          <Result icon={<InboxOutlined />} title={t(\"no game username\")} />\n        </Card>\n      )} */}\n    </div>\n  );\n}\n", "import { useContext } from \"react\";\nimport { Card, Divider, Empty, Flex, Space } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { MyGameProfileEntry } from \"./MyGameProfileEntry\";\nimport { LiaAwardSolid } from \"react-icons/lia\";\nimport { AppContext } from \"~/contexts\";\nimport { Award } from \"lucide-react\";\n\ninterface MyGameProfileSectionProps {\n  data: any;\n}\n\nexport function MyGameProfileSection(props: MyGameProfileSectionProps) {\n  const { t } = useTranslation();\n  const { data } = props;\n  const { scheme } = useContext(AppContext);\n\n  return (\n    <>\n      <Card\n        style={{\n          borderRadius: 12,\n          boxShadow:\n            scheme === \"dark\"\n              ? \"0px 12px 10px -10px rgba(0, 0, 0, 0.6)\"\n              : \"0px 12px 10px -10px rgba(0, 0, 0, 0.2)\",\n          border: \"none\",\n        }}\n      >\n        <Flex justify=\"space-between\">\n          <Space\n            direction=\"horizontal\"\n            size={5}\n            style={{ fontSize: 24, fontWeight: 600 }}\n            align=\"center\"\n          >\n            <Award style={{ color: \"#7C6FF6\" }} />\n            {t(\"rank in game\")}\n          </Space>\n        </Flex>\n        <Divider\n          style={{\n            marginBlock: 15,\n            borderColor: scheme === \"dark\" ? \"#3e3e3e\" : \"#dfdfdf\",\n          }}\n        />\n        {data[0] ? (\n          <Flex\n            gap={30}\n            align=\"flex-start\"\n            style={{ overflow: \"auto\", marginInline: -18, paddingInline: 8 }}\n            className=\"hide-scrollbar\"\n          >\n            {data.map((gameInfo: any, index: number) => (\n              <div key={index} style={{ padding: 10 }}>\n                <div\n                  style={{\n                    filter:\n                      scheme === \"dark\"\n                        ? \"drop-shadow(0px 4px 8px rgba(0, 0, 0, 0.6))\"\n                        : \"drop-shadow(0px 4px 8px rgba(0, 0, 0, 0.2))\",\n                  }}\n                >\n                  <MyGameProfileEntry data={gameInfo} />\n                </div>\n              </div>\n            ))}\n          </Flex>\n        ) : (\n          <Empty description={<span>{t(\"no data\")}</span>} />\n        )}\n      </Card>\n    </>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Card, Image, Typography, Space, Tooltip } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { LuUserCircle } from \"react-icons/lu\";\nconst { Text } = Typography;\n\ninterface MyGameProfileEntryProps {\n  data: any;\n}\n\nexport function MyGameProfileEntry(props: MyGameProfileEntryProps) {\n  const { t } = useTranslation();\n  const { data } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  const targetRank = data.rank;\n  const foundRank = data.rankingGame.rank.find(\n    (rank: any) => rank.name.toLowerCase() === targetRank.toLowerCase()\n  );\n\n  const photosStyle = {\n    position: \"relative\",\n    height: 300,\n    width: 200,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    // cursor: \"pointer\",\n  } as any;\n\n  const triangleClipPath = \"polygon(0 0, 100% 0, 100% 80%, 50% 100%, 0 80%)\";\n\n  return (\n    <div\n      style={{\n        filter: \"url('#goo')\",\n        overflow: \"hidden\",\n      }}\n    >\n      <Card\n        bordered={false}\n        style={{\n          ...photosStyle,\n          clipPath: triangleClipPath,\n          backgroundImage: `url(\"${cdnUrl}/${data.rankingGame.image}\")`,\n          textAlign: \"center\",\n          justifyContent: \"center\",\n          filter: \"url('#goo')\",\n        }}\n        bodyStyle={{ padding: 0 }}\n      >\n        <div style={{ position: \"absolute\", width: \"100%\", bottom: 0 }}>\n          <div className=\"triangle\">\n            <div\n              className=\"triangle-box\"\n              style={{\n                backgroundColor: foundRank?.backgroundColor\n                  ? foundRank?.backgroundColor\n                  : \"rgba(222,151,35)\",\n              }}\n            />\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: 135,\n            // bottom: \"50px\",\n            width: \"100%\",\n            left: 0,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            zIndex: 1,\n          }}\n        >\n          <Image\n            style={{\n              marginBottom: 5,\n              zIndex: 2,\n              filter: \"drop-shadow(0px 4px 8px rgba(255, 255, 255, 0.6))\",\n            }}\n            width={60}\n            preview={false}\n            src={`${cdnUrl}/${foundRank?.icon}`}\n          />\n          <Space\n            style={{\n              textAlign: \"center\",\n              marginBottom: 0,\n              color: \"#FFF\",\n            }}\n            size={0}\n            align=\"center\"\n            direction=\"vertical\"\n          >\n            <Space>\n              <LuUserCircle style={{ fontSize: 18 }} />\n              <Tooltip title={data?.ign || \"\"}>\n                <Text\n                  style={{\n                    display: \"block\",\n                    color: \"inherit\",\n                    whiteSpace: \"nowrap\",\n                    maxWidth: 145,\n                    textOverflow: \"ellipsis\",\n                    overflow: \"hidden\",\n                  }}\n                >\n                  {t(data?.ign || \"\")}\n                </Text>\n              </Tooltip>\n            </Space>\n            <Text\n              style={{\n                marginTop: 0,\n                fontSize: 14,\n                color: \"#FFF\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {foundRank?.name}\n            </Text>\n          </Space>\n        </div>\n        <svg\n          style={{ position: \"absolute\", visibility: \"hidden\" }}\n          width=\"0\"\n          height=\"0\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          version=\"1.1\"\n        >\n          <defs>\n            <filter id=\"goo\">\n              <feGaussianBlur\n                in=\"SourceGraphic\"\n                stdDeviation=\"4\"\n                result=\"blur\"\n              />\n              <feColorMatrix\n                in=\"blur\"\n                mode=\"matrix\"\n                values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\"\n                result=\"goo\"\n              />\n              <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\" />\n            </filter>\n          </defs>\n        </svg>\n      </Card>\n    </div>\n  );\n}\n", "import { useContext, useState } from \"react\";\nimport { Card, Col, Divider, Empty, Row, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { AppContext } from \"~/contexts\";\nimport { LuFileText } from \"react-icons/lu\";\nconst { Text } = Typography;\n\ninterface MyDetailsSectionProps {\n  data: any;\n}\n\nexport function MyDetailsSection(props: MyDetailsSectionProps) {\n  const { t } = useTranslation();\n  const { data } = props;\n  const { scheme } = useContext(AppContext);\n  const [activeTabIndex, setActiveTabIndex] = useState<number>(0);\n\n  return (\n    <Card\n      style={{\n        borderRadius: 12,\n        boxShadow:\n          scheme === \"dark\"\n            ? \"0px 12px 10px -10px rgba(0, 0, 0, 0.6)\"\n            : \"0px 12px 10px -10px rgba(0, 0, 0, 0.2)\",\n        border: \"none\",\n      }}\n    >\n      <Row\n        justify=\"space-between\"\n        style={{ alignItems: \"center\" }}\n        gutter={[0, 10]}\n      >\n        <Col flex=\"auto\">\n          <Space\n            style={{\n              fontWeight: 600,\n              marginRight: \"10px\",\n              fontSize: \"24px\",\n            }}\n          >\n            <LuFileText style={{ color: \"#7C6FF6\" }} />\n            <Text style={{ fontSize: \"24px\", fontWeight: 600 }}>\n              {t(\"my personal details\")}\n            </Text>\n          </Space>\n        </Col>\n      </Row>\n      <Divider style={{ marginBlock: 10 }} />\n      {data && data.length ? (\n        <Space direction=\"vertical\" size={10}>\n          <ul className={`tilt-menu ${scheme}`}>\n            {data.map((personalDetail: any, index: number) => (\n              <li\n                key={index}\n                className=\"tilt-menu-item\"\n                onClick={() => setActiveTabIndex(index)}\n              >\n                <span\n                  className={`tilt-menu-link${\n                    activeTabIndex == index ? \" active\" : \"\"\n                  }`}\n                >\n                  <Text style={{ color: \"inherit\" }}>\n                    {personalDetail.title}\n                  </Text>\n                </span>\n              </li>\n            ))}\n          </ul>\n          {data.map((personalDetail: any, index: number) => (\n            <div\n              key={`data-${index}`}\n              style={{\n                display: activeTabIndex === index ? \"block\" : \"none\",\n                marginTop: 10,\n              }}\n            >\n              <div\n                className=\"ctrlg-html\"\n                dangerouslySetInnerHTML={{\n                  __html: `${personalDetail.detail}`,\n                }}\n              />\n            </div>\n          ))}\n        </Space>\n      ) : (\n        <Empty description={<span>{t(\"no data\")}</span>} />\n      )}\n    </Card>\n  );\n}\n", "import { useContext } from \"react\";\nimport { Link } from \"@remix-run/react\";\nimport { Card, Col, Divider, Empty, Row, Space, theme, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { AppContext } from \"~/contexts\";\nimport { AlbumIndexEntry } from \"./AlbumIndexEntry\";\nimport { LuImage } from \"react-icons/lu\";\nimport { Book } from \"lucide-react\";\nconst { useToken } = theme;\nconst { Text, Title } = Typography;\n\ninterface MyAlbumsSectionProps {\n  data: any;\n  uuid: string;\n}\n\nexport function MyAlbumsSection(props: MyAlbumsSectionProps) {\n  const { t } = useTranslation();\n  const { data, uuid } = props;\n  const { token } = useToken();\n  const { scheme } = useContext(AppContext);\n  const newData = data.slice(0, 7);\n\n  return (\n    <Card\n      style={{\n        borderRadius: 12,\n        boxShadow:\n          scheme === \"dark\"\n            ? \"0px 12px 10px -10px rgba(0, 0, 0, 0.6)\"\n            : \"0px 12px 10px -10px rgba(0, 0, 0, 0.2)\",\n        border: \"none\",\n      }}\n    >\n      <Row\n        justify=\"space-between\"\n        style={{ alignItems: \"center\" }}\n        gutter={[0, 10]}\n      >\n        <Col flex=\"auto\">\n          <Space\n            style={{\n              fontWeight: 600,\n              marginRight: \"10px\",\n              fontSize: \"24px\",\n            }}\n          >\n            <Book style={{ color: \"#7C6FF6\" }} />\n            <Text style={{ fontSize: \"24px\", fontWeight: 600 }}>\n              {t(\"my albums\")}\n            </Text>\n          </Space>\n        </Col>\n      </Row>\n      <Divider style={{ marginBlock: 10 }} />\n      {newData && newData.length ? (\n        <Row gutter={[30, 30]}>\n          {newData.slice(0, 2).map((album: any, index: number) => (\n            <Col key={index} span={12} md={8}>\n              <AlbumIndexEntry album={album} uuid={uuid} />\n            </Col>\n          ))}\n          {data.length > 2 && (\n            <Col span={12} md={8}>\n              <Link to=\"my-album\">\n                <div\n                  style={{\n                    position: \"relative\",\n                    width: \"100%\",\n                    paddingBottom: \"60%\",\n                    borderRadius: 12,\n                    backgroundColor: token.colorBgLayout,\n                  }}\n                >\n                  <Title\n                    level={5}\n                    style={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      margin: 0,\n                      transform: \"translate(-50%, -50%)\",\n                    }}\n                  >\n                    {t(\"view more\")}\n                  </Title>\n                </div>\n              </Link>\n            </Col>\n          )}\n        </Row>\n      ) : (\n        <Empty description={<span>{t(\"no data\")}</span>} />\n      )}\n    </Card>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Divider,\n  Empty,\n  Row,\n  Space,\n  Timeline,\n  Typography,\n} from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { FaAngleDoubleDown, FaAngleDoubleUp } from \"react-icons/fa\";\nimport { AppContext } from \"~/contexts\";\nimport { Gamepad2 } from \"lucide-react\";\nconst { Text, Title } = Typography;\n\ninterface MyExperiencesSectionProps {\n  data: any;\n}\n\nexport function MyExperiencesSection(props: MyExperiencesSectionProps) {\n  const { t } = useTranslation();\n  const { data } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n  const [displayLimit, setDisplayLimit] = useState(1); // Initialize with 1 to show the first item\n  const { scheme } = useContext(AppContext);\n\n  const expData = data.filter(\n    (item: any) =>\n      Array.isArray(item.userExperiences) && item.userExperiences.length > 0\n  );\n\n  const isAllEmpty = expData.length === 0;\n\n  // Function to handle \"Load More\" click\n  const handleLoadMore = () => {\n    setDisplayLimit(displayLimit + 1000); // Increase the limit by 1\n  };\n\n  const handleLoadLess = () => {\n    setDisplayLimit(displayLimit - 1000); // Increase the limit by 1\n  };\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <Card\n      style={{\n        borderRadius: 12,\n        boxShadow:\n          scheme === \"dark\"\n            ? \"0px 12px 10px -10px rgba(0, 0, 0, 0.6)\"\n            : \"0px 12px 10px -10px rgba(0, 0, 0, 0.2)\",\n        border: \"none\",\n      }}\n    >\n      <Row\n        justify=\"space-between\"\n        style={{ alignItems: \"center\" }}\n        gutter={[0, 10]}\n      >\n        <Col flex=\"auto\">\n          <Space\n            style={{\n              fontWeight: 600,\n              marginRight: \"10px\",\n              fontSize: \"24px\",\n            }}\n          >\n            <Gamepad2 style={{ color: \"#7C6FF6\" }} />\n            <Text style={{ fontSize: \"24px\", fontWeight: 600 }}>\n              {t(\"my experiences\")}\n            </Text>\n          </Space>\n        </Col>\n      </Row>\n      <Divider style={{ marginBlock: 10, marginBottom: \"25px\" }} />\n      {!isAllEmpty ? (\n        <>\n          <Space direction=\"vertical\" style={{ display: \"flex\" }}>\n            {expData\n              .slice(0, displayLimit)\n              .map((experience: any, index: number) => (\n                <Space\n                  direction=\"vertical\"\n                  key={index}\n                  style={{ display: \"flex\" }}\n                >\n                  <Space\n                    direction=\"vertical\"\n                    style={{ display: \"flex\" }}\n                    size=\"large\"\n                  >\n                    {experience.userExperiences[0] && (\n                      <Space>\n                        <Avatar\n                          src={`${cdnUrl}/${\n                            experience.rankingGame?.icon\n                              ? experience.rankingGame?.icon\n                              : experience?.icon\n                              ? experience.icon\n                              : null\n                          }`}\n                          size={64}\n                          style={{\n                            boxShadow:\n                              scheme === \"dark\"\n                                ? \"0px 5px 10px -2px rgba(0, 0, 0, 0.6)\"\n                                : \"0px 5px 10px -2px rgba(0, 0, 0, 0.2)\",\n                          }}\n                        />\n                        <Text style={{ fontWeight: 600, fontSize: \"24px\" }}>\n                          {experience.rankingGame?.name\n                            ? experience.rankingGame.name\n                            : experience.title}\n                        </Text>\n                      </Space>\n                    )}\n\n                    <div style={{ marginLeft: \"25px\" }}>\n                      <Timeline\n                        items={experience.userExperiences.map(\n                          (experienceItem: any, index: number) => ({\n                            key: index,\n                            children: (\n                              <Row justify=\"space-between\">\n                                <Col\n                                  span={screenSize === \"greaterThanSM\" ? 8 : 24}\n                                >\n                                  <Title level={5}>{experienceItem.name}</Title>\n                                  <Text>\n                                    {dayjs(experienceItem.startDate).format(\n                                      \"MMM YYYY\"\n                                    )}{\" \"}\n                                    -{\" \"}\n                                    {experienceItem.endDate\n                                      ? dayjs(experienceItem.endDate).format(\n                                          \"MMM YYYY\"\n                                        )\n                                      : t(\"present\")}\n                                  </Text>\n                                </Col>\n                                <Col\n                                  span={\n                                    screenSize === \"greaterThanSM\" ? 16 : 24\n                                  }\n                                >\n                                  {experienceItem.description}\n                                </Col>\n                              </Row>\n                            ),\n                          })\n                        )}\n                      />\n                    </div>\n                  </Space>\n                </Space>\n              ))}\n          </Space>\n          {displayLimit < data.length && !isAllEmpty && (\n            // Conditionally show \"Load More\"\n            <Button\n              type=\"text\"\n              onClick={handleLoadMore}\n              style={{\n                display: \"flex\",\n                textAlign: \"center\",\n                margin: \"auto\",\n              }}\n            >\n              <Space>\n                {t(\"load more\")}\n                {/* <ArrowDownOutlined style={{ color: \"#7C6FF6\" }} /> */}\n                <FaAngleDoubleDown\n                  style={{ color: \"#7C6FF6\", marginTop: \"7px\" }}\n                />\n              </Space>\n            </Button>\n          )}\n          {displayLimit > data.length && !isAllEmpty && (\n            // Conditionally show \"Load More\"\n            <Button\n              type=\"text\"\n              onClick={handleLoadLess}\n              style={{\n                display: \"flex\",\n                textAlign: \"center\",\n                margin: \"auto\",\n              }}\n            >\n              <Space>\n                {t(\"load less\")}\n                {/* <ArrowDownOutlined style={{ color: \"#7C6FF6\" }} /> */}\n                <FaAngleDoubleUp\n                  style={{ color: \"#7C6FF6\", marginTop: \"7px\" }}\n                />\n              </Space>\n            </Button>\n          )}\n        </>\n      ) : (\n        <Empty description={<span>{t(\"no data\")}</span>} />\n      )}\n    </Card>\n  );\n}\n", "import { useContext } from \"react\";\nimport { Card, Col, Divider, Empty, Flex, Row, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { MyAchievementProfileEntry } from \"./MyAchievementProfileEntry\";\nimport { FaCircle } from \"react-icons/fa\";\nimport { IoTrophyOutline } from \"react-icons/io5\";\nimport { AppContext } from \"~/contexts\";\nimport { Trophy } from \"lucide-react\";\nconst { Text } = Typography;\n\ninterface MyAcheivementProfileSectionProps {\n  data: any;\n  type?: string;\n}\n\nexport function MyAcheivementProfileSection(\n  props: MyAcheivementProfileSectionProps\n) {\n  const { t } = useTranslation();\n  const { data } = props;\n  const { scheme } = useContext(AppContext);\n\n  return (\n    <Card\n      style={{\n        borderRadius: 12,\n        boxShadow:\n          scheme === \"dark\"\n            ? \"0px 12px 10px -10px rgba(0, 0, 0, 0.6)\"\n            : \"0px 12px 10px -10px rgba(0, 0, 0, 0.2)\",\n        border: \"none\",\n      }}\n    >\n      <Row\n        justify=\"space-between\"\n        style={{ alignItems: \"center\" }}\n        gutter={[0, 10]}\n      >\n        <Col flex=\"auto\">\n          <Space\n            style={{\n              fontWeight: 600,\n              marginRight: \"10px\",\n              fontSize: \"24px\",\n            }}\n          >\n            <Trophy style={{ color: \"#7C6FF6\" }} />\n            <Text style={{ fontSize: \"24px\", fontWeight: 600 }}>\n              {t(\"my achievement\")}\n            </Text>\n          </Space>\n        </Col>\n        <Col>\n          <Space direction=\"horizontal\" size={12} wrap>\n            <Space direction=\"horizontal\" size={5} align=\"center\">\n              <FaCircle style={{ color: \"#D4FB6F\" }} />\n              {data[0].title}\n            </Space>\n            <Space direction=\"horizontal\" size={5} align=\"center\">\n              <FaCircle style={{ color: \"#7C6FF6\" }} />\n              {data[1].title}\n            </Space>\n            <Space direction=\"horizontal\" size={5} align=\"center\">\n              <FaCircle style={{ color: \"#E3E3E3\" }} />\n              {data[2].title}\n            </Space>\n          </Space>\n        </Col>\n      </Row>\n      <Divider style={{ marginBlock: 15 }} />\n\n      {data[0].userAchievements?.length > 0 ||\n      data[1].userAchievements?.length > 0 ||\n      data[2].userAchievements?.length > 0 ? (\n        <Flex\n          gap={0}\n          align=\"flex-start\"\n          style={{ overflow: \"auto\", marginInline: -18, paddingInline: 8 }}\n          className=\"hide-scrollbar\"\n        >\n          {data[0]\n            ? data[0]?.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index} style={{ padding: 10 }}>\n                    <MyAchievementProfileEntry\n                      data={achievement}\n                      type={data[0].type}\n                    />\n                  </div>\n                )\n              )\n            : null}\n          {data[1]\n            ? data[1]?.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index} style={{ padding: 10 }}>\n                    <MyAchievementProfileEntry\n                      data={achievement}\n                      type={data[1].type}\n                    />\n                  </div>\n                )\n              )\n            : null}\n          {data[2]\n            ? data[2]?.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index} style={{ padding: 10 }}>\n                    <MyAchievementProfileEntry\n                      data={achievement}\n                      type={data[2].type}\n                    />\n                  </div>\n                )\n              )\n            : null}\n        </Flex>\n      ) : (\n        <Empty description={<span>{t(\"no data\")}</span>} />\n      )}\n    </Card>\n  );\n}\n", "import { useContext } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport { Card, Space, Tooltip, Typography } from \"antd\";\nimport { AppContext } from \"~/contexts\";\nconst { Text } = Typography;\n\ninterface MyAchievementProfileEntryProps {\n  data: any;\n  type?: string;\n}\n\nexport function MyAchievementProfileEntry(\n  props: MyAchievementProfileEntryProps\n) {\n  const { data, type } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n\n  const backgroundColor =\n    type === \"brand\"\n      ? \"#D4FB6F\"\n      : type === \"tournament\"\n      ? \"#7C6FF6\"\n      : \"#E3E3E3\";\n\n  return (\n    <Space\n      onClick={data?.url ? () => window.open(data.url, \"_blank\") : undefined}\n      direction=\"vertical\"\n      size={0}\n      style={{\n        display: \"flex\",\n        position: \"relative\",\n        height: \"100%\",\n        width: 200,\n        cursor: data?.url ? \"pointer\" : \"default\",\n      }}\n    >\n      <Card\n        bordered={false}\n        style={{\n          position: \"relative\",\n          height: 250,\n          backgroundColor: scheme === \"dark\" ? \"#121212\" : \"#e9e9e9\",\n          borderRadius: 10,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          backgroundImage:\n            data && data.image\n              ? `url(\"${cdnUrl}/${data.image}\")`\n              : `url(\"/image/placeholder.png\")`,\n          boxShadow:\n            scheme === \"dark\"\n              ? \"0 8px 20px 0 rgba(0, 0, 0, 0.6)\"\n              : \"0 8px 20px 0 rgba(0, 0, 0, 0.2)\",\n          zIndex: 1,\n        }}\n      />\n      <div\n        style={{\n          position: \"relative\",\n          paddingInline: \"7.5%\",\n          overflow: \"hidden\",\n        }}\n      >\n        <Card\n          bodyStyle={{ padding: 10, textAlign: \"center\" }}\n          bordered={false}\n          style={{\n            position: \"relative\",\n            borderRadius: 10,\n            borderTopLeftRadius: 0,\n            borderTopRightRadius: 0,\n            backgroundColor: backgroundColor,\n          }}\n        >\n          <Tooltip title={data.name}>\n            <Text\n              style={{\n                display: \"block\",\n                position: \"relative\",\n                maxWidth: \"100%\",\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"#000\",\n              }}\n            >\n              {data.name}\n            </Text>\n          </Tooltip>\n        </Card>\n      </div>\n    </Space>\n  );\n}\n", "import {\n  redirect,\n  type ActionFunction,\n  type LoaderFunction,\n  json,\n} from \"@remix-run/node\";\nimport { Affix, Col, Form, Row } from \"antd\";\nimport {\n  useFetcher,\n  useNavigation,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Media } from \"~/components/common\";\nimport { WebboardForm, WebboardTags } from \"~/components/pages/Webboard\";\nimport * as APIServer from \"~/api\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\n// import { parseAndConvert } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  try {\n    return null;\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n  return null;\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  mustAuthenticated(request);\n  const { id } = params;\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n  const toSubmitData = JSON.parse(data);\n  let webboard: any = null;\n\n  if (id) {\n    try {\n      const webboardRes = await APIServer.clientFromSession(session).request(\n        APIServer.updateWebboard(id, toSubmitData)\n      );\n      if (webboardRes && webboardRes.data) {\n        webboard = webboardRes.data;\n      }\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: \"successfully update webboard\",\n      });\n    } catch (e: any) {\n      console.log(\"e\", e.response.data);\n\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: e.response.data.message,\n      });\n    }\n  }\n\n  if (webboard) {\n    session.flash(\"backToIndex\", true);\n    return redirect(`/webboards/${webboard.id}`, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  } else {\n    return json(\n      { success: false },\n      {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      }\n    );\n  }\n};\n\nexport default function WebboardEdit() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.webboards.$id\");\n  const { webboard } = routeLoader;\n  const webboardRouteLoader = useRouteLoaderData(\"routes/_app.webboards\");\n  const { games, rooms, tags } = webboardRouteLoader;\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  const initialValues = {\n    ...webboard,\n    hasPoll: webboard.poll ? true : false,\n    roomIds: webboard.postRooms.map((postRoom: any) => postRoom.room.id),\n    gameIds: webboard.postGames.map((postGame: any) => postGame.game.id),\n    tags: webboard.postTags.map((postTag: any) => postTag.tag.name),\n  };\n  if (webboard.poll) {\n    initialValues.pollOptions = webboard.poll.options.map(\n      (option: any) => option.option\n    );\n  }\n  const navigation = useNavigation();\n  const navigationState = navigation.state;\n\n  const handleUpdateWebboard = (values: any) => {\n    const { roomIds, ...value } = values;\n    const newValues = {\n      ...value,\n      roomIds: values.roomIds ? values.roomIds : [6],\n    };\n    if (!newValues.hasPoll) {\n      delete newValues.pollOptions;\n    }\n    delete newValues.hasPoll;\n\n    submit(\n      {\n        data: JSON.stringify(newValues),\n      },\n      { method: \"put\" }\n    );\n  };\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Row gutter={[30, 10]}>\n        <Col span={24} md={{ span: 6, order: 1 }}>\n          <Media greaterThan=\"sm\">\n            <Affix offsetTop={80}>\n              <div>\n                <WebboardTags data={tags} fetcher={fetcher} />\n              </div>\n            </Affix>\n          </Media>\n        </Col>\n        <Col span={24} md={{ span: 18, order: 0 }}>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            onFinish={handleUpdateWebboard}\n            initialValues={initialValues}\n          >\n            <WebboardForm\n              editmode\n              fetcher={fetcher}\n              form={form}\n              games={games}\n              rooms={rooms}\n              tags={tags}\n              tournament={webboard.tournamentId}\n              navigationState={navigationState}\n            />\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n", "import { json, type LoaderFunction } from '@remix-run/node';\nimport * as APIServer from '~/api';\nimport { getSessionFromRequest } from '~/session.server';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let partyRequest: any = null; // FIXME: change this to null\n  if (searchParams.partyId && searchParams.gameId) {\n    try {\n      const requestsRes = await APIServer.clientFromSession(session).request(\n        APIServer.getPartyRequest(searchParams.partyId, searchParams.gameId)\n      );\n      if (requestsRes.data) {\n        partyRequest = requestsRes.data;\n      }\n    } catch (e) {}\n    return json({ request: partyRequest, partyId: searchParams.partyId });\n  } else {\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\") as string;\n  const type = formData.get(\"type\") as string;\n  const reactionId = formData.get(\"reactionId\") as string;\n  let updatedComment: any = null;\n  let commentRes: any;\n\n  if (id && reactionId) {\n    try {\n      const reactionRes = await APIServer.clientFromSession(session).request(\n        type === \"comment\"\n          ? APIServer.reactionComment(id, reactionId)\n          : APIServer.reactionWebboard(id, reactionId)\n      );\n\n      if (type === \"comment\") {\n        commentRes = await APIServer.clientFromSession(session).request(\n          APIServer.getComment(id)\n        );\n\n        if (commentRes && commentRes.data) {\n          updatedComment = commentRes.data;\n        }\n      }\n\n      return json({\n        success: `reaction-${type ? type : \"webboard\"}`,\n        postId: id,\n        post: updatedComment,\n        postType: type,\n        reactions:\n          reactionRes && reactionRes.data\n            ? type === \"webboard\"\n              ? reactionRes.data.postReactionCounts\n              : reactionRes.data.commentReactionCounts\n            : null,\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n};\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\n\nexport const loader: LoaderFunction = async ({ request }: any) => {\n  return json(null);\n};\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Divider,\n  Form,\n  Modal,\n  Row,\n  Space,\n  Typography,\n  notification,\n} from \"antd\";\nimport { PlusOutlined, VerticalAlignMiddleOutlined } from \"@ant-design/icons\";\nimport { TiltButton } from \"~/components/common\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n  redirect,\n} from \"@remix-run/node\";\n\nimport * as APIServer from \"~/api\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport { MyGameEntry } from \"~/components/pages/User/MyGameEntry\";\nimport { UserGameForm } from \"~/components/pages/User/UserGameForm\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { AuthContext } from \"~/contexts\";\nimport { ArrowUpDown } from \"lucide-react\";\nconst { Title, Text } = Typography;\n\nlet defaultGame: any;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let gamesInfoTitle = [];\n  let gamesInfo = [];\n  let firstGameId = null;\n  let games: any[] = [];\n  try {\n    const gamesInfoTitleRes = await APIServer.clientFromSession(\n      session\n    ).request(APIServer.getExperiencesTitle());\n    if (gamesInfoTitleRes.data) {\n      gamesInfoTitle = gamesInfoTitleRes.data;\n    }\n    firstGameId = gamesInfoTitle[0]?.rankingGameId\n      ? { rankingGameId: gamesInfoTitle[0]?.rankingGameId }\n      : { experienceTitleId: gamesInfoTitle[0]?.id };\n\n    const gamesInfoRes = await APIServer.clientFromSession(session).request(\n      APIServer.getUserGameInfo()\n    );\n    if (gamesInfoRes.data) {\n      gamesInfo = gamesInfoRes.data;\n    }\n\n    const gameRes = await APIServer.clientFromSession(session).request(\n      APIServer.getUserGameLists()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n      defaultGame = games.find((game: any) => `${game.name}` === `VALORANT`);\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({\n    gamesInfoTitle,\n    gamesInfo,\n    firstGameId,\n    games,\n    defaultGame,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = entries.data ? JSON.parse(entries.data) : null;\n  const uuid = entries.uuid;\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"save-to-profile-index\":\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `successfully saved to profile index`,\n      });\n      return redirect(`/users/${uuid}`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\n// Modal properties\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n};\n\n// Main component\nexport default function SettingsMyGames() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const [messageApi, contextHolder] = notification.useNotification();\n  const { gamesInfo, games, defaultGame } = useLoaderData();\n  const [gameInfoModal, setGameInfoModal] = useState(false);\n  const [gameInfoLists, setGameInfoLists] = useState<[]>(gamesInfo);\n  const [sortingModal, setSortingModal] = useState<boolean>(false);\n\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  const [form] = Form.useForm();\n  const { user } = useContext(AuthContext);\n  const submit = useSubmit();\n\n  const handleSubmitToProfileIndex = () => {\n    submit(\n      {\n        uuid: user.uuid,\n        action: \"save-to-profile-index\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  const openExperienceModal = () => {\n    setGameInfoModal(true);\n  };\n\n  const handleToggleSortingMode = () => {\n    setSortingModal(!sortingModal);\n  };\n\n  const onChangeSortItems = (items: any) => {\n    setGameInfoLists(items);\n  };\n\n  const onCloseSortingModal = () => {\n    setSortingModal(false);\n  };\n\n  const handleSubmitSorting = () => {\n    setSortingModal(false);\n    const itemsId = {\n      userRankingGameIds: gameInfoLists.map(\n        (item: any, index: number) => item.id\n      ),\n    };\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-my-games`,\n      }\n    );\n  };\n\n  useEffect(() => {\n    setGameInfoLists(gamesInfo && gamesInfo.length ? gamesInfo : []);\n  }, [gamesInfo]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n\n    if (fetcher.data.gamesInfo) {\n      setGameInfoLists(fetcher.data.gamesInfo);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   setGameInfoLists([...gamesInfo]);\n  // }, [gamesInfo]);\n\n  // useEffect(() => {\n  //   if (fetcher.data && fetcher.data.success) {\n  //     if (\n  //       fetcher.data.success &&\n  //       fetcher.data.success !== \"create-experience-title\"\n  //     ) {\n  //       console.log(\"fetcher.data.success\", fetcher.data.success);\n  //       fetcher.load(`.?rankingGameId=2`);\n  //       messageApi.open({\n  //         type: \"success\",\n  //         message: t(`Successfully ${fetcher.data.action} experience`),\n  //         duration: 5,\n  //         placement: \"bottomRight\",\n  //       });\n  //     }\n  //   }\n  // }, [fetcher.data]);\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <div>\n        <Space\n          size={10}\n          direction=\"horizontal\"\n          style={{\n            marginBottom: 20,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Title level={2}>{t(\"my games\")}</Title>\n          {screenSize === \"greaterThanSM\" && (\n            <Row justify={\"end\"} style={{ margin: 10 }}>\n              {gameInfoLists.length > 0 && (\n                <Button\n                  type=\"text\"\n                  style={{\n                    marginTop: 2,\n                    marginRight: 10,\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                  }}\n                  onClick={handleToggleSortingMode}\n                >\n                  <ArrowUpDown\n                    style={{\n                      color: \"#7C6FF6\",\n                      fontSize: \"1.2em\",\n                      marginRight: \"5px\",\n                    }}\n                  />\n                  {t(\"sort order\")}\n                </Button>\n              )}\n\n              <TiltButton color=\"primary\" onClick={() => openExperienceModal()}>\n                <Space>\n                  <PlusOutlined style={{ color: \"black\" }} />\n                  {t(\"add game\")}\n                </Space>\n              </TiltButton>\n            </Row>\n          )}\n        </Space>\n        {screenSize === \"atSM\" && (\n          <Row justify={\"end\"} style={{ margin: 10, marginTop: 0 }}>\n            {gameInfoLists.length > 0 && (\n              <Button\n                type=\"text\"\n                style={{\n                  marginTop: 2,\n                  marginRight: 10,\n                  fontWeight: 600,\n                  textAlign: \"center\",\n                }}\n              >\n                <ArrowUpDown\n                  style={{\n                    color: \"#7C6FF6\",\n                    fontSize: \"1.2em\",\n                    marginRight: \"5px\",\n                  }}\n                />\n                {t(\"sort order\")}\n              </Button>\n            )}\n\n            <TiltButton color=\"primary\" onClick={() => openExperienceModal()}>\n              <Space>\n                <PlusOutlined style={{ color: \"black\" }} />\n                {t(\"add game\")}\n              </Space>\n            </TiltButton>\n          </Row>\n        )}\n\n        {gameInfoLists.map((experience: any, index: number) => (\n          <div key={index}>\n            <MyGameEntry\n              data={experience}\n              fetcher={fetcher}\n              game={defaultGame}\n              games={games}\n            />\n          </div>\n        ))}\n        <TiltButton\n          color=\"primary\"\n          onClick={handleSubmitToProfileIndex}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"save\")}\n        </TiltButton>\n      </div>\n      {/* <Modal\n        {...modalProps}\n        onCancel={() => setGameInfoModal(false)}\n        open={gameInfoModal}\n      >\n        <ExperienceForm\n          fetcher={fetcher}\n          form={form}\n          gameId={gameId}\n          titleType={titleType}\n          onCancel={() => setGameInfoModal(false)}\n          action=\"create\"\n        />\n      </Modal> */}\n      <Modal\n        {...modalProps}\n        onCancel={() => setGameInfoModal(false)}\n        open={gameInfoModal}\n      >\n        <UserGameForm\n          fetcher={fetcher}\n          form={form}\n          game={defaultGame}\n          games={games}\n          action=\"create\"\n          onCancel={() => setGameInfoModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingModal(false)}\n        open={sortingModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={gameInfoLists}\n            onChange={onChangeSortItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.rankingGame.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onCloseSortingModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      {contextHolder}\n    </div>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport {\n  Card,\n  Col,\n  Flex,\n  Input,\n  Row,\n  Image,\n  Typography,\n  Space,\n  Tooltip,\n} from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { MyGameEntryControl } from \"./MyGameEntryControl\";\nimport dayjs from \"dayjs\";\nimport { useTranslation } from \"react-i18next\";\nimport { LuUserCircle } from \"react-icons/lu\";\nconst { Text, Title } = Typography;\n\ninterface MyGameEntryProps {\n  data: any;\n  fetcher?: any;\n  game?: any;\n  games: any[];\n  isMyWebboard?: boolean;\n}\n\nexport function MyGameEntry(props: MyGameEntryProps) {\n  const { t } = useTranslation();\n  const { data, fetcher, game, games } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const isOwner = true;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  const targetRank = data.rank;\n  const foundRank = data.rankingGame.rank.find(\n    (rank: any) => rank.name === targetRank\n  );\n\n  const photosStyle = {\n    position: \"relative\",\n    height: 200,\n    width: \"131.64px\",\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    // cursor: \"pointer\",\n  } as any;\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const cardStyle = {\n    margin: \"10px 0\",\n    borderRadius: \"6px\",\n    border: \"1px solid #E5E4E4\",\n    overflow: \"auto\",\n  };\n\n  const triangleClipPath = \"polygon(0 0, 100% 0, 100% 80%, 50% 100%, 0 80%)\";\n  const triangleClipPathTop =\n    \"polygon(0 0, 50% 25%, 100% 0, 100% 100%, 0 100%)\";\n\n  const gameCard = (\n    <div\n      style={{\n        filter: \"url('#goo')\",\n        overflow: \"hidden\",\n      }}\n    >\n      <Card\n        bordered={false}\n        style={{\n          ...photosStyle,\n          clipPath: triangleClipPath,\n          backgroundImage: `url(\"${cdnUrl}/${data.rankingGame.image}\")`,\n          textAlign: \"center\",\n          justifyContent: \"center\",\n          filter: \"url('#goo')\",\n        }}\n        bodyStyle={{ padding: 0 }}\n      >\n        <div style={{ position: \"absolute\", width: \"100%\", bottom: 0 }}>\n          <div className=\"triangle\">\n            <div\n              className=\"triangle-box\"\n              style={{\n                backgroundColor: foundRank?.backgroundColor\n                  ? foundRank?.backgroundColor\n                  : \"rgba(222,151,35)\",\n              }}\n            />\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: 95,\n            // bottom: \"50px\",\n            width: \"100%\",\n            left: 0,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            zIndex: 1,\n          }}\n        >\n          <Image\n            style={{\n              marginBottom: 5,\n              zIndex: 2,\n              filter: \"drop-shadow(0px 4px 8px rgba(255, 255, 255, 0.6))\",\n            }}\n            width={50}\n            preview={false}\n            src={`${cdnUrl}/${foundRank?.icon}`}\n          />\n        </div>\n        <svg\n          style={{ position: \"absolute\", visibility: \"hidden\" }}\n          width=\"0\"\n          height=\"0\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          version=\"1.1\"\n        >\n          <defs>\n            <filter id=\"goo\">\n              <feGaussianBlur\n                in=\"SourceGraphic\"\n                stdDeviation=\"4\"\n                result=\"blur\"\n              />\n              <feColorMatrix\n                in=\"blur\"\n                mode=\"matrix\"\n                values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\"\n                result=\"goo\"\n              />\n              <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\" />\n            </filter>\n          </defs>\n        </svg>\n      </Card>\n    </div>\n  );\n\n  return (\n    <>\n      <Card style={cardStyle}>\n        <Row>\n          <Col span={screenSize === \"greaterThanSM\" ? 6 : 24}>\n            {screenSize === \"greaterThanSM\" ? (\n              gameCard\n            ) : (\n              <Flex\n                justify=\"center\" // This centers horizontally\n                align=\"center\" // This centers vertically\n              >\n                {gameCard}\n              </Flex>\n            )}\n          </Col>\n          <Col span={screenSize === \"greaterThanSM\" ? 18 : 24}>\n            <div\n              style={{\n                marginLeft: \"15px\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n                <Space\n                  direction=\"vertical\"\n                  size={1}\n                  style={{ margin: 0, padding: 0 }}\n                >\n                  <Title level={5}>{t(\"username in game\")}</Title>\n                </Space>\n                <MyGameEntryControl\n                  fetcher={fetcher}\n                  id={data.id}\n                  isOwner={isOwner}\n                  isForumAdmin={isForumAdmin}\n                  initialValues={data}\n                  game={game}\n                  games={games}\n                  postType=\"experience\"\n                />\n              </Flex>\n              <Input\n                disabled\n                value={data.ign}\n                style={{ marginBottom: \"15px\" }}\n              />\n              <Title level={5}>{t(\"rank in game\")}</Title>\n              <Input disabled value={t(`${data.rank}`)} />\n            </div>\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Input, Modal, Space, Typography, Select, Form } from \"antd\";\nimport {\n  AlertOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  ExclamationCircleFilled,\n} from \"@ant-design/icons\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { ExperienceForm } from \"./ExperiencesForm\";\nimport { UserGameForm } from \"./UserGameForm\";\n\nconst { Text, Title } = Typography;\n\ninterface MyGameEntryControlProps {\n  fetcher?: any;\n  id: string;\n  game?: any;\n  games: any[];\n  ignoreShare?: boolean;\n  isOwner?: boolean;\n  isForumAdmin?: boolean;\n  onEditClicked?: () => void;\n  postType?: string;\n  initialValues?: any;\n}\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport function MyGameEntryControl(props: MyGameEntryControlProps) {\n  const {\n    fetcher,\n    id,\n    isOwner,\n    isForumAdmin,\n    postType,\n    initialValues,\n    game,\n    games,\n  } = props;\n  const { t } = useTranslation();\n  const [reason, setReason] = useState<string>(\"\");\n  const [modal, contextHolder] = Modal.useModal();\n  const [reportModal, setReportModal] = useState<boolean>(false);\n  const [gameInfoModal, setGameInfoModal] = useState(false);\n  const [form] = Form.useForm();\n\n  const { Option } = Select;\n\n  const handleOpenCreateExperienceModal = () => {\n    setGameInfoModal(true);\n  };\n\n  const handleDeleteGame = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure you want to delete this rank?`)}`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id: initialValues.id },\n          {\n            method: \"post\",\n            action: `/resources/delete-user-in-game`,\n          }\n        );\n      },\n    });\n  }, [fetcher]);\n\n  const openReportModal = () => {\n    setReportModal(true);\n  };\n\n  const closeReportModal = () => {\n    setReportModal(false);\n  };\n\n  const onReasonChanged = (e: any) => {\n    setReason(e.target.value);\n  };\n\n  const [selectedReason, setSelectedReason] = useState<string>(\"\");\n\n  const reasonOptions = [\n    { label: \" Inappropriate Content\", value: \"Inappropriate Content\" },\n    { label: \"Violence\", value: \"Violence\" },\n    { label: \"Harassment\", value: \"Harassment\" },\n    { label: \" False Information\", value: \"False Information\" },\n    { label: \"Spam\", value: \"Spam\" },\n    { label: \"Unauthorized Sales\", value: \"Unauthorized Sales\" },\n    { label: \"Others\", value: \"Others\" },\n  ];\n\n  const onReasonSelected = (value: string) => {\n    if (value !== \"Others\") {\n      setReason(value);\n    } else {\n      setReason(\"\");\n    }\n    setSelectedReason(value);\n  };\n\n  const reasonSelect = (\n    <Select\n      style={{ width: \"100%\" }}\n      onChange={onReasonSelected}\n      value={selectedReason ? selectedReason : undefined}\n      disabled={fetcher.state !== \"idle\"}\n      placeholder={t(\"select reason\")}\n      listHeight={300}\n    >\n      {reasonOptions.map((option) => (\n        <Option key={option.value} value={option.value}>\n          {option.label}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  const submitReport = useCallback(() => {\n    if (reason.length > 0) {\n      fetcher.submit(\n        { reason, id, type: postType },\n        {\n          method: \"post\",\n          action: `/resources/report-post`,\n        }\n      );\n    }\n  }, [fetcher, postType, reason]);\n\n  const deletePost = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete this post`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id, type: postType },\n          {\n            method: \"delete\",\n            action: `/resources/delete-post`,\n          }\n        );\n      },\n    });\n  }, [fetcher, id, postType]);\n\n  const menus = [\n    {\n      label: (\n        <Space size={10} style={{ color: \"#f5222d\" }}>\n          <AlertOutlined />\n          {t(\"report\")}\n        </Space>\n      ),\n      onClick: openReportModal,\n    },\n  ] as any[];\n  if (isOwner || isForumAdmin) {\n    menus.push({\n      label: (\n        <Space size={10}>\n          <DeleteOutlined />\n          {t(\"delete\")}\n        </Space>\n      ),\n      onClick: deletePost,\n    });\n  }\n  useEffect(() => {\n    setReason(\"\");\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success === `report-${postType ? postType : \"webboard\"}` &&\n      fetcher.state === \"idle\"\n    ) {\n      setReason(\"\");\n      setReportModal(false);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType]);\n\n  return (\n    <>\n      <Space size={15}>\n        {/* {!ignoreShare && (\n          <ShareDropDown copiedMessage=\"album url copied\" postUrl={albumUrl} />\n        )} */}\n        {isOwner && (\n          <>\n            <Text\n              style={{ fontSize: 18, cursor: \"pointer\" }}\n              onClick={handleOpenCreateExperienceModal}\n            >\n              <EditOutlined />\n            </Text>\n            <Text\n              style={{ fontSize: 18, cursor: \"pointer\", color: \"#f5222d\" }}\n              onClick={handleDeleteGame}\n            >\n              <DeleteOutlined />\n            </Text>\n          </>\n        )}\n      </Space>\n      <Modal\n        {...modalProps}\n        onCancel={() => setGameInfoModal(false)}\n        open={gameInfoModal}\n      >\n        <UserGameForm\n          fetcher={fetcher}\n          form={form}\n          game={game}\n          games={games}\n          action=\"update\"\n          onCancel={() => setGameInfoModal(false)}\n          initialValues={initialValues}\n        />\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Card,\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Image,\n  Input,\n  Modal,\n  Row,\n  Select,\n  Space,\n  theme,\n  Typography,\n} from \"antd\";\nimport { AuthContext } from \"~/contexts\";\nimport { GameCard, TiltButton } from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nimport { GameUserSelect } from \"./GameUserSelect\";\nimport { flattenObject } from \"~/utils/helper\";\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface UserGameFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  game?: any;\n  games: any[];\n  initialValues?: any;\n  onCancel: () => void;\n}\n\nexport function UserGameForm(props: UserGameFormProps) {\n  const { fetcher, form, game, games, action, initialValues, onCancel } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { token } = useToken();\n  const { user } = useContext(AuthContext);\n  let defaultValues: any = initialValues ? initialValues : undefined;\n  let defaultMode: any = null;\n  let ign = \"\";\n  const gameId = game.id;\n  const userGame =\n    user && user.userGames && user.userGames.length > 0\n      ? user.userGames.find((userGame: any) => userGame.gameId === gameId)\n      : null;\n  if (userGame) {\n    ign = userGame.ign;\n  }\n\n  if (game && game.modes) {\n    defaultMode = game.modes.find((m: any) => m.isDefaultMode);\n    if (defaultMode) {\n      defaultValues = {\n        mode: defaultMode.name,\n        slots: defaultMode.maxPlayer - 1,\n        username: ign,\n      };\n    }\n  }\n  const [gameModal, setGameModal] = useState<boolean>(false);\n  const [selectedGameId, setSelectedGameId] = useState<any>(\n    initialValues && initialValues.rankingGameId\n      ? initialValues.rankingGameId\n      : game.id\n      ? game.id\n      : null\n  );\n\n  const [selectedGame, setSelectedGame] = useState<any>(\n    initialValues && initialValues.rankingGameId\n      ? games.find((g: any) => g.id == initialValues.rankingGameId)\n      : game\n      ? game\n      : null\n  );\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    modalRender: (modal: any) => modal,\n  } as any;\n\n  const openGameModal = () => {\n    setGameModal(true);\n  };\n\n  const closeGameModal = () => {\n    setGameModal(false);\n  };\n\n  const handleGameChanged = (gameId: any) => {\n    const newSelectedGame = games.find((g: any) => g.id == gameId);\n\n    form.resetFields();\n    setGameModal(false);\n    setSelectedGameId(gameId);\n    setSelectedGame(newSelectedGame);\n  };\n\n  const handleSubmit = useCallback(\n    (values: any) => {\n      if (selectedGameId) {\n        const newValues = {\n          ...values,\n          rankingGameId: selectedGameId,\n          id: initialValues ? initialValues.id : null,\n        };\n\n        fetcher.submit(\n          {\n            data: JSON.stringify(newValues),\n          },\n          action === \"create\"\n            ? {\n                method: \"post\",\n                action: `/resources/create-user-in-game`,\n              }\n            : {\n                method: \"put\",\n                action: `/resources/edit-user-in-game`,\n              }\n        );\n        form.resetFields();\n      }\n\n      onCancel();\n    },\n    [selectedGameId]\n  );\n\n  useEffect(() => {\n    if (initialValues && fetcher.data && fetcher.data.success) {\n      if (fetcher.data.success) {\n        form.setFieldsValue(flattenObject(initialValues));\n      }\n    }\n  }, [initialValues, form, fetcher.data]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={defaultValues}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {t(`${action === \"create\" ? \"add game\" : \"edit game\"}`)}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          <Row gutter={[15, 15]}>\n            <Col flex=\"none\">\n              <Space>\n                {selectedGame ? (\n                  <GameCard\n                    avatarStyle={{\n                      position: \"relative\",\n                      width: 160,\n                      overflow: \"hidden\",\n                      cursor: action === \"update\" ? \"default\" : \"pointer\",\n                      borderRadius: 10,\n                      backgroundSize: \"cover\",\n                      backgroundPosition: \"center\",\n                      backgroundImage:\n                        selectedGame &&\n                        selectedGame.image &&\n                        selectedGame.image !== \"-\"\n                          ? `url(\"${cdnUrl}/${selectedGame.image}\")`\n                          : `url(\"/image/placeholder.png\")`,\n                    }}\n                    onClick={openGameModal}\n                    action={action}\n                  />\n                ) : (\n                  <Card\n                    style={{\n                      backgroundColor: token.colorBgElevated,\n                      textAlign: \"center\",\n                    }}\n                    bodyStyle={{ padding: \"30px 10px\", cursor: \"pointer\" }}\n                    onClick={openGameModal}\n                  >\n                    <Space direction=\"vertical\" size={5} align=\"center\">\n                      <Image\n                        preview={false}\n                        src=\"/image/game-icon.svg\"\n                        width={30}\n                        height={30}\n                      />\n                      <Text>{t(\"select game\")}</Text>\n                    </Space>\n                  </Card>\n                )}\n              </Space>\n            </Col>\n            {selectedGame && (\n              <Col flex=\"auto\">\n                <Form.Item\n                  key=\"ign\"\n                  name=\"ign\"\n                  // rules={[\n                  //   {\n                  //     required: true,\n                  //     message: t('please input game username'),\n                  //   },\n                  // ]}\n                  label={\n                    <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                      {/* {`${selectedGame.name} ${t(\"username\")}`} */}\n                      {`${t(\"in game username\")}`}\n                    </Text>\n                  }\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  key=\"rank\"\n                  name=\"rank\"\n                  rules={[\n                    {\n                      required: true,\n                      message: t(\"please input game rank\"),\n                    },\n                  ]}\n                  label={\n                    <Space size={10}>\n                      <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                        {t(\"rank\")}\n                      </Text>\n                    </Space>\n                  }\n                >\n                  <Select\n                    style={{ width: \"100%\" }}\n                    placeholder={t(\"select rank\")}\n                    options={\n                      selectedGame.rank\n                        ? selectedGame.rank.map((rank: any) => ({\n                            label: (\n                              <Space size={5}>\n                                {rank.icon ? (\n                                  <Avatar\n                                    src={`${cdnUrl}/${rank.icon}`}\n                                    size={20}\n                                    shape=\"square\"\n                                  />\n                                ) : (\n                                  <></>\n                                )}\n                                <Text style={{ color: \"inherit\" }}>\n                                  {rank.name}\n                                </Text>\n                              </Space>\n                            ),\n                            value: rank.name,\n                          }))\n                        : []\n                    }\n                  />\n                </Form.Item>\n              </Col>\n            )}\n          </Row>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {t(`${action === \"create\" ? \"add game\" : \"edit\"}`)}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {!initialValues ? (\n        <Modal\n          {...modalProps}\n          width={600}\n          onCancel={closeGameModal}\n          open={gameModal}\n        >\n          <GameUserSelect\n            currentGameId={selectedGameId ? selectedGameId : null}\n            games={games}\n            onGameSelect={handleGameChanged}\n          />\n        </Modal>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Col, Row, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text, Title } = Typography;\n\ninterface GameUserSelectProps {\n  currentGameId?: number | null;\n  games: any[];\n  onGameSelect: (gameId: number) => void;\n}\n\nexport function GameUserSelect(props: GameUserSelectProps) {\n  const { currentGameId, games, onGameSelect } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Title\n        level={4}\n        style={{ marginTop: 0, marginBottom: 40, textAlign: \"center\" }}\n      >\n        {t(\"select game\")}\n      </Title>\n      <Row gutter={[20, 20]}>\n        {games.map((game: any) => (\n          <Col\n            key={game.id}\n            span={8}\n            style={{\n              textAlign: \"center\",\n              cursor: \"pointer\",\n            }} //FIXME: must check with somethingelse which is note max players\n            onClick={() => onGameSelect(game.id)}\n          >\n            <div\n              style={{\n                position: \"relative\",\n                paddingBottom: \"133%\",\n                marginBottom: 10,\n                borderRadius: 20,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                backgroundImage:\n                  game && game.image && game.image !== \"-\"\n                    ? `url(\"${cdnUrl}/${game.image}\")`\n                    : `url(\"/image/placeholder.png\")`,\n                transform:\n                  currentGameId && currentGameId == game.id\n                    ? \"scale(1.05)\"\n                    : undefined,\n                zIndex:\n                  currentGameId && currentGameId == game.id ? 1 : undefined,\n                boxShadow:\n                  currentGameId && currentGameId == game.id\n                    ? \"0px 0px 24px 0px rgba(71, 0, 252, 0.50)\"\n                    : undefined,\n              }}\n            />\n            <Text>{game.name}</Text>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useSubmit } from \"@remix-run/react\";\nimport { Result, Space, Typography } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { TextEditor, TiltButton } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nimport { json, type ActionFunction } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nconst { Text, Title } = Typography;\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.updateSignature(entries)\n    );\n    const { data } = await APIServer.clientFromSession(session).request(\n      APIServer.me()\n    );\n    session.set(\"me\", data);\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully update signature`,\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message:\n        e.errors && e.errors.length > 1 ? e.errors[0] : e.response.data.message,\n    });\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\nexport default function SettingsWebboard() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { user } = useContext(AuthContext);\n  const [loading, setLoading] = useState(true);\n  const [content, setContent] = useState<any>(\"\");\n  const submit = useSubmit();\n\n  const onSubmit = () => {\n    submit(\n      {\n        signature: content,\n      },\n      { method: \"post\" }\n    );\n  };\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Space size={10} direction=\"vertical\" style={{ marginBottom: 20 }}>\n        <Title level={2} style={{ margin: 0 }}>\n          {t(\"webboard\")}\n        </Title>\n        <Text>{t(\"signature\")}</Text>\n      </Space>\n      <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n        {!loading ? (\n          <TextEditor\n            id=\"signature\"\n            initialValues={user.signature && user.signature}\n            fetcher={fetcher}\n            onChange={setContent}\n          />\n        ) : (\n          <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n        )}\n        <TiltButton\n          color=\"primary\"\n          onClick={onSubmit}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"save\")}\n        </TiltButton>\n      </Space>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    const albumRes = await APIServer.clientFromSession(session).request(\n      APIServer.createAlbum(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully created album`,\n    });\n    await commitSession(session);\n\n    console.log(\"albumRes\", albumRes);\n\n    return json({\n      success: \"create-album\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to create album\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-album\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { parseAndConvert } from \"~/utils/helper\";\nimport { dummyParty } from \"~/components/common\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    const partyRes = await APIServer.clientFromSession(session).request(\n      APIServer.createParty(toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully created party`,\n    });\n    await commitSession(session);\n    return json({\n      success: \"create-party\",\n      gameId: partyRes.data ? partyRes.data.gameId : null,\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: \"failed to create party\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-party\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\");\n  const uuid = formData.get(\"uuid\");\n\n  if (id) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.deleteAlbum(id)\n      );\n\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully deleted album`,\n      });\n\n      await commitSession(session);\n\n      return redirect(`/users/${uuid}/my-album`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n    } catch (e: any) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"delete failed\",\n      });\n      console.log(\"e\", e);\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import { json, type ActionFunction } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const rarity = session.get(\"rarity\");\n  let reward: any;\n\n  try {\n    const getRewardRes = await APIServer.clientFromSession(session).request(\n      APIServer.claimReward(rarity)\n    );\n\n    reward = getRewardRes.data;\n    session.set(\"gift\", reward.url);\n\n    const { data } = await APIServer.clientFromSession(session).request(\n      APIServer.me()\n    );\n    session.set(\"me\", data);\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully claim reward`,\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message:\n        e.errors && e.errors.length > 1 ? e.errors[0] : e.response.data.message,\n    });\n  }\n\n  return json(\n    { reward: reward },\n    {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async () => {\n  let homeBanners: any[] = [];\n  let featuredTournaments: any[] = [];\n  try {\n    const homeBannersRes = await APIServer.clientFromSession().request(\n      APIServer.getHomeBanner({ featured: true })\n    );\n    if (homeBannersRes.data) {\n      homeBanners = homeBannersRes.data;\n    }\n    const tournamentRes = await APIServer.clientFromSession().request(\n      APIServer.getTournaments({ featured: true })\n    );\n    if (tournamentRes.data) {\n      featuredTournaments = tournamentRes.data;\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n\n  let filteredHomeBanners = homeBanners.filter(\n    (item: any) => item.image !== null\n  );\n\n  return json({ homeBanners: filteredHomeBanners, featuredTournaments });\n};\n", "import { json, type LoaderArgs } from \"@remix-run/node\";\nimport {\n  googleAuthenticator,\n  lineAuthenticator,\n} from \"~/configs/oAuth2.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const url = new URL(request.url) as any;\n  const provider = url.searchParams.get(\"provider\");\n\n  switch (provider) {\n    case \"line\":\n      return lineAuthenticator.authenticate(\"line\", request);\n    case \"google\":\n      return googleAuthenticator.authenticate(\"google\", request);\n    default:\n      return json({ errorMessage: \"invalid provider\" });\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\n// import { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { isEmail, isPhone } from \"~/utils/helper\";\nimport * as APIServer from \"~/api\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }: any) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const currentAction = formData.get(\"action\");\n  const credential = formData.get(\"credential\");\n  const otpNum = formData.get(\"otpNum\");\n  const refCode = formData.get(\"refCode\");\n  let otpRef = \"\" as string;\n\n  if (currentAction === \"resend-otp\") {\n    if (isEmail(credential)) {\n      try {\n        const reSendOtpRes = await APIServer.clientFromSession().request(\n          APIServer.reSendOtpEmail({ email: credential })\n        );\n        if (reSendOtpRes) {\n          const otpData = reSendOtpRes.data;\n          otpRef = otpData.data.reference_code;\n        }\n      } catch (e: any) {\n        console.log(e.response.data.message);\n\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n        console.log(\"e\", e);\n      }\n    } else if (isPhone(credential)) {\n      try {\n        const reSendOtpRes = await APIServer.clientFromSession().request(\n          APIServer.reSendOtpPhoneNumber({ phoneNumber: credential })\n        );\n        if (reSendOtpRes) {\n          const otpData = reSendOtpRes.data;\n          otpRef = otpData.data.reference_code;\n        }\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n        console.log(\"e\", e);\n      }\n    }\n    return json({ refCode: otpRef });\n  } else if (currentAction === \"verify-otp\") {\n    let isOtpVerified = false as boolean;\n\n    if (isEmail(credential)) {\n      try {\n        const verifyEmailOtpRes = await APIServer.clientFromSession().request(\n          APIServer.verifyEmailOtp({\n            email: credential,\n            referenceCode: refCode,\n            otpCode: otpNum,\n          })\n        );\n        if (verifyEmailOtpRes) {\n          const verifyEmailOtpData = verifyEmailOtpRes.data;\n          isOtpVerified = verifyEmailOtpData.success;\n        }\n      } catch (e: any) {\n        console.log(\"e\", e);\n      }\n    } else if (isPhone(credential)) {\n      try {\n        const verifyPhoneNumberOtpRes =\n          await APIServer.clientFromSession().request(\n            APIServer.verifyPhoneNumberOtp({\n              phoneNumber: credential,\n              referenceCode: refCode,\n              otpCode: otpNum,\n            })\n          );\n\n        if (verifyPhoneNumberOtpRes) {\n          const verifyPhoneNumberOtpData = verifyPhoneNumberOtpRes.data;\n          isOtpVerified = verifyPhoneNumberOtpData.success;\n        }\n      } catch (e: any) {\n        console.log(\"e\", e);\n      }\n    }\n\n    return json({ otpVerified: isOtpVerified });\n  } else {\n    let userExist = false as boolean;\n    if (isEmail(credential)) {\n      try {\n        const searchRes = await APIServer.clientFromSession().request(\n          APIServer.searchEmail(credential)\n        );\n        if (searchRes.data) {\n          const userSearchData = searchRes.data;\n          userExist = userSearchData.data.is_found;\n        }\n\n        if (!userExist) {\n          try {\n            const sendOtpRes = await APIServer.clientFromSession().request(\n              APIServer.sendOtpEmail({ email: credential })\n            );\n            if (sendOtpRes) {\n              const otpData = sendOtpRes.data;\n              otpRef = otpData.data.reference_code;\n            }\n          } catch (e: any) {\n            console.log(\"error from otp\", e.response.data.message.message);\n            session.flash(\"flashMessage\", {\n              type: \"error\",\n              message: e.response.data.message.message,\n            });\n          }\n        }\n      } catch (e: any) {\n        console.log(\"e\", e.response.data.message);\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n    } else if (isPhone(credential)) {\n      try {\n        const searchRes = await APIServer.clientFromSession().request(\n          APIServer.searchPhoneNumber(credential)\n        );\n        if (searchRes.data) {\n          const userSearchData = searchRes.data;\n          userExist = userSearchData.data.is_found;\n        }\n\n        if (!userExist) {\n          try {\n            const sendOtpRes = await APIServer.clientFromSession().request(\n              APIServer.sendOtpPhoneNumber({ phoneNumber: credential })\n            );\n            if (sendOtpRes) {\n              const otpData = sendOtpRes.data;\n              otpRef = otpData.data.reference_code;\n            }\n          } catch (e: any) {\n            console.log(\"e\", e.response.data.message);\n            session.flash(\"flashMessage\", {\n              type: \"error\",\n              message: e.response.data.message,\n            });\n          }\n        }\n      } catch (e: any) {\n        console.log(\"e\", e.response.data.message);\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message: e.response.data.message,\n        });\n        console.log(\"e\", e);\n      }\n    }\n    if (userExist) {\n      return json(\n        { credentialExist: true },\n        {\n          headers: { \"Set-Cookie\": await commitSession(session) },\n        }\n      );\n    } else {\n      return json(\n        { refCode: otpRef, credentialExist: false },\n        {\n          headers: { \"Set-Cookie\": await commitSession(session) },\n        }\n      );\n    }\n  }\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get('id') as string;\n  const data = formData.get('data') as string;\n  const toSubmitData = JSON.parse(data);\n  let party: any = null; // FIXME: change this to null\n\n  if (id) {\n    try {\n      const partyRes = await APIServer.clientFromSession(session).request(\n        APIServer.updateParty(id, toSubmitData)\n      );\n      if (partyRes && partyRes.data) {\n        party = partyRes.data;\n      }\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `Successfully update party`,\n      });\n      await commitSession(session);\n      return json({\n        success: 'update-party',\n        party,\n      });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'update party failed',\n      });\n      await commitSession(session);\n      // return json({\n      //   success: 'update-party',\n      //   party,\n      // }); // FIXME: remove this out\n      return null;\n    }\n  }\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { readFileSync } from \"fs\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const pdf = readFileSync(`./public/privacy.pdf`);\n  return new Response(pdf, {\n    status: 200,\n    headers: {\n      \"Content-Type\": \"application/pdf\",\n    },\n  });\n};\n", "import { redirect, type LoaderFunction } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { uuid } = params;\n  const session = await getSessionFromRequest(request);\n  session.set(\"uuidTeamToJoin\", uuid);\n  let toJoinTeams = session.get(\"toJoinTeams\");\n  let team: any = null;\n\n  try {\n    const teamRes = await APIServer.clientFromSession().request(\n      APIServer.getTeam(uuid)\n    );\n    if (teamRes.data) {\n      team = teamRes.data;\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n\n  if (!toJoinTeams) {\n    toJoinTeams = [team];\n  } else {\n    const inIndex = toJoinTeams.findIndex((t: any) => t.id == team.id);\n    if (inIndex < 0) {\n      toJoinTeams.push(team);\n    } else {\n      toJoinTeams.splice(inIndex, 1, team);\n    }\n  }\n  session.set(\"toJoinTeams\", toJoinTeams);\n\n  return redirect(`/tournaments/${team.tournamentId}`, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { readFileSync } from \"fs\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const pdf = readFileSync(`./public/terms.pdf`);\n  return new Response(pdf, {\n    status: 200,\n    headers: {\n      \"Content-Type\": \"application/pdf\",\n    },\n  });\n};\n", "import { useCallback, useContext, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigate,\n  useNavigation,\n  useRevalidator,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Affix, Col, Row, Skeleton, Typography, notification } from \"antd\";\nimport * as APIServer from \"~/api\";\nimport {\n  IndexFilter,\n  Loading,\n  Media,\n  OverlayBg,\n  Pagination,\n  TiltButton,\n} from \"~/components/common\";\nimport {\n  WebboardIndexHeader,\n  WebboardIndexSlider,\n  WebboardLists,\n  WebboardTags,\n} from \"~/components/pages/Webboard\";\nimport { debounce, isEmpty, isNil, omitBy } from \"lodash\";\nimport { convertToObjectWithArrays, resetFetcher } from \"~/utils/helper\";\nimport { AuthContext } from \"~/contexts\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nconst { Text } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let toQuerySearchParams = convertToObjectWithArrays(searchParams, [\n    \"rooms\",\n    \"games\",\n  ]);\n  let webboards: any;\n  let featuredWebboards: any[] = [];\n  const me = session.get(\"me\");\n  let webboardRes: any;\n  let featuredWebboardRes: any;\n\n  try {\n    if (me) {\n      webboardRes = await APIServer.clientFromSession(session).request(\n        APIServer.getWebboards(toQuerySearchParams)\n      );\n      featuredWebboardRes = await APIServer.clientFromSession(session).request(\n        APIServer.getWebboards({ featured: true })\n      );\n    } else {\n      webboardRes = await APIServer.clientFromSession().request(\n        APIServer.getWebboards(toQuerySearchParams)\n      );\n      featuredWebboardRes = await APIServer.clientFromSession().request(\n        APIServer.getWebboards({ featured: true })\n      );\n    }\n\n    if (webboardRes.data) {\n      webboards = webboardRes.data;\n    }\n    if (featuredWebboardRes.data) {\n      featuredWebboards = featuredWebboardRes.data;\n    }\n  } catch (e) {\n    console.log(\"webboards index error\", e);\n  }\n\n  return json(\n    { searchParams, featuredWebboards, webboards },\n    {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n\nexport default function WebboardIndex() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.webboards\");\n  const revalidator = useRevalidator();\n  const { searchParams, featuredWebboards, webboards } = useLoaderData();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const { games, rooms, reactionOptions, tags } = routeLoader;\n  const [api, contextHolder] = notification.useNotification();\n\n  const filters = [\n    {\n      type: \"tilt-button\",\n      name: \"rooms\",\n      title: t(\"select room\"),\n      options: rooms.map((room: any) => ({\n        label: t(room.nameEn),\n        value: room.id,\n      })),\n    },\n    {\n      type: \"avatar\",\n      name: \"games\",\n      title: t(\"select game\"),\n      options:\n        games.length > 0\n          ? games.map((game: any) => ({\n              label: game.name,\n              value: game.id,\n              image: game.iconUrl,\n            }))\n          : [],\n    },\n  ];\n\n  const handleFilter = useCallback(\n    (name: string, value: string | number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (searchParams && searchParams[name]) {\n        const values = searchParams[name].split(\",\");\n        const containedIndex = values.indexOf(`${value}`);\n        if (containedIndex > -1) {\n          values.splice(containedIndex, 1);\n        } else {\n          values.push(value.toString());\n        }\n        if (values.length) {\n          newSearchParams[name] = values.join(\",\");\n        } else {\n          delete newSearchParams[name];\n        }\n      } else {\n        newSearchParams[name] = `${value}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  const handleDebounceFilter = useMemo(\n    () => debounce(handleFilter, 300),\n    [handleFilter]\n  );\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-webboard\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <div style={{ paddingBlock: 30 }}>\n      {featuredWebboards && featuredWebboards.length > 0 && (\n        <WebboardIndexSlider data={featuredWebboards} />\n      )}\n      <div\n        style={{\n          paddingInline: \"3.5%\",\n          paddingBlock: 20,\n          maxWidth: 1440,\n          marginInline: \"auto\",\n        }}\n      >\n        <Row gutter={[30, 10]}>\n          <Col span={24} md={{ span: 6, order: 0 }}>\n            <Affix offsetTop={80}>\n              <div\n                className=\"hide-scrollbar\"\n                style={{\n                  maxHeight: \"calc(100vh - 60px)\",\n                  overflowY: \"auto\",\n                }}\n              >\n                <IndexFilter\n                  values={searchParams}\n                  onFilterClicked={handleDebounceFilter}\n                  filters={filters}\n                  mobileAppendChildren={\n                    <WebboardTags data={tags} fetcher={fetcher} mobileStyle />\n                  }\n                />\n              </div>\n            </Affix>\n          </Col>\n          <Col span={24} md={{ span: 6, order: 2 }}>\n            <Media greaterThan=\"sm\">\n              <Affix offsetTop={80}>\n                <div>\n                  <WebboardTags data={tags} fetcher={fetcher} />\n                </div>\n              </Affix>\n            </Media>\n          </Col>\n          <Col span={24} md={{ span: 12, order: 1 }}>\n            <WebboardIndexHeader\n              fetcher={fetcher}\n              searchParams={searchParams}\n              submit={submit}\n            >\n              <TiltButton\n                color=\"primary\"\n                onClick={() =>\n                  user ? navigate(\"/webboards/new\") : openLoginModal()\n                }\n              >\n                <Text>{t(\"new post\")}</Text>\n              </TiltButton>\n            </WebboardIndexHeader>\n            <div style={{ marginTop: 30 }}>\n              {navigation.state === \"loading\" &&\n              navigation.location.pathname === location.pathname ? (\n                <Skeleton active />\n              ) : (\n                <>\n                  <WebboardLists\n                    data={webboards.items}\n                    fetcher={fetcher}\n                    reactionOptions={reactionOptions}\n                  />\n                  <Pagination\n                    currentPage={webboards.page}\n                    totalPages={webboards.totalPages}\n                    onPageClicked={handleChangePage}\n                  />\n                </>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </div>\n      {contextHolder}\n      {navigation.state === \"loading\" && (\n        <OverlayBg style={{ position: \"fixed\", zIndex: 100 }} opacity={0.7}>\n          <Loading />\n        </OverlayBg>\n      )}\n    </div>\n  );\n}\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get('id') as string;\n  let party: any = null; // FIXME: change this to null\n\n  if (id) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.boostParty(id)\n      );\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `successfully boosted party`,\n      });\n      await commitSession(session);\n      // if (boostRes.data) {\n      //   party = boostRes.data;\n      // }\n      return json({ success: 'boost-party', party });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'boosted party failed',\n      });\n      await commitSession(session);\n      // return json({ success: \"boost-party\", party }); // FIXME: remove this out\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\") as string;\n  const type = formData.get(\"type\") as string;\n\n  if (id) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        type === \"comment\"\n          ? APIServer.deleteComment(id)\n          : APIServer.deleteWebboard(id)\n      );\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully deleted ${type ? type : \"post\"}`,\n      });\n      if (type === \"webboard\") {\n        return redirect(`/webboards`, {\n          headers: {\n            \"Set-Cookie\": await commitSession(session),\n          },\n        });\n      } else {\n        await commitSession(session);\n        return json({\n          postId: id,\n          success: `delete-comment`,\n        });\n      }\n    } catch (e: any) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"delete failed\",\n      });\n      console.log(\"e\", e);\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import type { ActionFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { commitSession, getSessionFromRequest } from '~/session.server';\nimport * as APIServer from '~/api';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get('id') as string;\n  const gameId = formData.get('gameId') as string;\n\n  if (id) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        APIServer.leaveParty(id)\n      );\n      session.flash('flashMessage', {\n        type: 'success',\n        message: `successfully left party`,\n      });\n      await commitSession(session);\n      return json({ success: 'leave-party', gameId: gameId });\n    } catch (e) {\n      session.flash('flashMessage', {\n        type: 'error',\n        message: 'leave party failed',\n      });\n      await commitSession(session);\n      return json(null);\n    }\n  }\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n\n  if (searchParams.id) {\n    try {\n      const answerRes = await APIServer.clientFromSession(session).request(\n        APIServer.getMyPollAnswer(searchParams.id)\n      );\n      return json({\n        answer: answerRes.data ? answerRes.data.pollOptionId : null,\n        pollId: searchParams.id,\n      });\n    } catch (e) {\n      return json({\n        answer: null,\n        pollId: searchParams.id,\n      });\n    }\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\") as string;\n  const type = formData.get(\"type\") as string;\n  const reason = formData.get(\"reason\") as string;\n\n  if (id && reason) {\n    try {\n      await APIServer.clientFromSession(session).request(\n        type === \"comment\"\n          ? APIServer.reportComment(id, { reason })\n          : APIServer.reportWebboard(id, { reason })\n      );\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully reported ${type ? type : \"post\"}`,\n      });\n    } catch (e: any) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: e.response.data.message,\n      });\n    }\n  }\n  await commitSession(session);\n  return json({ success: `report-${type ? type : \"post\"}` });\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { dummyPoll2 } from \"~/components/common\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const id = formData.get(\"id\") as string;\n  const answerId = formData.get(\"answerId\") as string;\n\n  if (id) {\n    try {\n      const pollRes = await APIServer.clientFromSession(session).request(\n        APIServer.submitPoll(id, answerId)\n      );\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `Successfully voted`,\n      });\n      await commitSession(session);\n      return json({\n        answer: answerId,\n        pollId: id,\n        poll: pollRes && pollRes.data ? pollRes.data.poll : null,\n      });\n    } catch (e) {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"vote failed\",\n      });\n      await commitSession(session);\n      return null;\n    }\n  }\n};\n", "import { useFetcher } from \"@remix-run/react\";\nimport {\n  type ActionFunction,\n  redirect,\n  json,\n  V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { useCallback, useContext, useState } from \"react\";\nimport {\n  CampaignActions,\n  CampaignQuiz,\n  CampaignStart,\n} from \"~/components/pages/Campaign\";\nimport { getRandomInt, randomRarity } from \"~/utils/helper\";\n\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { AuthContext } from \"~/contexts\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const campaignResult: any = formdata.get(\"campaignResult\");\n  const campaignResultData = JSON.parse(campaignResult);\n  const redirection = formdata.get(\"redirection\");\n  const rarity = randomRarity();\n  session.set(\"rarity\", rarity);\n  session.set(\"campaignResult\", campaignResultData);\n\n  session.unset(\"gift\");\n  if (redirection === \"true\") {\n    session.flash(\"rerandom\", true);\n    return redirect(\"/campaign/result\", {\n      headers: { \"Set-Cookie\": await commitSession(session) },\n    });\n  } else {\n    session.flash(\"redirectUri\", \"/campaign/result\");\n    session.flash(\"rerandom\", true);\n    return json(null, {\n      headers: { \"Set-Cookie\": await commitSession(session) },\n    });\n  }\n};\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E15\u0E2D\u0E1A\u0E04\u0E33\u0E16\u0E32\u0E21\u0E2B\u0E32\u0E09\u0E32\u0E22\u0E32 \u0E41\u0E25\u0E49\u0E27\u0E41\u0E0A\u0E23\u0E4C\u0E43\u0E2B\u0E49\u0E42\u0E25\u0E01\u0E23\u0E39\u0E49\u0E27\u0E48\u0E32x\u0E23\u0E36\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23 !\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    {\n      property: \"og:title\",\n      content: \"\u0E17\u0E32\u0E22\u0E19\u0E34\u0E2A\u0E31\u0E22 ...\u0E04\u0E38\u0E13\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23\u0E40\u0E27\u0E25\u0E32\u0E40\u0E25\u0E48\u0E19 Valorant | Ctrlg.gg\",\n    },\n    {\n      property: \"og:image\",\n      content: \"https://d2007awoau332v.cloudfront.net/assets/quiz.jpg\",\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E15\u0E2D\u0E1A\u0E04\u0E33\u0E16\u0E32\u0E21\u0E2B\u0E32\u0E09\u0E32\u0E22\u0E32 \u0E41\u0E25\u0E49\u0E27\u0E41\u0E0A\u0E23\u0E4C\u0E43\u0E2B\u0E49\u0E42\u0E25\u0E01\u0E23\u0E39\u0E49\u0E27\u0E48\u0E32x\u0E23\u0E36\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23 !\",\n    },\n  ];\n};\n\nexport default function CampaignIndex() {\n  const fetcher = useFetcher();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [step, setStep] = useState<number>(0);\n  const [toSubmit, setToSubmit] = useState<string>(\"\");\n\n  const next = () => {\n    setStep((prev: number) => prev + 1);\n  };\n\n  const handleQuizFinished = useCallback(\n    (values: any) => {\n      if (user) {\n        fetcher.submit(\n          {\n            campaignResult: JSON.stringify({\n              result: values,\n              character: getRandomInt(1, 16),\n              powers: [\n                getRandomInt(1, 5),\n                getRandomInt(1, 5),\n                getRandomInt(1, 5),\n                getRandomInt(1, 5),\n              ],\n              alias: getRandomInt(1, 20),\n            }),\n            redirection: true,\n          },\n          { method: \"post\" }\n        );\n      } else {\n        setToSubmit(values);\n        next();\n      }\n    },\n    [user]\n  );\n\n  const handleSubmitQuiz = useCallback(\n    (withLogin: boolean) => {\n      if (withLogin) {\n        openLoginModal();\n      }\n      fetcher.submit(\n        {\n          campaignResult: JSON.stringify({\n            result: toSubmit,\n            character: getRandomInt(1, 16),\n            powers: [\n              getRandomInt(1, 5),\n              getRandomInt(1, 5),\n              getRandomInt(1, 5),\n              getRandomInt(1, 5),\n            ],\n            alias: getRandomInt(1, 20),\n          }),\n          redirection: !withLogin || user ? true : false,\n        },\n        { method: \"post\" }\n      );\n    },\n    [toSubmit, user]\n  );\n\n  return (\n    <>\n      {step == 1 ? (\n        <CampaignQuiz onSubmit={handleQuizFinished} />\n      ) : step == 2 ? (\n        <CampaignActions onSubmit={handleSubmitQuiz} />\n      ) : (\n        <CampaignStart onNext={next} />\n      )}\n    </>\n  );\n}\n", "import {\n  Card,\n  Divider,\n  Flex,\n  Typography,\n  Image,\n  Modal,\n  Space,\n  List,\n} from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { TiltButton } from \"~/components/common\";\nimport { useEffect, useState } from \"react\";\nconst { Text, Title } = Typography;\n\ninterface CampaignActionsProps {\n  onSubmit: (withLogin: boolean) => void;\n}\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n  styles: {\n    body: { padding: \"3px 5px\", maxWidth: \"100%\" },\n  },\n} as any;\n\nexport function CampaignActions(props: CampaignActionsProps) {\n  const { t } = useTranslation();\n  const { onSubmit } = props;\n  const [rareModal, setRareModal] = useState<boolean>(false);\n  const [isMobile, setIsMobile] = useState<boolean>(false);\n\n  useEffect(() => {\n    const userAgent = navigator.userAgent || \"\";\n\n    // Check for common patterns in the userAgent string to determine device type\n    const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(userAgent);\n\n    setIsMobile(isMobile);\n  }, []);\n\n  return (\n    <Card\n      bordered={false}\n      style={{\n        // position: \"relative\",\n        maxWidth: 700,\n        marginInline: \"auto\",\n        color: \"#fff\",\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n        backgroundImage: `url('/image/campaign-background-2.png')`,\n        backgroundSize: \"cover\",\n        borderRadius: 30,\n      }}\n      bodyStyle={{\n        paddingBlock: !isMobile ? 120 : 70,\n        paddingInline: \"6%\",\n      }}\n    >\n      <Flex\n        vertical\n        justify=\"center\"\n        gap={50}\n        style={{ paddingInline: \"7.5%\", textAlign: \"center\" }}\n      >\n        <Title\n          style={{\n            margin: 0,\n            color: \"inherit\",\n            fontSize: !isMobile ? undefined : 20,\n          }}\n          level={2}\n        >\n          {t(\"finished quiz already, let's see who you look alike\") + \"!\"}\n        </Title>\n        {/* <div style={{ position: \"relative\" }}> */}\n        <TiltButton\n          color=\"pink\"\n          onClick={() => onSubmit(true)}\n          style={{\n            width: \"100%\",\n            fontSize: !isMobile ? 24 : 19,\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              top: -60,\n              right: 0,\n              width: \"65px\",\n              height: \"65px\",\n            }}\n          >\n            <Image\n              src=\"/image/CTRLG-frame-reward.png\"\n              alt=\"Button Image\"\n              preview={false}\n              onClick={(e) => {\n                e.stopPropagation();\n                setRareModal(true);\n              }}\n            />\n          </div>\n          {t(\"connect with CTRL G account to get reward and display result\")}\n        </TiltButton>\n\n        {/* </div> */}\n        <Divider plain style={{ marginBlock: 0 }}>\n          <Title\n            style={{\n              margin: 0,\n              color: \"#fff\",\n            }}\n            level={5}\n          >\n            {t(\"or\")}\n          </Title>\n        </Divider>\n        <Card\n          onClick={() => onSubmit(false)}\n          style={{\n            backgroundColor: \"transparent\",\n            borderColor: \"#fff\",\n            borderRadius: 40,\n            cursor: \"pointer\",\n          }}\n          bodyStyle={{ padding: 10 }}\n        >\n          <Text style={{ fontSize: 24, color: \"#fff\" }}>\n            {t(\"display result immediately\")}\n          </Text>\n        </Card>\n      </Flex>\n      <Modal\n        {...modalProps}\n        onCancel={() => setRareModal(false)}\n        open={rareModal}\n      >\n        <div\n          style={{\n            justifyContent: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <Title level={5}>{t(\"have a chance to get rare card\")}</Title>\n          <Image src={\"/image/CTRLG-frame-reward.png\"} width={\"30%\"} />\n          <div\n            style={{\n              margin: \"0 50px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Title\n              level={5}\n              style={{\n                marginTop: \"10px\",\n                textAlign: \"left\",\n                textDecoration: \"underline\",\n              }}\n            >\n              {t(\"rare rules\")}\n            </Title>\n            <List style={{ marginLeft: \"25px\", textAlign: \"center\" }}>\n              <List.Item>\n                <Text>{t(\"1. rule rare card\")}</Text>\n              </List.Item>\n              <List.Item>\n                <Text>{t(\"2. rule rare card\")}</Text>\n              </List.Item>\n              <List.Item>\n                <Text>{t(\"3. rule rare card\")}</Text>\n              </List.Item>\n              <List.Item>\n                <Text style={{ marginRight: \"25px\" }}>\n                  {t(\"4. rule rare card\")}\n                </Text>\n              </List.Item>\n            </List>\n          </div>\n          <TiltButton\n            color=\"primary\"\n            onClick={() => setRareModal(false)}\n            style={{ marginTop: \"10px\" }}\n          >\n            <Space>{t(\"close\")}</Space>\n          </TiltButton>\n        </div>\n      </Modal>\n    </Card>\n  );\n}\n", "import { Card, Col, Flex, Row, Typography } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nconst { Title } = Typography;\n\ninterface CampaignQuizProps {\n  onSubmit: (values: any) => void;\n}\n\nexport function CampaignQuiz(props: CampaignQuizProps) {\n  const { onSubmit } = props;\n  const { t } = useTranslation();\n  const [step, setStep] = useState<number>(0);\n  const [values, setValues] = useState<string>(\"\");\n  const [isMobile, setIsMobile] = useState<boolean>(false);\n  const questions = [\n    {\n      choices: [\n        {\n          label: \"\u0E40\u0E25\u0E48\u0E19\u0E04\u0E19\u0E40\u0E14\u0E35\u0E22\u0E27\",\n          value: 0,\n        },\n        {\n          label: \"\u0E40\u0E25\u0E48\u0E19\u0E01\u0E31\u0E1A\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\",\n          value: 1,\n        },\n      ],\n    },\n    {\n      choices: [\n        {\n          label: \"\u0E40\u0E19\u0E49\u0E19\u0E1C\u0E25\",\n          value: 0,\n        },\n        {\n          label: \"\u0E40\u0E19\u0E49\u0E19\u0E42\u0E22\u0E19\",\n          value: 1,\n        },\n      ],\n    },\n    {\n      choices: [\n        {\n          label: \"\u0E1B\u0E37\u0E19\",\n          value: 0,\n        },\n        {\n          label: \"Spike\",\n          value: 1,\n        },\n      ],\n    },\n    {\n      choices: [\n        {\n          label: \"\u0E08\u0E35\u0E1A\u0E01\u0E48\u0E2D\u0E19\",\n          value: 0,\n        },\n        {\n          label: \"\u0E42\u0E14\u0E19\u0E08\u0E35\u0E1A\",\n          value: 1,\n        },\n      ],\n    },\n    {\n      label:\n        \"Q5 : Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n      choices: [\n        {\n          label: \"\u0E14\u0E33\u0E14\u0E49\u0E32\u0E19\",\n          value: 0,\n        },\n        {\n          label: \"\u0E14\u0E33\u0E40\u0E07\u0E32\",\n          value: 1,\n        },\n      ],\n    },\n  ];\n\n  const handleSelect = useCallback(\n    (value: number) => {\n      const newValues = `${values}${value.toString()}`;\n      setValues(newValues);\n      setStep((prev: number) => prev + 1);\n      if (step == 4) {\n        onSubmit(newValues);\n      }\n    },\n    [values]\n  );\n\n  useEffect(() => {\n    const userAgent = navigator.userAgent || \"\";\n\n    // Check for common patterns in the userAgent string to determine device type\n    const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(userAgent);\n\n    setIsMobile(isMobile);\n  }, []);\n\n  return values.length < 5 ? (\n    <Card\n      bordered={false}\n      style={{\n        position: \"relative\",\n        maxWidth: 800,\n        width: \"80%\",\n        marginInline: \"auto\",\n        color: \"#fff\",\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n        backgroundImage: `url('/image/campaign-background-1.png')`,\n        backgroundSize: \"cover\",\n        borderRadius: 30,\n      }}\n      bodyStyle={{\n        paddingBlock: !isMobile ? 120 : 70,\n        paddingInline: \"6%\",\n      }}\n    >\n      <Flex vertical justify=\"center\" gap={10} style={{ textAlign: \"center\" }}>\n        <Title\n          style={{\n            margin: 0,\n            color: \"inherit\",\n            fontFamily: \"A4SPEED\",\n            fontSize: !isMobile ? 50 : 35,\n          }}\n          level={1}\n        >\n          {`${t(\"Question\")} ${step + 1}`}\n        </Title>\n        <Row gutter={[50, 30]} style={{ marginTop: !isMobile ? 40 : 3 }}>\n          <Col span={24} md={12}>\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              style={{\n                minHeight: !isMobile ? 200 : 150,\n                borderRadius: 20,\n                backgroundImage: \"url('/image/choice-a.jpg')\",\n                backgroundRepeat: \"repeat\",\n                backgroundSize: \"cover\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => handleSelect(0)}\n            >\n              <Title\n                style={{\n                  margin: 0,\n                  // fontFamily: \"A4SPEED\",\n                  color: \"#fff\",\n                }}\n                level={1}\n              >\n                {questions[step].choices[0].label}\n              </Title>\n            </Flex>\n          </Col>\n          <Col span={24} md={12}>\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              style={{\n                minHeight: !isMobile ? 200 : 150,\n                borderRadius: 20,\n                backgroundImage: \"url('/image/choice-b.jpg')\",\n                backgroundRepeat: \"repeat\",\n                backgroundSize: \"cover\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => handleSelect(1)}\n            >\n              <Title\n                style={{\n                  margin: 0,\n                  // fontFamily: \"A4SPEED\",\n                  color: \"#fff\",\n                }}\n                level={1}\n              >\n                {questions[step].choices[1].label}\n              </Title>\n            </Flex>\n          </Col>\n        </Row>\n      </Flex>\n    </Card>\n  ) : (\n    <></>\n  );\n}\n", "var D=(r,n,e)=>{if(!n.has(r))throw TypeError(\"Cannot \"+e)};var t=(r,n,e)=>(D(r,n,\"read from private field\"),e?e.call(r):n.get(r)),o=(r,n,e)=>{if(n.has(r))throw TypeError(\"Cannot add the same private member more than once\");n instanceof WeakSet?n.add(r):n.set(r,e)},p=(r,n,e,i)=>(D(r,n,\"write to private field\"),i?i.call(r,e):n.set(r,e),e);var w,b=class{constructor(){o(this,w,void 0);this.register=n=>{t(this,w).push(n)};this.unregister=n=>{let e;for(;(e=t(this,w).indexOf(n))!==-1;)t(this,w).splice(e,1)};this.backendChanged=n=>{for(let e of t(this,w))e.backendChanged(n)};p(this,w,[])}};w=new WeakMap;var a,f,c,d,h,x,T,E,v,y,g,l=class l{constructor(n,e,i){o(this,a,void 0);o(this,f,void 0);o(this,c,void 0);o(this,d,void 0);o(this,h,void 0);o(this,x,(n,e,i)=>{if(!i.backend)throw new Error(`You must specify a 'backend' property in your Backend entry: ${JSON.stringify(i)}`);let u=i.backend(n,e,i.options),s=i.id,k=!i.id&&u&&u.constructor;if(k&&(s=u.constructor.name),s)k&&console.warn(`Deprecation notice: You are using a pipeline which doesn't include backends' 'id'.\n        This might be unsupported in the future, please specify 'id' explicitely for every backend.`);else throw new Error(`You must specify an 'id' property in your Backend entry: ${JSON.stringify(i)}\n        see this guide: https://github.com/louisbrunner/dnd-multi-backend/tree/master/packages/react-dnd-multi-backend#migrating-from-5xx`);if(t(this,c)[s])throw new Error(`You must specify a unique 'id' property in your Backend entry:\n        ${JSON.stringify(i)} (conflicts with: ${JSON.stringify(t(this,c)[s])})`);return{id:s,instance:u,preview:i.preview??!1,transition:i.transition,skipDispatchOnTransition:i.skipDispatchOnTransition??!1}});this.setup=()=>{if(!(typeof window>\"u\")){if(l.isSetUp)throw new Error(\"Cannot have two MultiBackends at the same time.\");l.isSetUp=!0,t(this,T).call(this,window),t(this,c)[t(this,a)].instance.setup()}};this.teardown=()=>{typeof window>\"u\"||(l.isSetUp=!1,t(this,E).call(this,window),t(this,c)[t(this,a)].instance.teardown())};this.connectDragSource=(n,e,i)=>t(this,g).call(this,\"connectDragSource\",n,e,i);this.connectDragPreview=(n,e,i)=>t(this,g).call(this,\"connectDragPreview\",n,e,i);this.connectDropTarget=(n,e,i)=>t(this,g).call(this,\"connectDropTarget\",n,e,i);this.profile=()=>t(this,c)[t(this,a)].instance.profile();this.previewEnabled=()=>t(this,c)[t(this,a)].preview;this.previewsList=()=>t(this,f);this.backendsList=()=>t(this,d);o(this,T,n=>{t(this,d).forEach(e=>{e.transition&&n.addEventListener(e.transition.event,t(this,v))})});o(this,E,n=>{t(this,d).forEach(e=>{e.transition&&n.removeEventListener(e.transition.event,t(this,v))})});o(this,v,n=>{let e=t(this,a);if(t(this,d).some(i=>i.id!==t(this,a)&&i.transition&&i.transition.check(n)?(p(this,a,i.id),!0):!1),t(this,a)!==e){t(this,c)[e].instance.teardown(),Object.keys(t(this,h)).forEach(k=>{let B=t(this,h)[k];B.unsubscribe(),B.unsubscribe=t(this,y).call(this,B.func,...B.args)}),t(this,f).backendChanged(this);let i=t(this,c)[t(this,a)];if(i.instance.setup(),i.skipDispatchOnTransition)return;let u=n.constructor,s=new u(n.type,n);n.target?.dispatchEvent(s)}});o(this,y,(n,e,i,u)=>t(this,c)[t(this,a)].instance[n](e,i,u));o(this,g,(n,e,i,u)=>{let s=`${n}_${e}`,k=t(this,y).call(this,n,e,i,u);return t(this,h)[s]={func:n,args:[e,i,u],unsubscribe:k},()=>{t(this,h)[s].unsubscribe(),delete t(this,h)[s]}});if(!i||!i.backends||i.backends.length<1)throw new Error(`You must specify at least one Backend, if you are coming from 2.x.x (or don't understand this error)\n        see this guide: https://github.com/louisbrunner/dnd-multi-backend/tree/master/packages/react-dnd-multi-backend#migrating-from-2xx`);p(this,f,new b),p(this,c,{}),p(this,d,[]),i.backends.forEach(u=>{let s=t(this,x).call(this,n,e,u);t(this,c)[s.id]=s,t(this,d).push(s)}),p(this,a,t(this,d)[0].id),p(this,h,{})}};a=new WeakMap,f=new WeakMap,c=new WeakMap,d=new WeakMap,h=new WeakMap,x=new WeakMap,T=new WeakMap,E=new WeakMap,v=new WeakMap,y=new WeakMap,g=new WeakMap,l.isSetUp=!1;var M=l;var P=(r,n,e)=>new M(r,n,e);var m=(r,n)=>({event:r,check:n});var S=m(\"touchstart\",r=>{let n=r;return n.touches!==null&&n.touches!==void 0}),L=m(\"dragstart\",r=>r.type.indexOf(\"drag\")!==-1||r.type.indexOf(\"drop\")!==-1),O=m(\"mousedown\",r=>r.type.indexOf(\"touch\")===-1&&r.type.indexOf(\"mouse\")!==-1),C=m(\"pointerdown\",r=>r.pointerType==\"mouse\");export{L as HTML5DragTransition,O as MouseTransition,P as MultiBackend,C as PointerTransition,S as TouchTransition,m as createTransition};\n", "export*from\"dnd-multi-backend\";import i,{useState as l,createContext as D}from\"react\";import{DndProvider as m}from\"react-dnd\";import{MultiBackend as P}from\"dnd-multi-backend\";var u=D(null),g=({portal:e,...t})=>{let[r,o]=l(null);return i.createElement(u.Provider,{value:e??r},i.createElement(m,{backend:P,...t}),e?null:i.createElement(\"div\",{ref:o}))};import w,{useContext as k}from\"react\";import{createPortal as M}from\"react-dom\";import{Preview as C,Context as b}from\"react-dnd-preview\";import{useState as v,useEffect as S,useContext as x}from\"react\";import{DndContext as f}from\"react-dnd\";var p=()=>{let[e,t]=v(!1),r=x(f);return S(()=>{let o=r?.dragDropManager?.getBackend(),n={backendChanged:s=>{t(s.previewEnabled())}};return t(o.previewEnabled()),o.previewsList().register(n),()=>{o.previewsList().unregister(n)}},[r,r.dragDropManager]),e};var E=e=>{let t=p(),r=k(u);if(!t)return null;let o=w.createElement(C,{...e});return r!==null?M(o,r):o};E.Context=b;import{useDrag as T}from\"react-dnd\";import{useContext as B}from\"react\";import{DndContext as y}from\"react-dnd\";var R=(e,t,r,o)=>{let n=r.getBackend();r.receiveBackend(o);let s=t(e);return r.receiveBackend(n),s},a=(e,t)=>{let r=B(y),o=r?.dragDropManager?.getBackend();if(o===void 0)throw new Error(\"could not find backend, make sure you are using a <DndProvider />\");let n=t(e),s={},d=o.backendsList();for(let c of d)s[c.id]=R(e,t,r.dragDropManager,c.instance);return[n,s]};var pe=e=>a(e,T);import{useDrop as O}from\"react-dnd\";var le=e=>a(e,O);import{usePreview as h}from\"react-dnd-preview\";var Se=()=>{let e=p(),t=h();return e?t:{display:!1}};export{g as DndProvider,E as Preview,b as PreviewContext,pe as useMultiDrag,le as useMultiDrop,Se as usePreview};\n", "import c from\"react\";import{useRef as m}from\"react\";import{useDragLayer as f}from\"react-dnd\";var i=(t,e)=>({x:t.x-e.x,y:t.y-e.y}),a=t=>{let e=t.getInitialClientOffset(),r=t.getInitialSourceClientOffset();return e===null||r===null?{x:0,y:0}:i(e,r)},u=(t,e)=>{let r=t.getClientOffset();if(r===null)return null;if(!e.current||!e.current.getBoundingClientRect)return i(r,a(t));let n=e.current.getBoundingClientRect(),o={x:n.width/2,y:n.height/2};return i(r,o)};var p=t=>{let e=`translate(${t.x.toFixed(1)}px, ${t.y.toFixed(1)}px)`;return{pointerEvents:\"none\",position:\"fixed\",top:0,left:0,transform:e,WebkitTransform:e}},l=()=>{let t=m(null),e=f(r=>({currentOffset:u(r,t),isDragging:r.isDragging(),itemType:r.getItemType(),item:r.getItem(),monitor:r}));return!e.isDragging||e.currentOffset===null?{display:!1}:{display:!0,itemType:e.itemType,item:e.item,style:p(e.currentOffset),monitor:e.monitor,ref:t}};import{createContext as P}from\"react\";var s=P(void 0);var x=t=>{let e=l();if(!e.display)return null;let{display:r,...n}=e,o;return\"children\"in t?typeof t.children==\"function\"?o=t.children(n):o=t.children:o=t.generator(n),c.createElement(s.Provider,{value:n},o)};export{s as Context,x as Preview,l as usePreview};\n", "import { useNavigation } from \"@remix-run/react\";\nimport { Card, Flex, Image, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Loading, OverlayBg, TiltButton } from \"~/components/common\";\nconst { Title } = Typography;\n\ninterface CampaignStartProps {\n  onNext: () => void;\n}\n\nexport function CampaignStart(props: CampaignStartProps) {\n  const { onNext } = props;\n  const { t } = useTranslation();\n  const [isMobile, setIsMobile] = useState<boolean>(false);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const userAgent = navigator.userAgent || \"\";\n\n    // Check for common patterns in the userAgent string to determine device type\n    const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(userAgent);\n\n    setIsMobile(isMobile);\n  }, []);\n\n  return (\n    <Card\n      bordered={false}\n      style={{\n        position: \"relative\",\n        maxWidth: 700,\n        marginInline: \"auto\",\n        color: \"#fff\",\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n        backgroundImage: `url('/image/campaign-background-0.png')`,\n        backgroundSize: \"cover\",\n        borderRadius: 30,\n      }}\n      bodyStyle={{\n        paddingBlock: !isMobile ? 60 : undefined,\n        paddingInline: \"6%\",\n      }}\n    >\n      <Flex vertical justify=\"center\" gap={20} style={{ textAlign: \"center\" }}>\n        <Image\n          src=\"/image/logo.png\"\n          preview={false}\n          width={!isMobile ? 240 : 200}\n          wrapperStyle={{ marginInline: \"auto\", marginBottom: 20 }}\n        />\n        <Title\n          style={{\n            margin: 0,\n            color: \"inherit\",\n            fontFamily: \"A4SPEED\",\n            fontSize: !isMobile ? 50 : 35,\n          }}\n          level={1}\n        >\n          {t(\"Valo Quiz\")}\n        </Title>\n        <Title\n          style={{\n            margin: 0,\n            color: \"inherit\",\n            lineHeight: 1.5,\n            fontSize: 24,\n          }}\n          level={2}\n        >\n          {t(\"who you look alike in Valorant, let's create and share\")}\n        </Title>\n      </Flex>\n      <Flex justify=\"center\" style={{ paddingInline: 50, marginTop: 40 }}>\n        <TiltButton\n          color=\"pink\"\n          onClick={onNext}\n          style={{\n            width: \"100%\",\n            fontSize: !isMobile ? 32 : 27,\n          }}\n        >\n          {t(\"start quiz\")}!\n        </TiltButton>\n      </Flex>\n      {navigation.state === \"loading\" && (\n        <OverlayBg style={{ position: \"fixed\", zIndex: 100 }} opacity={0.7}>\n          <Loading />\n        </OverlayBg>\n      )}\n    </Card>\n  );\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { json, type LoaderFunction, redirect } from \"@remix-run/node\";\nimport { DndProvider } from \"react-dnd-multi-backend\";\nimport { HTML5toTouch } from \"rdndmb-html5-to-touch\";\nimport { CampaignResult2 } from \"~/components/pages/Campaign/CampaignResult2\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  let campaignResult = session.get(\"campaignResult\");\n  const gift = session.get(\"gift\");\n  if (!campaignResult) {\n    return redirect(\"/campaign\");\n  }\n\n  return json(\n    { campaignResult, gift },\n    {\n      headers: { \"Set-Cookie\": await commitSession(session) },\n    }\n  );\n};\n\nexport default function CampaignResultPage() {\n  const loaderData = useLoaderData();\n\n  return (\n    <>\n      <DndProvider options={HTML5toTouch}>\n        <CampaignResult2\n          data={loaderData.campaignResult}\n          gift={loaderData.gift}\n        />\n      </DndProvider>\n    </>\n  );\n}\n", "// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n", "import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n", "import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n", "export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n", "export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n", "import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n", "import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n", "import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n", "export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n", "import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n", "import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n", "import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n", "export interface EventName {\n\tstart?: 'mousedown' | 'touchstart'\n\tmove?: 'mousemove' | 'touchmove'\n\tend?: 'mouseup' | 'touchend'\n\tcontextmenu?: 'contextmenu'\n\tkeydown?: 'keydown'\n}\n\nexport interface TouchBackendOptions {\n\tdelay: number\n\tdelayTouchStart: number\n\tenableTouchEvents: boolean\n\tenableKeyboardEvents: boolean\n\tenableMouseEvents: boolean\n\tignoreContextMenu: boolean\n\tenableHoverOutsideTarget: boolean\n\tdelayMouseStart: number\n\ttouchSlop: number\n\tscrollAngleRanges?: AngleRange[] | undefined\n\trootElement: Node | undefined\n\n\tgetDropTargetElementsAtPoint?:\n\t\t| undefined\n\t\t| ((x: number, y: number, dropTargets: HTMLElement[]) => HTMLElement[])\n}\n\nexport interface AngleRange {\n\tstart: number\n\tend: number\n}\n\nexport enum ListenerType {\n\tmouse = 'mouse',\n\ttouch = 'touch',\n\tkeyboard = 'keyboard',\n}\n\nexport interface TouchBackendContext {\n\twindow?: Window\n\tdocument?: Document\n}\n", "import type {\n\tAngleRange,\n\tTouchBackendContext,\n\tTouchBackendOptions,\n} from './interfaces.js'\n\nexport class OptionsReader implements TouchBackendOptions {\n\tpublic constructor(\n\t\tprivate args: Partial<TouchBackendOptions>,\n\t\tprivate context: TouchBackendContext,\n\t) {}\n\n\tpublic get delay(): number {\n\t\treturn this.args.delay ?? 0\n\t}\n\n\tpublic get scrollAngleRanges(): AngleRange[] | undefined {\n\t\treturn this.args.scrollAngleRanges\n\t}\n\n\tpublic get getDropTargetElementsAtPoint():\n\t\t| ((x: number, y: number, elements: HTMLElement[]) => HTMLElement[])\n\t\t| undefined {\n\t\treturn this.args.getDropTargetElementsAtPoint\n\t}\n\n\tpublic get ignoreContextMenu(): boolean {\n\t\treturn this.args.ignoreContextMenu ?? false\n\t}\n\n\tpublic get enableHoverOutsideTarget(): boolean {\n\t\treturn this.args.enableHoverOutsideTarget ?? false\n\t}\n\n\tpublic get enableKeyboardEvents(): boolean {\n\t\treturn this.args.enableKeyboardEvents ?? false\n\t}\n\n\tpublic get enableMouseEvents(): boolean {\n\t\treturn this.args.enableMouseEvents ?? false\n\t}\n\n\tpublic get enableTouchEvents(): boolean {\n\t\treturn this.args.enableTouchEvents ?? true\n\t}\n\n\tpublic get touchSlop(): number {\n\t\treturn this.args.touchSlop || 0\n\t}\n\n\tpublic get delayTouchStart(): number {\n\t\treturn this.args?.delayTouchStart ?? this.args?.delay ?? 0\n\t}\n\n\tpublic get delayMouseStart(): number {\n\t\treturn this.args?.delayMouseStart ?? this.args?.delay ?? 0\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.context && this.context.window) {\n\t\t\treturn this.context.window\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.context?.document) {\n\t\t\treturn this.context.document\n\t\t}\n\n\t\tif (this.window) {\n\t\t\treturn this.window.document\n\t\t}\n\n\t\treturn undefined\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.args?.rootElement || (this.document as any as Node)\n\t}\n}\n", "import type { AngleRange } from '../interfaces.js'\n\nexport function distance(\n\tx1: number,\n\ty1: number,\n\tx2: number,\n\ty2: number,\n): number {\n\treturn Math.sqrt(\n\t\tMath.pow(Math.abs(x2 - x1), 2) + Math.pow(Math.abs(y2 - y1), 2),\n\t)\n}\n\nexport function inAngleRanges(\n\tx1: number,\n\ty1: number,\n\tx2: number,\n\ty2: number,\n\tangleRanges: AngleRange[] | undefined,\n): boolean {\n\tif (!angleRanges) {\n\t\treturn false\n\t}\n\n\tconst angle = (Math.atan2(y2 - y1, x2 - x1) * 180) / Math.PI + 180\n\n\tfor (let i = 0; i < angleRanges.length; ++i) {\n\t\tconst ar = angleRanges[i]\n\t\tif (\n\t\t\tar &&\n\t\t\t(ar.start == null || angle >= ar.start) &&\n\t\t\t(ar.end == null || angle <= ar.end)\n\t\t) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n}\n", "// Used for MouseEvent.buttons (note the s on the end).\nconst MouseButtons = {\n\tLeft: 1,\n\tRight: 2,\n\tCenter: 4,\n}\n\n// Used for e.button (note the lack of an s on the end).\nconst MouseButton = {\n\tLeft: 0,\n\tCenter: 1,\n\tRight: 2,\n}\n\n/**\n * Only touch events and mouse events where the left button is pressed should initiate a drag.\n * @param {MouseEvent | TouchEvent} e The event\n */\nexport function eventShouldStartDrag(e: MouseEvent): boolean {\n\t// For touch events, button will be undefined. If e.button is defined,\n\t// then it should be MouseButton.Left.\n\treturn e.button === undefined || e.button === MouseButton.Left\n}\n\n/**\n * Only touch events and mouse events where the left mouse button is no longer held should end a drag.\n * It's possible the user mouse downs with the left mouse button, then mouse down and ups with the right mouse button.\n * We don't want releasing the right mouse button to end the drag.\n * @param {MouseEvent | TouchEvent} e The event\n */\nexport function eventShouldEndDrag(e: MouseEvent): boolean {\n\t// Touch events will have buttons be undefined, while mouse events will have e.buttons's left button\n\t// bit field unset if the left mouse button has been released\n\treturn e.buttons === undefined || (e.buttons & MouseButtons.Left) === 0\n}\n\nexport function isTouchEvent(\n\te: Touch | TouchEvent | MouseEvent,\n): e is TouchEvent {\n\treturn !!(e as TouchEvent).targetTouches\n}\n", "import type { XYCoord } from 'dnd-core'\n\nimport { isTouchEvent } from './predicates.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Element): XYCoord | undefined {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\tif (!el) {\n\t\treturn undefined\n\t}\n\tconst { top, left } = el.getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientTouchOffset(\n\te: TouchEvent,\n\tlastTargetTouchFallback?: Touch,\n): XYCoord | undefined {\n\tif (e.targetTouches.length === 1) {\n\t\treturn getEventClientOffset(e.targetTouches[0] as Touch)\n\t} else if (lastTargetTouchFallback && e.touches.length === 1) {\n\t\tif ((e.touches[0] as Touch).target === lastTargetTouchFallback.target) {\n\t\t\treturn getEventClientOffset(e.touches[0] as Touch)\n\t\t}\n\t}\n\treturn\n}\n\nexport function getEventClientOffset(\n\te: TouchEvent | Touch | MouseEvent,\n\tlastTargetTouchFallback?: Touch,\n): XYCoord | undefined {\n\tif (isTouchEvent(e)) {\n\t\treturn getEventClientTouchOffset(e, lastTargetTouchFallback)\n\t} else {\n\t\treturn {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t}\n\t}\n}\n", "export const supportsPassive = ((): boolean => {\n\t// simular to jQuery's test\n\tlet supported = false\n\ttry {\n\t\taddEventListener(\n\t\t\t'test',\n\t\t\t() => {\n\t\t\t\t// do nothing\n\t\t\t},\n\t\t\tObject.defineProperty({}, 'passive', {\n\t\t\t\tget() {\n\t\t\t\t\tsupported = true\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t}),\n\t\t)\n\t} catch (e) {\n\t\t// do nothing\n\t}\n\treturn supported\n})()\n", "import { invariant } from '@react-dnd/invariant'\nimport type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type {\n\tEventName,\n\tTouchBackendContext,\n\tTouchBackendOptions,\n} from './interfaces.js'\nimport { ListenerType } from './interfaces.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport { distance, inAngleRanges } from './utils/math.js'\nimport { getEventClientOffset, getNodeClientOffset } from './utils/offsets.js'\nimport {\n\teventShouldEndDrag,\n\teventShouldStartDrag,\n\tisTouchEvent,\n} from './utils/predicates.js'\nimport { supportsPassive } from './utils/supportsPassive.js'\n\nconst eventNames: Record<ListenerType, EventName> = {\n\t[ListenerType.mouse]: {\n\t\tstart: 'mousedown',\n\t\tmove: 'mousemove',\n\t\tend: 'mouseup',\n\t\tcontextmenu: 'contextmenu',\n\t},\n\t[ListenerType.touch]: {\n\t\tstart: 'touchstart',\n\t\tmove: 'touchmove',\n\t\tend: 'touchend',\n\t},\n\t[ListenerType.keyboard]: {\n\t\tkeydown: 'keydown',\n\t},\n}\n\nexport class TouchBackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-DnD Dependencies\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\n\t// Internal State\n\tprivate static isSetUp: boolean\n\tpublic sourceNodes: Map<Identifier, HTMLElement>\n\tpublic sourcePreviewNodes: Map<string, HTMLElement>\n\tpublic sourcePreviewNodeOptions: Map<string, any>\n\tpublic targetNodes: Map<string, HTMLElement>\n\tprivate _mouseClientOffset: Partial<XYCoord>\n\tprivate _isScrolling: boolean\n\tprivate listenerTypes: ListenerType[]\n\tprivate moveStartSourceIds: string[] | undefined\n\tprivate waitingForDelay: boolean | undefined\n\tprivate timeout: ReturnType<typeof setTimeout> | undefined\n\tprivate dragOverTargetIds: string[] | undefined\n\tprivate draggedSourceNode: HTMLElement | undefined\n\tprivate draggedSourceNodeRemovalObserver: MutationObserver | undefined\n\n\t// Patch for iOS 13, discussion over #1585\n\tprivate lastTargetTouchFallback: Touch | undefined\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tcontext: TouchBackendContext,\n\t\toptions: Partial<TouchBackendOptions>,\n\t) {\n\t\tthis.options = new OptionsReader(options, context)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\n\t\tthis.sourceNodes = new Map()\n\t\tthis.sourcePreviewNodes = new Map()\n\t\tthis.sourcePreviewNodeOptions = new Map()\n\t\tthis.targetNodes = new Map()\n\t\tthis.listenerTypes = []\n\t\tthis._mouseClientOffset = {}\n\t\tthis._isScrolling = false\n\n\t\tif (this.options.enableMouseEvents) {\n\t\t\tthis.listenerTypes.push(ListenerType.mouse)\n\t\t}\n\n\t\tif (this.options.enableTouchEvents) {\n\t\t\tthis.listenerTypes.push(ListenerType.touch)\n\t\t}\n\n\t\tif (this.options.enableKeyboardEvents) {\n\t\t\tthis.listenerTypes.push(ListenerType.keyboard)\n\t\t}\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\ttargetNodes: this.targetNodes.size,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.options.rootElement\n\t\tif (!root) {\n\t\t\treturn\n\t\t}\n\n\t\tinvariant(\n\t\t\t!TouchBackendImpl.isSetUp,\n\t\t\t'Cannot have two Touch backends at the same time.',\n\t\t)\n\t\tTouchBackendImpl.isSetUp = true\n\n\t\tthis.addEventListener(root, 'start', this.getTopMoveStartHandler() as any)\n\t\tthis.addEventListener(\n\t\t\troot,\n\t\t\t'start',\n\t\t\tthis.handleTopMoveStartCapture as any,\n\t\t\ttrue,\n\t\t)\n\t\tthis.addEventListener(root, 'move', this.handleTopMove as any)\n\t\tthis.addEventListener(root, 'move', this.handleTopMoveCapture, true)\n\t\tthis.addEventListener(\n\t\t\troot,\n\t\t\t'end',\n\t\t\tthis.handleTopMoveEndCapture as any,\n\t\t\ttrue,\n\t\t)\n\n\t\tif (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n\t\t\tthis.addEventListener(\n\t\t\t\troot,\n\t\t\t\t'contextmenu',\n\t\t\t\tthis.handleTopMoveEndCapture as any,\n\t\t\t)\n\t\t}\n\n\t\tif (this.options.enableKeyboardEvents) {\n\t\t\tthis.addEventListener(\n\t\t\t\troot,\n\t\t\t\t'keydown',\n\t\t\t\tthis.handleCancelOnEscape as any,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.options.rootElement\n\t\tif (!root) {\n\t\t\treturn\n\t\t}\n\n\t\tTouchBackendImpl.isSetUp = false\n\t\tthis._mouseClientOffset = {}\n\n\t\tthis.removeEventListener(\n\t\t\troot,\n\t\t\t'start',\n\t\t\tthis.handleTopMoveStartCapture as any,\n\t\t\ttrue,\n\t\t)\n\t\tthis.removeEventListener(root, 'start', this.handleTopMoveStart as any)\n\t\tthis.removeEventListener(root, 'move', this.handleTopMoveCapture, true)\n\t\tthis.removeEventListener(root, 'move', this.handleTopMove as any)\n\t\tthis.removeEventListener(\n\t\t\troot,\n\t\t\t'end',\n\t\t\tthis.handleTopMoveEndCapture as any,\n\t\t\ttrue,\n\t\t)\n\n\t\tif (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n\t\t\tthis.removeEventListener(\n\t\t\t\troot,\n\t\t\t\t'contextmenu',\n\t\t\t\tthis.handleTopMoveEndCapture as any,\n\t\t\t)\n\t\t}\n\n\t\tif (this.options.enableKeyboardEvents) {\n\t\t\tthis.removeEventListener(\n\t\t\t\troot,\n\t\t\t\t'keydown',\n\t\t\t\tthis.handleCancelOnEscape as any,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}\n\n\t\tthis.uninstallSourceNodeRemovalObserver()\n\t}\n\n\tprivate addEventListener<K extends keyof EventName>(\n\t\tsubject: Node,\n\t\tevent: K,\n\t\thandler: (e: any) => void,\n\t\tcapture = false,\n\t) {\n\t\tconst options = supportsPassive ? { capture, passive: false } : capture\n\n\t\tthis.listenerTypes.forEach(function (listenerType) {\n\t\t\tconst evt = eventNames[listenerType][event]\n\n\t\t\tif (evt) {\n\t\t\t\tsubject.addEventListener(evt as any, handler as any, options)\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate removeEventListener<K extends keyof EventName>(\n\t\tsubject: Node,\n\t\tevent: K,\n\t\thandler: (e: any) => void,\n\t\tcapture = false,\n\t) {\n\t\tconst options = supportsPassive ? { capture, passive: false } : capture\n\n\t\tthis.listenerTypes.forEach(function (listenerType) {\n\t\t\tconst evt = eventNames[listenerType][event]\n\n\t\t\tif (evt) {\n\t\t\t\tsubject.removeEventListener(evt as any, handler as any, options)\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic connectDragSource(sourceId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleMoveStart = this.handleMoveStart.bind(this, sourceId)\n\t\tthis.sourceNodes.set(sourceId, node)\n\n\t\tthis.addEventListener(node, 'start', handleMoveStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.removeEventListener(node, 'start', handleMoveStart)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: HTMLElement,\n\t\toptions: unknown,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst root = this.options.rootElement\n\t\tif (!this.document || !root) {\n\t\t\treturn (): void => {\n\t\t\t\t/* noop */\n\t\t\t}\n\t\t}\n\n\t\tconst handleMove = (e: MouseEvent | TouchEvent) => {\n\t\t\tif (!this.document || !root || !this.monitor.isDragging()) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tlet coords\n\n\t\t\t/**\n\t\t\t * Grab the coordinates for the current mouse/touch position\n\t\t\t */\n\t\t\tswitch (e.type) {\n\t\t\t\tcase eventNames.mouse.move:\n\t\t\t\t\tcoords = {\n\t\t\t\t\t\tx: (e as MouseEvent).clientX,\n\t\t\t\t\t\ty: (e as MouseEvent).clientY,\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\n\t\t\t\tcase eventNames.touch.move:\n\t\t\t\t\tcoords = {\n\t\t\t\t\t\tx: (e as TouchEvent).touches[0]?.clientX || 0,\n\t\t\t\t\t\ty: (e as TouchEvent).touches[0]?.clientY || 0,\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Use the coordinates to grab the element the drag ended on.\n\t\t\t * If the element is the same as the target node (or any of it's children) then we have hit a drop target and can handle the move.\n\t\t\t */\n\t\t\tconst droppedOn =\n\t\t\t\tcoords != null\n\t\t\t\t\t? this.document.elementFromPoint(coords.x, coords.y)\n\t\t\t\t\t: undefined\n\t\t\tconst childMatch = droppedOn && node.contains(droppedOn)\n\n\t\t\tif (droppedOn === node || childMatch) {\n\t\t\t\treturn this.handleMove(e, targetId)\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Attaching the event listener to the body so that touchmove will work while dragging over multiple target elements.\n\t\t */\n\t\tthis.addEventListener(this.document.body, 'move', handleMove as any)\n\t\tthis.targetNodes.set(targetId, node)\n\n\t\treturn (): void => {\n\t\t\tif (this.document) {\n\t\t\t\tthis.targetNodes.delete(targetId)\n\t\t\t\tthis.removeEventListener(this.document.body, 'move', handleMove as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | undefined => {\n\t\tconst element = this.sourceNodes.get(sourceId)\n\t\treturn element && getNodeClientOffset(element)\n\t}\n\n\tpublic handleTopMoveStartCapture = (e: Event): void => {\n\t\tif (!eventShouldStartDrag(e as MouseEvent)) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.moveStartSourceIds = []\n\t}\n\n\tpublic handleMoveStart = (sourceId: string): void => {\n\t\t// Just because we received an event doesn't necessarily mean we need to collect drag sources.\n\t\t// We only collect start collecting drag sources on touch and left mouse events.\n\t\tif (Array.isArray(this.moveStartSourceIds)) {\n\t\t\tthis.moveStartSourceIds.unshift(sourceId)\n\t\t}\n\t}\n\n\tprivate getTopMoveStartHandler() {\n\t\tif (!this.options.delayTouchStart && !this.options.delayMouseStart) {\n\t\t\treturn this.handleTopMoveStart\n\t\t}\n\n\t\treturn this.handleTopMoveStartDelay\n\t}\n\n\tpublic handleTopMoveStart = (e: MouseEvent | TouchEvent): void => {\n\t\tif (!eventShouldStartDrag(e as MouseEvent)) {\n\t\t\treturn\n\t\t}\n\n\t\t// Don't prematurely preventDefault() here since it might:\n\t\t// 1. Mess up scrolling\n\t\t// 2. Mess up long tap (which brings up context menu)\n\t\t// 3. If there's an anchor link as a child, tap won't be triggered on link\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\t\tif (clientOffset) {\n\t\t\tif (isTouchEvent(e)) {\n\t\t\t\tthis.lastTargetTouchFallback = e.targetTouches[0]\n\t\t\t}\n\t\t\tthis._mouseClientOffset = clientOffset\n\t\t}\n\t\tthis.waitingForDelay = false\n\t}\n\n\tpublic handleTopMoveStartDelay = (e: Event): void => {\n\t\tif (!eventShouldStartDrag(e as MouseEvent)) {\n\t\t\treturn\n\t\t}\n\n\t\tconst delay =\n\t\t\te.type === eventNames.touch.start\n\t\t\t\t? this.options.delayTouchStart\n\t\t\t\t: this.options.delayMouseStart\n\t\tthis.timeout = setTimeout(\n\t\t\tthis.handleTopMoveStart.bind(this, e as any),\n\t\t\tdelay,\n\t\t) as any as ReturnType<typeof setTimeout>\n\t\tthis.waitingForDelay = true\n\t}\n\n\tpublic handleTopMoveCapture = (): void => {\n\t\tthis.dragOverTargetIds = []\n\t}\n\n\tpublic handleMove = (\n\t\t_evt: MouseEvent | TouchEvent,\n\t\ttargetId: string,\n\t): void => {\n\t\tif (this.dragOverTargetIds) {\n\t\t\tthis.dragOverTargetIds.unshift(targetId)\n\t\t}\n\t}\n\n\tpublic handleTopMove = (e: TouchEvent | MouseEvent): void => {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout)\n\t\t}\n\t\tif (!this.document || this.waitingForDelay) {\n\t\t\treturn\n\t\t}\n\t\tconst { moveStartSourceIds, dragOverTargetIds } = this\n\t\tconst enableHoverOutsideTarget = this.options.enableHoverOutsideTarget\n\n\t\tconst clientOffset = getEventClientOffset(e, this.lastTargetTouchFallback)\n\n\t\tif (!clientOffset) {\n\t\t\treturn\n\t\t}\n\n\t\t// If the touch move started as a scroll, or is is between the scroll angles\n\t\tif (\n\t\t\tthis._isScrolling ||\n\t\t\t(!this.monitor.isDragging() &&\n\t\t\t\tinAngleRanges(\n\t\t\t\t\tthis._mouseClientOffset.x || 0,\n\t\t\t\t\tthis._mouseClientOffset.y || 0,\n\t\t\t\t\tclientOffset.x,\n\t\t\t\t\tclientOffset.y,\n\t\t\t\t\tthis.options.scrollAngleRanges,\n\t\t\t\t))\n\t\t) {\n\t\t\tthis._isScrolling = true\n\t\t\treturn\n\t\t}\n\n\t\t// If we're not dragging and we've moved a little, that counts as a drag start\n\t\tif (\n\t\t\t!this.monitor.isDragging() &&\n\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\tthis._mouseClientOffset.hasOwnProperty('x') &&\n\t\t\tmoveStartSourceIds &&\n\t\t\tdistance(\n\t\t\t\tthis._mouseClientOffset.x || 0,\n\t\t\t\tthis._mouseClientOffset.y || 0,\n\t\t\t\tclientOffset.x,\n\t\t\t\tclientOffset.y,\n\t\t\t) > (this.options.touchSlop ? this.options.touchSlop : 0)\n\t\t) {\n\t\t\tthis.moveStartSourceIds = undefined\n\n\t\t\tthis.actions.beginDrag(moveStartSourceIds, {\n\t\t\t\tclientOffset: this._mouseClientOffset,\n\t\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\t\tpublishSource: false,\n\t\t\t})\n\t\t}\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst sourceNode = this.sourceNodes.get(\n\t\t\tthis.monitor.getSourceId() as string,\n\t\t)\n\t\tthis.installSourceNodeRemovalObserver(sourceNode)\n\t\tthis.actions.publishDragSource()\n\n\t\tif (e.cancelable) e.preventDefault()\n\n\t\t// Get the node elements of the hovered DropTargets\n\t\tconst dragOverTargetNodes: HTMLElement[] = (dragOverTargetIds || [])\n\t\t\t.map((key) => this.targetNodes.get(key))\n\t\t\t.filter((e) => !!e) as HTMLElement[]\n\n\t\t// Get the a ordered list of nodes that are touched by\n\t\tconst elementsAtPoint = this.options.getDropTargetElementsAtPoint\n\t\t\t? this.options.getDropTargetElementsAtPoint(\n\t\t\t\t\tclientOffset.x,\n\t\t\t\t\tclientOffset.y,\n\t\t\t\t\tdragOverTargetNodes,\n\t\t\t  )\n\t\t\t: this.document.elementsFromPoint(clientOffset.x, clientOffset.y)\n\t\t// Extend list with parents that are not receiving elementsFromPoint events (size 0 elements and svg groups)\n\t\tconst elementsAtPointExtended: Element[] = []\n\t\tfor (const nodeId in elementsAtPoint) {\n\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\tif (!elementsAtPoint.hasOwnProperty(nodeId)) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tlet currentNode: Element | undefined | null = elementsAtPoint[nodeId]\n\t\t\tif (currentNode != null) {\n\t\t\t\telementsAtPointExtended.push(currentNode)\n\t\t\t}\n\t\t\twhile (currentNode) {\n\t\t\t\tcurrentNode = currentNode.parentElement\n\t\t\t\tif (\n\t\t\t\t\tcurrentNode &&\n\t\t\t\t\telementsAtPointExtended.indexOf(currentNode) === -1\n\t\t\t\t) {\n\t\t\t\t\telementsAtPointExtended.push(currentNode)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst orderedDragOverTargetIds: string[] = elementsAtPointExtended\n\t\t\t// Filter off nodes that arent a hovered DropTargets nodes\n\t\t\t.filter((node) => dragOverTargetNodes.indexOf(node as HTMLElement) > -1)\n\t\t\t// Map back the nodes elements to targetIds\n\t\t\t.map((node) => this._getDropTargetId(node))\n\t\t\t// Filter off possible null rows\n\t\t\t.filter((node) => !!node)\n\t\t\t.filter((id, index, ids) => ids.indexOf(id) === index) as string[]\n\n\t\t// Invoke hover for drop targets when source node is still over and pointer is outside\n\t\tif (enableHoverOutsideTarget) {\n\t\t\tfor (const targetId in this.targetNodes) {\n\t\t\t\tconst targetNode = this.targetNodes.get(targetId)\n\t\t\t\tif (\n\t\t\t\t\tsourceNode &&\n\t\t\t\t\ttargetNode &&\n\t\t\t\t\ttargetNode.contains(sourceNode) &&\n\t\t\t\t\torderedDragOverTargetIds.indexOf(targetId) === -1\n\t\t\t\t) {\n\t\t\t\t\torderedDragOverTargetIds.unshift(targetId)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Reverse order because dnd-core reverse it before calling the DropTarget drop methods\n\t\torderedDragOverTargetIds.reverse()\n\n\t\tthis.actions.hover(orderedDragOverTargetIds, {\n\t\t\tclientOffset: clientOffset,\n\t\t})\n\t}\n\n\t/**\n\t *\n\t * visible for testing\n\t */\n\tpublic _getDropTargetId = (node: Element): Identifier | undefined => {\n\t\tconst keys = this.targetNodes.keys()\n\t\tlet next = keys.next()\n\t\twhile (next.done === false) {\n\t\t\tconst targetId = next.value\n\t\t\tif (node === this.targetNodes.get(targetId)) {\n\t\t\t\treturn targetId\n\t\t\t} else {\n\t\t\t\tnext = keys.next()\n\t\t\t}\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic handleTopMoveEndCapture = (e: Event): void => {\n\t\tthis._isScrolling = false\n\t\tthis.lastTargetTouchFallback = undefined\n\n\t\tif (!eventShouldEndDrag(e as MouseEvent)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.monitor.isDragging() || this.monitor.didDrop()) {\n\t\t\tthis.moveStartSourceIds = undefined\n\t\t\treturn\n\t\t}\n\n\t\tif (e.cancelable) e.preventDefault()\n\n\t\tthis._mouseClientOffset = {}\n\n\t\tthis.uninstallSourceNodeRemovalObserver()\n\t\tthis.actions.drop()\n\t\tthis.actions.endDrag()\n\t}\n\n\tpublic handleCancelOnEscape = (e: KeyboardEvent): void => {\n\t\tif (e.key === 'Escape' && this.monitor.isDragging()) {\n\t\t\tthis._mouseClientOffset = {}\n\n\t\t\tthis.uninstallSourceNodeRemovalObserver()\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t}\n\n\tprivate installSourceNodeRemovalObserver(node: HTMLElement | undefined) {\n\t\tthis.uninstallSourceNodeRemovalObserver()\n\n\t\tthis.draggedSourceNode = node\n\t\tthis.draggedSourceNodeRemovalObserver = new MutationObserver(() => {\n\t\t\tif (node && !node.parentElement) {\n\t\t\t\tthis.resurrectSourceNode()\n\t\t\t\tthis.uninstallSourceNodeRemovalObserver()\n\t\t\t}\n\t\t})\n\n\t\tif (!node || !node.parentElement) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.draggedSourceNodeRemovalObserver.observe(node.parentElement, {\n\t\t\tchildList: true,\n\t\t})\n\t}\n\n\tprivate resurrectSourceNode() {\n\t\tif (this.document && this.draggedSourceNode) {\n\t\t\tthis.draggedSourceNode.style.display = 'none'\n\t\t\tthis.draggedSourceNode.removeAttribute('data-reactid')\n\t\t\tthis.document.body.appendChild(this.draggedSourceNode)\n\t\t}\n\t}\n\n\tprivate uninstallSourceNodeRemovalObserver() {\n\t\tif (this.draggedSourceNodeRemovalObserver) {\n\t\t\tthis.draggedSourceNodeRemovalObserver.disconnect()\n\t\t}\n\n\t\tthis.draggedSourceNodeRemovalObserver = undefined\n\t\tthis.draggedSourceNode = undefined\n\t}\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport type { TouchBackendContext, TouchBackendOptions } from './interfaces.js'\nimport { TouchBackendImpl } from './TouchBackendImpl.js'\n\nexport * from './interfaces.js'\nexport * from './TouchBackendImpl.js'\n\nexport const TouchBackend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext: TouchBackendContext = {},\n\toptions: Partial<TouchBackendOptions> = {},\n): TouchBackendImpl {\n\treturn new TouchBackendImpl(manager, context, options)\n}\n", "import{HTML5Backend as o}from\"react-dnd-html5-backend\";import{TouchBackend as t}from\"react-dnd-touch-backend\";import{TouchTransition as n,PointerTransition as i}from\"dnd-multi-backend\";var s={backends:[{id:\"html5\",backend:o,transition:i},{id:\"touch\",backend:t,options:{enableMouseEvents:!0},preview:!0,transition:n}]};export{s as HTML5toTouch};\n", "import {\n  Card,\n  Col,\n  Flex,\n  Image,\n  Input,\n  Modal,\n  Row,\n  Skeleton,\n  Typography,\n} from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { useFetcher, useNavigate } from \"@remix-run/react\";\nimport { useContext, useRef, useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { DndBox, Media } from \"~/components/common\";\nimport dayjs from \"dayjs\";\nimport domtoimage from \"dom-to-image\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { adjustTranslateValues } from \"~/utils/helper\";\nimport { CampaignTitle } from \"./CampaignTitle\";\nimport { CampaignControl } from \"./CampaignControl\";\nimport { CampaignGift } from \"./CampaignGift\";\nimport { CampaignEditButton } from \"./CampaignEditButton\";\nimport { CampaignStickers } from \"./CampaignStickers\";\nimport { CampaignThumbnailUpload } from \"./CampaignThumbnailUpload\";\n\nconst { Text } = Typography;\n\ninterface CampaignResultProps {\n  data: any;\n  gift: any;\n}\n\nexport function CampaignResult2(props: CampaignResultProps) {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { data, gift } = props;\n  const navigate = useNavigate();\n  const rootRef: any = useRef<Element>();\n  const { clickedId, user, openLoginModal } = useContext(AuthContext);\n  const { baseUrl } = useContext(AppContext);\n\n  const [image, setImage] = useState<string>(\n    `/image/campaign/character-${data.character}.png`\n  );\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [giftModal, setGiftModal] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState(t(\"input in game username\"));\n\n  const [boxes, setBoxes] = useState<{\n    [key: string]: {\n      top: number;\n      left: number;\n      title: any;\n    };\n  }>({});\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    modalRender: (modal: any) => modal,\n    styles: {\n      body: { padding: \"3px 5px\", maxWidth: \"100%\" },\n    },\n  } as any;\n\n  const thumbnailStyle = {\n    position: \"absolute\",\n    display: \"block\",\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n    borderRadius: \"9%\",\n    width: \"44%\",\n    height: \"41%\",\n    top: \"37%\",\n    left: \"28%\",\n  } as any;\n\n  const textInputStyle = {\n    position: \"absolute\",\n    left: \"7%\",\n    top: \"15%\",\n    width: \"86%\",\n    padding: \"8px 11px\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    color: \"white\",\n    borderRadius: \"5px\",\n    fontSize: 24,\n    textAlign: \"center\",\n  } as any;\n\n  const handleInputChange = (event: any) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleUpload = (e: any) => {\n    if (e.target.files.length) {\n      setImage(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n\n  const dropNewBox = (name: string, left: number, top: number, boxes: any) => {\n    const newBoxes = { ...boxes };\n    newBoxes[dayjs().unix()] = {\n      top,\n      left,\n      title: name,\n    };\n    setBoxes(newBoxes);\n  };\n\n  const [{}, drop] = useDrop(\n    () => ({\n      accept: \"box\",\n      drop(item: any, monitor) {\n        const containerWidth = rootRef.current.width;\n        const containerHeight = rootRef.current.height;\n        if (!item.id) {\n          const offset = monitor.getClientOffset();\n          if (offset) {\n            const left =\n              ((offset.x - rootRef.current.x - containerWidth * 0.05) * 100) /\n              containerWidth;\n            const top =\n              ((offset.y - rootRef.current.y - containerWidth * 0.05) * 100) /\n              containerHeight;\n            dropNewBox(item.name, left, top, boxes);\n          }\n        }\n        return undefined;\n      },\n      collect(monitor) {\n        return {\n          isOver: monitor.isOver(),\n          canDrop: monitor.canDrop(),\n        };\n      },\n    }),\n    [boxes]\n  );\n\n  const combinedRef = (el: any) => {\n    drop(el);\n    if (el) {\n      rootRef.current = el.getBoundingClientRect();\n    }\n  };\n\n  const handleCreateNew = () => {\n    navigate(\"/campaign\");\n  };\n\n  const handleShare = () => {\n    const userAgent = navigator.userAgent || \"\";\n    const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(userAgent);\n    if (isMobile) {\n      handleSaveImage(null, true);\n    } else {\n      handleSaveImage();\n      const tempAnchor = document.createElement(\"a\");\n      tempAnchor.href = `https://www.facebook.com/sharer/sharer.php?u=${baseUrl}/campaign`;\n      tempAnchor.target = \"_blank\";\n      tempAnchor.rel = \"noreferrer\";\n      document.body.appendChild(tempAnchor);\n      tempAnchor.click();\n      document.body.removeChild(tempAnchor);\n    }\n  };\n\n  const handleSaveImage = async (e?: any, isMobile?: boolean) => {\n    const elementToCapture = document.getElementsByClassName(\n      \"campaign-result\"\n    ) as any;\n    if (elementToCapture && elementToCapture.length) {\n      elementToCapture[0].insertAdjacentHTML(\n        \"afterend\",\n        elementToCapture[0].outerHTML\n      );\n      const newElement = document.getElementsByClassName(\n        \"campaign-result\"\n      )[1] as any;\n      newElement.setAttribute(\"class\", \"campaign-export\");\n      const targetWidth = 805;\n      const targetHeight = 1213;\n      newElement.style.width = `${targetWidth}px`;\n      newElement.style.height = `${targetHeight}px`;\n      adjustTranslateValues(\n        newElement,\n        elementToCapture[0].offsetWidth,\n        elementToCapture[0].offsetHeight,\n        targetWidth,\n        targetHeight\n      );\n\n      try {\n        await domtoimage.toPng(newElement);\n\n        if (isMobile) {\n          const blob = await domtoimage.toBlob(newElement);\n          const file = await new File([blob], \"image.png\", {\n            type: blob.type,\n          });\n\n          const dataImage = {\n            files: [file],\n            title: \"Image\",\n            text: \"image\",\n          };\n          await navigator.share(dataImage);\n        } else {\n          // dowload image\n          await domtoimage\n            .toBlob(newElement)\n            .then(function (blob: any) {\n              let filename = \"image.jpg\";\n              let link = document.createElement(\"a\");\n              link.download = filename.toLowerCase();\n              link.href = URL.createObjectURL(blob);\n              link.target = \"_blank\";\n              link.rel = \"noreferrer\";\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n            })\n            .catch(function (error) {\n              console.error(\"Error exporting image:\", error);\n            });\n        }\n\n        newElement.remove();\n      } catch (error) {\n        console.error(\"Error exporting image:\", error);\n        throw error;\n      }\n    }\n  };\n\n  const getTheGift = () => {\n    if (!gift) {\n      fetcher.submit(\n        {},\n        {\n          method: \"post\",\n          action: `/resources/get-the-gift`,\n        }\n      );\n    }\n    setGiftModal(true);\n  };\n\n  const closeGiftModal = () => {\n    setGiftModal(false);\n  };\n\n  const handleBackToProfile = () => {\n    navigate(`/users/${user?.userName ? user.userName : user.uuid}`);\n  };\n\n  return (\n    <Card\n      bordered={false}\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: 900,\n        marginInline: \"auto\",\n        color: \"#fff\",\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n        backgroundImage: `url('/image/campaign-background-0.png')`,\n        backgroundSize: \"cover\",\n        borderRadius: 30,\n      }}\n      bodyStyle={{ padding: 10 }}\n    >\n      <Media at=\"sm\">\n        <CampaignTitle />\n      </Media>\n      <div style={{ width: \"100%\" }}>\n        <Row gutter={[10, 0]} align=\"middle\">\n          <Col span={24} md={12}>\n            <div\n              className=\"campaign-result\"\n              ref={combinedRef}\n              style={{\n                position: \"relative\",\n                height: 0,\n                paddingBottom: \"150.7%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  overflow: \"hidden\",\n                }}\n              >\n                <Image\n                  preview={false}\n                  src={`/image/campaign/new/${\n                    data === \"rare\" ? \"rare\" : data.result\n                  }-bg.png`}\n                  style={{ width: \"100%\" }}\n                  placeholder={<Skeleton active />}\n                />\n                <Image\n                  preview={false}\n                  wrapperStyle={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                  }}\n                  src={`/image/campaign/new/${data.alias}.png`}\n                />\n                <div\n                  style={{\n                    backgroundImage: `url(${image})`,\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                    ...thumbnailStyle,\n                  }}\n                />\n                <Image\n                  preview={false}\n                  wrapperStyle={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                  }}\n                  src={`/image/campaign/new/${\n                    data === \"rare\" ? \"rare\" : data.result\n                  }-frame.png`}\n                />\n                {editMode && (\n                  <CampaignThumbnailUpload\n                    style={thumbnailStyle}\n                    onUpload={handleUpload}\n                  />\n                )}\n                {editMode ? (\n                  <Input\n                    className=\"text-input\"\n                    style={{\n                      backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n                      ...textInputStyle,\n                    }}\n                    maxLength={30}\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    placeholder={t(\"input your game username\")}\n                  />\n                ) : (\n                  <Text className=\"text-input\" style={textInputStyle}>\n                    {inputValue}\n                  </Text>\n                )}\n                {Object.keys(boxes).map((key) => {\n                  const { left, top, title } = boxes[key] as {\n                    top: number;\n                    left: number;\n                    title: string;\n                  };\n                  return (\n                    <DndBox\n                      key={key}\n                      id={key}\n                      isTargetImage={clickedId === key}\n                      left={left}\n                      top={top}\n                      title={title}\n                      editMode={editMode}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n            <CampaignEditButton\n              onClick={user ? () => setEditMode(!editMode) : openLoginModal}\n              editMode={editMode}\n            />\n          </Col>\n          <Col span={24} md={12}>\n            {editMode ? (\n              <>\n                <Media greaterThan=\"sm\">\n                  <Flex className=\"campaign-sticker-picker\" wrap=\"wrap\">\n                    <CampaignStickers />\n                  </Flex>\n                </Media>\n                <Media at=\"sm\">\n                  <div\n                    className=\"campaign-sticker-picker\"\n                    style={{ paddingTop: 20, paddingBottom: 40 }}\n                  >\n                    <CampaignStickers />\n                  </div>\n                </Media>\n              </>\n            ) : (\n              <Flex align=\"center\" vertical>\n                <Media greaterThan=\"sm\">\n                  <CampaignTitle />\n                </Media>\n                <Flex align=\"center\">\n                  <CampaignControl\n                    onNewClicked={handleCreateNew}\n                    onSaveClicked={handleSaveImage}\n                    onShareClicked={handleShare}\n                    onGiftClicked={user ? getTheGift : openLoginModal}\n                  />\n                </Flex>\n              </Flex>\n            )}\n          </Col>\n        </Row>\n      </div>\n      <Modal {...modalProps} onCancel={closeGiftModal} open={giftModal}>\n        <CampaignGift gift={gift} onBack={handleBackToProfile} />\n      </Modal>\n    </Card>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Flex, Typography } from \"antd\";\n\nconst { Text, Title } = Typography;\n\nexport function CampaignTitle() {\n  const { t } = useTranslation();\n\n  return (\n    <Flex\n      vertical\n      gap={0}\n      justify=\"center\"\n      style={{ marginBottom: 10, textAlign: \"center\" }}\n    >\n      <Title\n        style={{\n          marginBlock: 0,\n          color: \"inherit\",\n          fontSize: 28,\n        }}\n        level={2}\n      >\n        {t(\"this is your profile\")}\n      </Title>\n      <div style={{ marginTop: 10 }}>\n        <Text\n          style={{\n            fontSize: \"0.85em\",\n            color: \"inherit\",\n          }}\n        >\n          {t(\"customize profile by your own style, and share to your friends\")}\n        </Text>\n      </div>\n    </Flex>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Avatar, Flex, Space, Typography } from \"antd\";\nimport {\n  DownloadOutlined,\n  GiftOutlined,\n  PlusOutlined,\n  ShareAltOutlined,\n} from \"@ant-design/icons\";\n\nconst { Text } = Typography;\n\ninterface CampaignControlProps {\n  onNewClicked: () => void;\n  onSaveClicked: () => void;\n  onShareClicked: () => void;\n  onGiftClicked: () => void;\n}\n\nexport function CampaignControl(props: CampaignControlProps) {\n  const { t } = useTranslation();\n  const { onGiftClicked, onNewClicked, onSaveClicked, onShareClicked } = props;\n\n  const iconStyle = {\n    backgroundColor: \"#eb4d4f\",\n    cursor: \"pointer\",\n    lineHeight: \"45px\",\n  };\n\n  return (\n    <Flex gap={20} align=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\n      <Space direction=\"vertical\" align=\"center\">\n        <Avatar\n          icon={<PlusOutlined />}\n          style={iconStyle}\n          onClick={onNewClicked}\n          size={50}\n        />\n        <Text style={{ color: \"#fff\" }}>{t(\"create new\")}</Text>\n      </Space>\n      <Space direction=\"vertical\" align=\"center\">\n        <Avatar\n          icon={<DownloadOutlined />}\n          style={iconStyle}\n          onClick={onSaveClicked}\n          size={50}\n        />\n        <Text style={{ color: \"#fff\" }}>{t(\"Download\")}</Text>\n      </Space>\n      <Space direction=\"vertical\" align=\"center\">\n        <Avatar\n          icon={<ShareAltOutlined />}\n          style={iconStyle}\n          onClick={onShareClicked}\n          size={50}\n        />\n        <Text style={{ color: \"#fff\" }}>{t(\"share\")}</Text>\n      </Space>\n      <Space direction=\"vertical\" align=\"center\">\n        <Avatar\n          icon={<GiftOutlined />}\n          style={iconStyle}\n          onClick={onGiftClicked}\n          size={50}\n        />\n        <Text style={{ color: \"#fff\" }}>{t(\"get the gift\")}</Text>\n      </Space>\n    </Flex>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Image, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { TiltButton } from \"~/components/common\";\nconst { Text, Title } = Typography;\n\ninterface CampaignGiftProps {\n  onBack: () => void;\n  gift: any;\n}\n\nexport function CampaignGift(props: CampaignGiftProps) {\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { gift, onBack } = props;\n\n  return (\n    <div\n      style={{\n        justifyContent: \"center\",\n        textAlign: \"center\",\n      }}\n    >\n      <Title level={5}>{t(\"This is your gift\")}</Title>\n      <Space direction=\"vertical\">\n        {gift && <Image src={`${cdnUrl}/${gift}`} style={{ width: \"50%\" }} />}\n        <div>\n          <Space direction=\"vertical\" size={1}>\n            <Text>{t(\"select your profile frame\")}</Text>\n            <Text>{t(\"by clicking your profile picture\")}</Text>\n          </Space>\n        </div>\n      </Space>\n      <TiltButton\n        color=\"primary\"\n        onClick={onBack}\n        style={{ marginTop: \"10px\" }}\n      >\n        <Space>{t(\"go to profile\")}</Space>\n      </TiltButton>\n    </div>\n  );\n}\n", "import { Avatar, Button } from \"antd\";\nimport { CloseOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { Media } from \"~/components/common\";\n\ninterface CampaignEditButtonProps {\n  editMode: boolean;\n  onClick: () => void;\n}\n\nexport function CampaignEditButton(props: CampaignEditButtonProps) {\n  const { t } = useTranslation();\n  const { editMode, onClick } = props;\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        right: -15,\n      }}\n    >\n      <Media greaterThan=\"sm\">\n        {editMode ? (\n          <Avatar\n            icon={<CloseOutlined />}\n            style={{\n              backgroundColor: \"#eb4d4f\",\n              cursor: \"pointer\",\n            }}\n            onClick={onClick}\n            size={48}\n          />\n        ) : (\n          <Button\n            style={{\n              height: 48,\n              color: \"#fff\",\n              backgroundColor: \"#eb4d4f\",\n              border: \"none\",\n            }}\n            icon={<EditOutlined />}\n            shape=\"round\"\n            onClick={onClick}\n          >\n            {t(\"edit\")}\n          </Button>\n        )}\n      </Media>\n      <Media at=\"sm\">\n        {editMode ? (\n          <Avatar\n            icon={<CloseOutlined />}\n            style={{\n              backgroundColor: \"#eb4d4f\",\n              cursor: \"pointer\",\n            }}\n            onClick={onClick}\n            size={36}\n          />\n        ) : (\n          <Button\n            style={{\n              height: 32,\n              padding: \"0 10px\",\n              fontSize: 10,\n              color: \"#fff\",\n              backgroundColor: \"#eb4d4f\",\n              border: \"none\",\n            }}\n            icon={<EditOutlined />}\n            shape=\"round\"\n            onClick={onClick}\n          >\n            {t(\"edit\")}\n          </Button>\n        )}\n      </Media>\n    </div>\n  );\n}\n", "import { Image } from \"antd\";\nimport { DroppedBox } from \"~/components/common\";\n\nexport function CampaignStickers() {\n  return Array(20)\n    .fill(\"\")\n    .map((_, index) => (\n      <DroppedBox key={`sticker-${index + 1}`} name={`sticker-${index + 1}`}>\n        <Image\n          preview={false}\n          src={`/image/campaign/sticker-${index + 1}.png`}\n          className=\"campaign-sticker-drop\"\n        />\n      </DroppedBox>\n    ));\n}\n", "import { CameraOutlined } from \"@ant-design/icons\";\nimport { OverlayBg } from \"~/components/common\";\n\ninterface CampaignThumbnailUploadProps {\n  style: React.CSSProperties;\n  onUpload: (e: any) => void;\n}\n\nexport function CampaignThumbnailUpload(props: CampaignThumbnailUploadProps) {\n  const { style, onUpload } = props;\n\n  return (\n    <label htmlFor=\"upload-button\" style={style}>\n      <OverlayBg style={{ cursor: \"pointer\" }}>\n        <CameraOutlined style={{ fontSize: 36, color: \"#fff\" }} />\n      </OverlayBg>\n      <input\n        type=\"file\"\n        id=\"upload-button\"\n        accept=\"image/png,image/jpeg\"\n        style={{ display: \"none\" }}\n        onChange={onUpload}\n      />\n    </label>\n  );\n}\n", "import { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useRevalidator,\n  useRouteLoaderData,\n  useSearchParams,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { json, V2_MetaFunction, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  Affix,\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Modal,\n  Row,\n  Skeleton,\n  Space,\n  Typography,\n  notification,\n} from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport {\n  dummyParties,\n  dummyPartyItems3,\n  GameSelect,\n  IndexFilter,\n  Loading,\n  Media,\n  OverlayBg,\n  TiltButton,\n} from \"~/components/common\";\nimport {\n  PartyDetail,\n  PartyForm,\n  PartyHero,\n  PartyIndexHeader,\n  PartyLists,\n  PartyRules,\n} from \"~/components/pages/Party\";\nimport * as APIServer from \"~/api\";\nimport { convertToObjectWithArrays, resetFetcher } from \"~/utils/helper\";\nimport { AuthContext, PartyContext } from \"~/contexts\";\nimport { ceil, debounce, floor, isEmpty, isNil, omitBy } from \"lodash\";\nimport { getSessionFromRequest } from \"~/session.server\";\n\nconst { Text, Title } = Typography;\n\nlet currentGame: any;\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  const { gameId } = params;\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let toQuerySearchParams = convertToObjectWithArrays(searchParams, [\n    \"ranks\",\n    \"modes\",\n  ]);\n  let parties: any = null;\n  let games: any[];\n\n  toQuerySearchParams = {\n    ...toQuerySearchParams,\n    game: gameId,\n  };\n\n  try {\n    const partiesRes = await APIServer.clientFromSession(session).request(\n      APIServer.getParties(toQuerySearchParams)\n    );\n\n    if (partiesRes.data) {\n      parties = partiesRes.data;\n    }\n\n    const gameRes = await APIServer.clientFromSession(session).request(\n      APIServer.getGamesWithRanksAndModes()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n      currentGame = games.find((game: any) => `${game.id}` === `${gameId}`);\n    }\n  } catch (e) {\n    // FIXME: remove this out\n    parties = searchParams.offset ? dummyPartyItems3 : dummyParties;\n  }\n  return json({ gameId, parties, searchParams });\n};\n\nexport { currentGame };\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E15\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E08\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    {\n      property: \"og:title\",\n      content: `\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21! ${\n        currentGame?.name ? currentGame?.name : \"Valorant\"\n      } \u0E23\u0E31\u0E1A\u0E23\u0E2D\u0E07\u0E21\u0E31\u0E19\u0E2A\u0E4C\u0E41\u0E19\u0E48\u0E16\u0E49\u0E32\u0E41\u0E21\u0E48\u0E44\u0E21\u0E48\u0E27\u0E48\u0E32 | Ctrlg.gg`,\n    },\n    {\n      property: \"og:image\",\n      content: `https://d2007awoau332v.cloudfront.net/assets/party.jpg`,\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E15\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E08\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n    },\n  ];\n};\n\nexport default function PartyIndex() {\n  const { parties, gameId, searchParams } = useLoaderData();\n  const routeLoader = useRouteLoaderData(\"routes/_app.parties\");\n  const matches = useMatches();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const submit = useSubmit();\n  const fetcher = useFetcher();\n  const revalidator = useRevalidator();\n  const { cdnUrl } = matches[0].data;\n  const { games, myParties } = routeLoader;\n  const [form] = Form.useForm();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [searchArgs] = useSearchParams();\n  const [gameModal, setGameModal] = useState<boolean>(false);\n  const [newPartyModal, setNewPartyModal] = useState<boolean>(false);\n  const [partyDetail, setPartyDetail] = useState<any>(null);\n  const [api, contextHolder] = notification.useNotification();\n  const [items, setItems] = useState<any>(parties.items);\n  const [nextCursor, setNextCursor] = useState<any>(parties.nextCursor);\n  const [isTheLastPage, setIsTheLastPage] = useState<any>(\n    parties.isTheLastPage\n  );\n  const selectedGame = games.find((game: any) => `${game.id}` === `${gameId}`);\n  const filters = [] as any[];\n  const navigation = useNavigation();\n\n  if (selectedGame.ranks && selectedGame.ranks.length > 0) {\n    filters.push({\n      type: \"tilt-button\",\n      name: \"ranks\",\n      title: t(\"select rank\"),\n      withAvatar: true,\n      options:\n        selectedGame.ranks && selectedGame.ranks.length\n          ? selectedGame.ranks.map((rank: any) => ({\n              label: rank.name,\n              value: rank.id,\n              image: `${cdnUrl}/${rank.imageUrl}`,\n            }))\n          : [],\n    });\n  }\n  if (selectedGame.modes && selectedGame.modes.length > 0) {\n    filters.push({\n      type: \"tilt-button\",\n      name: \"modes\",\n      title: t(\"select mode\"),\n      options:\n        selectedGame.modes && selectedGame.modes.length\n          ? selectedGame.modes.map((mode: any) => ({\n              label: mode.name,\n              value: mode.id,\n            }))\n          : [],\n    });\n  }\n  if (selectedGame.maxPlayers) {\n    filters.push({\n      type: \"tilt-button\",\n      name: \"availableSlots\",\n      title: t(\"available slots\"),\n      options: Array(selectedGame.maxPlayers - 1)\n        .fill(\"\")\n        .map((_, index) => ({ label: index + 1, value: index + 1 })),\n    });\n  }\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    modalRender: (modal: any) => modal,\n  } as any;\n\n  const changeGame = (id: any) => {\n    navigate(`/parties/${id}`);\n    setGameModal(false);\n  };\n\n  const openGameModal = () => {\n    setGameModal(true);\n  };\n\n  const closeGameModal = () => {\n    setGameModal(false);\n  };\n\n  const openNewPartyModal = () => {\n    setNewPartyModal(true);\n  };\n\n  const closeNewPartyModal = () => {\n    setNewPartyModal(false);\n  };\n\n  const openPartyDetail = (party: any) => {\n    setPartyDetail(party);\n  };\n\n  const closePartyDetail = useCallback(() => {\n    setPartyDetail(null);\n    if (searchArgs && searchArgs.get(\"join\")) {\n      navigate(location.pathname, { preventScrollReset: true });\n    }\n  }, [searchArgs]);\n\n  const handleFilter = useCallback(\n    (name: string, value: string | number) => {\n      let newSearchParams = { ...searchParams } as any;\n      if (searchParams && searchParams[name]) {\n        const values = searchParams[name].split(\",\");\n        const containedIndex = values.indexOf(`${value}`);\n        if (containedIndex > -1) {\n          values.splice(containedIndex, 1);\n        } else {\n          values.push(value.toString());\n        }\n        if (values.length) {\n          newSearchParams[name] = values.join(\",\");\n        } else {\n          delete newSearchParams[name];\n        }\n      } else {\n        newSearchParams[name] = `${value}`;\n      }\n      if (floor(items.length / 20)) {\n        newSearchParams[\"take\"] = ceil(items.length / 20) * 20;\n      }\n\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit, items]\n  );\n\n  const handleDebounceFilter = useMemo(\n    () => debounce(handleFilter, 300),\n    [handleFilter]\n  );\n\n  const handleLoadMore = useCallback(() => {\n    const newSearchParams = {\n      ...searchParams,\n      cursor: nextCursor,\n      game: gameId,\n    };\n    const queryString = new URLSearchParams(\n      omitBy(newSearchParams, isNil)\n    ).toString();\n\n    fetcher.load(`.?${queryString}`);\n  }, [items, searchParams]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (\n        fetcher.data.success &&\n        (fetcher.data.success === \"create-party\" ||\n          fetcher.data.success === \"leave-party\" ||\n          fetcher.data.success === \"join-party\") &&\n        `${fetcher.data.gameId}` === `${gameId}`\n      ) {\n        revalidator.revalidate();\n        setPartyDetail(null);\n        setNewPartyModal(false);\n        resetFetcher(fetcher);\n        api.open({\n          message: t(`successfully ${fetcher.data.success}`),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      } else if (\n        fetcher.data.party &&\n        `${fetcher.data.gameId}` === `${gameId}`\n      ) {\n        setPartyDetail(fetcher.data.party);\n        resetFetcher(fetcher);\n      } else if (fetcher.data.parties) {\n        setItems([...items, ...fetcher.data.parties.items]);\n        setNextCursor(fetcher.data.parties.nextCursor);\n        setIsTheLastPage(fetcher.data.parties.isTheLastPage);\n        resetFetcher(fetcher);\n      }\n    }\n  }, [items, fetcher, revalidator]);\n\n  useEffect(() => {\n    setItems(parties.items);\n    setNextCursor(parties.nextCursor);\n    setIsTheLastPage(parties.isTheLastPage);\n  }, [parties]);\n\n  useEffect(() => {\n    if (searchArgs && searchArgs.get(\"join\")) {\n      fetcher.load(\n        `/resources/party?partyId=${searchArgs.get(\"join\")}&gameId=${gameId}`\n      );\n    }\n  }, [gameId, searchArgs]);\n\n  return (\n    <PartyContext.Provider\n      value={{\n        closePartyModal: closePartyDetail,\n      }}\n    >\n      <PartyHero\n        loading={!selectedGame}\n        game={selectedGame}\n        onGameClick={openGameModal}\n      />\n      <div\n        style={{\n          paddingInline: \"3.5%\",\n          paddingBlock: 20,\n          maxWidth: 1440,\n          marginInline: \"auto\",\n        }}\n      >\n        <Row gutter={[30, 10]} style={{ paddingBlock: 30 }}>\n          <Col span={24} md={{ span: 6, order: 0 }} style={{ paddingTop: 30 }}>\n            {!selectedGame ? <Skeleton active /> : <></>}\n            {selectedGame && selectedGame.name ? (\n              <Title level={2} style={{ marginTop: 0, marginBottom: 40 }}>\n                {selectedGame.name}\n              </Title>\n            ) : (\n              <></>\n            )}\n            <Affix offsetTop={80}>\n              <div\n                className=\"hide-scrollbar\"\n                style={{\n                  maxHeight: \"calc(100vh - 60px)\",\n                  overflowY: \"auto\",\n                }}\n              >\n                <IndexFilter\n                  values={searchParams}\n                  onFilterClicked={handleDebounceFilter}\n                  filters={filters}\n                />\n              </div>\n            </Affix>\n          </Col>\n          <Col span={24} md={{ span: 6, order: 2 }}>\n            <Media greaterThan=\"sm\">\n              <Affix offsetTop={80}>\n                <div>\n                  <PartyRules\n                    title={\n                      <Space size={10}>\n                        <InfoCircleOutlined />\n                        {`${t(\"how it works\")}?`}\n                      </Space>\n                    }\n                  />\n                </div>\n              </Affix>\n            </Media>\n          </Col>\n          <Col span={24} md={{ span: 12, order: 1 }}>\n            <PartyIndexHeader\n              fetcher={fetcher}\n              onRefresh={revalidator.revalidate}\n              searchParams={searchParams}\n              submit={submit}\n            >\n              <TiltButton\n                color=\"primary\"\n                onClick={user ? openNewPartyModal : openLoginModal}\n              >\n                <Text>{t(\"new party\")}</Text>\n              </TiltButton>\n            </PartyIndexHeader>\n            <div style={{ marginTop: 30 }}>\n              {myParties && myParties.length > 0 ? (\n                <div style={{ marginBottom: 30 }}>\n                  <Divider\n                    orientation=\"left\"\n                    orientationMargin={0}\n                    style={{ marginBottom: 20 }}\n                  >\n                    {t(\"my parties\")}\n                  </Divider>\n                  <PartyLists data={myParties} onEntryClick={openPartyDetail} />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Divider\n                orientation=\"left\"\n                orientationMargin={0}\n                style={{ marginBottom: 20 }}\n              >\n                {t(\"all parties\")}\n              </Divider>\n              <PartyLists\n                data={items}\n                onEntryClick={user ? openPartyDetail : openLoginModal}\n              />\n              {!isTheLastPage && (\n                <Flex justify=\"center\">\n                  <TiltButton\n                    color=\"primary\"\n                    onClick={handleLoadMore}\n                    disabled={isTheLastPage === true}\n                    style={{ padding: \"15px 30px\" }}\n                  >\n                    {t(\"load more\")}\n                  </TiltButton>\n                </Flex>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </div>\n      <Modal {...modalProps} onCancel={closeNewPartyModal} open={newPartyModal}>\n        <PartyForm\n          fetcher={fetcher}\n          form={form}\n          game={selectedGame}\n          games={games}\n          onCancel={closeNewPartyModal}\n        />\n      </Modal>\n      <Modal {...modalProps} onCancel={closePartyDetail} open={partyDetail}>\n        <PartyDetail\n          fetcher={fetcher}\n          party={partyDetail}\n          hadParty={myParties && myParties.length > 0}\n          closePartyDetail={closePartyDetail}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        width={600}\n        onCancel={closeGameModal}\n        open={gameModal}\n      >\n        <GameSelect\n          currentGameId={gameId}\n          games={games}\n          onGameSelect={changeGame}\n        />\n      </Modal>\n      {contextHolder}\n      {navigation.state === \"loading\" && (\n        <OverlayBg style={{ position: \"fixed\", zIndex: 100 }} opacity={0.7}>\n          <Loading />\n        </OverlayBg>\n      )}\n    </PartyContext.Provider>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport {\n  Avatar,\n  Card,\n  Col,\n  Empty,\n  Flex,\n  Form,\n  Input,\n  Row,\n  Skeleton,\n  theme,\n  Typography,\n} from \"antd\";\nimport { Element, scroller } from \"react-scroll\";\nimport dayjs from \"dayjs\";\nimport { AuthContext } from \"~/contexts\";\nimport { TiltButton } from \"~/components/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { WebsocketContext } from \"~/contexts/WebsocketContext\";\nconst { Text } = Typography;\nconst { useToken } = theme;\n\ninterface PartyChatProps {\n  fetcher: any;\n  party: any;\n  closePartyDetail: () => void;\n}\n\nexport function PartyChat(props: PartyChatProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const { fetcher, party, closePartyDetail } = props;\n  const { user } = useContext(AuthContext);\n  const { token } = useToken();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [chats, setChats] = useState<any[]>([]);\n  const { messageData } = useContext(WebsocketContext);\n\n  const handleSendMessage = (values: any) => {\n    fetcher.submit(\n      {\n        data: JSON.stringify({ message: values.message }),\n        partyId: party.id,\n      },\n      {\n        method: \"post\",\n        action: `/resources/send-party-a-message`,\n      }\n    );\n    const timeout = setTimeout(() => {\n      scroller.scrollTo(\"last-chat\", {\n        containerId: \"chat-messages\",\n        duration: 300,\n      });\n      clearTimeout(timeout);\n    }, 200);\n    form.resetFields();\n  };\n\n  // const handleScroll = (e: any) => {\n  //   const { scrollTop } = e.target;\n  //   if (scrollTop === 0) {\n  //     // Load more messages when scrolled to the top\n  //   }\n  // };\n\n  useEffect(() => {\n    setLoading(true);\n    fetcher.load(\n      `/resources/party-chat?partyId=${party.id}&gameId=${party.gameId}`\n    );\n  }, [party]);\n\n  useEffect(() => {\n    if (fetcher && fetcher.data) {\n      const { sendFailed } = fetcher.data;\n      if (sendFailed) {\n        closePartyDetail();\n      }\n    }\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (messageData) {\n      const newChats = [...chats, messageData];\n      setChats(newChats);\n    }\n  }, [messageData]);\n\n  useEffect(() => {\n    if (fetcher && fetcher.data && fetcher.state === \"idle\") {\n      if (\n        fetcher.data.chats &&\n        fetcher.data.partyId &&\n        `${fetcher.data.partyId}` === `${party.id}`\n      ) {\n        setLoading(false);\n        setChats(fetcher.data.chats);\n      }\n    }\n  }, [fetcher, party]);\n\n  useEffect(() => {\n    if (!loading) {\n      scroller.scrollTo(\"last-chat\", {\n        containerId: \"chat-messages\",\n        duration: 0,\n      });\n    }\n  }, [loading]);\n\n  // useEffect(() => {\n  //   const container = document.getElementById(\"chat-messages\");\n  //   if (container) {\n  //     container.addEventListener(\"scroll\", handleScroll);\n  //     return () => {\n  //       container.removeEventListener(\"scroll\", handleScroll);\n  //     };\n  //   }\n  // }, []);\n\n  const getChatMessage = (message: string) => {\n    if (message === \"system:PartyIsReady\") {\n      return t(\"All members of your party are here and ready to play!\");\n    }\n\n    return message;\n  };\n\n  return (\n    <Card style={{ borderRadius: 12 }} bodyStyle={{ padding: 0 }}>\n      <Flex\n        id=\"chat-messages\"\n        vertical\n        gap={15}\n        style={{ height: 350, padding: 15, overflowY: \"auto\" }}\n      >\n        {loading ? (\n          <Skeleton active />\n        ) : chats.length > 0 ? (\n          chats.map((chat: any, index: number) => (\n            <div\n              key={`chat-${index}`}\n              style={{\n                paddingBottom: 15,\n                borderBottom: `1px solid ${token.colorBorder}`,\n              }}\n            >\n              <Row\n                wrap={false}\n                gutter={10}\n                style={{ alignItems: \"flex-start\" }}\n              >\n                <Col flex=\"none\">\n                  <Avatar\n                    src={\n                      chat.createdBy.displayImage\n                        ? `${cdnUrl}/${chat.createdBy.displayImage}`\n                        : \"/image/avatar-anonymous.jpg\"\n                    }\n                    size={50}\n                  />\n                </Col>\n                <Col flex=\"auto\">\n                  <Flex vertical gap={10}>\n                    <Flex justify=\"space-between\" align=\"flex-start\">\n                      <Flex>\n                        <Text style={{ fontWeight: 600 }}>\n                          {chat.createdBy.ign ? chat.createdBy.ign : \"system\"}\n                        </Text>\n                      </Flex>\n                      <Flex>\n                        <Text\n                          style={{\n                            opacity: 0.5,\n                            whiteSpace: \"nowrap\",\n                          }}\n                        >\n                          {dayjs(chat.createdAt).isToday()\n                            ? dayjs(chat.createdAt).format(\"HH:mm\")\n                            : dayjs(chat.createdAt).format(\"DD MMM HH:mm\")}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                    <Text>{getChatMessage(chat.message)}</Text>\n                  </Flex>\n                </Col>\n              </Row>\n            </div>\n          ))\n        ) : (\n          <Empty description={t(\"no chat\")} />\n        )}\n        <Element name=\"last-chat\" />\n      </Flex>\n      {user && (\n        <Flex\n          gap={10}\n          align=\"center\"\n          style={{ padding: 15, borderTop: `1px solid ${token.colorBorder}` }}\n        >\n          <Avatar\n            src={\n              user.displayImage\n                ? `${cdnUrl}/${user.displayImage}`\n                : \"/image/placeholder.png\"\n            }\n            size={50}\n          />\n          <Form\n            form={form}\n            onFinish={handleSendMessage}\n            style={{ width: \"100%\" }}\n          >\n            <Form.Item\n              key=\"message\"\n              name=\"message\"\n              noStyle\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please type message\")}`,\n                },\n              ]}\n            >\n              <Input\n                autoFocus={true}\n                placeholder={t(\"type message here\")}\n                autoComplete=\"off\"\n                suffix={\n                  <TiltButton\n                    color=\"primary\"\n                    style={{ paddingBlock: 5 }}\n                    onClick={form.submit}\n                  >\n                    {t(\"send\")}\n                  </TiltButton>\n                }\n              />\n            </Form.Item>\n          </Form>\n        </Flex>\n      )}\n    </Card>\n  );\n}\n", "import React, { useEffect, useState } from 'react';\nimport type { Options } from 'react-use-websocket';\nimport useWebsocket, { ReadyState } from 'react-use-websocket';\n\ninterface WebsocketContextValues {\n  readyState: ReadyState;\n  messageData?: any;\n  socket?: any;\n}\n\nexport const WebsocketContext = React.createContext<WebsocketContextValues>({\n  readyState: ReadyState.UNINSTANTIATED,\n  messageData: null,\n  socket: null,\n});\n\ninterface WebsocketContextProviderProps {\n  children: any;\n  websocketUrl: string;\n  identifier: string | null;\n}\n\nexport const WebsocketContextProvider: React.FC<\n  WebsocketContextProviderProps\n> = (props: WebsocketContextProviderProps) => {\n  const url = props.websocketUrl;\n  const identifier = props.identifier;\n  const [newMessage, setNewMessage] = useState<any>(null);\n\n  let option: Options = {\n    shouldReconnect: () => true,\n  };\n\n  if (identifier) {\n    option = {\n      ...option,\n      queryParams: { identifier: identifier },\n    };\n  }\n\n  const { lastMessage, readyState } = useWebsocket(url, option);\n\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setNewMessage(JSON.parse(lastMessage.data));\n    }\n  }, [lastMessage, setNewMessage]);\n\n  return (\n    <WebsocketContext.Provider\n      value={{\n        readyState,\n        messageData: newMessage,\n      }}\n    >\n      {props.children}\n    </WebsocketContext.Provider>\n  );\n};\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Avatar, Divider, Flex, Image, Modal, Space, Typography } from \"antd\";\nimport { ExclamationCircleFilled, LogoutOutlined } from \"@ant-design/icons\";\nimport { AuthContext } from \"~/contexts\";\nimport { TiltButton } from \"~/components/common\";\nimport {\n  PartyChat,\n  PartyDetailForm,\n  PartyDetailHeader,\n  PartyMemberLists,\n  PartyRequestForm,\n  PartyRequests,\n} from \".\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { WebsocketContextProvider } from \"~/contexts/WebsocketContext\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text } = Typography;\n\ninterface PartyDetailProps {\n  fetcher: any;\n  hadParty?: boolean;\n  party?: any;\n  closePartyDetail: () => void;\n}\n\nexport function PartyDetail(props: PartyDetailProps) {\n  const { fetcher, hadParty, party, closePartyDetail } = props;\n  const { t } = useTranslation();\n  const { user } = useContext(AuthContext);\n  const matches = useMatches();\n  const { websocketUrl } = matches[0].data;\n  // const { messageData } = useContext(WebsocketContext);\n  const [currentParty, setCurrentParty] = useState<any>(party);\n  const [modal, modalContextHolder] = Modal.useModal();\n  const [currentTabIndex, setCurrentTabIndex] = useState<number>(0);\n  const [tabs, setTabs] = useState<any[]>([]);\n\n  const infoTab = {\n    label: <Image src=\"/image/game-icon.svg\" width={30} preview={false} />,\n    slug: \"info\",\n  };\n  const membersTab = {\n    label: <Image src=\"/image/user-icon.svg\" width={30} preview={false} />,\n    slug: \"members\",\n  };\n  const chatTab = {\n    label: <Image src=\"/image/chat-icon.svg\" width={30} preview={false} />,\n    slug: \"chat\",\n  };\n\n  const isOwner = useCallback(\n    (partyData: any) => {\n      const master = partyData.partyMembers.find(\n        (member: any) => member.isPartyMaster === true\n      );\n      return user ? master.userId === user.id : false;\n    },\n    [user]\n  );\n\n  const inTheTeam = useCallback(\n    (partyData: any) => {\n      return user &&\n        partyData.partyMembers &&\n        partyData.partyMembers.find((m: any) => m.userId === user.id)\n        ? true\n        : false;\n    },\n    [user]\n  );\n\n  const handleLeaveParty = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to leave the party`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id: party.id, gameId: party.gameId },\n          {\n            method: \"post\",\n            action: `/resources/leave-party`,\n          }\n        );\n      },\n    });\n  }, [fetcher, party]);\n\n  useEffect(() => {\n    if (fetcher && fetcher.data && fetcher.state === \"idle\") {\n      if (\n        fetcher.data.success &&\n        (fetcher.data.success === \"update-party\" ||\n          fetcher.data.success === \"boost-party\" ||\n          fetcher.data.success === \"create-party-member\" ||\n          fetcher.data.success === \"update-party-member\" ||\n          fetcher.data.success === \"delete-party-member\")\n      ) {\n        if (fetcher.data.party) {\n          setCurrentParty(fetcher.data.party);\n        }\n        resetFetcher(fetcher);\n      }\n    }\n  }, [fetcher]);\n\n  useEffect(() => {\n    setCurrentParty(party);\n    let newTabs = [];\n    if (isOwner(party)) {\n      newTabs = [infoTab, membersTab, chatTab];\n    } else {\n      newTabs = [membersTab];\n      if (inTheTeam(party)) {\n        newTabs.push(chatTab);\n      }\n    }\n    setTabs(newTabs);\n    setCurrentTabIndex(0);\n  }, [party]);\n\n  useEffect(() => {\n    setCurrentTabIndex(0);\n  }, []);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Flex gap={20} vertical>\n        <PartyDetailHeader data={currentParty} />\n        <Flex>\n          {tabs.length > 0 &&\n            tabs.map((tab: any, index: number) => (\n              <TiltButton\n                key={tab.slug}\n                color={index === currentTabIndex ? \"primary\" : \"transparent\"}\n                style={{ width: `${100 / tabs.length}%` }}\n                noBorder\n                onClick={() => setCurrentTabIndex(index)}\n              >\n                {tab.label}\n              </TiltButton>\n            ))}\n        </Flex>\n        <Divider style={{ margin: 0 }} />\n        {tabs.length && tabs[currentTabIndex].slug === \"info\" ? (\n          <PartyDetailForm fetcher={fetcher} party={currentParty} />\n        ) : (\n          <></>\n        )}\n        {tabs.length && tabs[currentTabIndex].slug === \"members\" ? (\n          <Flex gap={20} vertical>\n            <PartyMemberLists fetcher={fetcher} party={currentParty} />\n            {isOwner(currentParty) && (\n              <PartyRequests\n                fetcher={fetcher}\n                party={currentParty}\n                accepted={(party) => setCurrentParty(party)}\n              />\n            )}\n            {!hadParty &&\n              !inTheTeam(currentParty) &&\n              currentParty.isClosed === false && (\n                <PartyRequestForm fetcher={fetcher} party={currentParty} />\n              )}\n            {inTheTeam(currentParty) &&\n              currentParty.discordUrl &&\n              currentParty.discordUrl.length && (\n                <a\n                  href={currentParty.discordUrl}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <TiltButton color=\"primary\">\n                    <Space size={10}>\n                      <Avatar src=\"/image/social/discord.png\" size={25} />\n                      Discord\n                    </Space>\n                  </TiltButton>\n                </a>\n              )}\n          </Flex>\n        ) : (\n          <></>\n        )}\n        {tabs.length && tabs[currentTabIndex].slug === \"chat\" ? (\n          <WebsocketContextProvider\n            websocketUrl={websocketUrl}\n            identifier={user ? user.uuid : null}\n          >\n            <PartyChat\n              fetcher={fetcher}\n              party={currentParty}\n              closePartyDetail={closePartyDetail}\n            />\n          </WebsocketContextProvider>\n        ) : (\n          <></>\n        )}\n        {inTheTeam(currentParty) && (\n          <Flex\n            justify=\"center\"\n            style={{ marginTop: 15, cursor: \"pointer\" }}\n            onClick={handleLeaveParty}\n          >\n            <Text type=\"danger\">\n              {`${t(\"leave party\")}  `}\n              <LogoutOutlined type=\"danger\" />\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n      {modalContextHolder}\n    </div>\n  );\n}\n", "import dayjs from \"dayjs\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Col,\n  Flex,\n  Form,\n  Image,\n  Input,\n  Row,\n  Space,\n  Statistic,\n  Switch,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { PartyInlineAvatar } from \".\";\nimport { PartyContext } from \"~/contexts\";\nimport { OverlayBg, SwipeButton, TiltButton } from \"~/components/common\";\nconst { Text } = Typography;\nconst { Countdown } = Statistic;\n\ninterface PartyDetailFormProps {\n  fetcher: any;\n  party?: any;\n}\n\nexport function PartyDetailForm(props: PartyDetailFormProps) {\n  const { fetcher, party } = props;\n  const { t } = useTranslation();\n\n  const { closePartyModal } = useContext(PartyContext);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [lastBoost, setLastBoost] = useState<any>(party.lastBoostAt);\n  const [enableBoost, setEnableBoost] = useState<boolean>(\n    !party.lastBoostAt ||\n      (party.lastBoostAt && dayjs().diff(party.lastBoostAt, \"minute\") > 4)\n  );\n  const [form] = Form.useForm();\n\n  const initValues = {\n    name: party.name,\n    discordUrl: party.discordUrl,\n    isPrivate: party.isPrivate,\n    isActive: !party.isClosed,\n  };\n\n  const handleCountDownFinish = () => {\n    setLoading(true);\n    const timeout = setTimeout(() => {\n      setLoading(false);\n      clearTimeout(timeout);\n    }, 100);\n    setEnableBoost(true);\n  };\n\n  const handleSubmit = useCallback(\n    (values: any) => {\n      values = {\n        ...values,\n        isClosed: !values.isActive,\n      };\n      fetcher.submit(\n        {\n          id: party.id,\n          data: JSON.stringify({ ...values }),\n        },\n        {\n          method: \"put\",\n          action: `/resources/update-party`,\n        }\n      );\n    },\n    [fetcher, party]\n  );\n\n  const handleBoostParty = useCallback(() => {\n    fetcher.submit(\n      { id: party.id },\n      {\n        method: \"post\",\n        action: `/resources/boost-party`,\n      }\n    );\n    setEnableBoost(false);\n    setLastBoost(dayjs(new Date()));\n  }, [fetcher, party]);\n\n  useEffect(() => {\n    setLoading(true);\n    const timeout = setTimeout(() => {\n      setLoading(false);\n      clearTimeout(timeout);\n    }, 100);\n    form.resetFields();\n  }, [party]);\n\n  return (\n    <>\n      <div style={{ marginTop: 15 }}>\n        <PartyInlineAvatar\n          members={party.partyMembers}\n          maxPlayers={party.maxPlayers}\n        />\n      </div>\n      <Form\n        form={form}\n        initialValues={initValues}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          key=\"name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: t(\"please input party name\"),\n            },\n          ]}\n          label={\n            <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n              {t(\"party name\")}\n            </Text>\n          }\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          key=\"discordUrl\"\n          name=\"discordUrl\"\n          label={\n            <Space size={5}>\n              <Avatar src=\"/image/social/discord.png\" size={25} />\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"Discord URL\")}\n              </Text>\n            </Space>\n          }\n        >\n          <Input />\n        </Form.Item>\n        <Flex gap={10} align=\"baseline\">\n          <Form.Item key=\"isPrivate\" name=\"isPrivate\" valuePropName=\"checked\">\n            <Switch />\n          </Form.Item>\n          <Text>{`${t(\"private party\")} `}</Text>\n          <Tooltip\n            placement=\"top\"\n            arrow={false}\n            title={t(\"party owner must approve before joining\")}\n          >\n            <div>\n              <QuestionCircleOutlined\n                style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n              />\n            </div>\n          </Tooltip>\n        </Flex>\n        <Flex gap={10} align=\"baseline\">\n          <Form.Item key=\"isActive\" name=\"isActive\" valuePropName=\"checked\">\n            <Switch />\n          </Form.Item>\n          <Text>{t(\"party active\")}</Text>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 10 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={closePartyModal}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {t(\"update\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {loading ? (\n        <div\n          style={{\n            width: \"100%\",\n            height: 48,\n            backgroundColor: \"#201d1d\",\n            transform: \"skew(-15deg)\",\n            borderRadius: 10,\n          }}\n        />\n      ) : (\n        <div style={{ position: \"relative\" }}>\n          <SwipeButton\n            customCaretWidth={60}\n            caret={\n              <Image\n                src=\"/image/chevron-right-icon.svg\"\n                width={30}\n                preview={false}\n              />\n            }\n            mainText={\n              enableBoost ? (\n                t(\"boost party\")\n              ) : (\n                <Space size={5}>\n                  <Text style={{ color: \"#ffffff\" }}>\n                    {t(\"boost again in\")}\n                  </Text>\n                  <Countdown\n                    value={dayjs(lastBoost).add(5, \"minute\").toString()}\n                    format=\"m:ss\"\n                    onFinish={handleCountDownFinish}\n                    valueStyle={{\n                      fontSize: \"14px\",\n                      color: \"#ffffff\",\n                    }}\n                  />\n                </Space>\n              )\n            }\n            overlayText={t(\"party boosted\")}\n            onSlideDone={enableBoost ? handleBoostParty : undefined}\n          />\n          {!enableBoost ? (\n            <OverlayBg\n              style={{ zIndex: 1, transform: \"skew(-15deg)\", borderRadius: 10 }}\n            />\n          ) : (\n            <></>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n", "import { Avatar, Badge, Flex, Image, Space, Tooltip, Typography } from \"antd\";\nimport { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { AppContext, PartyContext } from \"~/contexts\";\nimport { TiltButton } from \"~/components/common\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\n\ninterface PartyDetailHeaderProps {\n  data: any;\n}\n\nexport function PartyDetailHeader(props: PartyDetailHeaderProps) {\n  const { data } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { baseUrl } = useContext(AppContext);\n  const { closePartyModal } = useContext(PartyContext);\n  const inviteUrl = `${baseUrl}/parties/${data.gameId}?join=${data.id}`;\n\n  return (\n    <Flex justify=\"space-between\" align=\"flex-start\">\n      <Space size={15} wrap>\n        <Image\n          preview={false}\n          src={\n            data.game.mainImageUrl\n              ? `${cdnUrl}/${data.game.mainImageUrl}`\n              : \"/image/placeholder.png\"\n          }\n          width={60}\n        />\n        <Space direction=\"vertical\">\n          <Title level={4} style={{ margin: 0 }}>\n            {data.name}\n          </Title>\n          <Space wrap>\n            <TiltButton\n              color=\"secondary\"\n              style={{ paddingBlock: 3, fontWeight: 400 }}\n            >\n              {data.mode.name}\n            </TiltButton>\n            {data.rankOnParties && data.rankOnParties.length > 0 ? (\n              <Space size={3}>\n                {data.rankOnParties.map((rankOnParty: any, index: number) => (\n                  <Tooltip\n                    placement=\"top\"\n                    key={`${data.id}-rank-${index}`}\n                    title={rankOnParty.rank.name}\n                    arrow={false}\n                  >\n                    <Avatar\n                      shape=\"square\"\n                      src={\n                        rankOnParty.rank.imageUrl\n                          ? `${cdnUrl}/${rankOnParty.rank.imageUrl}`\n                          : \"/image/placeholder.png\"\n                      }\n                      size={30}\n                    />\n                  </Tooltip>\n                ))}\n              </Space>\n            ) : (\n              <></>\n            )}\n            <Badge\n              status={!data.isClosed ? \"success\" : \"error\"}\n              text={!data.isClosed ? t(\"active\") : t(\"inactive\")}\n              style={{ fontStyle: \"italic\" }}\n              styles={{ indicator: { padding: 4 } }}\n            />\n          </Space>\n        </Space>\n      </Space>\n      <Space size={20}>\n        <ShareDropDown\n          postUrl={inviteUrl}\n          copiedMessage={t(\"party link copied\")}\n        />\n        <Text\n          style={{ fontSize: 18, cursor: \"pointer\" }}\n          onClick={closePartyModal}\n        >\n          <CloseOutlined />\n        </Text>\n      </Space>\n    </Flex>\n  );\n}\n", "import { useCallback, useContext } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Avatar, Card, Flex, Space, Tooltip, Typography } from \"antd\";\nimport { LockOutlined } from \"@ant-design/icons\";\nimport { AppContext } from \"~/contexts\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { PartyEntryMembers } from \"./PartyEntryMembers\";\nimport { Media, TiltButton } from \"~/components/common\";\nimport dayjs from \"dayjs\";\n\nconst { Text, Title } = Typography;\n\ninterface PartyEntryProps {\n  data: any;\n  fetcher?: any;\n  onClick?: any;\n}\n\nexport function PartyEntry(props: PartyEntryProps) {\n  const { data, onClick } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { baseUrl } = useContext(AppContext);\n  const { t } = useTranslation();\n  const inviteUrl = `${baseUrl}/parties/${data.gameId}?join=${data.id}`;\n  const isOwner = data.isPartyMaster === true;\n  const joined = data.status === \"joined\";\n\n  const handleClick = useCallback(() => {\n    onClick(data);\n  }, [data]);\n\n  return (\n    <div style={{ paddingInline: 20 }}>\n      <Card\n        bordered={false}\n        style={{\n          transform: \"skew(-15deg)\",\n          filter: \"drop-shadow(4px 4px 0px rgba(124, 111, 246, 0.50))\",\n        }}\n        bodyStyle={{ padding: 15 }}\n      >\n        <Flex vertical gap={20}>\n          <Flex justify=\"space-between\" align=\"center\">\n            <Space size={10} style={{ alignItems: \"center\" }}>\n              <Title level={3} style={{ margin: 0 }}>\n                {data.name}\n              </Title>\n              {data.rankOnParties && data.rankOnParties.length > 0 ? (\n                <Space size={3} style={{ transform: \"skew(15deg)\" }}>\n                  {data.rankOnParties.map((rankOnParty: any, index: number) => (\n                    <Tooltip\n                      placement=\"top\"\n                      key={`${data.id}-rank-${index}-${rankOnParty.id}`}\n                      title={rankOnParty.rank.name}\n                      arrow={false}\n                    >\n                      <Avatar\n                        shape=\"square\"\n                        src={`${cdnUrl}/${rankOnParty.rank.imageUrl}`}\n                        size={26}\n                      />\n                    </Tooltip>\n                  ))}\n                </Space>\n              ) : (\n                <></>\n              )}\n            </Space>\n            <Space size={5}>\n              <Media greaterThan=\"sm\">\n                <Text style={{ opacity: 0.6 }}>\n                  {dayjs(data.createdAt).format(\"DD MMM YYYY\")}\n                </Text>\n              </Media>\n              <ShareDropDown\n                postUrl={inviteUrl}\n                copiedMessage={t(\"party link copied\")}\n              />\n            </Space>\n          </Flex>\n          <Media greaterThan=\"sm\">\n            <Flex gap={10} align=\"flex-end\">\n              {data.partyMembers && data.partyMembers.length > 0 ? (\n                <PartyEntryMembers\n                  members={data.partyMembers}\n                  maxPlayers={data.maxPlayers}\n                />\n              ) : (\n                <></>\n              )}\n              <Flex\n                vertical\n                gap={5}\n                wrap=\"nowrap\"\n                style={{ width: 140 }}\n                align=\"end\"\n              >\n                {data.availableSlots > 0 && (\n                  <Text>{`${t(\"available\")} ${data.availableSlots}`}</Text>\n                )}\n                <Space>\n                  <TiltButton\n                    color={\n                      isOwner\n                        ? \"secondary-brand\"\n                        : joined\n                        ? \"secondary\"\n                        : \"primary\"\n                    }\n                    style={{ whiteSpace: \"nowrap\", transform: \"skew(15deg)\" }}\n                    onClick={handleClick}\n                  >\n                    {isOwner ? (\n                      t(\"manage\")\n                    ) : joined && data.availableSlots > 0 ? (\n                      t(\"detail\") // joined\n                    ) : data.isPrivate && data.availableSlots > 0 ? (\n                      <Space size={5}>\n                        <LockOutlined />\n                        {t(\"request\")}\n                      </Space> // request to join\n                    ) : (\n                      t(\"join\")\n                    )}\n                  </TiltButton>\n                </Space>\n              </Flex>\n            </Flex>\n          </Media>\n          <Media at=\"sm\">\n            <Flex vertical gap={15}>\n              {data.partyMembers && data.partyMembers.length > 0 ? (\n                <PartyEntryMembers\n                  members={data.partyMembers}\n                  maxPlayers={data.maxPlayers}\n                />\n              ) : (\n                <></>\n              )}\n              <Flex justify=\"space-between\" align=\"center\">\n                <Text style={{ opacity: 0.6 }}>\n                  {dayjs(data.createdAt).format(\"DD MMM YYYY\")}\n                </Text>\n                <Space size={10}>\n                  {data.availableSlots > 0 && (\n                    <Text>{`${t(\"available\")} ${data.availableSlots}`}</Text>\n                  )}\n                  <TiltButton\n                    color={\n                      isOwner\n                        ? \"secondary-brand\"\n                        : joined\n                        ? \"secondary\"\n                        : \"primary\"\n                    }\n                    style={{\n                      paddingBlock: 8,\n                      whiteSpace: \"nowrap\",\n                      transform: \"skew(15deg)\",\n                    }}\n                    onClick={handleClick}\n                  >\n                    {isOwner ? (\n                      t(\"manage\")\n                    ) : joined && data.availableSlots > 0 ? (\n                      t(\"detail\") // joined\n                    ) : data.isPrivate && data.availableSlots > 0 ? (\n                      <Space size={5}>\n                        <LockOutlined />\n                        {t(\"request\")}\n                      </Space> // request to join\n                    ) : (\n                      t(\"join\")\n                    )}\n                  </TiltButton>\n                </Space>\n              </Flex>\n            </Flex>\n          </Media>\n        </Flex>\n      </Card>\n    </div>\n  );\n}\n", "import { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Flex, Tooltip } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface PartyEntryMembersProps {\n  members: any[];\n  maxPlayers: number;\n}\n\nexport function PartyEntryMembers(props: PartyEntryMembersProps) {\n  const matches = useMatches();\n  const { t } = useTranslation();\n  const { cdnUrl } = matches[0].data;\n  const { members, maxPlayers } = props;\n  const transformedMembers = transformMembers(members, maxPlayers);\n\n  const handleUserClicked = (uuid: string) => {\n    window.open(`/users/${uuid}`, \"_blank\");\n  };\n\n  return (\n    <Flex gap={5} style={{ width: \"100%\" }}>\n      {transformedMembers.map((member: any) => (\n        <Tooltip\n          key={member.id ? member.id : null}\n          placement=\"top\"\n          title={\n            member.user\n              ? member.user.displayName\n              : member.status === \"availableSlot\"\n              ? t(\"available\")\n              : t(\"reserved\")\n          }\n          arrow={false}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              position: \"relative\",\n              width: \"20%\",\n              borderRadius: 10,\n              overflow: \"hidden\",\n              cursor: member.user ? \"pointer\" : \"default\",\n            }}\n            onClick={\n              member.user\n                ? () =>\n                    handleUserClicked(\n                      member.user?.userName\n                        ? member.user.userName\n                        : member.user.uuid\n                    )\n                : undefined\n            }\n          >\n            <div\n              style={{\n                width: \"100%\",\n                paddingBottom: \"125%\",\n                transform: \"skew(15deg)\",\n              }}\n            >\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  left: \"-15%\",\n                  width: \"130%\",\n                  height: \"100%\",\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center\",\n                  backgroundImage:\n                    member.status === \"member\"\n                      ? `url(\"${cdnUrl}/${member.user.displayImage}\")`\n                      : member.status === \"lockedSlot\"\n                      ? `url(\"/image/party-lock-slot.jpg\")`\n                      : `url(\"/image/party-available-slot.jpg\")`,\n                }}\n              />\n            </div>\n          </div>\n        </Tooltip>\n      ))}\n    </Flex>\n  );\n}\n\nfunction transformMembers(members: any[], maxPlayers: number) {\n  const copyMembers = [...members]; // Create a copy of the original members array\n  let transformedMembers = [];\n\n  const masterIndex = copyMembers.findIndex(\n    (member) => member.isPartyMaster === true\n  );\n  if (masterIndex !== -1) {\n    transformedMembers.push({\n      ...copyMembers[masterIndex],\n      status: \"member\",\n    });\n    copyMembers.splice(masterIndex, 1);\n  }\n\n  while (transformedMembers.length < maxPlayers) {\n    const memberIndex = copyMembers.findIndex(\n      (member) => member.isSlotLocked === false\n    );\n\n    if (memberIndex === -1) {\n      const lockedIndex = copyMembers.findIndex(\n        (member) => member.isSlotLocked === true\n      );\n      if (lockedIndex !== -1) {\n        transformedMembers.push({\n          ...copyMembers[lockedIndex],\n          status: \"lockedSlot\",\n        });\n        copyMembers.splice(lockedIndex, 1);\n      } else {\n        break; // Break out of the loop if no more members to add\n      }\n    } else {\n      transformedMembers.push({\n        ...copyMembers[memberIndex],\n        status: \"member\",\n      });\n      copyMembers.splice(memberIndex, 1);\n    }\n  }\n\n  // Fill remaining slots with 'availableSlot'\n  while (transformedMembers.length < maxPlayers) {\n    transformedMembers.push({\n      status: \"availableSlot\",\n      id: `availableSlot-${transformedMembers.length}`,\n    });\n  }\n\n  return transformedMembers;\n}\n", "import { useCallback, useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Card,\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Image,\n  Input,\n  Modal,\n  Row,\n  Select,\n  Space,\n  Switch,\n  theme,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { AuthContext } from \"~/contexts\";\nimport {\n  GameCard,\n  GameSelect,\n  TiltButton,\n  TiltCheck,\n} from \"~/components/common\";\nimport { PartyFormInlineAvatar } from \"./PartyFormInlineAvatar\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface PartyFormProps {\n  fetcher: any;\n  form: any;\n  game?: any;\n  games: any[];\n  initialValues?: any;\n  onCancel: () => void;\n}\n\nexport function PartyForm(props: PartyFormProps) {\n  const { fetcher, form, game, games, initialValues, onCancel } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { token } = useToken();\n  const { user } = useContext(AuthContext);\n  let defaultValues: any = initialValues ? initialValues : undefined;\n  let defaultMode: any = null;\n  let ign = \"\";\n  const gameId = game.id;\n  const userGame =\n    user && user.userGames && user.userGames.length > 0\n      ? user.userGames.find((userGame: any) => userGame.gameId === gameId)\n      : null;\n  if (userGame) {\n    ign = userGame.ign;\n  }\n\n  if (game && game.modes) {\n    defaultMode = game.modes.find((m: any) => m.isDefaultMode);\n    if (defaultMode) {\n      defaultValues = {\n        mode: defaultMode.name,\n        slots: defaultMode.maxPlayer - 1,\n        username: ign,\n      };\n    }\n  }\n  const [gameModal, setGameModal] = useState<boolean>(false);\n  const [currentSlots, setCurrentSlots] = useState<number>(\n    defaultMode ? defaultMode.maxPlayer - 1 : 0\n  );\n  const [currentMax, setCurrentMax] = useState<any>(\n    defaultMode ? defaultValues.maxPlayer : null\n  );\n  const [selectedGameId, setSelectedGameId] = useState<any>(\n    initialValues && initialValues.gameId\n      ? initialValues.gameId\n      : game.id\n      ? game.id\n      : null\n  );\n  const [selectedGame, setSelectedGame] = useState<any>(\n    initialValues && initialValues.gameId\n      ? games.find((g: any) => g.id == initialValues.gameId)\n      : game\n      ? game\n      : null\n  );\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    modalRender: (modal: any) => modal,\n  } as any;\n\n  const openGameModal = () => {\n    setGameModal(true);\n  };\n\n  const closeGameModal = () => {\n    setGameModal(false);\n  };\n\n  const handleGameChanged = (gameId: any) => {\n    const newSelectedGame = games.find((g: any) => g.id == gameId);\n    const defaultMode = newSelectedGame.modes.find((m: any) => m.isDefaultMode);\n    if (defaultMode) {\n      form.setFieldsValue({\n        mode: defaultMode.name,\n        slots: defaultMode.maxPlayer - 1,\n      });\n      setCurrentSlots(defaultMode.maxPlayer - 1);\n      setCurrentMax(defaultMode.maxPlayer);\n    } else {\n      form.setFieldsValue({ mode: null, slots: null });\n      setCurrentSlots(0);\n      setCurrentMax(null);\n    }\n    setGameModal(false);\n    setSelectedGameId(gameId);\n    setSelectedGame(newSelectedGame);\n  };\n\n  const handleTiltSelect = useCallback(\n    (field: string, values: any) => {\n      if (field === \"mode\" && selectedGame) {\n        const selectedMode = selectedGame.modes.find(\n          (m: any) => m.name === values\n        );\n        const newSlots = selectedMode.maxPlayer\n          ? selectedMode.maxPlayer - 1\n          : 0;\n        setCurrentSlots(newSlots);\n        form.setFieldValue(\"slots\", newSlots);\n        setCurrentMax(selectedMode.maxPlayer ? selectedMode.maxPlayer : null);\n      } else if (field === \"slots\") {\n        setCurrentSlots(values);\n      }\n      form.setFieldValue(field, values);\n    },\n    [selectedGame]\n  );\n\n  const handleSubmit = useCallback(\n    (values: any) => {\n      const mode = selectedGame.modes.find(\n        (mode: any) => mode.name === values.mode\n      );\n\n      if (selectedGameId && mode) {\n        const newValues = {\n          name: values.name,\n          gameId: selectedGameId,\n          modeId: mode.id,\n          maxPlayers: mode.maxPlayer,\n          availableSlots: values.slots,\n          discordUrl: values.discordUrl,\n          isPrivate: values.isPrivate ? values.isPrivate : false,\n          ign: values.username,\n          rankIds: values.ranks,\n        };\n\n        fetcher.submit(\n          {\n            data: JSON.stringify(newValues),\n          },\n          {\n            method: \"post\",\n            action: `/resources/create-party`,\n          }\n        );\n      }\n      onCancel();\n    },\n    [selectedGameId]\n  );\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={defaultValues}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {t(\"create party\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          <PartyFormInlineAvatar\n            members={\n              initialValues?.members || [{ status: \"active\", user: user }]\n            }\n            maxPlayers={currentMax ? currentMax : 5}\n            require={currentSlots}\n          />\n          <Form.Item\n            key=\"name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input party name\"),\n              },\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"party name\")}\n                </Text>\n                <Tooltip\n                  placement=\"top\"\n                  arrow={false}\n                  title={t(\"fill in party detail\")}\n                >\n                  <div>\n                    <QuestionCircleOutlined\n                      style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                    />\n                  </div>\n                </Tooltip>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n          <Row gutter={[15, 15]}>\n            <Col flex=\"none\">\n              <Space>\n                {selectedGame ? (\n                  <GameCard\n                    avatarStyle={{\n                      position: \"relative\",\n                      width: 160,\n                      overflow: \"hidden\",\n                      cursor: \"pointer\",\n                      borderRadius: 10,\n                      backgroundSize: \"cover\",\n                      backgroundPosition: \"center\",\n                      backgroundImage:\n                        selectedGame &&\n                        selectedGame.mainImageUrl &&\n                        selectedGame.mainImageUrl !== \"-\"\n                          ? `url(\"${cdnUrl}/${selectedGame.mainImageUrl}\")`\n                          : `url(\"/image/placeholder.png\")`,\n                    }}\n                    onClick={openGameModal}\n                  />\n                ) : (\n                  <Card\n                    style={{\n                      backgroundColor: token.colorBgElevated,\n                      textAlign: \"center\",\n                    }}\n                    bodyStyle={{ padding: \"30px 10px\", cursor: \"pointer\" }}\n                    onClick={openGameModal}\n                  >\n                    <Space direction=\"vertical\" size={5} align=\"center\">\n                      <Image\n                        preview={false}\n                        src=\"/image/game-icon.svg\"\n                        width={30}\n                        height={30}\n                      />\n                      <Text>{t(\"select game\")}</Text>\n                    </Space>\n                  </Card>\n                )}\n              </Space>\n            </Col>\n            {selectedGame && (\n              <Col flex=\"auto\">\n                <Form.Item\n                  key=\"username\"\n                  name=\"username\"\n                  rules={[\n                    {\n                      required: true,\n                      message: t(\"please input game username\"),\n                    },\n                  ]}\n                  label={\n                    <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                      {`${selectedGame.name} ${t(\"username\")}`}\n                    </Text>\n                  }\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            )}\n          </Row>\n          {selectedGame && (\n            <>\n              <Form.Item\n                key=\"mode\"\n                name=\"mode\"\n                rules={[\n                  {\n                    required: true,\n                    message: t(\"please select at least 1 mode\"),\n                  },\n                ]}\n                label={\n                  <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                    {t(\"mode\")}\n                  </Text>\n                }\n              >\n                <TiltCheck\n                  fieldName=\"mode\"\n                  labelKey=\"name\"\n                  labelValue=\"name\"\n                  options={selectedGame.modes ? selectedGame.modes : []}\n                  onSelect={handleTiltSelect}\n                  initialValues={\n                    form.getFieldValue(\"mode\") || defaultValues.mode\n                  }\n                />\n              </Form.Item>\n              {(form.getFieldValue(\"mode\") || defaultValues.mode) && (\n                <Form.Item\n                  key=\"slots\"\n                  name=\"slots\"\n                  rules={[\n                    {\n                      required: true,\n                      message: t(\"please select slots\"),\n                    },\n                  ]}\n                  label={\n                    <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                      {t(\"required slots\")}\n                    </Text>\n                  }\n                >\n                  <TiltCheck\n                    fieldName=\"slots\"\n                    labelKey=\"label\"\n                    labelValue=\"value\"\n                    options={Array(currentMax ? currentMax - 1 : 4)\n                      .fill(\"\")\n                      .map((_, index) => ({\n                        label: index + 1,\n                        value: index + 1,\n                      }))}\n                    onSelect={handleTiltSelect}\n                    initialValues={\n                      form.getFieldValue(\"slots\") || defaultValues.slots\n                    }\n                  />\n                </Form.Item>\n              )}\n              <Form.Item\n                key=\"ranks\"\n                name=\"ranks\"\n                label={\n                  <Space size={10}>\n                    <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                      {t(\"ranks\")}\n                    </Text>\n                    <Tooltip\n                      placement=\"top\"\n                      arrow={false}\n                      title={t(\"select the preferred ranks\")}\n                    >\n                      <div>\n                        <QuestionCircleOutlined\n                          style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                        />\n                      </div>\n                    </Tooltip>\n                  </Space>\n                }\n                rules={[\n                  () => ({\n                    validator(_, value) {\n                      if (!value) {\n                        return Promise.resolve();\n                      } else {\n                        if (value.length > 3) {\n                          form.setFieldValue(\"ranks\", value.slice(0, 3));\n                        }\n                      }\n                      return Promise.resolve();\n                    },\n                  }),\n                ]}\n              >\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: \"100%\" }}\n                  placeholder={t(\"select ranks\")}\n                  options={\n                    selectedGame.ranks\n                      ? selectedGame.ranks.map((rank: any) => ({\n                          label: (\n                            <Space size={5}>\n                              {rank.imageUrl ? (\n                                <Avatar\n                                  src={`${cdnUrl}/${rank.imageUrl}`}\n                                  size={20}\n                                  shape=\"square\"\n                                />\n                              ) : (\n                                <></>\n                              )}\n                              <Text style={{ color: \"inherit\" }}>\n                                {rank.name}\n                              </Text>\n                            </Space>\n                          ),\n                          value: rank.id,\n                        }))\n                      : []\n                  }\n                />\n              </Form.Item>\n            </>\n          )}\n          <Form.Item\n            key=\"discordUrl\"\n            name=\"discordUrl\"\n            label={\n              <Space size={5}>\n                <Avatar src=\"/image/social/discord.png\" size={25} />\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"Discord URL\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n          <Space size={10}>\n            <Form.Item\n              key=\"isPrivate\"\n              name=\"isPrivate\"\n              valuePropName=\"checked\"\n              noStyle\n            >\n              <Switch />\n            </Form.Item>\n            <Text>{t(\"private party\")}</Text>\n            <Tooltip\n              placement=\"top\"\n              arrow={false}\n              title={t(\"party owner must approve before joining\")}\n            >\n              <div>\n                <QuestionCircleOutlined\n                  style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                />\n              </div>\n            </Tooltip>\n          </Space>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {t(\"create party\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {!initialValues ? (\n        <Modal\n          {...modalProps}\n          width={600}\n          onCancel={closeGameModal}\n          open={gameModal}\n        >\n          <GameSelect\n            currentGameId={selectedGameId ? selectedGameId : null}\n            games={games}\n            onGameSelect={handleGameChanged}\n          />\n        </Modal>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Avatar, Badge, Flex, Image, Tooltip, theme } from \"antd\";\nconst { useToken } = theme;\n\ninterface PartyFormInlineAvatarProps {\n  maxPlayers: number;\n  members: any[];\n  require: number;\n}\n\nexport function PartyFormInlineAvatar(props: PartyFormInlineAvatarProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { maxPlayers, members, require } = props;\n  const { token } = useToken();\n  const finalMembers = [...members];\n  if (require) {\n    for (\n      let index = 0;\n      index < maxPlayers - require - members.length &&\n      finalMembers.length < maxPlayers;\n      index++\n    ) {\n      finalMembers.push({ status: \"reserved\", user: {} });\n    }\n  }\n  if (finalMembers.length < maxPlayers) {\n    for (let j = finalMembers.length; j < maxPlayers; j++) {\n      finalMembers.push({ status: \"pending\", user: null });\n    }\n  }\n\n  const renderAvatar = (member: any, index: number) => {\n    return (\n      <Badge\n        count={\n          index == 0 ? (\n            <Image\n              preview={false}\n              src=\"/image/crowd-icon.png\"\n              width={24}\n              height={24}\n              wrapperStyle={{ position: \"absolute\", right: 5, top: 5 }}\n            />\n          ) : (\n            <></>\n          )\n        }\n        key={`member-${index}`}\n      >\n        <Avatar\n          src={\n            member.user\n              ? member.user.displayImage\n                ? `${cdnUrl}/${member.user.displayImage}`\n                : `/image/party-lock-thumbnail.jpg`\n              : `/image/party-available-thumbnail.jpg`\n          }\n          style={{\n            border: `1px solid ${token.colorBorder}`,\n          }}\n          size={50}\n        />\n      </Badge>\n    );\n  };\n\n  return (\n    <Flex justify=\"center\" gap={10}>\n      {finalMembers.map((member: any, index: number) =>\n        member.username ? (\n          <Tooltip\n            placement=\"top\"\n            title={member.username}\n            key={`member-${index}`}\n            arrow={false}\n          >\n            {renderAvatar(member, index)}\n          </Tooltip>\n        ) : (\n          renderAvatar(member, index)\n        )\n      )}\n    </Flex>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Flex, Skeleton } from \"antd\";\nimport { GameCard, OverlayBg } from \"~/components/common\";\n\ninterface PartyHeroProps {\n  game: any;\n  loading?: boolean;\n  onGameClick: () => void;\n}\n\nexport function PartyHero(props: PartyHeroProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { game, loading, onGameClick } = props;\n\n  return (\n    <Flex\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: 300,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundImage:\n          game && game.bannerImageUrl && game.bannerImageUrl !== \"-\"\n            ? `url(\"${cdnUrl}/${game.bannerImageUrl}\")`\n            : `url(\"/image/placeholder.png\")`,\n      }}\n    >\n      <OverlayBg />\n      <Flex\n        style={{\n          position: \"relative\",\n          width: \"100%\",\n          maxWidth: 1440,\n          paddingInline: \"3.5%\",\n          marginInline: \"auto\",\n        }}\n      >\n        {loading ? (\n          <Skeleton active />\n        ) : (\n          <Flex\n            style={{\n              position: \"relative\",\n              width: \"100%\",\n              paddingBlock: 20,\n            }}\n          >\n            <GameCard\n              avatarStyle={{\n                position: \"absolute\",\n                width: 240,\n                left: 0,\n                bottom: -40,\n                overflow: \"hidden\",\n                cursor: \"pointer\",\n                borderRadius: 20,\n                zIndex: 1,\n                boxShadow: \"0px 0px 24px 0px rgba(71, 0, 252, 0.50)\",\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                backgroundImage:\n                  game && game.mainImageUrl && game.mainImageUrl !== \"-\"\n                    ? `url(\"${cdnUrl}/${game.mainImageUrl}\")`\n                    : `url(\"/image/placeholder.png\")`,\n              }}\n              onClick={onGameClick}\n            />\n          </Flex>\n        )}\n      </Flex>\n    </Flex>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Avatar, Badge, Flex, Image, Tooltip, theme } from \"antd\";\nconst { useToken } = theme;\n\ninterface PartyInlineAvatarProps {\n  maxPlayers: number;\n  members: any[];\n}\n\nexport function PartyInlineAvatar(props: PartyInlineAvatarProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { maxPlayers, members } = props;\n  const { token } = useToken();\n  const transformedMembers = transformMembers(members, maxPlayers);\n\n  const renderAvatar = (member: any, index: number) => {\n    const avatarUrl =\n      member.status === \"member\"\n        ? `${cdnUrl}/${member.user.displayImage}`\n        : member.status === \"lockedSlot\"\n        ? `/image/party-lock-thumbnail.jpg`\n        : `/image/party-available-thumbnail.jpg`;\n    return (\n      <Badge\n        count={\n          index == 0 ? (\n            <Image\n              preview={false}\n              src=\"/image/crowd-icon.png\"\n              width={24}\n              height={24}\n              wrapperStyle={{ position: \"absolute\", right: 5, top: 5 }}\n            />\n          ) : (\n            <></>\n          )\n        }\n        key={`member-${index}`}\n      >\n        <Avatar\n          src={avatarUrl}\n          style={{\n            border: `1px solid ${token.colorBorder}`,\n          }}\n          size={50}\n        />\n      </Badge>\n    );\n  };\n\n  return (\n    <Flex justify=\"center\" gap={10}>\n      {transformedMembers.map((member: any, index: number) =>\n        member.user ? (\n          <Tooltip\n            placement=\"top\"\n            title={member.user.username}\n            key={`member-${index}`}\n            arrow={false}\n          >\n            {renderAvatar(member, index)}\n          </Tooltip>\n        ) : (\n          renderAvatar(member, index)\n        )\n      )}\n    </Flex>\n  );\n}\n\nfunction transformMembers(members: any[], maxPlayers: number) {\n  const copyMembers = [...members]; // Create a copy of the original members array\n  let transformedMembers = [];\n\n  const masterIndex = copyMembers.findIndex(\n    (member) => member.isPartyMaster === true\n  );\n  if (masterIndex !== -1) {\n    transformedMembers.push({\n      ...copyMembers[masterIndex],\n      status: \"member\",\n    });\n    copyMembers.splice(masterIndex, 1);\n  }\n\n  while (transformedMembers.length < maxPlayers) {\n    const memberIndex = copyMembers.findIndex(\n      (member) => member.isSlotLocked === false\n    );\n\n    if (memberIndex === -1) {\n      const lockedIndex = copyMembers.findIndex(\n        (member) => member.isSlotLocked === true\n      );\n      if (lockedIndex !== -1) {\n        transformedMembers.push({\n          ...copyMembers[lockedIndex],\n          status: \"lockedSlot\",\n        });\n        copyMembers.splice(lockedIndex, 1);\n      } else {\n        break; // Break out of the loop if no more members to add\n      }\n    } else {\n      transformedMembers.push({\n        ...copyMembers[memberIndex],\n        status: \"member\",\n      });\n      copyMembers.splice(memberIndex, 1);\n    }\n  }\n\n  // Fill remaining slots with 'availableSlot'\n  while (transformedMembers.length < maxPlayers) {\n    transformedMembers.push({\n      status: \"availableSlot\",\n      id: `availableSlot-${transformedMembers.length}`,\n    });\n  }\n\n  return transformedMembers;\n}\n", "import { Card, Flex, Result, Skeleton } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { PartyEntry } from './';\nimport { QueAnim } from '~/components/common';\nimport dayjs from 'dayjs';\nimport { useEffect, useState } from 'react';\n\ninterface PartyListsProps {\n  data: any[];\n  onEntryClick: (data: any) => void;\n}\n\nexport function PartyLists(props: PartyListsProps) {\n  const { data, onEntryClick } = props;\n  const { t } = useTranslation();\n\n  const [initialLoading, setInitialLoading] = useState<boolean>(true);\n\n  const handleEntryClick = (data: any) => {\n    onEntryClick(data);\n  };\n\n  useEffect(() => {\n    setInitialLoading(false);\n  }, []);\n\n  let items: any[] = [];\n  if (data && data.length > 0) {\n    items = data.map((item: any) => (\n      <li\n        key={`${item.id}-${dayjs(item.lastActivityAt).unix()}`}\n        style={{ listStyle: 'none', padding: 0, margin: '0 0 20px' }}\n      >\n        <PartyEntry data={item} onClick={handleEntryClick} />\n      </li>\n    ));\n  }\n\n  return initialLoading ? (\n    <Skeleton active />\n  ) : items.length > 0 ? (\n    <Flex vertical>\n      <QueAnim items={items} />\n    </Flex>\n  ) : (\n    <Card style={{ borderRadius: 10 }}>\n      <Result icon={<InboxOutlined />} title={t('no party matched')} />\n    </Card>\n  );\n}\n", "import { useCallback, useContext, useMemo, useState } from \"react\";\nimport {\n  Card,\n  Col,\n  Input,\n  Row,\n  Space,\n  Statistic,\n  theme,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport {\n  CloseOutlined,\n  LoadingOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport { AppContext } from \"~/contexts\";\nimport { debounce, isEmpty, isNil, omitBy } from \"lodash\";\nimport { TiltButton } from \"~/components/common\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { useMatches } from \"@remix-run/react\";\nimport { Search } from \"lucide-react\";\nconst { useToken } = theme;\nconst { Countdown } = Statistic;\nconst { Text } = Typography;\n\ninterface PartyIndexHeaderProps {\n  children: any;\n  fetcher: any;\n  onRefresh: () => void;\n  searchParams: any;\n  submit: any;\n}\n\nexport function PartyIndexHeader(props: PartyIndexHeaderProps) {\n  const matches = useMatches();\n  const { autoRefreshInterval, manualRefreshInterval } = matches[0].data;\n  const { children, fetcher, onRefresh, searchParams, submit } = props;\n  const [openSearch, setOpenSearch] = useState<boolean>(false);\n  const { scheme } = useContext(AppContext);\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const [manualDeadline, setManualDeadline] = useState<any>(\n    dayjs().add(manualRefreshInterval, \"seconds\")\n  );\n  const [manualCountdown, setManualCountdown] = useState<boolean>(false);\n  const [autoDeadline, setAutoDeadline] = useState<any>(\n    dayjs().add(autoRefreshInterval, \"seconds\")\n  );\n  const [autoCountdown, setAutoCountdown] = useState<boolean>(true);\n\n  const searchCardStyle = {\n    height: 54,\n    marginTop: 10,\n    borderRadius: 0,\n    boxShadow: \"none\",\n    overflow: \"visible\",\n    zIndex: 1,\n  };\n  const searchCardBodyStyle = {\n    padding: 5,\n    backgroundColor: \"inherit\",\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n\n    overflow: \"hidden\",\n  };\n\n  const handleOpenSearch = () => {\n    setOpenSearch(true);\n  };\n\n  const handleCloseSearch = () => {\n    setOpenSearch(false);\n  };\n\n  const handleManualCountdownFinish = () => {\n    setManualCountdown(false);\n  };\n\n  const handleAutoCountdownFinish = () => {\n    setAutoCountdown(false);\n    const timeout = setTimeout(() => {\n      handleAutoRefresh();\n      clearTimeout(timeout);\n    }, 300);\n  };\n\n  const handleManualRefresh = () => {\n    setManualCountdown(true);\n    setManualDeadline(dayjs().add(manualRefreshInterval, \"seconds\"));\n    setAutoDeadline(dayjs().add(autoRefreshInterval, \"seconds\"));\n    onRefresh();\n  };\n\n  const handleAutoRefresh = () => {\n    setAutoCountdown(true);\n    setAutoDeadline(dayjs().add(autoRefreshInterval, \"seconds\"));\n    onRefresh();\n  };\n\n  const handleSearch = useCallback(\n    (e: any) => {\n      const searchString = e.target.value;\n      let newSearchParams = { ...searchParams };\n      if (searchString.length > 0) {\n        newSearchParams.q = searchString;\n        submit(\n          omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n          { method: \"get\", preventScrollReset: true }\n        );\n      } else {\n        delete newSearchParams[\"q\"];\n        submit(\n          omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n          { method: \"get\", preventScrollReset: true }\n        );\n      }\n    },\n    [fetcher, searchParams, submit]\n  );\n\n  const handleDebounceSearch = useMemo(\n    () => debounce(handleSearch, 500),\n    [handleSearch]\n  );\n\n  return (\n    <>\n      <Row gutter={[15, 15]} wrap style={{ alignItems: \"center\" }}>\n        <Col flex=\"auto\">\n          <Space>{children}</Space>\n        </Col>\n        <Col flex=\"none\">\n          <Space size={15}>\n            <TiltButton\n              style={{\n                opacity: manualCountdown ? 0.5 : 1,\n              }}\n              onClick={handleManualRefresh}\n              disabled={manualCountdown}\n            >\n              <Space style={{ alignItems: \"center\" }} size={5}>\n                {t(\"refresh\")}\n                {manualCountdown && (\n                  <Countdown\n                    value={manualDeadline}\n                    onFinish={handleManualCountdownFinish}\n                    format=\"s\"\n                    valueStyle={{\n                      fontSize: 12,\n                      color: \"#000\",\n                    }}\n                  />\n                )}\n              </Space>\n            </TiltButton>\n            <Text>{t(\"refresh in\")}</Text>\n            {autoCountdown && (\n              <Countdown\n                value={autoDeadline}\n                onFinish={handleAutoCountdownFinish}\n                format=\"s\"\n                valueStyle={{\n                  fontSize: 12,\n                  color: \"inherit\",\n                }}\n              />\n            )}\n            <Text>{t(`second`)}</Text>\n            {/* <Tooltip\n              title={t(\"auto refresh countdown\")}\n              placement=\"top\"\n              arrow={false}\n            >\n              <div style={{ position: \"relative\", color: token.colorTextBase }}>\n                <LoadingOutlined style={{ color: \"inherit\", fontSize: 36 }} />\n                {autoCountdown && (\n                  <Countdown\n                    value={autoDeadline}\n                    onFinish={handleAutoCountdownFinish}\n                    format=\"s\"\n                    valueStyle={{\n                      fontSize: 12,\n                      color: \"inherit\",\n                    }}\n                    style={{\n                      position: \"absolute\",\n                      color: \"inherit\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      transform: \"translate(-50%, -50%)\",\n                    }}\n                  />\n                )}\n              </div>\n            </Tooltip> */}\n            <Text>\n              {openSearch ? (\n                <CloseOutlined\n                  style={{ fontSize: 20 }}\n                  onClick={handleCloseSearch}\n                />\n              ) : (\n                <Search style={{ fontSize: 20 }} onClick={handleOpenSearch} />\n              )}\n            </Text>\n          </Space>\n        </Col>\n      </Row>\n      {openSearch && (\n        <Card\n          bordered={false}\n          bodyStyle={searchCardBodyStyle}\n          style={searchCardStyle}\n        >\n          <Input\n            autoFocus\n            bordered={false}\n            prefix={\n              <Search\n                className=\"site-form-item-icon\"\n                style={{ fontSize: 20, paddingRight: 10 }}\n              />\n            }\n            defaultValue={searchParams && searchParams.q ? searchParams.q : \"\"}\n            onChange={handleDebounceSearch}\n          />\n        </Card>\n      )}\n    </>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport {\n  Avatar,\n  Badge,\n  Col,\n  Flex,\n  Form,\n  Image,\n  Input,\n  Modal,\n  Row,\n  Space,\n  theme,\n  Typography,\n} from \"antd\";\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  EditOutlined,\n  ExclamationCircleFilled,\n  LockOutlined,\n  MinusCircleOutlined,\n} from \"@ant-design/icons\";\nimport { useCallback, useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { TiltButton, ToCopyField } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nconst { Text } = Typography;\nconst { useToken } = theme;\n\ninterface PartyMemberEntryProps {\n  editable?: boolean;\n  fetcher: any;\n  member: any;\n  partyId: number | string;\n  gameId: number | string;\n  isPartyOwner: boolean;\n}\n\nexport function PartyMemberEntry(props: PartyMemberEntryProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { user } = useContext(AuthContext);\n  const { editable, fetcher, member, isPartyOwner, partyId, gameId } = props;\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [modal, modalContextHolder] = Modal.useModal();\n  const [form] = Form.useForm();\n\n  const openEditMode = () => {\n    setEditMode(true);\n  };\n\n  const closeEditMode = () => {\n    setEditMode(false);\n  };\n\n  const handleUpdateMember = useCallback(\n    (values: any) => {\n      if (member.status === \"availableSlot\") {\n        fetcher.submit(\n          {\n            data: JSON.stringify({ ign: values.username }),\n            gameId: gameId,\n            partyId: partyId,\n          },\n          {\n            method: \"post\",\n            action: `/resources/create-party-member`,\n          }\n        );\n      } else {\n        fetcher.submit(\n          {\n            data: JSON.stringify({ ign: values.username, memberId: member.id }),\n            gameId: gameId,\n            partyId: partyId,\n          },\n          {\n            method: \"put\",\n            action: `/resources/update-party-member`,\n          }\n        );\n      }\n      setEditMode(false);\n    },\n    [member, partyId]\n  );\n\n  const handleRemove = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete party member`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { memberId: member.id, partyId: partyId, gameId: gameId },\n          {\n            method: \"delete\",\n            action: `/resources/delete-party-member`,\n          }\n        );\n      },\n    });\n  }, [member, partyId]);\n\n  const handleClick = useCallback(() => {\n    if (member.user && member.user.uuid) {\n      window.open(\n        `/users/${\n          member.user?.userName ? member.user.userName : member.user.uuid\n        }`,\n        \"_blank\"\n      );\n    }\n  }, [member]);\n\n  return (\n    <>\n      <Row\n        gutter={[20, 15]}\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <Col flex=\"none\">\n          {member.status === \"availableSlot\" ? (\n            <Avatar\n              src={\"/image/party-available-thumbnail.jpg\"}\n              style={{\n                border: `1px solid ${token.colorBorder}`,\n              }}\n              size={50}\n            />\n          ) : (\n            <Badge\n              count={\n                member.isPartyMaster ? (\n                  <Image\n                    preview={false}\n                    src=\"/image/crowd-icon.png\"\n                    width={24}\n                    height={24}\n                    wrapperStyle={{ position: \"absolute\", right: 5, top: 5 }}\n                  />\n                ) : isPartyOwner ? (\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      right: 5,\n                      top: 5,\n                      display: \"flex\",\n                      backgroundColor: \"#c43025\",\n                      padding: 3,\n                      borderRadius: \"50%\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={handleRemove}\n                  >\n                    <MinusCircleOutlined\n                      style={{ fontSize: 12, color: \"#fff\", strokeWidth: 2 }}\n                    />\n                  </div>\n                ) : (\n                  <></>\n                )\n              }\n            >\n              <Avatar\n                src={\n                  member && member.user && member.user.displayImage\n                    ? `${cdnUrl}/${member.user.displayImage}`\n                    : \"/image/party-lock-thumbnail.jpg\"\n                }\n                onClick={member.user ? handleClick : undefined}\n                style={{\n                  cursor: member.user ? \"pointer\" : \"default\",\n                  border: `1px solid ${token.colorBorder}`,\n                }}\n                size={50}\n              />\n            </Badge>\n          )}\n        </Col>\n        <Col flex=\"auto\">\n          {editMode ? (\n            <Form\n              form={form}\n              initialValues={{\n                username:\n                  member && member.user\n                    ? member.user.userGames[0].ign\n                    : t(\"Unnamed Player\"),\n              }}\n              onFinish={handleUpdateMember}\n            >\n              <Form.Item\n                key=\"username\"\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: `${t(\"please input username\")}`,\n                  },\n                ]}\n                noStyle\n              >\n                <Input\n                  autoFocus={true}\n                  suffix={\n                    <Space size={10}>\n                      <CheckOutlined\n                        style={{ color: \"#18Bd62\", cursor: \"pointer\" }}\n                        onClick={() => form.submit()}\n                      />\n                      <CloseOutlined\n                        style={{ color: \"#cf1714\", cursor: \"pointer\" }}\n                        onClick={closeEditMode}\n                      />\n                    </Space>\n                  }\n                />\n              </Form.Item>\n            </Form>\n          ) : (\n            <Flex justify=\"space-between\" align=\"center\">\n              {member && member.user && editable ? (\n                <ToCopyField\n                  alertMessage={t(\"username copied\")}\n                  copyMessage={member.user.userGames[0].ign}\n                  text={member.user.userGames[0].ign}\n                  plain\n                  style={{ paddingBlock: 5 }}\n                />\n              ) : member && member.user ? (\n                <Text>{member.user.userGames[0].ign}</Text>\n              ) : (\n                <Text style={{ opacity: 0.75 }}>\n                  {member.isSlotLocked === true\n                    ? member.lockedSlotIgn\n                    : t(\"available\")}\n                </Text>\n              )}\n              {member.status === \"availableSlot\" && isPartyOwner ? (\n                <TiltButton color=\"primary\" onClick={openEditMode}>\n                  <Space size={5}>\n                    <LockOutlined />\n                    <Text>{t(\"lock\")}</Text>\n                  </Space>\n                </TiltButton>\n              ) : (user &&\n                  member &&\n                  member.userId &&\n                  user.id === member.userId) ||\n                (member.isSlotLocked && isPartyOwner) ? (\n                <Space\n                  size={10}\n                  onClick={openEditMode}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <EditOutlined style={{ color: \"#7a6fee\" }} />\n                  <Text>{t(\"edit\")}</Text>\n                </Space>\n              ) : (\n                <></>\n              )}\n            </Flex>\n          )}\n        </Col>\n      </Row>\n      {modalContextHolder}\n    </>\n  );\n}\n", "import { Flex } from \"antd\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"~/contexts\";\nimport { PartyMemberEntry } from \"./PartyMemberEntry\";\n\ninterface PartyMemberListsProps {\n  fetcher: any;\n  party: any;\n}\n\nexport function PartyMemberLists(props: PartyMemberListsProps) {\n  const { fetcher, party } = props;\n  const { user } = useContext(AuthContext);\n  const master = party.partyMembers.find(\n    (member: any) => member.isPartyMaster === true\n  );\n  const isOwner = user ? master.userId === user.id : false;\n  const editable =\n    user &&\n    party.partyMembers &&\n    party.partyMembers.find((m: any) => m.userId === user.id)\n      ? true\n      : false;\n\n  const transformedMembers = transformMembers(\n    party.partyMembers,\n    party.maxPlayers\n  );\n\n  return (\n    <Flex vertical gap={10}>\n      {transformedMembers.map((member: any) => (\n        <PartyMemberEntry\n          key={`member-${member.id}`}\n          editable={editable}\n          fetcher={fetcher}\n          member={member}\n          partyId={party.id}\n          gameId={party.gameId}\n          isPartyOwner={isOwner}\n        />\n      ))}\n    </Flex>\n  );\n}\n\nfunction transformMembers(members: any[], maxPlayers: number) {\n  const copyMembers = [...members]; // Create a copy of the original members array\n  let transformedMembers = [];\n\n  const masterIndex = copyMembers.findIndex(\n    (member) => member.isPartyMaster === true\n  );\n  if (masterIndex !== -1) {\n    transformedMembers.push({\n      ...copyMembers[masterIndex],\n      status: \"member\",\n    });\n    copyMembers.splice(masterIndex, 1);\n  }\n\n  while (transformedMembers.length < maxPlayers) {\n    const memberIndex = copyMembers.findIndex(\n      (member) => member.isSlotLocked === false\n    );\n\n    if (memberIndex === -1) {\n      const lockedIndex = copyMembers.findIndex(\n        (member) => member.isSlotLocked === true\n      );\n      if (lockedIndex !== -1) {\n        transformedMembers.push({\n          ...copyMembers[lockedIndex],\n          status: \"lockedSlot\",\n        });\n        copyMembers.splice(lockedIndex, 1);\n      } else {\n        break; // Break out of the loop if no more members to add\n      }\n    } else {\n      transformedMembers.push({\n        ...copyMembers[memberIndex],\n        status: \"member\",\n      });\n      copyMembers.splice(memberIndex, 1);\n    }\n  }\n\n  // Fill remaining slots with 'availableSlot'\n  while (transformedMembers.length < maxPlayers) {\n    transformedMembers.push({\n      status: \"availableSlot\",\n      id: `availableSlot-${transformedMembers.length}`,\n    });\n  }\n\n  return transformedMembers;\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Avatar, Divider, Flex, Space, Tooltip, Typography } from \"antd\";\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  CommentOutlined,\n} from \"@ant-design/icons\";\n// import { useTranslation } from 'react-i18next';\nconst { Text } = Typography;\n\ninterface PartyRequestEntryProps {\n  fetcher: any;\n  hasDivider?: boolean;\n  request: any;\n  partyId: number | string;\n  gameId: number | string;\n}\n\nexport function PartyRequestEntry(props: PartyRequestEntryProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { fetcher, hasDivider, request, partyId, gameId } = props;\n  // const { t } = useTranslation();\n\n  const handleApproveRequest = () => {\n    fetcher.submit(\n      {\n        requestId: request.id,\n        partyId,\n        gameId,\n      },\n      {\n        method: \"post\",\n        action: `/resources/approve-party-request`,\n      }\n    );\n  };\n\n  const handleRejectRequest = () => {\n    fetcher.submit(\n      {\n        requestId: request.id,\n        partyId,\n      },\n      {\n        method: \"post\",\n        action: `/resources/reject-party-request`,\n      }\n    );\n  };\n\n  return (\n    <>\n      <Flex\n        justify=\"space-between\"\n        align=\"center\"\n        // style={{ opacity: request.status !== \"pending\" ? 0.5 : 1 }}\n        style={{ opacity: 1 }}\n      >\n        <Space size={10} style={{ alignItems: \"center\" }}>\n          <Avatar\n            src={\n              request.user.displayImage\n                ? `${cdnUrl}/${request.user.displayImage}`\n                : \"/image/placeholder.png\"\n            }\n            size={50}\n          />\n          {request.user.userGames && (\n            <Text>{request.user.userGames[0].ign}</Text>\n          )}\n          {request.message && (\n            <Tooltip title={request.message} placement=\"top\" arrow={false}>\n              <CommentOutlined style={{ color: \"#7a6fee\" }} />\n            </Tooltip>\n          )}\n        </Space>\n        <Space size={10} style={{ alignItems: \"center\" }}>\n          <CheckOutlined\n            style={{ color: \"#18Bd62\", cursor: \"pointer\" }}\n            onClick={handleApproveRequest}\n          />\n          <CloseOutlined\n            style={{ color: \"#cf1714\", cursor: \"pointer\" }}\n            onClick={handleRejectRequest}\n          />\n        </Space>\n        {/* {request.status === 'pending' ? (\n          fetcher.state !== 'idle' ? (\n            <Skeleton.Button active size=\"small\" shape=\"round\" />\n          ) : (\n            <Space size={10} style={{ alignItems: 'center' }}>\n              <CheckOutlined\n                style={{ color: '#18Bd62', cursor: 'pointer' }}\n                onClick={handleApproveRequest}\n              />\n              <CloseOutlined\n                style={{ color: '#cf1714', cursor: 'pointer' }}\n                onClick={handleRejectRequest}\n              />\n            </Space>\n          )\n        ) : request.status === 'approved' ? (\n          <Space style={{ alignItems: 'center' }}>\n            <CheckOutlined style={{ color: '#18Bd62' }} />\n            <Text style={{ color: '#18Bd62' }}>{t('joined')}</Text>\n          </Space>\n        ) : (\n          <Space>\n            <CloseOutlined style={{ color: '#cf1714' }} />\n            <Text style={{ color: '#cf1714' }}>{t('rejected')}</Text>\n          </Space>\n        )} */}\n      </Flex>\n      {hasDivider && <Divider style={{ marginBlock: 5 }} />}\n    </>\n  );\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Card,\n  Col,\n  Flex,\n  Input,\n  Modal,\n  Row,\n  Skeleton,\n  Typography,\n} from \"antd\";\nimport { ExclamationCircleFilled, LogoutOutlined } from \"@ant-design/icons\";\nimport { TiltButton } from \"~/components/common\";\nimport { useMatches, useRouteLoaderData } from \"@remix-run/react\";\nimport { AuthContext } from \"~/contexts\";\nconst { Text, Title } = Typography;\n\ninterface PartyRequestFormProps {\n  fetcher: any;\n  party: any;\n}\n\nexport function PartyRequestForm(props: PartyRequestFormProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { fetcher, party } = props;\n  const { user, openLoginModal } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const routeLoader = useRouteLoaderData(\"routes/_app.parties\");\n  const { hasParty } = routeLoader;\n  const [modal, modalContextHolder] = Modal.useModal();\n  const [username, setUsername] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [request, setRequest] = useState<any>(null);\n\n  let ign = \"\";\n  const gameId = party.gameId;\n  const userGame =\n    user && user.userGames && user.userGames.length > 0\n      ? user.userGames.find((userGame: any) => userGame.gameId === gameId)\n      : null;\n  if (userGame) {\n    ign = userGame.ign;\n  }\n\n  const handleUsernameChanged = (e: any) => {\n    setUsername(e.target.value);\n  };\n\n  const handleMessageChanged = (e: any) => {\n    setMessage(e.target.value);\n  };\n\n  const handleDeleteRequest = useCallback(() => {\n    if (request && request.id) {\n      modal.confirm({\n        title: `${t(`are you sure to delete party request`)}?`,\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        okType: \"danger\",\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          fetcher.submit(\n            { requestId: request.id, partyId: party.id, gameId: party.gameId },\n            {\n              method: \"delete\",\n              action: `/resources/delete-party-request`,\n            }\n          );\n        },\n      });\n    }\n  }, [party, request]);\n\n  const handleSubmitRequest = useCallback(() => {\n    const values = {\n      ign: username,\n      message,\n      isPrivate: party.isPrivate,\n    };\n    fetcher.submit(\n      {\n        data: JSON.stringify({ ...values, hasParty: hasParty }),\n        partyId: party.id,\n        gameId: party.gameId,\n      },\n      {\n        method: \"post\",\n        action: `/resources/create-party-request`,\n      }\n    );\n  }, [party, message, username]);\n\n  useEffect(() => {\n    setRequest(null);\n    setLoading(true);\n    setUsername(ign);\n    setMessage(\"\");\n    fetcher.load(\n      `/resources/party-request?partyId=${party.id}&&gameId=${party.gameId}`\n    );\n  }, [party]);\n\n  useEffect(() => {\n    if (fetcher && fetcher.data && fetcher.state === \"idle\") {\n      if (\n        fetcher.data.request &&\n        fetcher.data.partyId &&\n        `${fetcher.data.partyId}` === `${party.id}`\n      ) {\n        setLoading(false);\n        setRequest(fetcher.data.request);\n        setUsername(fetcher.data.request.user.userGames[0].ign);\n        setMessage(\n          fetcher.data.request.message ? fetcher.data.request.message : \"\"\n        );\n      } else if (\n        fetcher.data.success &&\n        fetcher.data.success === \"delete-party-request\"\n      ) {\n        setRequest(null);\n      } else if (\n        fetcher.data.success &&\n        fetcher.data.success === \"join-party\"\n      ) {\n        return;\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [fetcher, party]);\n\n  if (loading) {\n    return <Skeleton active paragraph={{ rows: 2 }} />;\n  }\n\n  if (!user) {\n    return (\n      <TiltButton color=\"primary\" onClick={openLoginModal}>\n        {party.isPrivate ? t(\"request\") : t(\"join\")}\n      </TiltButton>\n    );\n  }\n  return (\n    <>\n      <Flex vertical gap={20}>\n        <Card style={{ borderRadius: 12 }}>\n          <Title level={4} style={{ marginTop: 0, marginBottom: 20 }}>\n            {request\n              ? t(`party request`)\n              : party.isPrivate\n              ? t(\"request to join party\")\n              : t(\"confirm game username\")}\n          </Title>\n          <Flex vertical gap={5} style={{ marginBottom: 10 }}>\n            <Title level={5} style={{ margin: 0 }}>\n              {`${party.game.name} ${t(\"username\")}`}\n            </Title>\n            <Row gutter={10} wrap={false} style={{ alignItems: \"center\" }}>\n              <Col flex=\"none\">\n                <Avatar\n                  size={50}\n                  src={\n                    user && user.displayImage\n                      ? `${cdnUrl}/${user.displayImage}`\n                      : \"/image/placeholder.png\"\n                  }\n                />\n              </Col>\n              <Col flex=\"auto\">\n                <Input\n                  autoFocus\n                  status={!username.length ? \"error\" : undefined}\n                  onChange={handleUsernameChanged}\n                  disabled={request ? true : false}\n                  value={username}\n                />\n              </Col>\n            </Row>\n            {party.isPrivate === true ? (\n              <Flex vertical gap={5}>\n                <Title level={5} style={{ margin: 0 }}>\n                  {t(\"request message\")}\n                </Title>\n                <Input\n                  onChange={handleMessageChanged}\n                  disabled={request ? true : false}\n                  value={message}\n                />\n              </Flex>\n            ) : (\n              false\n            )}\n          </Flex>\n        </Card>\n        <TiltButton\n          color={request || !username.length ? \"secondary\" : \"primary\"}\n          disabled={!username.length}\n          onClick={!request ? handleSubmitRequest : undefined}\n        >\n          {request\n            ? t(\"request sent\")\n            : party.isPrivate\n            ? t(\"request\")\n            : t(\"join\")}\n        </TiltButton>\n        {request && (\n          <Flex\n            justify=\"center\"\n            style={{ marginTop: 15, cursor: \"pointer\" }}\n            onClick={handleDeleteRequest}\n          >\n            <Text type=\"danger\">\n              {`${t(\"delete request\")}  `}\n              <LogoutOutlined type=\"danger\" />\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n      {modalContextHolder}\n    </>\n  );\n}\n", "import { Card, Empty, Flex, Skeleton, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PartyRequestEntry } from \".\";\nconst { Title } = Typography;\n\ninterface PartyRequestsProps {\n  fetcher: any;\n  party: any;\n  accepted: (newParty: any) => void;\n}\n\nexport function PartyRequests(props: PartyRequestsProps) {\n  const { fetcher, party, accepted } = props;\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [requests, setRequests] = useState<any[]>([]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetcher.load(\n      `/resources/party-requests?partyId=${party.id}&gameId=${party.gameId}`\n    );\n  }, [party]);\n\n  useEffect(() => {\n    if (fetcher && fetcher.data && fetcher.state === \"idle\") {\n      if (\n        fetcher.data.requests &&\n        fetcher.data.partyId &&\n        `${fetcher.data.partyId}` === `${party.id}`\n      ) {\n        setLoading(false);\n        setRequests(fetcher.data.requests);\n      } else if (\n        fetcher.data.success &&\n        (fetcher.data.success === \"approve-party-request\" ||\n          fetcher.data.success === \"reject-party-request\")\n      ) {\n        setRequests([]);\n        setLoading(true);\n        if (fetcher.data.party) {\n          accepted(fetcher.data.party);\n        }\n        fetcher.load(\n          `/resources/party-requests?partyId=${party.id}&gameId=${party.gameId}`\n        );\n      }\n    }\n  }, [fetcher, party]);\n\n  return (\n    <Card\n      bodyStyle={{\n        padding: 20,\n        maxHeight: 400,\n        overflowY: \"auto\",\n        overflowX: \"hidden\",\n        border: \"1px solid #dfdfdf\",\n      }}\n    >\n      <Title level={4} style={{ marginTop: 0, marginBottom: 20 }}>\n        {t(\"party requests\")}\n      </Title>\n      {loading ? (\n        <Skeleton active title={false} />\n      ) : requests && requests.length > 0 ? (\n        <Flex vertical>\n          {requests.map((request: any, index: number) => (\n            <PartyRequestEntry\n              key={`request-${request.id}`}\n              partyId={party.id}\n              request={request}\n              fetcher={fetcher}\n              hasDivider={index < requests.length - 1}\n              gameId={party.gameId}\n            />\n          ))}\n        </Flex>\n      ) : (\n        <Empty description={t(\"no party request\")} />\n      )}\n    </Card>\n  );\n}\n", "/* eslint-disable jsx-a11y/anchor-has-content */\nimport { useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Card, Flex, Modal, Space, theme, Typography } from \"antd\";\nimport { CaretRightOutlined } from \"@ant-design/icons\";\nimport { AppContext } from \"~/contexts\";\nimport { HowToCraeteParty } from \"~/components/common/HowToCreateParty\";\nimport { HowToJoinParty } from \"~/components/common/HowToJoinParty\";\nimport { HowToStartGame } from \"~/components/common/HowToStartGame\";\nimport { ArrowUpRight } from \"lucide-react\";\nconst { Title } = Typography;\nconst { useToken } = theme;\n\ninterface PartyRulesProps {\n  menus?: any[];\n  mobileStyle?: boolean;\n  title: any;\n}\n\nexport function PartyRules(props: PartyRulesProps) {\n  const { menus, mobileStyle, title } = props;\n  const { t } = useTranslation();\n  const { scheme } = useContext(AppContext);\n  const { token } = useToken();\n  const [createPartyModal, setcreatePartyModal] = useState<boolean>(false);\n  const [joinPartyModal, setJoinPartyModal] = useState<boolean>(false);\n  const [startGameModal, setStartGameModal] = useState<boolean>(false);\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    modalRender: (modal: any) => modal,\n    styles: {\n      body: { padding: \"20px 30px\" },\n    },\n  } as any;\n\n  const openCreateParty = () => {\n    setcreatePartyModal(true);\n  };\n\n  const closeCreateParty = () => {\n    setcreatePartyModal(false);\n  };\n\n  const openJoinParty = () => {\n    setJoinPartyModal(true);\n  };\n\n  const closeJoinParty = () => {\n    setJoinPartyModal(false);\n  };\n\n  const openStartGame = () => {\n    setStartGameModal(true);\n  };\n\n  const closeStartGame = () => {\n    setStartGameModal(false);\n  };\n\n  const filteredMenus = menus\n    ? menus\n    : ([\n        {\n          title: \"how to create party\",\n          onClick: openCreateParty,\n        },\n        {\n          title: \"how to join party\",\n          onClick: openJoinParty,\n        },\n        {\n          title: \"how to start the game\",\n          onClick: openStartGame,\n        },\n      ] as any[]);\n\n  return (\n    <>\n      <Card\n        bordered={false}\n        style={{\n          backgroundColor: mobileStyle\n            ? \"transparent\"\n            : scheme === \"light\"\n            ? \"#ebebeb\"\n            : \"#0f0e0e\",\n          borderRadius: 10,\n          boxShadow: \"none\",\n        }}\n        bodyStyle={{\n          padding: mobileStyle ? 0 : 20,\n        }}\n      >\n        <Flex gap={10} vertical>\n          <Title level={mobileStyle ? 5 : 4} style={{ marginTop: 0 }}>\n            {title}\n          </Title>\n          {filteredMenus.map((menu: any, index: number) => (\n            <Button\n              key={`menu-${index}`}\n              type={\"text\"}\n              onClick={menu.onClick}\n              className={`ctrlg-link ${scheme}`}\n              style={{ padding: 5, borderRadius: 6 }}\n            >\n              <Flex\n                justify=\"space-between\"\n                gap={10}\n                style={{ fontSize: \"1.05em\" }}\n              >\n                <Space\n                  size={8}\n                  style={{\n                    color: token.colorTextBase,\n                    alignItems: \"flex-start\",\n                  }}\n                >\n                  <CaretRightOutlined style={{ fontSize: \"1.1em\" }} />\n                  {t(menu.title)}\n                </Space>\n                <ArrowUpRight\n                  className=\"arrow-icon\"\n                  style={{ color: \"#7a6fee\" }}\n                />\n              </Flex>\n            </Button>\n          ))}\n        </Flex>\n      </Card>\n      <Modal\n        {...modalProps}\n        onCancel={closeCreateParty}\n        open={createPartyModal}\n      >\n        <HowToCraeteParty onCancel={closeCreateParty} />\n      </Modal>\n      <Modal {...modalProps} onCancel={closeJoinParty} open={joinPartyModal}>\n        <HowToJoinParty onCancel={closeJoinParty} />\n      </Modal>\n      <Modal {...modalProps} onCancel={closeStartGame} open={startGameModal}>\n        <HowToStartGame onCancel={closeStartGame} />\n      </Modal>\n    </>\n  );\n}\n", "import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, List, Typography } from \"antd\";\n\nimport { TiltButton } from \"./TiltButton\";\nconst { Text, Title } = Typography;\n\ninterface HowToCraetePartyProps {\n  onCancel: () => void;\n}\n\nexport const HowToCraeteParty: React.FC<HowToCraetePartyProps> = (\n  props: HowToCraetePartyProps\n) => {\n  const { t } = useTranslation();\n  const { onCancel } = props;\n\n  const handleAcceptAgreemnet = () => {\n    onCancel();\n  };\n\n  return (\n    <Flex vertical gap={20}>\n      <Title level={3} style={{ margin: 0 }}>\n        {t(\"How to Create a Party\")}\n      </Title>\n\n      <List>\n        <List.Item>\n          <Text>{t(\"1. Navigate to the Party Matching menu.\")}</Text>\n        </List.Item>\n        <List.Item>\n          <Text>{t(\"2. Click the \u201CCreate Party\u201D button.\")}</Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\n              \"3. Set the party name, enter your in-game character name, choose the play mode, select the desired number of players for the party, pick the rank range for participants, and input the communication channel link for party members.\"\n            )}\n          </Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\n              \"4. Optionally, you can set the party to private if the party creator wants to filter incoming players.\"\n            )}\n          </Text>\n        </List.Item>\n      </List>\n      <Flex justify=\"center\">\n        <TiltButton color=\"primary\" onClick={handleAcceptAgreemnet}>\n          {t(\"close\")}\n        </TiltButton>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, List, Typography } from \"antd\";\n\nimport { TiltButton } from \"./TiltButton\";\nconst { Text, Title } = Typography;\n\ninterface HowToJoinPartyProps {\n  onCancel: () => void;\n}\n\nexport const HowToJoinParty: React.FC<HowToJoinPartyProps> = (\n  props: HowToJoinPartyProps\n) => {\n  const { t } = useTranslation();\n  const { onCancel } = props;\n\n  const handleAcceptAgreemnet = () => {\n    onCancel();\n  };\n\n  return (\n    <Flex vertical gap={20}>\n      <Title level={3} style={{ margin: 0 }}>\n        {t(\"How to Join a Party\")}\n      </Title>\n\n      <List>\n        <List.Item>\n          <Text>{t(\"1. Click the \u201CJoin\u201D button on the desired party.\")}</Text>\n        </List.Item>\n        <List.Item>\n          <Text>{t(\"2. Enter your in-game character name.\")}</Text>\n        </List.Item>\n      </List>\n      <Flex justify=\"center\">\n        <TiltButton color=\"primary\" onClick={handleAcceptAgreemnet}>\n          {t(\"close\")}\n        </TiltButton>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, List, Typography } from \"antd\";\n\nimport { TiltButton } from \"./TiltButton\";\nconst { Text, Title } = Typography;\n\ninterface HowToStartGameProps {\n  onCancel: () => void;\n}\n\nexport const HowToStartGame: React.FC<HowToStartGameProps> = (\n  props: HowToStartGameProps\n) => {\n  const { t } = useTranslation();\n  const { onCancel } = props;\n\n  const handleAcceptAgreemnet = () => {\n    onCancel();\n  };\n\n  return (\n    <Flex vertical gap={20}>\n      <Title level={3} style={{ margin: 0 }}>\n        {t(\"how to start playing\")}\n      </Title>\n\n      <List>\n        <List.Item>\n          <Text>\n            {t(\n              \"1. When all members join the party, the party status changes to offline.\"\n            )}\n          </Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\n              \"2. Members can coordinate and schedule gameplay using the contact information provided in the party details.\"\n            )}\n          </Text>\n        </List.Item>\n        <List.Item>\n          <Text>\n            {t(\n              \"3. Players can then gather and start playing games together using the formed party.\"\n            )}\n          </Text>\n        </List.Item>\n      </List>\n      <Flex justify=\"center\">\n        <TiltButton color=\"primary\" onClick={handleAcceptAgreemnet}>\n          {t(\"close\")}\n        </TiltButton>\n      </Flex>\n    </Flex>\n  );\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return redirect(\"/coming-soon\");\n};\n\nexport default function SecretChambers() {\n  return (\n    <div>\n      <h1>{\"this is secret chambers page\"}</h1>\n    </div>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useMatches,\n  useSubmit,\n} from \"@remix-run/react\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  Modal,\n  Result,\n  Row,\n  Space,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { PrivateFieldSelection, TiltButton } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { TextEditorNoTools } from \"~/components/common/TextEditorNoTools.client\";\nimport { ArrowUpDown } from \"lucide-react\";\nconst { Text, Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  let games: any[] = [];\n  try {\n    const gameRes = await APIServer.clientFromSession().request(\n      APIServer.getGames()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  const activeGame = games.filter((game) => game.isActive);\n\n  return json({ games: activeGame });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const uuid = formdata.get(\"uuid\");\n  const entries = Object.fromEntries(formdata);\n  delete entries.uuid;\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.updateProfile(entries)\n    );\n    if (entries.gameProfiles) {\n      await APIServer.clientFromSession(session).request(\n        APIServer.updateGameProfile({ gameProfiles: entries.gameProfiles })\n      );\n    }\n    const { data } = await APIServer.clientFromSession(session).request(\n      APIServer.me()\n    );\n\n    session.set(\"me\", data);\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully update profile`,\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message:\n        // e.errors && e.errors.length > 1 ? e.errors[0] : e.response.data.message,\n        \"please enter username\",\n    });\n  }\n\n  return redirect(`/users/${uuid}`, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\n// Modal properties\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n};\n\nexport default function SettingsProfile() {\n  const { t } = useTranslation();\n  const { games } = useLoaderData();\n  const submit = useSubmit();\n  const { user } = useContext(AuthContext);\n  const [form] = Form.useForm();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const socials = [\"discord\", \"twitch\", \"facebook\", \"x\"];\n  const [sortingModal, setSortingModal] = useState<boolean>(false);\n  const [textEditorLoading, setTextEditorLoading] = useState<boolean>(true);\n\n  const updatedArray = user.profile.sortOrder.map((item: any, index: any) => {\n    return { ...item, id: index + 1 };\n  });\n\n  const [sortOrderList, setSortOrderList] = useState<any>(updatedArray);\n\n  const fetcher = useFetcher();\n  let initialValues: any = null;\n  if (user) {\n    initialValues = {\n      displayName: user.displayName ? user.displayName : \"\",\n      userName: user?.userName ? user.userName : undefined,\n      bio: user.profile.bio ? user.profile.bio : \"\",\n      profileEmail: user.profile.profileEmail ? user.profile.profileEmail : \"\",\n      privateEmail:\n        user.profile.privateEmail === \"public\" ? \"public\" : \"private\",\n      profilePhoneNumber: user.profile.profilePhoneNumber\n        ? user.profile.profilePhoneNumber\n        : \"\",\n      privatePhone:\n        user.profile.privatePhone === \"public\" ? \"public\" : \"private\",\n      websiteUrl: user.profile.websiteUrl ? user.profile.websiteUrl : \"\",\n      privateWebsite:\n        user.profile.privateWebsite === \"public\" ? \"public\" : \"private\",\n      discordId: user.profile.discordId ? user.profile.discordId : \"\",\n      privateDiscordId:\n        user.profile.privateDiscordId === \"public\" ? \"public\" : \"private\",\n      facebookLink: user.profile.facebookLink ? user.profile.facebookLink : \"\",\n      privateFacebookLink:\n        user.profile.privateFacebookLink === \"public\" ? \"public\" : \"private\",\n      twitchLink: user.profile.twitchLink ? user.profile.twitchLink : \"\",\n      privateTwitchLink:\n        user.profile.privateTwitchLink === \"public\" ? \"public\" : \"private\",\n      xLink: user.profile.xLink ? user.profile.xLink : \"\",\n      privateXLink:\n        user.profile.privateXLink === \"public\" ? \"public\" : \"private\",\n    } as any;\n    if (games && games.length > 0 && user.userGames) {\n      games.map((game: any) => {\n        initialValues[`username-${game.id}`] = user.userGames.find(\n          (userGame: any) => userGame.gameId == game.id\n        )?.ign;\n        return null;\n      });\n    }\n  }\n  const [userName, setUserName] = useState<string>(initialValues?.userName);\n  const handleUserNameChange = (e: any) => {\n    setUserName(e.target.value);\n  };\n\n  const handleToggleSortingMode = () => {\n    setSortingModal(!sortingModal);\n  };\n\n  const onChangeSortItems = (items: any) => {\n    setSortOrderList(items);\n  };\n\n  const onCloseSortingModal = () => {\n    setSortingModal(false);\n  };\n\n  const handleSubmitSorting = () => {\n    setSortingModal(false);\n    const itemsId = {\n      order: sortOrderList.map((item: any, index: number) => item.name),\n    };\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n        uuid: user.uuid,\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-profile`,\n      }\n    );\n  };\n\n  const onSubmit = (values: any) => {\n    const result: any = {};\n    Object.keys(values).map((key: string) => {\n      if (values.hasOwnProperty(key)) {\n        const parts = key.split(\"-\");\n        if (parts.length === 1) {\n          result[key] = values[key];\n        } else {\n          switch (parts[0]) {\n            // case \"username\":\n            //   if (!result.userGames) {\n            //     result.userGames = {};\n            //   }\n            //   result.userGames[parts[1]] = values[key];\n            //   break;\n            case \"private\":\n              if (!result.privateFields) {\n                result.privateFields = [];\n              }\n              if (values[key] === \"private\") {\n                result.privateFields.push(parts[1]);\n              }\n              break;\n          }\n        }\n      }\n    });\n    const gamesData = [];\n    for (const key in values) {\n      if (key.startsWith(\"username-\")) {\n        const idKey = key.replace(\"username-\", \"gameId\");\n        const gameId = values[idKey];\n        gamesData.push({ ign: values[key], gameId: gameId });\n      }\n    }\n\n    submit(\n      {\n        ...result,\n        userName: userName,\n        uuid: user.uuid,\n        gameProfiles: JSON.stringify(gamesData),\n        gameCount: gamesData.length,\n      },\n      { method: \"post\" }\n    );\n  };\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Title level={2} style={{ marginTop: 0, marginBottom: 40 }}>\n        {t(\"profile\")}\n      </Title>\n      <Form\n        form={form}\n        onFinish={onSubmit}\n        layout=\"vertical\"\n        initialValues={initialValues}\n      >\n        <Space direction=\"vertical\" size={10} style={{ display: \"flex\" }}>\n          <Form.Item\n            name=\"displayName\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input display name\"),\n              },\n              () => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value.length && value.length > 20) {\n                    return Promise.reject(\n                      new Error(\n                        `${t(\n                          \"display name is too long (maximum 20 characters)\"\n                        )}`\n                      )\n                    );\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"display name\")}\n              </Text>\n            }\n          >\n            <Input />\n          </Form.Item>\n          {!textEditorLoading ? (\n            <Space size={10} direction=\"vertical\" style={{ display: \"flex\" }}>\n              <Form.Item\n                key=\"bio\"\n                name=\"bio\"\n                label={\n                  <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                    {t(\"bio\")}\n                  </Text>\n                }\n              >\n                <TextEditorNoTools\n                  id=\"bio\"\n                  initialValues={form.getFieldValue(\"bio\")}\n                  fetcher={fetcher}\n                  onChange={(values: any) => form.setFieldValue(\"bio\", values)}\n                />\n              </Form.Item>\n            </Space>\n          ) : (\n            <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n          )}\n          {/* <Form.Item\n            name=\"bio\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"bio\")}\n              </Text>\n            }\n          >\n            <Input.TextArea rows={6} />\n          </Form.Item> */}\n          <Form.Item\n            name=\"profileEmail\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"email\")}\n              </Text>\n            }\n          >\n            <Input\n              type=\"email\"\n              addonAfter={<PrivateFieldSelection fieldName=\"privateEmail\" />}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"profilePhoneNumber\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"phone\")}\n              </Text>\n            }\n          >\n            <Input\n              type=\"tel\"\n              addonAfter={<PrivateFieldSelection fieldName=\"privatePhone\" />}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"websiteUrl\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"website\")}\n              </Text>\n            }\n          >\n            <Input\n              type=\"website\"\n              addonAfter={<PrivateFieldSelection fieldName=\"privateWebsite\" />}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"userName\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"user url\")}\n              </Text>\n            }\n            rules={[\n              {\n                pattern: /^[A-Za-z0-9]*$/,\n                message: t(\n                  \"only english characters and numbers are allowed, and no spaces\"\n                ),\n              },\n              {\n                min: 5,\n                message: t(\"username must be more than 5 characters\"),\n              },\n              {\n                max: 30,\n                message: t(\"username can't be more than 30 characters\"),\n              },\n            ]}\n          >\n            <div style={{ display: \"flex\", width: \"100%\" }}>\n              <div style={{ marginTop: \"7px\", marginRight: \"9px\" }}>\n                ctrlg.gg/users/\n              </div>\n              <div style={{ width: \"100%\" }}>\n                <Form.Item name=\"userName\" noStyle>\n                  <Input\n                    placeholder={t(\"username\")}\n                    value={userName}\n                    onChange={handleUserNameChange}\n                    style={{ width: \"100%\" }}\n                  />\n                </Form.Item>\n              </div>\n            </div>\n          </Form.Item>\n          <div style={{ marginTop: \"7px\", color: \"#C7C8CC\" }}>\n            <ul>\n              <li>{t(\"only english characters and numbers are allowed\")}</li>\n              <li>{t(\"spaces are not allowed\")}</li>\n              <li>{t(\"must contain 5-30 characters\")}</li>\n            </ul>\n          </div>\n          <label style={{ marginTop: \"0\", display: \"flex\", paddingBottom: 5 }}>\n            <Text\n              style={{\n                fontWeight: 600,\n                fontSize: \"inherit\",\n              }}\n            >\n              {t(\"social accounts\")}\n            </Text>\n          </label>\n          {socials.map((social: string) => (\n            <Form.Item\n              key={social === \"discord\" ? `${social}Id` : `${social}Link`}\n              name={social === \"discord\" ? `${social}Id` : `${social}Link`}\n            >\n              <Input\n                addonBefore={\n                  <Avatar src={`image/social/${social}.png`} size={40} />\n                }\n                placeholder={\n                  social === \"discord\"\n                    ? `Discord ID`\n                    : `https://www.${social}.com/username`\n                }\n                addonAfter={\n                  <PrivateFieldSelection\n                    fieldName={`private${\n                      social === \"discord\"\n                        ? `${\n                            social.charAt(0).toUpperCase() + social.slice(1)\n                          }Id`\n                        : `${\n                            social.charAt(0).toUpperCase() + social.slice(1)\n                          }Link`\n                    }`}\n                  />\n                }\n              />\n            </Form.Item>\n          ))}\n          <Flex justify=\"space-between\" style={{ marginBottom: 0 }}>\n            <div>\n              <Text\n                style={{\n                  fontWeight: 600,\n                  fontSize: \"inherit\",\n                  marginRight: \"10px\",\n                }}\n              >\n                {t(\"display order\")}\n              </Text>\n            </div>\n            <Text\n              style={{\n                marginRight: 10,\n                marginTop: 0,\n                fontWeight: 600,\n                textAlign: \"center\",\n                cursor: \"pointer\",\n              }}\n              onClick={handleToggleSortingMode}\n            >\n              <Space>\n                <ArrowUpDown style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }} />\n                {t(\"sort order\")}\n              </Space>\n            </Text>\n          </Flex>\n          <Space direction=\"vertical\">\n            {sortOrderList.map((profile: any, index: number) => (\n              <div key={index}>\n                {index + 1}. {t(profile.name)}\n              </div>\n            ))}\n          </Space>\n          {/* {games.length > 0 && (\n            <>\n              <label style={{ display: \"flex\", paddingBottom: 5 }}>\n                <Text\n                  style={{\n                    fontWeight: 600,\n                    fontSize: \"inherit\",\n                  }}\n                >\n                  {t(\"game usernames\")}\n                </Text>\n              </label>\n              {games.map((game: any, index: number) => (\n                <div key={`game-username-${index}`}>\n                  <Form.Item name={`username-${game.id}`}>\n                    <Input\n                      addonBefore={\n                        <Avatar\n                          src={\n                            game.iconUrl\n                              ? `${cdnUrl}/${game.iconUrl}`\n                              : \"/image/placeholder.png\"\n                          }\n                          size={40}\n                        />\n                      }\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    name={`gameId${game.id}`}\n                    initialValue={game.id}\n                    style={{ display: \"none\" }}\n                  >\n                    <Input type=\"hidden\" />\n                  </Form.Item>\n                </div>\n              ))}\n            </>\n          )} */}\n          <TiltButton\n            color=\"primary\"\n            onClick={() => form.submit()}\n            style={{ marginTop: 20 }}\n          >\n            {t(\"save\")}\n          </TiltButton>\n        </Space>\n      </Form>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingModal(false)}\n        open={sortingModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={sortOrderList}\n            onChange={onChangeSortItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{t(`${item.name}`)}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onCloseSortingModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport type {\n  ActionFunction,\n  LoaderFunction,\n  V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Outlet,\n  useFetcher,\n  useLoaderData,\n  useRevalidator,\n} from \"@remix-run/react\";\nimport { toNumber } from \"lodash\";\nimport {\n  Avatar,\n  Card,\n  Col,\n  Divider,\n  Form,\n  Modal,\n  Row,\n  Space,\n  Typography,\n  notification,\n  theme,\n} from \"antd\";\nimport { ExclamationCircleFilled, EditOutlined } from \"@ant-design/icons\";\nimport { KycForm, TiltButton, TiltMenus } from \"~/components/common\";\nimport * as APIServer from \"~/api\";\nimport {\n  TournamentGrid,\n  TournamentHero,\n  TournamentInvitationAlert,\n  TournamentSingleMenu,\n  TournamentTeam,\n  TournamentTeamForm,\n  TournamentTeamMemberForm,\n} from \"~/components/pages/Tournament\";\nimport { AffixMenu } from \"~/components/layouts\";\nimport { useTranslation } from \"react-i18next\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { AuthContext } from \"~/contexts\";\nimport { joinTournaments, resetFetcher } from \"~/utils/helper\";\nimport jwt_decode from \"jwt-decode\";\nconst { useToken } = theme;\nconst { Text, Title } = Typography;\nlet tournament: any = null;\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { id } = params;\n  const session = await getSessionFromRequest(request);\n  const toJoinTeams = session.get(\"toJoinTeams\");\n  const accessToken = session.get(\"accessToken\");\n  let uuid = \"\" as string;\n  let getInviteAndHaveTeam = false;\n\n  // let tournament: any;\n  let relatedTournaments: any;\n  let myTeam: any;\n  let joinedTournaments: any[] = [];\n  let transformedJoinedTournaments: any[] = [];\n  try {\n    if (id !== undefined) {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getTournament(toNumber(id))\n      );\n\n      if (tournamentRes.data) {\n        tournament = tournamentRes.data;\n      }\n      const relatedTournamentsRes = await APIServer.clientFromSession().request(\n        APIServer.getTournamentsPaginate({ game: tournament.game.name })\n      );\n      if (relatedTournamentsRes.data) {\n        relatedTournaments = relatedTournamentsRes.data.data.slice(0, 5);\n      }\n      if (accessToken) {\n        const myTeamRes = await APIServer.clientFromSession(session).request(\n          APIServer.getMyTeamFromTournamentId(toNumber(id))\n        );\n        if (myTeamRes.data && Object.keys(myTeamRes.data).length > 0) {\n          myTeam = myTeamRes.data;\n        }\n      }\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n    return redirect(\"/tournaments\");\n  }\n\n  if (accessToken) {\n    const accessTokenDecoded: any = jwt_decode(accessToken);\n    uuid = accessTokenDecoded.sub;\n    try {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getJoinedTournament(uuid)\n      );\n      if (tournamentRes.data) {\n        joinedTournaments = tournamentRes.data;\n      }\n\n      transformedJoinedTournaments = joinedTournaments.map((item) => {\n        return {\n          id: item.tournament.id,\n          name: item.tournament.name,\n          nameEn: item.tournament.nameEn,\n          discordUrl: item.tournament.discordUrl,\n          registrationStartDate: item.tournament.registrationStartDate,\n          registrationEndDate: item.tournament.registrationEndDate,\n          startDate: item.tournament.startDate,\n          endDate: item.tournament.endDate,\n          maxTeam: item.tournament.maxTeam,\n          playerCount: item.tournament.playerCount,\n          additionalPlayerCount: item.tournament.additionalPlayerCount,\n          type: item.tournament.type,\n          status: item.tournament.status,\n          finalRoundLocation: item.tournament.finalRoundLocation,\n          finalRoundLocationEn: item.tournament.finalRoundLocationEn,\n          prize: item.tournament.prize,\n          description: item.tournament.description,\n          descriptionEn: item.tournament.descriptionEn,\n          qualificationRules: item.tournament.qualificationRules,\n          qualificationRulesEn: item.tournament.qualificationRulesEn,\n          isOnline: item.tournament.isOnline,\n          bannerImageUrl: item.tournament.bannerImageUrl,\n          thumbnailImageUrl: item.tournament.thumbnailImageUrl,\n          remark: item.tournament.remark,\n          isKycRequired: item.tournament.isKycRequired,\n          isDiscordIdRequired: item.tournament.isDiscordIdRequired,\n          isEmailRequired: item.tournament.isEmailRequired,\n          isPhoneNumberRequired: item.tournament.isPhoneNumberRequired,\n          isIgnRequired: item.tournament.isIgnRequired,\n          requirementFields: item.tournament.requirementFields,\n          organizerId: item.tournament.organizerId,\n          gameId: item.tournament.gameId,\n          organizer: item.tournament.organizer,\n          game: item.tournament.game,\n          createdDate: item.tournament.createdDate,\n          updatedDate: item.tournament.updatedDate,\n        };\n      });\n      relatedTournaments = joinTournaments(\n        relatedTournaments,\n        transformedJoinedTournaments\n      );\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n  }\n\n  if (toJoinTeams && myTeam) {\n    getInviteAndHaveTeam = true;\n  }\n\n  return json({\n    id,\n    myTeam,\n    relatedTournaments,\n    toJoinTeams,\n    tournament,\n    getInviteAndHaveTeam,\n  });\n};\n\nexport { tournament };\n\nexport const action: ActionFunction = async ({ params, request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const currentAction = formdata.get(\"action\");\n  const teamUuid = formdata.get(\"teamUuid\") as string;\n  const toJoinTeamUuid = formdata.get(\"toJoinTeamUuid\") as string;\n  const memberUuid = formdata.get(\"memberUuid\") as string;\n  const submitData = formdata.get(\"data\");\n  const tournamentId = formdata.get(\"tournamentId\");\n\n  let success: any = null;\n  let updatedTeam: any = null;\n  try {\n    const flashObject = {\n      type: \"success\",\n      message: `successfully ${currentAction}`,\n      updateUser: true,\n    } as any;\n    if (request.method === \"DELETE\") {\n      const deleteTeamRes = await APIServer.clientFromSession(session).request(\n        APIServer.deleteTeamMember(teamUuid, memberUuid)\n      );\n      if (deleteTeamRes.data) {\n        updatedTeam = deleteTeamRes.data;\n      }\n    } else {\n      if (teamUuid) {\n        if (submitData) {\n          await APIServer.clientFromSession(session).request(\n            currentAction === \"join-team\"\n              ? APIServer.createTeamMember(toJoinTeamUuid, submitData)\n              : currentAction === \"update-team-member\"\n              ? APIServer.updateTeamMember(teamUuid, submitData)\n              : APIServer.updateTeam(tournamentId, submitData)\n          );\n          session.unset(\"toJoinTeams\");\n          flashObject.updateUser = true;\n        } else {\n          await APIServer.clientFromSession(session).request(\n            currentAction === \"leave-team\"\n              ? APIServer.leaveTeam(teamUuid)\n              : currentAction === \"submit-team\"\n              ? APIServer.submitTeam(teamUuid)\n              : APIServer.deleteTeam(teamUuid)\n          );\n        }\n      } else if (submitData) {\n        await APIServer.clientFromSession(session).request(\n          currentAction === \"submit-kyc\"\n            ? APIServer.submitKyc(submitData)\n            : APIServer.createTeam(tournamentId, submitData)\n        );\n        flashObject.updateUser = true;\n      }\n    }\n    success = currentAction;\n    if (currentAction === \"unset-invite\") {\n      session.unset(\"toJoinTeams\");\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"You are already in a team\",\n      });\n    } else {\n      session.flash(\"flashMessage\", flashObject);\n    }\n  } catch (e: any) {\n    if (currentAction !== \"submit-kyc\") {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message:\n          e.errors && e.errors.length > 1\n            ? e.errors[0]\n            : e.response.data.message,\n      });\n    } else {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message:\n          e.errors && e.errors.length > 1\n            ? e.errors[0]\n            : e.response.data.message.desc\n            ? e.response.data.message.desc\n            : e.response.data.error,\n      });\n    }\n  }\n  return json(\n    { success, team: updatedTeam },\n    {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E1E\u0E1A\u0E01\u0E31\u0E1A\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E2A\u0E38\u0E14\u0E21\u0E31\u0E19\u0E2A\u0E4C \u0E43\u0E04\u0E23 \u0E46 \u0E01\u0E47\u0E40\u0E1B\u0E47\u0E19\u0E44\u0E14\u0E49\u0E17\u0E31\u0E49\u0E07\u0E19\u0E31\u0E01\u0E41\u0E02\u0E48\u0E07\u0E41\u0E25\u0E30\u0E1C\u0E39\u0E49\u0E08\u0E31\u0E14\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    { property: \"og:title\", content: tournament?.name + \" | Ctrlg.gg\" },\n    {\n      property: \"og:image\",\n      content: tournament?.thumbnailImageUrl\n        ? `https://d2007awoau332v.cloudfront.net/${tournament?.thumbnailImageUrl}`\n        : \"https://d2007awoau332v.cloudfront.net/assets/root.jpg\",\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E1E\u0E1A\u0E01\u0E31\u0E1A\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E2A\u0E38\u0E14\u0E21\u0E31\u0E19\u0E2A\u0E4C \u0E43\u0E04\u0E23 \u0E46 \u0E01\u0E47\u0E40\u0E1B\u0E47\u0E19\u0E44\u0E14\u0E49\u0E17\u0E31\u0E49\u0E07\u0E19\u0E31\u0E01\u0E41\u0E02\u0E48\u0E07\u0E41\u0E25\u0E30\u0E1C\u0E39\u0E49\u0E08\u0E31\u0E14\",\n    },\n  ];\n};\n\nexport default function TournamentSingle() {\n  const {\n    id,\n    myTeam,\n    relatedTournaments,\n    toJoinTeams,\n    tournament,\n    getInviteAndHaveTeam,\n  } = useLoaderData();\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const isOrganizer = tournament.organizer.id === user?.id;\n  const { menus } = TournamentSingleMenu(isOrganizer);\n\n  const fetcher = useFetcher();\n  const revalidator = useRevalidator();\n  const [form] = Form.useForm();\n  const [modal, contextHolder] = Modal.useModal();\n  const [currentTeam, setCurrentTeam] = useState<any>(myTeam);\n  const [toUpdateTeamData, setToUpdateTeamData] = useState<any>(null);\n  const [kycModal, setKycModal] = useState<boolean>(false);\n  const [afterKycSuccess, setAfterKycSuccess] = useState<string>(\"\");\n  const [teamModal, setTeamModal] = useState<boolean>(false);\n  const [memberModal, setMemberModal] = useState<boolean>(false);\n  const [joinTeamModal, setJoinTeamModal] = useState<any>(false);\n  const [api, messageContextHolder] = notification.useNotification();\n\n  const deleteTournament = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete this tournamnet`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id },\n          {\n            method: \"delete\",\n            action: `/resources/delete-tournament`,\n          }\n        );\n      },\n    });\n  }, [fetcher, id]);\n\n  if (tournament.discordUrl) {\n    menus.push({\n      link: tournament.discordUrl,\n      label: (\n        <Space size={10}>\n          <Avatar src=\"/image/social/discord.png\" />\n          <Text>{t(\"Discord\")}</Text>\n        </Space>\n      ),\n    });\n  }\n  if (isOrganizer) {\n    menus.push({\n      link: \"edit\",\n      label: (\n        <Space size={5}>\n          <EditOutlined /> {t(\"edit\")}\n        </Space>\n      ),\n    });\n  }\n\n  const isTeamOwner = (team: any) => {\n    return team && team.createdById && user && user.id == team.createdById;\n  };\n  const isOwner = isTeamOwner(currentTeam);\n\n  let toJoinTeam: any = null;\n\n  if (!myTeam) {\n    if (toJoinTeams && toJoinTeams.length > 0) {\n      toJoinTeam = toJoinTeams.find((t: any) => t.tournamentId == id);\n      if (user && toJoinTeam && toJoinTeam.createdById == user.id) {\n        toJoinTeam = null;\n      }\n    }\n  }\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    style: { backgroundColor: \"transparent\" },\n    styles: { body: { backgroundColor: \"transparent\" } },\n    modalRender: (modal: any) => modal,\n  } as any;\n\n  const kycNeeded = (currentUser: any) => {\n    return (\n      tournament.isKycRequired &&\n      currentUser &&\n      (!currentUser.profile || !currentUser.isDopaVerified)\n    );\n  };\n\n  const handleTeamActionClicked = useCallback(\n    (action?: string) => {\n      if (!user) {\n        openLoginModal();\n        return;\n      }\n      if (kycNeeded(user)) {\n        setKycModal(true);\n        setAfterKycSuccess(\"team\");\n        return;\n      }\n      if (currentTeam && currentTeam.uuid) {\n        modal.confirm({\n          title: action\n            ? `${t(`are you sure to ${action} team`)}?`\n            : isOwner\n            ? `${t(`are you sure to submit team`)}?`\n            : `${t(`are you sure to leave team`)}?`,\n          icon: <ExclamationCircleFilled />,\n          okText: t(\"confirm\"),\n          okType: action === \"delete\" || isOwner ? \"primary\" : \"danger\",\n          cancelText: t(\"cancel\"),\n          maskClosable: true,\n          onOk() {\n            fetcher.submit(\n              {\n                action: `${\n                  action ? action : isOwner ? \"submit\" : \"leave\"\n                }-team`,\n                teamUuid: currentTeam.uuid,\n              },\n              { method: \"post\" }\n            );\n          },\n        });\n      } else {\n        setTeamModal(true);\n      }\n    },\n    [currentTeam, user]\n  );\n\n  const handleTeamEditClicked = useCallback(() => {\n    if (!user) {\n      openLoginModal();\n      return;\n    }\n    if (isTeamOwner(currentTeam)) {\n      setTeamModal(true);\n    } else {\n      setMemberModal(true);\n    }\n  }, [currentTeam, user]);\n\n  const handleJoinTeam = useCallback(() => {\n    if (toJoinTeam) {\n      if (kycNeeded(user)) {\n        setKycModal(true);\n        setAfterKycSuccess(\"join\");\n        return;\n      }\n      setJoinTeamModal(true);\n    }\n  }, [user]);\n\n  const handleRemoveTeamMember = (teamUuid: string, memberUuid: string) => {\n    fetcher.submit(\n      {\n        action: \"delete-team-member\",\n        teamUuid,\n        memberUuid,\n      },\n      { method: \"delete\" }\n    );\n  };\n\n  const handleMemberSubmitted = useCallback(\n    (values: any) => {\n      if (!user) {\n        openLoginModal();\n        return;\n      }\n      if (toUpdateTeamData) {\n        if (currentTeam && currentTeam.uuid) {\n          fetcher.submit(\n            {\n              action: \"update-team\",\n              data: JSON.stringify({\n                ...values,\n                ...toUpdateTeamData,\n              }),\n              teamUuid: currentTeam.uuid,\n              tournamentId: tournament.id,\n            },\n            { method: \"post\" }\n          );\n        } else {\n          fetcher.submit(\n            {\n              action: \"create-team\",\n              data: JSON.stringify({\n                ...values,\n                ...toUpdateTeamData,\n              }),\n              tournamentId: tournament.id,\n            },\n            { method: \"post\" }\n          );\n        }\n      } else if (toJoinTeam) {\n        fetcher.submit(\n          {\n            action: \"join-team\",\n            data: JSON.stringify(values),\n            teamUuid: toJoinTeam.uuid,\n            toJoinTeamUuid: toJoinTeam.uuid,\n          },\n          { method: \"post\" }\n        );\n      } else if (currentTeam && currentTeam.uuid) {\n        fetcher.submit(\n          {\n            action: \"update-team-member\",\n            data: JSON.stringify(values),\n            teamUuid: currentTeam.uuid,\n          },\n          { method: \"put\" }\n        );\n      }\n    },\n    [currentTeam, toUpdateTeamData, user]\n  );\n\n  // Auto popup join team modal\n  useEffect(() => {\n    if (toJoinTeam) {\n      if (!user) {\n        openLoginModal();\n        return;\n      }\n      if (kycNeeded(user)) {\n        setKycModal(true);\n        setAfterKycSuccess(\"join\");\n        return;\n      }\n      setJoinTeamModal(true);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    setCurrentTeam(myTeam);\n  }, [myTeam]);\n\n  useEffect(() => {\n    if (getInviteAndHaveTeam) {\n      fetcher.submit(\n        {\n          action: \"unset-invite\",\n        },\n        { method: \"patch\" }\n      );\n    }\n  }, [getInviteAndHaveTeam]);\n\n  useEffect(() => {\n    if (\n      fetcher.data &&\n      fetcher.data.success &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.team) {\n        setCurrentTeam(fetcher.data.team);\n      }\n      let joinModal = false;\n      let teamModal = false;\n      if (fetcher.data.success === \"submit-kyc\") {\n        if (afterKycSuccess === \"team\") {\n          teamModal = true;\n        } else if (afterKycSuccess === \"join\") {\n          joinModal = true;\n        }\n      }\n      setJoinTeamModal(joinModal);\n      setTeamModal(teamModal);\n      setMemberModal(false);\n      setKycModal(false);\n      revalidator.revalidate();\n      api.open({\n        message: t(`successfully ${fetcher.data.success}`),\n        type: \"success\",\n        duration: 5,\n        placement: \"bottomRight\",\n      });\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, afterKycSuccess, revalidator]);\n\n  const canEdit =\n    tournament.status === \"opening\" &&\n    (!currentTeam ||\n      (currentTeam && currentTeam.status === \"draft\") ||\n      currentTeam.status === \"rejected\");\n\n  return (\n    <>\n      {contextHolder}\n      <TournamentHero data={tournament} />\n      <div\n        style={{\n          paddingInline: \"3.5%\",\n          paddingTop: 0,\n          paddingBottom: 30,\n          maxWidth: 1440,\n          marginInline: \"auto\",\n        }}\n      >\n        {toJoinTeam && (\n          <TournamentInvitationAlert\n            data={toJoinTeam}\n            onClick={handleJoinTeam}\n          />\n        )}\n        <AffixMenu>\n          <Space>\n            <TiltMenus menus={menus} preventScrollReset />\n            {isOrganizer && (\n              <TiltButton color=\"danger\" onClick={deleteTournament}>\n                {t(\"delete\")}\n              </TiltButton>\n            )}\n          </Space>\n        </AffixMenu>\n        <Row gutter={[40, 40]}>\n          <Col span={24} md={{ span: 8, order: 1 }}>\n            <Space direction=\"vertical\" style={{ display: \"flex\" }}>\n              <TournamentTeam\n                data={currentTeam}\n                displayInviteLink={canEdit}\n                onDelete={() => handleTeamActionClicked(\"delete\")}\n                onSubmit={\n                  canEdit\n                    ? () =>\n                        handleTeamActionClicked(isOwner ? \"submit\" : \"leave\")\n                    : undefined\n                }\n                onRemoveTeamMember={\n                  canEdit && isTeamOwner(currentTeam)\n                    ? handleRemoveTeamMember\n                    : undefined\n                }\n                onEdit={canEdit ? handleTeamEditClicked : undefined}\n                additionalMembers={tournament.additionalPlayerCount}\n                minMembers={tournament.playerCount}\n                submitAction={\n                  currentTeam\n                    ? canEdit && isTeamOwner(currentTeam)\n                      ? \"submit\"\n                      : \"leave\"\n                    : \"create\"\n                }\n              />\n              {currentTeam && currentTeam.status === \"pending\" ? (\n                <Card\n                  bodyStyle={{ padding: 10, textAlign: \"center\" }}\n                  bordered={false}\n                  style={{\n                    borderRadius: 10,\n                    borderTopLeftRadius: 0,\n                    borderTopRightRadius: 0,\n                    backgroundColor: token.colorBgBase,\n                  }}\n                >\n                  <Title\n                    level={5}\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    {t(\"your team is waiting for approval\")}\n                  </Title>\n                </Card>\n              ) : currentTeam && currentTeam.status === \"rejected\" ? (\n                <Card\n                  bodyStyle={{ padding: 10, textAlign: \"center\" }}\n                  bordered={false}\n                  style={{\n                    borderRadius: 10,\n                    borderTopLeftRadius: 0,\n                    borderTopRightRadius: 0,\n                    backgroundColor: token.colorBgBase,\n                  }}\n                >\n                  <Space direction=\"vertical\">\n                    <Title\n                      level={4}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        color: \"#c73320\",\n                      }}\n                    >\n                      {t(\"your team has been rejected\")}\n                    </Title>\n                    <Title\n                      level={5}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      {t(currentTeam.remark)}\n                    </Title>\n                  </Space>\n                </Card>\n              ) : currentTeam && currentTeam.status === \"approved\" ? (\n                <Card\n                  bodyStyle={{ padding: 10, textAlign: \"center\" }}\n                  bordered={false}\n                  style={{\n                    borderRadius: 10,\n                    borderTopLeftRadius: 0,\n                    borderTopRightRadius: 0,\n                    backgroundColor: token.colorBgBase,\n                  }}\n                >\n                  <Title\n                    level={4}\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {t(\"your team has been approved\")}\n                  </Title>\n                </Card>\n              ) : currentTeam && currentTeam.status === \"pending\" ? (\n                <Card\n                  bodyStyle={{ padding: 10, textAlign: \"center\" }}\n                  bordered={false}\n                  style={{\n                    borderRadius: 10,\n                    borderTopLeftRadius: 0,\n                    borderTopRightRadius: 0,\n                    backgroundColor: token.colorBgBase,\n                  }}\n                >\n                  <Title\n                    level={4}\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {t(\"your team is waiting for approval\")}\n                  </Title>\n                </Card>\n              ) : null}\n            </Space>\n          </Col>\n          <Col span={24} md={{ span: 16, order: 0 }}>\n            <Outlet />\n          </Col>\n        </Row>\n        <Divider style={{ marginBlock: 40 }} />\n        <Title level={3} style={{ marginBottom: 30 }}>\n          {t(\"related tournaments\")}\n        </Title>\n        <TournamentGrid data={relatedTournaments} />\n        <Modal\n          {...modalProps}\n          onCancel={() => setKycModal(false)}\n          open={kycModal}\n        >\n          <KycForm\n            fetcher={fetcher}\n            form={form}\n            loading={fetcher.state !== \"idle\"}\n          />\n        </Modal>\n        <Modal\n          {...modalProps}\n          onCancel={() => setTeamModal(false)}\n          open={teamModal && !(memberModal || joinTeamModal)}\n          zIndex={1001}\n        >\n          <TournamentTeamForm\n            team={currentTeam}\n            form={form}\n            isSlipRequired={tournament.isSlipRequired}\n            onCancel={() => {\n              setTeamModal(false);\n              setToUpdateTeamData(null);\n            }}\n            onSubmit={(values: any) => {\n              setToUpdateTeamData({ ...values });\n              setMemberModal(true);\n              setTeamModal(false);\n            }}\n            submitLabel={t(\"next\")}\n          />\n        </Modal>\n        <Modal\n          {...modalProps}\n          onCancel={() => {\n            setMemberModal(false);\n            setJoinTeamModal(false);\n          }}\n          open={memberModal || joinTeamModal}\n          zIndex={1002}\n        >\n          <TournamentTeamMemberForm\n            currentTeam={currentTeam}\n            team={\n              joinTeamModal\n                ? toJoinTeam\n                : toUpdateTeamData\n                ? toUpdateTeamData\n                : currentTeam\n            }\n            onBack={\n              toUpdateTeamData\n                ? // eslint-disable-next-line no-sequences\n                  () => (setMemberModal(false), setTeamModal(true))\n                : undefined\n            }\n            isDiscordIdRequired={tournament.isDiscordIdRequired}\n            isEmailRequired={tournament.isEmailRequired}\n            isPhoneNumberRequired={tournament.isPhoneNumberRequired}\n            isIgnRequired={tournament.isIgnRequired}\n            additionalFields={tournament.requirementFields}\n            onSubmit={handleMemberSubmitted}\n            submitLabel={\n              currentTeam\n                ? t(\"save\")\n                : joinTeamModal\n                ? t(\"join\")\n                : t(\"create team\")\n            }\n          />\n        </Modal>\n        {messageContextHolder}\n      </div>\n    </>\n  );\n}\n", "import {\n  useFetcher,\n  useLoaderData,\n  useNavigation,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { json, redirect } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { Card, Form, Typography } from \"antd\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { TournamentForm } from \"~/components/pages/Tournament/TournamentForm\";\nimport { unflattenObject } from \"~/utils/helper\";\n\nconst { Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  let games: any[] = [];\n  try {\n    const gameRes = await APIServer.clientFromSession().request(\n      APIServer.getGames()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n  return json({ games });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const data = formdata.get(\"data\") as any;\n  const toSubmitData = JSON.parse(data);\n  let tournament: any = null;\n  try {\n    const tournamentRes = await APIServer.clientFromSession(session).request(\n      APIServer.createTournament(toSubmitData)\n    );\n    if (tournamentRes && tournamentRes.data) {\n      tournament = tournamentRes.data;\n    }\n\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully create tournament`,\n    });\n  } catch (e: any) {\n    console.log(\"error from create\", e.response.data);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.errors && e.errors.length > 1 ? e.errors[0] : e.response.data,\n    });\n  }\n  if (tournament) {\n    return redirect(`/tournaments/${tournament.id}`, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  } else {\n    return json({ success: false });\n  }\n};\n\nexport default function TournamentNew() {\n  const { t } = useTranslation();\n  const { games } = useLoaderData();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  const navigation = useNavigation();\n\n  const handleCreateTournament = (values: any) => {\n    if (values.isOnline) {\n      const {\n        finalRoundLocation,\n        playerCount,\n        additionalPlayerCount,\n        finalRoundLocationEn,\n        ...value\n      } = values;\n      submit(\n        {\n          data: JSON.stringify(\n            unflattenObject({\n              ...value,\n              playerCount: Number(playerCount),\n              additionalPlayerCount: Number(additionalPlayerCount),\n            })\n          ),\n        },\n        { method: \"post\" }\n      );\n    } else {\n      const { playerCount, additionalPlayerCount, ...rest } = values;\n      submit(\n        {\n          data: JSON.stringify(\n            unflattenObject({\n              ...rest,\n              playerCount: Number(playerCount),\n              additionalPlayerCount: Number(additionalPlayerCount),\n            })\n          ),\n        },\n        { method: \"post\" }\n      );\n    }\n  };\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Card\n        style={{\n          borderRadius: 12,\n          maxWidth: 800,\n          marginInline: \"auto\",\n        }}\n        bodyStyle={{ padding: 30 }}\n      >\n        <Title level={2} style={{ marginTop: 0, marginBottom: 40 }}>\n          {t(\"create tournament\")}\n        </Title>\n        <Form\n          form={form}\n          onFinish={handleCreateTournament}\n          layout=\"vertical\"\n          scrollToFirstError\n        >\n          <TournamentForm\n            fetcher={fetcher}\n            form={form}\n            games={games}\n            loading={navigation.state !== \"idle\"}\n            submitLabel={t(\"submit\")}\n          />\n        </Form>\n      </Card>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n\n  const toSubmitData = JSON.parse(data);\n  const albumId = toSubmitData.id;\n\n  try {\n    const albumRes = await APIServer.clientFromSession(session).request(\n      APIServer.editAlbum(albumId, toSubmitData)\n    );\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: `successfully updated album`,\n    });\n    await commitSession(session);\n\n    console.log(\"albumRes\", albumRes);\n\n    return json({\n      success: \"update-album\",\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.response.data?.message\n        ? e.response.data.message\n        : \"failed to updated album\",\n    });\n    await commitSession(session);\n    // return json({\n    //   success: \"create-album\",\n    //   gameId: dummyParty.gameId,\n    // }); // FIXME: remove this out\n    return null;\n  }\n};\n", "import { json, type LoaderFunction } from '@remix-run/node';\nimport * as APIServer from '~/api';\nimport { getSessionFromRequest } from '~/session.server';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let chats: any = null; // FIXME: change this to null\n  if (searchParams.partyId && searchParams.gameId) {\n    try {\n      const chatsRes = await APIServer.clientFromSession(session).request(\n        APIServer.getPartyChats(searchParams.partyId, searchParams.gameId)\n      );\n      if (chatsRes.data) {\n        chats = chatsRes.data;\n      }\n    } catch (e) {\n      console.log('e', e);\n    }\n    return json({ chats, partyId: searchParams.partyId });\n  } else {\n    return null;\n  }\n};\n", "import { type LoaderFunction, json } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let searchUserResult: any;\n  let loadMore = false as boolean;\n\n  try {\n    const searchUserRes = await APIServer.clientFromSession().request(\n      APIServer.getSearchUser(searchParams)\n    );\n\n    if (searchUserRes.data) {\n      searchUserResult = searchUserRes.data;\n    }\n\n    // console.log(\"searchUserResult\", searchUserResult);\n  } catch (error: any) {\n    console.error(\"searchUserResult Error\", error.response.data);\n  }\n\n  if (searchParams.hasOwnProperty(\"offset\")) {\n    loadMore = true;\n    console.log(\"The object contains the 'offset' property.\");\n  } else {\n    loadMore = false;\n    console.log(\"The object does not contain the 'offset' property.\");\n  }\n\n  console.log(\"searchUserResult\", searchUserResult);\n\n  return json({ searchParams, searchUserResult, loadMore });\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { userPrefs } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }: any) => {\n  const cookie = request.headers.get(\"Cookie\");\n  const userPrefsCookie = (await userPrefs.parse(cookie)) || {};\n  const formData = await request.formData();\n\n  switch (formData.get(\"action\")) {\n    case \"accept-cookies\":\n      userPrefsCookie.allowCookies = formData.get(\"allowCookies\");\n      break;\n    case \"change-locale\":\n      userPrefsCookie.locale = formData.get(\"locale\") || \"th\";\n      break;\n    case \"change-scheme\":\n      userPrefsCookie.scheme = formData.get(\"scheme\") || \"light\";\n      break;\n  }\n\n  return json(\n    {},\n    {\n      headers: {\n        \"Set-Cookie\": await userPrefs.serialize(userPrefsCookie),\n      },\n    }\n  );\n};\n", "import {\n  type V2_MetaFunction,\n  useNavigate,\n  useRouteLoaderData,\n} from \"@remix-run/react\";\nimport { toLower } from \"lodash\";\nimport { useEffect } from \"react\";\nimport { Loading, OverlayBg } from \"~/components/common\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E15\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E08\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    {\n      property: \"og:image\",\n      content: `https://d2007awoau332v.cloudfront.net/assets/party.jpg`,\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E15\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E08\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n    },\n  ];\n};\n\nexport default function PartiesIndex() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.parties\");\n  const { games } = routeLoader;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const valorantGame =\n      games && games.length > 0\n        ? games.find((game: any) => toLower(game.name) === \"valorant\")\n        : null;\n    const gameId = valorantGame ? valorantGame.id : 1;\n    navigate(`/parties/${gameId}`);\n  }, [games, navigate]);\n\n  return (\n    <OverlayBg style={{ position: \"fixed\", zIndex: 100 }} opacity={0.7}>\n      <Loading />\n    </OverlayBg>\n  );\n}\n", "import {\n  json,\n  redirect,\n  type LoaderFunction,\n  type V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport * as APIServer from \"~/api\";\nimport { getSessionFromRequest } from \"~/session.server\";\n\nlet webboard: any = null;\nlet contentWithoutTags: string = \"\"; // Declare contentWithoutTags here\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  const { id } = params;\n  const me = session.get(\"me\");\n  let webboardRes: any;\n\n  if (id) {\n    try {\n      if (me) {\n        webboardRes = await APIServer.clientFromSession(session).request(\n          APIServer.getWebboard(id)\n        );\n      } else {\n        webboardRes = await APIServer.clientFromSession().request(\n          APIServer.getWebboard(id)\n        );\n      }\n      if (webboardRes && webboardRes.data) {\n        webboard = webboardRes.data;\n      }\n    } catch (e) {\n      console.log(\"webboards single error\", e);\n      return redirect(\"/webboards\");\n    }\n  }\n\n  return json({ webboard });\n};\n\nexport { webboard };\n\nexport default function WebboardSingle() {\n  const { webboard } = useLoaderData();\n  useEffect(() => {\n    // Create a temporary element when the component mounts\n    const tempElement = document.createElement(\"div\");\n    tempElement.innerHTML = webboard?.content || \"\";\n    contentWithoutTags = tempElement.textContent || \"\";\n  }, []); // Run only once after the component mounts\n\n  return <Outlet />;\n}\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\u0E41\u0E25\u0E01\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E04\u0E27\u0E32\u0E21\u0E23\u0E39\u0E49\u0E41\u0E25\u0E30\u0E02\u0E48\u0E32\u0E27\u0E2A\u0E32\u0E23\u0E08\u0E32\u0E01\u0E27\u0E07\u0E01\u0E32\u0E23\u0E40\u0E01\u0E21\u0E41\u0E25\u0E30\u0E27\u0E07\u0E01\u0E32\u0E23\u0E2D\u0E35\u0E2A\u0E1B\u0E2D\u0E23\u0E4C\u0E15\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    { property: \"og:title\", content: webboard?.title + \" | Ctrlg.gg\" },\n    {\n      property: \"og:image\",\n      content: webboard?.thumbnailImage\n        ? `https://d2007awoau332v.cloudfront.net/${webboard?.thumbnailImage}`\n        : \"https://d2007awoau332v.cloudfront.net/assets/webboard.jpg\",\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\u0E41\u0E25\u0E01\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E04\u0E27\u0E32\u0E21\u0E23\u0E39\u0E49\u0E41\u0E25\u0E30\u0E02\u0E48\u0E32\u0E27\u0E2A\u0E32\u0E23\u0E08\u0E32\u0E01\u0E27\u0E07\u0E01\u0E32\u0E23\u0E40\u0E01\u0E21\u0E41\u0E25\u0E30\u0E27\u0E07\u0E01\u0E32\u0E23\u0E2D\u0E35\u0E2A\u0E1B\u0E2D\u0E23\u0E4C\u0E15\",\n    },\n  ];\n};\n", "import {\n  redirect,\n  type ActionFunction,\n  type LoaderFunction,\n  json,\n} from \"@remix-run/node\";\nimport { Affix, Col, Form, Modal, Row } from \"antd\";\nimport {\n  useFetcher,\n  useNavigation,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { KycForm, Media } from \"~/components/common\";\nimport { WebboardForm, WebboardTags } from \"~/components/pages/Webboard\";\nimport * as APIServer from \"~/api\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport { useState } from \"react\";\n// import { parseAndConvert } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  try {\n    return null;\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n  return null;\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n  const toSubmitData = JSON.parse(data);\n  let webboard: any = null;\n\n  try {\n    const webboardRes = await APIServer.clientFromSession(session).request(\n      APIServer.createWebboard(toSubmitData)\n    );\n    if (webboardRes && webboardRes.data) {\n      webboard = webboardRes.data;\n    }\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: \"successfully create webboard\",\n    });\n  } catch (e: any) {\n    console.log(\"error from create\", e.response);\n\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: \"failed to create webboard\",\n    });\n  }\n  if (webboard) {\n    session.flash(\"backToIndex\", true);\n    return redirect(`/webboards/${webboard.id}`, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  } else {\n    return json(\n      { success: false },\n      {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      }\n    );\n  }\n};\n\nexport default function WebboardNew() {\n  const webboardRouteLoader = useRouteLoaderData(\"routes/_app.webboards\");\n  const { games, rooms, tags, allTags } = webboardRouteLoader;\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  const [kycModal, setKycModal] = useState<boolean>(false);\n  const navigation = useNavigation();\n  const navigationState = navigation.state;\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    style: { backgroundColor: \"transparent\" },\n    styles: { body: { backgroundColor: \"transparent\" } },\n    modalRender: (modal: any) => modal,\n  };\n\n  const handleCreateWebboard = (values: any) => {\n    const newValues = { ...values };\n    if (!newValues.hasPoll) {\n      delete newValues.pollOptions;\n    }\n    delete newValues.hasPoll;\n\n    submit(\n      {\n        data: JSON.stringify(newValues),\n      },\n      { method: \"post\" }\n    );\n  };\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Row gutter={[30, 10]}>\n        <Col span={24} md={{ span: 6, order: 1 }}>\n          <Media greaterThan=\"sm\">\n            <Affix offsetTop={80}>\n              <div>\n                <WebboardTags data={tags} fetcher={fetcher} />\n              </div>\n            </Affix>\n          </Media>\n        </Col>\n        <Col span={24} md={{ span: 18, order: 0 }}>\n          <Form form={form} layout=\"vertical\" onFinish={handleCreateWebboard}>\n            <WebboardForm\n              fetcher={fetcher}\n              form={form}\n              games={games}\n              rooms={rooms}\n              tags={tags}\n              allTags={allTags}\n              onKycClicked={() => setKycModal(true)}\n              navigationState={navigationState}\n            />\n          </Form>\n        </Col>\n        <Modal\n          {...modalProps}\n          onCancel={() => setKycModal(false)}\n          open={kycModal}\n        >\n          <KycForm\n            fetcher={fetcher}\n            form={form}\n            loading={navigation.state !== \"idle\"}\n          />\n        </Modal>\n      </Row>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n\n  console.log(\"from no frame\");\n\n  try {\n    await APIServer.clientFromSession(session).request(APIServer.noFrame());\n    const { data } = await APIServer.clientFromSession(session).request(\n      APIServer.me()\n    );\n    session.set(\"me\", data);\n    await commitSession(session);\n    session.flash(\"flashMessage\", {\n      type: \"success\",\n      message: \"successfully deleted frame\",\n    });\n\n    return json(null, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: \"delete frame failed\",\n    });\n    console.log(\"e\", e);\n    await commitSession(session);\n    return json(null);\n  }\n};\n", "import { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\n\nexport default function ComingSoon() {\n  const { scheme } = useContext(AppContext);\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundImage: `url(\"/image/comingsoon-${scheme}.jpg\")`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    />\n  );\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Outlet,\n  useFetcher,\n  useLoaderData,\n  useMatches,\n  useNavigate,\n  useNavigation,\n} from \"@remix-run/react\";\nimport {\n  Avatar,\n  Button,\n  Empty,\n  Form,\n  List,\n  Modal,\n  Skeleton,\n  Space,\n  Typography,\n} from \"antd\";\nimport { UserHero, UserSingleMenus, UserTitle } from \"~/components/pages/User\";\nimport { KycForm, TiltMenus } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nimport { AffixMenu } from \"~/components/layouts\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { uuid } = params;\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let userInfo: any;\n  let userSummaryInfo: any;\n  let frameAsset: any;\n  let likeCurrenUser: any;\n  let allLikeByUser: any;\n  let amountLikeByUser: any;\n  let games: any[] = [];\n  let defaultGame: any;\n  let gamesInfo = [];\n\n  try {\n    const allLikeByUserRes = await APIServer.clientFromSession(session).request(\n      APIServer.allLikeByUser(uuid, searchParams)\n    );\n    allLikeByUser = allLikeByUserRes.data;\n    amountLikeByUser = allLikeByUserRes.data.total;\n\n    if (uuid !== undefined) {\n      const userRes = await APIServer.clientFromSession(session).request(\n        APIServer.getUserFromUuid(uuid)\n      );\n      if (userRes.data) {\n        userInfo = userRes.data;\n      }\n\n      const userSummaryRes = await APIServer.clientFromSession(session).request(\n        APIServer.getUserSummaryFromUuid(uuid)\n      );\n      if (userRes.data) {\n        userSummaryInfo = userSummaryRes.data;\n      }\n    }\n\n    if (session) {\n      const frameRes = await APIServer.clientFromSession(session).request(\n        APIServer.getMyAsset()\n      );\n\n      frameAsset = frameRes.data;\n\n      const likeCurrenUserRes = await APIServer.clientFromSession(\n        session\n      ).request(APIServer.currentUserLike(uuid));\n      likeCurrenUser = likeCurrenUserRes.data;\n    }\n\n    const gamesInfoRes = await APIServer.clientFromSession(session).request(\n      APIServer.getUserGameInfo()\n    );\n    if (gamesInfoRes.data) {\n      gamesInfo = gamesInfoRes.data;\n    }\n\n    const gameRes = await APIServer.clientFromSession(session).request(\n      APIServer.getUserGameInfo()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n      defaultGame = games.find((game: any) => `${game.name}` === `VALORANT`);\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n\n  return json({\n    searchParams,\n    userInfo,\n    uuid,\n    frameAsset,\n    likeCurrenUser,\n    allLikeByUser,\n    amountLikeByUser,\n    defaultGame,\n    games,\n    gamesInfo,\n    userSummaryInfo,\n  });\n};\n\nexport const action: ActionFunction = async ({ params, request }) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const submitData = formData.get(\"data\");\n  const action = formData.get(\"action\");\n  const { uuid } = params;\n\n  switch (action) {\n    case \"submit-kyc\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.submitKyc(submitData)\n        );\n        const { data } = await APIServer.clientFromSession(session).request(\n          APIServer.me()\n        );\n        session.set(\"me\", data);\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: \"Successfully Verified Kyc\",\n        });\n        await commitSession(session);\n        return json({ success: true });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message: e.response.data.message.desc\n            ? e.response.data.message.desc\n            : e.response.data.message,\n        });\n        await commitSession(session);\n      }\n    case \"submit-likeToggle\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.likeToggleUser(uuid)\n        );\n        const { data } = await APIServer.clientFromSession(session).request(\n          APIServer.me()\n        );\n        session.set(\"me\", data);\n        // session.flash(\"flashMessage\", {\n        //   type: \"success\",\n        //   message: \"Successfully\",\n        // });\n        await commitSession(session);\n        return json({ success: true });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message: e.response.data.message.desc\n            ? e.response.data.message.desc\n            : e.response.data.message,\n        });\n        await commitSession(session);\n      }\n  }\n\n  return json(null);\n};\n\nexport default function UserSingleLayout() {\n  const {\n    userInfo,\n    uuid,\n    frameAsset,\n    likeCurrenUser,\n    allLikeByUser,\n    amountLikeByUser,\n    searchParams,\n  } = useLoaderData();\n  const navigation = useNavigation();\n  const fetcher = useFetcher();\n  const [form] = Form.useForm();\n  const { user } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const isOrganizer =\n    user && user.roles.includes(\"organizer\") && user.uuid === uuid;\n  const isOwner = user && user.id === userInfo.id;\n  const { menus } = UserSingleMenus(isOwner, isOrganizer);\n  const [kycModal, setKycModal] = useState<boolean>(false);\n  const [likeAmountModal, setLikeAmountModal] = useState<boolean>(false);\n  const [likeStatus, setLikeStatus] = useState<boolean>(false);\n  const [allLikeByUserList, setAllLikeByUserList] = useState<any>([]);\n  const [amountLikeByUserNumber, setAmountLikeByUserNumber] =\n    useState<number>(amountLikeByUser);\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    style: { backgroundColor: \"transparent\" },\n    styles: { body: { backgroundColor: \"transparent\", padding: 0 } },\n    modalRender: (modal: any) => modal,\n  };\n\n  const onSubmitLike = () => {\n    fetcher.submit(\n      {\n        action: \"submit-likeToggle\",\n        // data: JSON.stringify({\n        //   ...value,\n        //   birthday: dayjs(newDateOfBirth).format(\"YYYY-MM-DD\"),\n        // }),\n      },\n      { method: \"post\" }\n    );\n  };\n\n  // const loadMoreData = () => {\n  //   const newSearchParams = {\n  //     offset: allLikeByUserList.length,\n  //   };\n  //   fetcher.submit(\n  //     omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n  //     {\n  //       method: \"get\",\n  //       preventScrollReset: true,\n  //       action: \"/resources/peopleWhoLiked\",\n  //     }\n  //   );\n  // };\n\n  // const loadMoreData = useCallback(() => {\n  //   console.log(\"loadmore Data\");\n\n  //   const newSearchParams = {\n  //     ...searchParams,\n  //     offset: allLikeByUserList.length,\n  //   };\n  //   const queryString = new URLSearchParams(\n  //     omitBy(newSearchParams, isNil)\n  //   ).toString();\n\n  //   fetcher.load(`.?${queryString}`);\n  // }, [allLikeByUserList, searchParams]);\n\n  const loadMoreData = () => {\n    console.log(\"loadmore Data\");\n\n    const newSearchParams = {\n      ...searchParams,\n      offset: allLikeByUserList.length,\n    };\n    const queryString = new URLSearchParams(\n      omitBy(newSearchParams, isNil)\n    ).toString();\n\n    fetcher.load(`.?${queryString}`);\n  };\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.success && fetcher.state === \"idle\") {\n      setKycModal(false);\n    }\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (likeCurrenUser?.isLiked) {\n      setLikeStatus(true);\n    } else {\n      setLikeStatus(false);\n    }\n  }, [likeCurrenUser]);\n\n  useEffect(() => {\n    setAllLikeByUserList(\n      allLikeByUser.items && allLikeByUser.items.length\n        ? allLikeByUser.items\n        : []\n    );\n  }, [allLikeByUser.items]);\n\n  useEffect(() => {\n    setAllLikeByUserList([...allLikeByUser.items]);\n  }, [allLikeByUser.items]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n    if (fetcher.data.allLikeByUser) {\n      setAllLikeByUserList((items: any[]) => [\n        ...items,\n        ...fetcher.data.allLikeByUser.items,\n      ]);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    setAmountLikeByUserNumber(amountLikeByUser);\n  }, [amountLikeByUser]);\n  console.log(\"fecther\", fetcher.state);\n\n  return (\n    <>\n      <UserHero\n        data={userInfo}\n        frameAsset={frameAsset}\n        fetcher={fetcher}\n        isOwner={isOwner}\n        onLikeAmountClicked={() => setLikeAmountModal(true)}\n        amountLikeByUser={amountLikeByUserNumber}\n      />\n      <div\n        style={{\n          paddingInline: \"3.5%\",\n          paddingBlock: 50,\n          maxWidth: 1440,\n          marginInline: \"auto\",\n        }}\n      >\n        <UserTitle\n          data={userInfo}\n          isOwner={isOwner}\n          onKycClicked={() => setKycModal(true)}\n          likeStatus={likeStatus}\n          onSubmitLike={onSubmitLike}\n        />\n        <AffixMenu>\n          <TiltMenus menus={menus} preventScrollReset />\n        </AffixMenu>\n        <Outlet />\n      </div>\n      <Modal\n        {...modalProps}\n        onCancel={() => setKycModal(false)}\n        open={kycModal}\n      >\n        <KycForm\n          fetcher={fetcher}\n          form={form}\n          loading={navigation.state !== \"idle\"}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setLikeAmountModal(false)}\n        open={likeAmountModal}\n      >\n        <div\n          id=\"scrollableDiv1\"\n          style={{ maxHeight: \"400px\", overflowY: \"auto\" }}\n        >\n          <Typography.Title level={4}>\n            {t(\"people who liked you\")}\n          </Typography.Title>\n          {allLikeByUserList.length ? (\n            <List\n              style={{ marginTop: 10 }} // Adjust margin top as needed\n              bordered={false}\n              dataSource={allLikeByUserList}\n              renderItem={(item: any) => (\n                <div>\n                  <Space>\n                    <div\n                      style={{\n                        position: \"relative\", // Set position to relative for the parent div\n                        padding: \"40px\",\n                        backgroundImage: `url(${cdnUrl}/${item.assetFrame})`,\n                        backgroundSize: \"cover\",\n                        backgroundPosition: \"center\",\n                        width: \"fit-content\", // Adjust the width to fit content\n                        height: \"fit-content\", // Adjust the height to fit content\n                        display: \"inline-block\", // Make the div behave as an inline-block\n                      }}\n                    >\n                      {/* Position the Avatar inside the parent div */}\n                      <div\n                        style={{\n                          position: \"absolute\",\n                          top: \"18.5%\",\n                          left: \"17.5%\",\n                        }}\n                      >\n                        <Avatar\n                          src={\n                            item && item.displayImage && cdnUrl\n                              ? `${cdnUrl}/${item.displayImage}`\n                              : \"/image/user-placeholder.png\"\n                          }\n                          size={50}\n                        />\n                      </div>\n                    </div>\n\n                    <Typography.Title\n                      level={5}\n                      onClick={() => {\n                        setLikeAmountModal(false);\n                        navigate(\n                          `/users/${item?.userName ? item.userName : item.uuid}`\n                        );\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {item.displayName}\n                    </Typography.Title>\n                  </Space>\n                </div>\n              )}\n            />\n          ) : (\n            <Empty\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n              description={t(\"no user\")}\n            />\n          )}\n          {fetcher.state === \"loading\" && (\n            <Skeleton\n              avatar\n              paragraph={{\n                rows: 0,\n              }}\n            />\n          )}\n          {allLikeByUserList &&\n            allLikeByUserList.length < amountLikeByUserNumber && (\n              <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>\n                <Button onClick={loadMoreData}>Load More</Button>\n              </div>\n            )}\n        </div>\n      </Modal>\n    </>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  Skeleton,\n  Space,\n  notification,\n  theme,\n} from \"antd\";\nimport { CameraOutlined, LikeOutlined } from \"@ant-design/icons\";\nimport {\n  ImageSelector,\n  Media,\n  OverlayBg,\n  TiltButton,\n} from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nimport { useContext } from \"react\";\nimport { RiShareForwardLine } from \"react-icons/ri\";\nimport { Image, ThumbsUp } from \"lucide-react\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\n// import { AppContext } from \"~/contexts\";\n// import { useContext } from \"react\";\n\nconst { useToken } = theme;\n\ninterface UserHeroProps {\n  data: any;\n  fetcher: any;\n  isOwner?: boolean;\n  loading?: boolean;\n  frameAsset?: any;\n  onLikeAmountClicked?: () => void;\n  amountLikeByUser: number;\n}\n\nexport function UserHero(props: UserHeroProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const {\n    data,\n    fetcher,\n    isOwner,\n    loading,\n    frameAsset,\n    onLikeAmountClicked,\n    amountLikeByUser,\n  } = props;\n  // const { scheme } = useContext(AppContext);\n  const { token } = useToken();\n  const displayImageField = \"displayImage\";\n  const coverImageField = \"coverImage\";\n  const { baseUrl } = useContext(AppContext);\n  const profileUrl = `${baseUrl}/users/${\n    data?.userName ? data.userName : data.uuid\n  }`;\n  const [messageApi, contextHolder] = notification.useNotification();\n  let displayFrameImages: any = [];\n  const cardStyle = {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"25vw\",\n    minHeight: 150,\n    maxHeight: 400,\n    flexDirection: \"column\",\n    borderRadius: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundImage:\n      data && data.coverImage\n        ? `url(\"${cdnUrl}/${data.coverImage}\")`\n        : \"url('/image/placeholder.png')\",\n  } as any;\n  const bodyStyle = {\n    height: \"100%\",\n    padding: 0,\n  } as any;\n  const avatarStyle = {\n    position: \"absolute\",\n    // left: \"3.5%\",\n    padding: 0,\n    border: data.assetFrame ? \"none\" : `6px solid ${token.colorBgLayout}`,\n    borderRadius: \"50%\",\n    bottom: -50,\n    zIndex: 1,\n  } as any;\n  const coverImageChangeButtonStyle = {\n    position: \"relative\",\n    border: \"none\",\n    backgroundColor: \"rgba(0, 0, 0, 0.80)\",\n    color: \"#fff\",\n    borderRadius: 6,\n  } as any;\n\n  const displayPresetImages = Array(8)\n    .fill(\"\")\n    .map(\n      (arg: string, index: number) =>\n        `${cdnUrl}/profile-avatars/profile-${index + 1}.jpg`\n    );\n\n  if (frameAsset) {\n    displayFrameImages = frameAsset.map((item: any) => ({\n      id: `${item.id}`,\n      url: `${cdnUrl}/${item.url}`,\n    }));\n  }\n\n  const coverPresetImages = Array(16)\n    .fill(\"\")\n    .map((arg: string, index: number) =>\n      index < 8\n        ? `${cdnUrl}/profile-covers/cover-${index + 1}.jpg`\n        : `${cdnUrl}/profile-covers/cover2-${index - 7}.jpg`\n    );\n\n  return (\n    <Card bordered={false} style={cardStyle} bodyStyle={bodyStyle}>\n      {loading ? (\n        <Skeleton active style={{ position: \"relative\" }} />\n      ) : (\n        <>\n          <OverlayBg />\n          <div\n            style={{\n              display: \"flex\",\n              flex: \"auto\",\n              alignItems: \"end\",\n              position: \"relative\",\n              justifyContent: \"flex-end\",\n              width: \"100%\",\n              height: \"100%\",\n              maxWidth: 1440,\n              marginInline: \"auto\",\n              paddingInline: \"3.5%\",\n              paddingBlock: 20,\n            }}\n          >\n            <div\n              style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}\n            >\n              <div style={avatarStyle}>\n                <div\n                  className=\"hover-show-parent\"\n                  style={{ position: \"relative\" }}\n                >\n                  <Avatar\n                    src={\n                      data && data.displayImage && cdnUrl\n                        ? `${cdnUrl}/${data.displayImage}`\n                        : \"/image/user-placeholder.png\"\n                    }\n                    style={{ zIndex: -1, border: \"none\" }}\n                    size={120}\n                  />\n                  {data.assetFrame && (\n                    <Avatar\n                      src={`${cdnUrl}/${data.assetFrame}`}\n                      style={{\n                        position: \"absolute\",\n                        left: -30,\n                        top: -30,\n                        overflow: \"visible\",\n                      }}\n                      size={180}\n                    />\n                  )}\n                  {isOwner && (\n                    <ImageSelector\n                      callback={{\n                        method: \"patch\",\n                        key: displayImageField,\n                        path: \"/resources/upload/user-display-image\",\n                      }}\n                      title={t(\"select avatar image\")}\n                      fetcher={fetcher}\n                      fieldName={displayImageField}\n                      presetImages={displayPresetImages}\n                      frameImages={displayFrameImages}\n                      presetRound\n                    >\n                      <OverlayBg\n                        className=\"hover-show-child\"\n                        style={{ cursor: \"pointer\", borderRadius: \"50%\" }}\n                      >\n                        <CameraOutlined\n                          style={{ fontSize: 30, color: \"#fff\" }}\n                        />\n                      </OverlayBg>\n                    </ImageSelector>\n                  )}\n                </div>\n              </div>\n              <div\n                style={{\n                  position: \"absolute\",\n                  left: data.assetFrame ? 150 : 150,\n                  bottom: 0,\n                  padding: \"5px 10px\",\n                  // backgroundColor:\n                  //   scheme === \"dark\" ? \"#221f20\" : token.colorBgLayout,\n                  // color: token.colorTextBase,\n                  backgroundColor: \"#000000\",\n                  color: \"#fff\",\n                  borderRadius: \"6px\",\n                  cursor: \"pointer\",\n                }}\n                onClick={onLikeAmountClicked}\n              >\n                <Space>\n                  <ThumbsUp />\n                  {amountLikeByUser}\n                </Space>\n              </div>\n            </div>\n            <Media at=\"sm\">\n              <div style={{ position: \"absolute\", top: 15, right: 17 }}>\n                {isOwner && (\n                  <ImageSelector\n                    callback={{\n                      method: \"patch\",\n                      key: coverImageField,\n                      path: \"/resources/upload/user-cover-image\",\n                    }}\n                    title={t(\"select cover image\")}\n                    fetcher={fetcher}\n                    fieldName={coverImageField}\n                    presetImages={coverPresetImages}\n                  >\n                    <Button\n                      icon={<Image />}\n                      style={coverImageChangeButtonStyle}\n                    >\n                      {t(\"change cover\")}\n                    </Button>\n                  </ImageSelector>\n                )}\n              </div>\n            </Media>\n            <Media greaterThan=\"sm\">\n              {isOwner && (\n                <ImageSelector\n                  callback={{\n                    method: \"patch\",\n                    key: coverImageField,\n                    path: \"/resources/upload/user-cover-image\",\n                  }}\n                  title={t(\"select cover image\")}\n                  fetcher={fetcher}\n                  fieldName={coverImageField}\n                  presetImages={coverPresetImages}\n                >\n                  <Button icon={<Image />} style={coverImageChangeButtonStyle}>\n                    {t(\"change cover\")}\n                  </Button>\n                </ImageSelector>\n              )}\n            </Media>\n            <Media at=\"sm\">\n              {isOwner && (\n                <ShareDropDown\n                  copiedMessage={t(\"profile url copied\")}\n                  postUrl={profileUrl}\n                  shareProfile={true}\n                />\n              )}\n            </Media>\n          </div>\n          {contextHolder}\n        </>\n      )}\n    </Card>\n  );\n}\n", "import { useTranslation } from 'react-i18next';\nimport { Space } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nexport const UserSingleMenus: any = (\n  isOwner?: boolean,\n  isOrganizer?: boolean\n) => {\n  const { t } = useTranslation();\n  const menus = [\n    {\n      link: '.',\n      level: 2,\n      label: <span>{t('profile')}</span>,\n    },\n    {\n      link: 'my-conversations',\n      label: <span>{t('my conversations')}</span>,\n    },\n    {\n      link: 'my-album',\n      label: <span>{t('my album')}</span>,\n    },\n  ] as any[];\n\n  if (isOwner) {\n    // menus.push({\n    //   link: \"my-conversations\",\n    //   label: <span>{t(\"my conversations\")}</span>,\n    // });\n\n    // menus.push({\n    //   link: \"my-album\",\n    //   label: <span>{t(\"my album\")}</span>,\n    // });\n\n    menus.push({\n      link: 'messages',\n      label: <span>{t('my notifications')}</span>,\n    });\n  }\n\n  menus.push({\n    link: 'joined-tournaments',\n    label: <span>{t('joined tournaments')}</span>,\n  });\n\n  if (isOwner) {\n    menus.push({\n      link: 'my-tournaments',\n      label: <span>{t('my tournaments')}</span>,\n    });\n    menus.push({\n      link: '/tournaments/new',\n      label: (\n        <Space size={10}>\n          <PlusOutlined />\n          {t('create tournament')}\n        </Space>\n      ),\n    });\n  }\n  return { menus };\n};\n", "import React from \"react\";\nimport { Avatar, Space } from \"antd\";\n\ninterface UserSocialProps {\n  data: any;\n  isOwner?: boolean;\n}\n\nexport const UserSocial: React.FC<UserSocialProps> = (\n  props: UserSocialProps\n) => {\n  const { data, isOwner } = props;\n\n  return (\n    <Space size={10} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n      {data.profile.facebookLink &&\n        (data.profile.privateFacebookLink !== \"private\" || isOwner) && (\n          <a\n            href={\n              data.profile.facebookLink.indexOf(\"https://\") > -1\n                ? data.profile.facebookLink\n                : `https://${data.profile.facebookLink}`\n            }\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <Avatar src=\"/image/social/facebook.png\" size={40} />\n          </a>\n        )}\n      {data.profile.xLink &&\n        (data.profile.privateXLink !== \"private\" || isOwner) && (\n          <a\n            href={\n              data.profile.xLink.indexOf(\"https://\") > -1\n                ? data.profile.xLink\n                : `https://${data.profile.xLink}`\n            }\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <Avatar src=\"/image/social/x.png\" size={40} />\n          </a>\n        )}\n      {data.profile.twitchLink &&\n        (data.profile.privateTwitchLink !== \"private\" || isOwner) && (\n          <a\n            href={\n              data.profile.twitchLink.indexOf(\"https://\") > -1\n                ? data.profile.twitchLink\n                : `https://${data.profile.twitchLink}`\n            }\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <Avatar src=\"/image/social/twitch.png\" size={40} />\n          </a>\n        )}\n    </Space>\n  );\n};\n", "/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { useContext } from \"react\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Col,\n  Image,\n  notification,\n  Row,\n  Skeleton,\n  Space,\n  theme,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { UserSocial } from \"./\";\nimport { Media, TiltButton, ToCopyField } from \"~/components/common\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { Link, Mail, PenLine, Phone, ThumbsUp, UserCheck } from \"lucide-react\";\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface UserTitleProps {\n  data: any;\n  isOwner?: boolean;\n  loading?: boolean;\n  onKycClicked?: () => void;\n  onSubmitLike?: () => void;\n  likeStatus?: boolean;\n}\n\nexport const UserTitle: React.FC<UserTitleProps> = (props: UserTitleProps) => {\n  const { data, isOwner, loading, onKycClicked, onSubmitLike, likeStatus } =\n    props;\n  const { token } = useToken();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { baseUrl, scheme } = useContext(AppContext);\n  const { user, openLoginModal } = useContext(AuthContext);\n  const profileUrl = `${baseUrl}/users/${\n    data.userName ? data.userName : data.uuid\n  }`;\n  const [messageApi, contextHolder] = notification.useNotification();\n\n  const navigateToSetting = () => {\n    navigate(\"/settings\");\n  };\n\n  const roles = data.roles.sort((a: any, b: any) => a.id - b.id);\n\n  return loading ? (\n    <Skeleton active />\n  ) : (\n    <Space direction=\"vertical\" size={8} style={{ display: \"flex\" }}>\n      <Row gutter={[20, 20]} style={{ alignItems: \"center\" }}>\n        <Col flex=\"auto\">\n          <Space size={5} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n            <Media greaterThan=\"sm\">\n              <Space size={5}>\n                <Title level={3} style={{ margin: 0, fontSize: 36 }}>\n                  {data.displayName}\n                </Title>\n                {roles[0] && (\n                  <Space style={{ marginRight: \"5px\" }}>\n                    <Image\n                      width={30}\n                      src={`${cdnUrl}/${roles[0].badgeImage}`}\n                      preview={false}\n                    />\n                    <Text>{t(roles[0].name)}</Text>\n                  </Space>\n                )}\n              </Space>\n            </Media>\n            <Media at=\"sm\">\n              <Space size={5}>\n                <Title level={3} style={{ margin: 0 }}>\n                  {data.displayName}\n                </Title>\n                {roles[0] && (\n                  <Tooltip\n                    title={\n                      roles[0] && (\n                        <Space style={{ marginRight: \"5px\" }}>\n                          <Text style={{ color: \"white\" }}>\n                            {t(roles[0].name)}\n                          </Text>\n                        </Space>\n                      )\n                    }\n                    placement=\"top\"\n                    arrow={false}\n                  >\n                    <Image\n                      width={30}\n                      src={`${cdnUrl}/${roles[0].badgeImage}`}\n                      preview={false}\n                    />\n                  </Tooltip>\n                )}\n              </Space>\n            </Media>\n\n            <Space size={10} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <Media greaterThan=\"sm\">\n                {\n                  <ShareDropDown\n                    copiedMessage={t(\"profile url copied\")}\n                    postUrl={profileUrl}\n                    shareProfile={true}\n                  />\n                }\n              </Media>\n\n              <Media greaterThan=\"sm\">\n                <Space>\n                  {isOwner &&\n                    (!data.profile ||\n                      (data.profile && !data.isDopaVerified)) && (\n                      <TiltButton\n                        color=\"primary\"\n                        style={{ paddingInline: 15 }}\n                        onClick={onKycClicked}\n                      >\n                        <Space size={5} style={{ strokeWidth: 2 }}>\n                          <UserCheck />\n                          <Text style={{ color: \"inherit\" }}>\n                            {t(\"verify account\")}\n                          </Text>\n                        </Space>\n                      </TiltButton>\n                    )}\n                  {data.isDopaVerified && !roles[0] && (\n                    <Space>\n                      <Image\n                        width={30}\n                        src=\"/image/verifiedUser.png\"\n                        preview={false}\n                      />\n                      <Text>{t(\"verified\")}</Text>\n                    </Space>\n                  )}\n                  {!isOwner && (\n                    <TiltButton\n                      color={likeStatus ? \"secondary\" : \"primary\"}\n                      style={{ paddingInline: 15 }}\n                      onClick={user ? onSubmitLike : openLoginModal}\n                    >\n                      <Space\n                        size={5}\n                        style={{\n                          strokeWidth: 2,\n                          color: likeStatus ? \"#7C6FF6\" : \"inherit\",\n                        }}\n                      >\n                        <ThumbsUp />\n                        <Text>{likeStatus ? t(\"liked\") : t(\"like\")}</Text>\n                      </Space>\n                    </TiltButton>\n                  )}\n                  {isOwner && (\n                    <TiltButton\n                      color={\"secondary\"}\n                      style={{ paddingInline: 15 }}\n                      onClick={navigateToSetting}\n                    >\n                      <Space\n                        size={5}\n                        style={{\n                          strokeWidth: 2,\n                          color: likeStatus ? \"#7C6FF6\" : \"inherit\",\n                        }}\n                      >\n                        <PenLine style={{ color: \"#7a6fee\" }} />\n                        <Text>{t(\"edit profile\")}</Text>\n                      </Space>\n                    </TiltButton>\n                  )}\n                </Space>\n              </Media>\n\n              <Media at=\"sm\">\n                <Row gutter={[10, 10]}>\n                  <Col span={24} style={{ minWidth: \"320px\" }}>\n                    {isOwner &&\n                      (!data.profile ||\n                        (data.profile && !data.isDopaVerified)) && (\n                        <TiltButton\n                          color=\"primary\"\n                          style={{ paddingInline: 15 }}\n                          onClick={onKycClicked}\n                        >\n                          <Space size={5} style={{ strokeWidth: 2 }}>\n                            <UserCheck />\n                            <Text style={{ color: \"inherit\" }}>\n                              {t(\"verify account\")}\n                            </Text>\n                          </Space>\n                        </TiltButton>\n                      )}\n                    {data.isDopaVerified && !roles[0] && (\n                      <Space>\n                        <Image\n                          width={30}\n                          src=\"/image/verifiedUser.png\"\n                          preview={false}\n                        />\n                        <Text>{t(\"verified\")}</Text>\n                      </Space>\n                    )}\n                  </Col>\n                  <Col span={24} style={{ minWidth: \"320px\" }}>\n                    {!isOwner && (\n                      <TiltButton\n                        color={likeStatus ? \"secondary\" : \"primary\"}\n                        style={{ paddingInline: 15 }}\n                        onClick={user ? onSubmitLike : openLoginModal}\n                      >\n                        <Space\n                          size={5}\n                          style={{\n                            strokeWidth: 2,\n                            color: likeStatus ? \"#7C6FF6\" : \"inherit\",\n                          }}\n                        >\n                          <ThumbsUp />\n                          <Text>{likeStatus ? t(\"liked\") : t(\"like\")}</Text>\n                        </Space>\n                      </TiltButton>\n                    )}\n                    {isOwner && (\n                      <TiltButton\n                        color={\"secondary\"}\n                        style={{ paddingInline: 15 }}\n                        onClick={navigateToSetting}\n                      >\n                        <Space\n                          size={5}\n                          style={{\n                            strokeWidth: 2,\n                            color: likeStatus ? \"#7C6FF6\" : \"inherit\",\n                          }}\n                        >\n                          <PenLine style={{ color: \"#7a6fee\" }} />\n                          <Text>{t(\"edit profile\")}</Text>\n                        </Space>\n                      </TiltButton>\n                    )}\n                  </Col>\n                </Row>\n              </Media>\n            </Space>\n          </Space>\n        </Col>\n        <Media greaterThan=\"sm\">\n          <UserSocial data={data} isOwner={isOwner} />\n        </Media>\n      </Row>\n      <Media greaterThan=\"sm\">\n        <Row gutter={10}>\n          <Col>\n            {(data.profile.privateDiscordId !== \"private\" || isOwner) &&\n              data.profile.discordId && (\n                <Space size={10}>\n                  <Avatar src=\"/image/social/discord.png\" size={30} />\n                  <Text style={{ fontSize: \"0.9em\" }}>{t(\"Discord ID\")}</Text>\n                  <ToCopyField\n                    alertMessage={t(\"discord ID copied\")}\n                    copyMessage={data.profile.discordId}\n                    text={data.profile.discordId}\n                    style={{ paddingBlock: 3 }}\n                    fontSize=\"0.9em\"\n                  />\n                </Space>\n              )}\n          </Col>\n          <Col>\n            {(data.profile.privateEmail !== \"private\" || isOwner) &&\n              data.profile.profileEmail && (\n                <Space size={5} style={{ marginTop: \"5px\" }}>\n                  <Mail style={{ color: \"#7063f4\" }} />\n                  <Text style={{ fontSize: \"0.9em\" }}>\n                    {data.profile.profileEmail}\n                  </Text>\n                </Space>\n              )}\n          </Col>\n          <Col>\n            {(data.profile.privatePhone !== \"private\" || isOwner) &&\n              data.profile.profilePhoneNumber && (\n                <Space size={5} style={{ marginTop: \"5px\" }}>\n                  <Phone style={{ color: \"#7063f4\" }} />\n                  <Text style={{ fontSize: \"0.9em\" }}>\n                    {data.profile.profilePhoneNumber}\n                  </Text>\n                </Space>\n              )}\n          </Col>\n        </Row>\n      </Media>\n      <Media at=\"sm\" style={{ marginLeft: \"9px\" }}>\n        <Row gutter={10} style={{ marginBottom: \"10px\" }}>\n          <Col span={24} style={{ marginLeft: \"-5px\" }}>\n            {(data.profile.privateDiscordId !== \"private\" || isOwner) &&\n              data.profile.discordId && (\n                <Space size={10}>\n                  <Avatar src=\"/image/social/discord.png\" size={30} />\n                  <Text style={{ fontSize: \"0.9em\" }}>{t(\"Discord ID\")}</Text>\n                  <ToCopyField\n                    alertMessage={t(\"discord ID copied\")}\n                    copyMessage={data.profile.discordId}\n                    text={data.profile.discordId}\n                    style={{ paddingBlock: 3 }}\n                    fontSize=\"0.9em\"\n                  />\n                </Space>\n              )}\n          </Col>\n          <Col span={24}>\n            {(data.profile.privateEmail !== \"private\" || isOwner) &&\n              data.profile.profileEmail && (\n                <Space size={5} style={{ marginTop: \"5px\" }}>\n                  <Mail style={{ color: \"#7063f4\" }} />\n                  <Text style={{ fontSize: \"0.9em\" }}>\n                    {data.profile.profileEmail}\n                  </Text>\n                </Space>\n              )}\n          </Col>\n          <Col span={24}>\n            {(data.profile.privatePhone !== \"private\" || isOwner) &&\n              data.profile.profilePhoneNumber && (\n                <Space size={5} style={{ marginTop: \"5px\" }}>\n                  <Phone style={{ color: \"#7063f4\" }} />\n                  <Text style={{ fontSize: \"0.9em\" }}>\n                    {data.profile.profilePhoneNumber}\n                  </Text>\n                </Space>\n              )}\n          </Col>\n        </Row>\n        {(data.profile.bio || data.profile.websiteUrl) && (\n          <Space direction=\"vertical\" size={5}>\n            <div\n              className=\"ctrlg-html\"\n              style={{\n                fontSize: \"0.9em\",\n                color: scheme === \"dark\" ? \"#fff\" : \"#000\",\n              }}\n              dangerouslySetInnerHTML={{\n                __html: `${data.profile.bio}`,\n              }}\n            />\n            {((data.profile.websiteUrl &&\n              data.profile.privateWebsite !== \"private\") ||\n              (data.profile.websiteUrl && isOwner)) && (\n              <Space size={5}>\n                <Link style={{ color: \"#786fe6\" }} />\n                <a\n                  href={\n                    data.profile.websiteUrl.indexOf(\"https://\") > -1 ||\n                    data.profile.websiteUrl.indexOf(\"http://\") > -1\n                      ? data.profile.websiteUrl\n                      : `https://${data.profile.websiteUrl}`\n                  }\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <Text style={{ fontSize: \"0.9em\" }}>\n                    {data.profile.websiteUrl}\n                  </Text>\n                </a>\n              </Space>\n            )}\n          </Space>\n        )}\n        <div style={{ marginTop: \"15px\", marginLeft: \"-2px\" }}>\n          <UserSocial data={data} isOwner={isOwner} />\n        </div>\n      </Media>\n      {(data.profile.bio || data.profile.websiteUrl) && (\n        <Media greaterThan=\"sm\">\n          <Space direction=\"vertical\" size={5}>\n            <div\n              className=\"ctrlg-html\"\n              style={{\n                fontSize: \"0.9em\",\n                color: scheme === \"dark\" ? \"#fff\" : \"#000\",\n              }}\n              dangerouslySetInnerHTML={{\n                __html: `${data.profile.bio}`,\n              }}\n            />\n            {((data.profile.websiteUrl &&\n              data.profile.privateWebsite !== \"private\") ||\n              (data.profile.websiteUrl && isOwner)) && (\n              <Space size={5}>\n                <Link style={{ color: \"#786fe6\" }} />\n                <a\n                  href={\n                    data.profile.websiteUrl.indexOf(\"https://\") > -1 ||\n                    data.profile.websiteUrl.indexOf(\"http://\") > -1\n                      ? data.profile.websiteUrl\n                      : `https://${data.profile.websiteUrl}`\n                  }\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <Text style={{ fontSize: \"0.9em\" }}>\n                    {data.profile.websiteUrl}\n                  </Text>\n                </a>\n              </Space>\n            )}\n          </Space>\n        </Media>\n      )}\n\n      {contextHolder}\n    </Space>\n  );\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getSessionFromRequest, signOut } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }: any) => {\n  const session = await getSessionFromRequest(request);\n\n  return json(\n    { logout: true },\n    {\n      headers: {\n        \"Set-Cookie\": await signOut(session),\n      },\n    }\n  );\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport {\n  json,\n  unstable_createMemoryUploadHandler,\n  unstable_parseMultipartFormData,\n} from \"@remix-run/node\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { toNumber } from \"lodash\";\nimport { decode } from \"base64-arraybuffer\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const uploadHandler = unstable_createMemoryUploadHandler();\n  const formData = await unstable_parseMultipartFormData(\n    request,\n    uploadHandler\n  );\n  const file = formData.get(\"file\") as any;\n  const name = formData.get(\"name\");\n  const size = formData.get(\"size\");\n  const type = formData.get(\"type\") as string;\n  const field = formData.get(\"field\") as string;\n  const isSlip = formData.get(\"isSlip\");\n  const previewImage = formData.get(\"previewImage\");\n\n  console.log(\"from single upload\");\n\n  if (file && name && size && type) {\n    try {\n      const uploadPath = await APIServer.clientFromSession(session).request(\n        APIServer.generateUploadPath({\n          name: name,\n          size: toNumber(size),\n          type: type,\n          isSlip: isSlip,\n        })\n      );\n\n      if (uploadPath.data && uploadPath.data.presignedUrl) {\n        await APIServer.uploadFile(\n          type,\n          uploadPath.data.presignedUrl,\n          decode(file)\n        );\n        const imageUrl = uploadPath.data.key;\n        return json({\n          field: field,\n          url: `${process.env.CDN_URL}/${imageUrl}`,\n          key: imageUrl,\n          isSlip: isSlip === \"true\" ? true : false,\n          previewImage: previewImage,\n        });\n      }\n    } catch (e) {\n      console.log(\"error from uplpad\", e);\n    }\n  }\n\n  return json(null);\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { isEmail, isPhone } from \"~/utils/helper\";\nimport * as APIServer from \"~/api\";\nimport { toLower } from \"lodash\";\n\nexport const action: ActionFunction = async ({ request }: any) => {\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const loginChannel = formData.get(\"channel\");\n  const callFromPath = formData.get(\"currentPath\");\n  const credential = formData.get(\"credential\");\n  const password = formData.get(\"password\");\n  let toJoinTeams = session.get(\"toJoinTeams\");\n  const uuidTeamToJoin = session.get(\"uuidTeamToJoin\");\n  const redirectUri = session.get(\"redirectUri\");\n\n  // to set last visited page, in order to redirect back to that page after login\n  if (callFromPath) {\n    session.set(\"lastVisited\", redirectUri ? redirectUri : callFromPath);\n  }\n\n  if (loginChannel) {\n    return redirect(\n      loginChannel === \"google\"\n        ? \"/resources/login-social?provider=google\"\n        : \"/resources/login-social?provider=line\",\n      {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      }\n    );\n  } else {\n    const confirmPassword = formData.get(\"confirmPassword\");\n    if (confirmPassword) {\n      if (isEmail(credential)) {\n        try {\n          const resMe = await APIServer.clientFromSession().request(\n            APIServer.registerEmail({\n              email: toLower(credential),\n              password: password,\n            })\n          );\n\n          if (resMe.data) {\n            session.set(\"accessToken\", resMe.data.accessToken);\n            session.set(\"refreshToken\", resMe.data.refreshToken);\n\n            try {\n              const { data } = await APIServer.clientFromSession(\n                session\n              ).request(APIServer.me());\n              session.set(\"me\", data);\n            } catch (e) {\n              console.log(\"e\", e);\n            }\n          }\n          session.flash(\"flashMessage\", {\n            type: \"success\",\n            message: `successfully Register Account`,\n          });\n        } catch (e: any) {\n          console.log(\"e\", e);\n          session.flash(\"flashMessage\", {\n            type: \"error\",\n            message: e.response.data.message.message,\n          });\n        }\n\n        if (toJoinTeams) {\n          return redirect(`/teams/${uuidTeamToJoin}/join`, {\n            headers: {\n              \"Set-Cookie\": await commitSession(session),\n            },\n          });\n        } else if (redirectUri) {\n          return redirect(redirectUri, {\n            headers: {\n              \"Set-Cookie\": await commitSession(session),\n            },\n          });\n        } else {\n          return json(\n            { loggedIn: true },\n            {\n              headers: {\n                \"Set-Cookie\": await commitSession(session),\n              },\n            }\n          );\n        }\n      } else if (isPhone(credential)) {\n        try {\n          const resMe = await APIServer.clientFromSession().request(\n            APIServer.registerPhoneNumber({\n              phoneNumber: credential,\n              password: password,\n            })\n          );\n\n          if (resMe.data) {\n            session.set(\"accessToken\", resMe.data.accessToken);\n            session.set(\"refreshToken\", resMe.data.refreshToken);\n\n            //set user data\n            try {\n              const { data } = await APIServer.clientFromSession(\n                session\n              ).request(APIServer.me());\n              session.set(\"me\", data);\n            } catch (e) {\n              console.log(\"e\", e);\n            }\n          }\n          session.flash(\"flashMessage\", {\n            type: \"success\",\n            message: `successfully Register Account`,\n          });\n        } catch (e: any) {\n          session.flash(\"flashMessage\", {\n            type: \"error\",\n            message: e.response.data.message.message,\n          });\n        }\n        if (toJoinTeams) {\n          return redirect(`/teams/${uuidTeamToJoin}/join`, {\n            headers: {\n              \"Set-Cookie\": await commitSession(session),\n            },\n          });\n        } else if (redirectUri) {\n          return redirect(redirectUri, {\n            headers: {\n              \"Set-Cookie\": await commitSession(session),\n            },\n          });\n        } else {\n          return json(\n            { loggedIn: true },\n            {\n              headers: {\n                \"Set-Cookie\": await commitSession(session),\n              },\n            }\n          );\n        }\n      }\n    } else {\n      if (isEmail(credential)) {\n        try {\n          const resMe = await APIServer.clientFromSession().request(\n            APIServer.loginEmail({ email: credential, password: password })\n          );\n\n          if (resMe.data) {\n            session.set(\"accessToken\", resMe.data.accessToken);\n            session.set(\"refreshToken\", resMe.data.refreshToken);\n\n            //set user data\n            try {\n              const { data } = await APIServer.clientFromSession(\n                session\n              ).request(APIServer.me());\n              session.set(\"me\", data);\n            } catch (e) {\n              console.log(\"e\", e);\n            }\n          }\n          session.flash(\"flashMessage\", {\n            type: \"success\",\n            message: `successfully Login`,\n          });\n        } catch (e: any) {\n          console.log(\"e = \", e);\n          const message =\n            e.response.data.isBanned === true\n              ? \"user is banned\"\n              : \"invalid password\";\n          session.flash(\"flashMessage\", {\n            type: \"error\",\n            message: message,\n          });\n        }\n\n        if (toJoinTeams) {\n          return redirect(`/teams/${uuidTeamToJoin}/join`, {\n            headers: {\n              \"Set-Cookie\": await commitSession(session),\n            },\n          });\n        } else if (redirectUri) {\n          return redirect(redirectUri, {\n            headers: {\n              \"Set-Cookie\": await commitSession(session),\n            },\n          });\n        } else {\n          return json(\n            { loggedIn: true },\n            {\n              headers: {\n                \"Set-Cookie\": await commitSession(session),\n              },\n            }\n          );\n        }\n      } else if (isPhone(credential)) {\n        try {\n          const resMe = await APIServer.clientFromSession().request(\n            APIServer.loginPhoneNumber({\n              phoneNumber: credential,\n              password: password,\n            })\n          );\n\n          if (resMe.data) {\n            session.set(\"accessToken\", resMe.data.accessToken);\n            session.set(\"refreshToken\", resMe.data.refreshToken);\n\n            //set user data\n            try {\n              const { data } = await APIServer.clientFromSession(\n                session\n              ).request(APIServer.me());\n              session.set(\"me\", data);\n            } catch (e) {\n              console.log(\"e\", e);\n            }\n          }\n          session.flash(\"flashMessage\", {\n            type: \"success\",\n            message: `successfully Login`,\n          });\n        } catch (e: any) {\n          session.flash(\"flashMessage\", {\n            type: \"error\",\n            message: e.response.data.message.message,\n          });\n        }\n        if (toJoinTeams) {\n          return redirect(`/teams/${uuidTeamToJoin}/join`, {\n            headers: {\n              \"Set-Cookie\": await commitSession(session),\n            },\n          });\n        } else if (redirectUri) {\n          return redirect(redirectUri, {\n            headers: {\n              \"Set-Cookie\": await commitSession(session),\n            },\n          });\n        } else {\n          return json(\n            { loggedIn: true },\n            {\n              headers: {\n                \"Set-Cookie\": await commitSession(session),\n              },\n            }\n          );\n        }\n      }\n    }\n    return json(\n      { loggedIn: true },\n      {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      }\n    );\n  }\n};\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let party: any = null;\n  if ((searchParams && searchParams.partyId, searchParams.gameId)) {\n    try {\n      const partyRes = await APIServer.clientFromSession().request(\n        APIServer.getParty(searchParams.partyId, searchParams.gameId)\n      );\n      if (partyRes.data && partyRes.data.party) {\n        party = partyRes.data.party;\n      }\n    } catch (e) {}\n    return json({\n      party,\n      partyId: searchParams.partyId,\n      gameId: searchParams.gameId,\n    });\n  } else {\n    return null;\n  }\n};\n", "import { useCallback, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useNavigation,\n  useRevalidator,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Affix, Col, Row, Skeleton, Typography, notification } from \"antd\";\nimport * as APIServer from \"~/api\";\nimport {\n  BackButton,\n  IndexFilter,\n  Media,\n  Pagination,\n} from \"~/components/common\";\nimport {\n  WebboardIndexHeader,\n  WebboardLists,\n  WebboardTags,\n} from \"~/components/pages/Webboard\";\nimport { debounce, isEmpty, isNil, omitBy } from \"lodash\";\nimport { convertToObjectWithArrays, resetFetcher } from \"~/utils/helper\";\nimport { getSessionFromRequest } from \"~/session.server\";\nconst { Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  const { tag } = params;\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  const toQuerySearchParams = convertToObjectWithArrays(searchParams, [\n    \"rooms\",\n    \"games\",\n  ]);\n  let webboards: any;\n\n  try {\n    const webboardRes = await APIServer.clientFromSession(session).request(\n      APIServer.getWebboards({ ...toQuerySearchParams, tag: tag })\n    );\n    if (webboardRes.data) {\n      webboards = webboardRes.data;\n    }\n  } catch (e) {\n    console.log(\"webboards tag error\", e);\n  }\n  return json({ searchParams, tag, webboards });\n};\n\nexport default function TagSingle() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.tags\");\n  const revalidator = useRevalidator();\n  const submit = useSubmit();\n  const navigation = useNavigation();\n  const fetcher = useFetcher();\n  const { searchParams, webboards } = useLoaderData();\n  const { games, rooms, reactionOptions, tags } = routeLoader;\n  const { t } = useTranslation();\n  const [api, contextHolder] = notification.useNotification();\n\n  const filters = [\n    {\n      type: \"tilt-button\",\n      name: \"rooms\",\n      title: t(\"select room\"),\n      options: rooms.map((room: any) => ({\n        label: room.name,\n        value: room.id,\n      })),\n    },\n    {\n      type: \"avatar\",\n      name: \"games\",\n      title: t(\"select game\"),\n      options: games.map((game: any) => ({\n        label: game.name,\n        value: game.id,\n        image: game.iconUrl,\n      })),\n    },\n  ];\n\n  const handleFilter = useCallback(\n    (name: string, value: string | number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (searchParams && searchParams[name]) {\n        const values = searchParams[name].split(\",\");\n        const containedIndex = values.indexOf(`${value}`);\n        if (containedIndex > -1) {\n          values.splice(containedIndex, 1);\n        } else {\n          values.push(value.toString());\n        }\n        if (values.length) {\n          newSearchParams[name] = values.join(\",\");\n        } else {\n          delete newSearchParams[name];\n        }\n      } else {\n        newSearchParams[name] = `${value}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  const handleDebounceFilter = useMemo(\n    () => debounce(handleFilter, 300),\n    [handleFilter]\n  );\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-webboard\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Row gutter={[30, 10]}>\n        <Col span={24} md={{ span: 6, order: 0 }}>\n          <Affix offsetTop={80}>\n            <div\n              className=\"hide-scrollbar\"\n              style={{\n                maxHeight: \"calc(100vh - 60px)\",\n                overflowY: \"auto\",\n              }}\n            >\n              <IndexFilter\n                values={searchParams}\n                onFilterClicked={handleDebounceFilter}\n                filters={filters}\n                mobileAppendChildren={\n                  <WebboardTags data={tags} fetcher={fetcher} mobileStyle />\n                }\n              />\n            </div>\n          </Affix>\n        </Col>\n        <Col span={24} md={{ span: 6, order: 2 }}>\n          <Media greaterThan=\"sm\">\n            <Affix offsetTop={80}>\n              <div>\n                <WebboardTags data={tags} fetcher={fetcher} />\n              </div>\n            </Affix>\n          </Media>\n        </Col>\n        <Col span={24} md={{ span: 12, order: 1 }}>\n          <BackButton />\n          <WebboardIndexHeader\n            fetcher={fetcher}\n            searchParams={searchParams}\n            submit={submit}\n          >\n            <Title\n              level={2}\n              style={{ fontStyle: \"italic\", margin: 0 }}\n            >{`#${webboards.tagName}`}</Title>\n          </WebboardIndexHeader>\n          <div style={{ marginTop: 30 }}>\n            {navigation.state !== \"idle\" ? (\n              <Skeleton active />\n            ) : (\n              <>\n                <WebboardLists\n                  data={webboards.items}\n                  fetcher={fetcher}\n                  reactionOptions={reactionOptions}\n                />\n                <Pagination\n                  currentPage={webboards.page}\n                  totalPages={webboards.totalPages}\n                  onPageClicked={handleChangePage}\n                />\n              </>\n            )}\n          </div>\n        </Col>\n      </Row>\n      {contextHolder}\n    </div>\n  );\n}\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport { Outlet, useNavigation } from \"@remix-run/react\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  let rooms: any[] = [];\n  let games: any[] = [];\n  let tags: any[] = [];\n  let allTags: any[] = [];\n  let reactionOptions: any[] = [];\n\n  try {\n    const webboardsInfoRes = await APIServer.clientFromSession().request(\n      APIServer.getWebboardsInfo()\n    );\n    if (webboardsInfoRes.data) {\n      games = webboardsInfoRes.data.games;\n      rooms = webboardsInfoRes.data.rooms;\n      reactionOptions = webboardsInfoRes.data.reactions;\n      tags = webboardsInfoRes.data.popularTags;\n      allTags = webboardsInfoRes.data.tags;\n    }\n  } catch (e) {\n    console.log(\"webboard index error\", e);\n  }\n\n  return json({ rooms, games, reactionOptions, tags, allTags });\n};\n\nexport default function WebboardLayout() {\n  return <Outlet />;\n}\n", "import { json, type ActionFunction } from \"@remix-run/node\";\nimport * as APIServer from \"~/api\";\n\nexport const action: ActionFunction = async ({ request }: any) => {\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  let tags: any[] = [];\n  let tagsRes: any;\n\n  try {\n    if (name === \"#\") {\n      tagsRes = await APIServer.clientFromSession().request(\n        APIServer.getWebboardTags()\n      );\n    } else {\n      tagsRes = await APIServer.clientFromSession().request(\n        APIServer.getWebboardTags({ name: name })\n      );\n    }\n\n    if (tagsRes.data) {\n      tags = tagsRes.data;\n    }\n  } catch (e) {\n    console.log(\"tags error\", e);\n  }\n\n  return json({ tags });\n};\n", "import { Flex } from \"antd\";\nimport { Outlet, type V2_MetaFunction } from \"@remix-run/react\";\nimport { OverlayBg } from \"~/components/common\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E15\u0E2D\u0E1A\u0E04\u0E33\u0E16\u0E32\u0E21\u0E2B\u0E32\u0E09\u0E32\u0E22\u0E32 \u0E41\u0E25\u0E49\u0E27\u0E41\u0E0A\u0E23\u0E4C\u0E43\u0E2B\u0E49\u0E42\u0E25\u0E01\u0E23\u0E39\u0E49\u0E27\u0E48\u0E32x\u0E23\u0E36\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23 !\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    {\n      property: \"og:title\",\n      content: \"\u0E17\u0E32\u0E22\u0E19\u0E34\u0E2A\u0E31\u0E22 ...\u0E04\u0E38\u0E13\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23\u0E40\u0E27\u0E25\u0E32\u0E40\u0E25\u0E48\u0E19 Valorant | Ctrlg.gg\",\n    },\n    {\n      property: \"og:image\",\n      content: \"https://d2007awoau332v.cloudfront.net/assets/quiz.jpg\",\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E15\u0E2D\u0E1A\u0E04\u0E33\u0E16\u0E32\u0E21\u0E2B\u0E32\u0E09\u0E32\u0E22\u0E32 \u0E41\u0E25\u0E49\u0E27\u0E41\u0E0A\u0E23\u0E4C\u0E43\u0E2B\u0E49\u0E42\u0E25\u0E01\u0E23\u0E39\u0E49\u0E27\u0E48\u0E32x\u0E23\u0E36\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E43\u0E04\u0E23 !\",\n    },\n  ];\n};\n\nexport default function Campaign() {\n  return (\n    <Flex\n      align=\"center\"\n      style={{\n        minHeight: \"calc(100vh - 220px)\",\n        width: \"100%\",\n        paddingBlock: 10,\n        paddingInline: \"3.5%\",\n        backgroundImage: \"url('/image/campaign-background.jpg')\",\n        backgroundRepeat: \"repeat\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <OverlayBg />\n      <Outlet />\n    </Flex>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  useActionData,\n  useFetcher,\n  useMatches,\n  useSubmit,\n} from \"@remix-run/react\";\nimport {\n  Card,\n  Flex,\n  Form,\n  Image,\n  Input,\n  notification,\n  Result,\n  Space,\n  Typography,\n} from \"antd\";\nimport { UploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FileUploader, TiltButton } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\n\nconst { Text, Title } = Typography;\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const data = formdata.get(\"data\") as any;\n  const toSubmitData = JSON.parse(data);\n\n  try {\n    await APIServer.clientFromSession(session).request(\n      APIServer.submitFeedback(toSubmitData)\n    );\n    await commitSession(session);\n    return json({ success: true });\n  } catch (e: any) {\n    session.flash(\"flashMessage\", {\n      type: \"error\",\n      message: e.errors && e.errors.length > 1 ? e.errors[0] : e.response.data,\n    });\n    await commitSession(session);\n    return json({ success: false });\n  }\n};\n\nexport default function Feedback() {\n  const { t } = useTranslation();\n  const actionData = useActionData();\n  const matches = useMatches();\n  const submit = useSubmit();\n  const { cdnUrl } = matches[0].data;\n  const { user } = useContext(AuthContext);\n  const fetcher = useFetcher();\n  const [form] = Form.useForm();\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [submitting, setSubmitting] = useState<boolean>(false);\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [success, setSuccess] = useState<boolean>(false);\n  const [attachedImage, setAttachedImage] = useState<string>(\"\");\n\n  const handleSubmitFeedback = (values: any) => {\n    setSubmitting(true);\n    submit({ data: JSON.stringify(values) }, { method: \"post\" });\n  };\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"image\") {\n        form.setFieldValue(\"image\", fetcher.data.key);\n        setAttachedImage(fetcher.data.key);\n      }\n      setUploading(false);\n    }\n  }, [form, fetcher.data]);\n\n  useEffect(() => {\n    if (actionData) {\n      setSubmitting(false);\n      if (actionData.success) {\n        setSuccess(true);\n      }\n    }\n  }, [actionData]);\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 50,\n        maxWidth: 800,\n        marginInline: \"auto\",\n      }}\n    >\n      <Card bordered={false} bodyStyle={{ padding: 40 }}>\n        {success ? (\n          <Result status=\"success\" title={t(\"successfully sent feedback\")} />\n        ) : (\n          <>\n            <Title level={1} style={{ marginTop: 0, marginBottom: 30 }}>\n              {t(\"feedback\")}\n            </Title>\n            <Flex vertical gap={20} style={{ fontSize: 18 }}>\n              <Form\n                form={form}\n                onFinish={handleSubmitFeedback}\n                layout=\"vertical\"\n              >\n                <Form.Item\n                  key=\"message\"\n                  name=\"message\"\n                  rules={[\n                    {\n                      required: true,\n                      message: t(\"please input feedback message\"),\n                    },\n                  ]}\n                  label={\n                    <Text style={{ fontSize: 20, fontWeight: 600 }}>\n                      {t(\"message\")}\n                    </Text>\n                  }\n                >\n                  <Input.TextArea rows={4} disabled={!user || submitting} />\n                </Form.Item>\n                <Form.Item\n                  key=\"image\"\n                  name=\"image\"\n                  label={\n                    <Text style={{ fontSize: 20, fontWeight: 600 }}>\n                      {t(\"attachment image\")}\n                    </Text>\n                  }\n                >\n                  <FileUploader\n                    disabled={!user || uploading || submitting}\n                    fetcher={fetcher}\n                    fieldName={\"image\"}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                  >\n                    {uploading ? (\n                      <Result\n                        icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n                      />\n                    ) : attachedImage.length > 0 ? (\n                      <Image\n                        preview={false}\n                        style={{ maxWidth: 400, cursor: \"pointer\" }}\n                        src={`${cdnUrl}/${attachedImage}`}\n                      />\n                    ) : (\n                      <Space\n                        size={10}\n                        style={{\n                          padding: \"5px 15px\",\n                          backgroundColor: \"#e5e4e4\",\n                          color: \"#000\",\n                          borderRadius: 6,\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        <UploadOutlined />\n                        {t(\"select file\")}\n                      </Space>\n                    )}\n                  </FileUploader>\n                </Form.Item>\n              </Form>\n              <Space>\n                <TiltButton\n                  color={\n                    user && !uploading && !submitting ? \"primary\" : \"secondary\"\n                  }\n                  onClick={\n                    user && !uploading && !submitting\n                      ? () => form.submit()\n                      : undefined\n                  }\n                  style={{ marginTop: 20 }}\n                >\n                  {user\n                    ? t(\"submit feedback\")\n                    : t(\"please login to submit feedback\")}\n                </TiltButton>\n              </Space>\n            </Flex>\n          </>\n        )}\n      </Card>\n      {contextHolder}\n    </div>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Outlet } from \"@remix-run/react\";\nimport { type LoaderFunction } from \"@remix-run/node\";\nimport { Card, Col, Flex, Row, Space, Typography } from \"antd\";\nimport {\n  MessageOutlined,\n  UserOutlined,\n  PlaySquareOutlined,\n  ProfileOutlined,\n  TrophyOutlined,\n} from \"@ant-design/icons\";\nimport { IoGameControllerOutline } from \"react-icons/io5\";\nimport { Media, TiltMenus } from \"~/components/common\";\nimport { AffixMenu } from \"~/components/layouts\";\nimport { mustAuthenticated } from \"~/session.server\";\nimport {\n  Award,\n  Gamepad2,\n  MessagesSquare,\n  SquareUser,\n  Trophy,\n  User,\n} from \"lucide-react\";\nconst { Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  await mustAuthenticated(request);\n  try {\n    return null;\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n  return null;\n};\n\nexport default function Settings() {\n  const { t } = useTranslation();\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Row gutter={[20, 0]}>\n        <Col span={24} md={6}>\n          <AffixMenu direction=\"vertical\" offsetTop={20}>\n            <Flex vertical gap={20}>\n              <Media greaterThan=\"sm\">\n                <Title level={4} style={{ margin: 0 }}>\n                  {t(\"settings\")}\n                </Title>\n              </Media>\n              <TiltMenus\n                direction=\"vertical\"\n                menus={[\n                  {\n                    link: \".\",\n                    level: 1,\n                    label: (\n                      <Space size={10}>\n                        <User />\n                        {t(\"profile\")}\n                      </Space>\n                    ),\n                  },\n                  {\n                    link: \"webboard\",\n                    label: (\n                      <Space size={10}>\n                        <MessagesSquare />\n                        {t(\"webboard\")}\n                      </Space>\n                    ),\n                  },\n                  {\n                    link: \"my-games\",\n                    label: (\n                      <Space size={10}>\n                        <Award />\n                        {t(\"my games\")}\n                      </Space>\n                    ),\n                  },\n                  {\n                    link: \"my-achievement\",\n                    label: (\n                      <Space size={10}>\n                        <Trophy />\n                        {t(\"my achievement\")}\n                      </Space>\n                    ),\n                  },\n                  {\n                    link: \"experiences\",\n                    label: (\n                      <Space size={10}>\n                        <Gamepad2 />\n                        {t(\"experiences\")}\n                      </Space>\n                    ),\n                  },\n                  {\n                    link: \"personal-details\",\n                    label: (\n                      <Space size={10}>\n                        <SquareUser />\n                        {t(\"personal details\")}\n                      </Space>\n                    ),\n                  },\n                ]}\n              />\n            </Flex>\n          </AffixMenu>\n        </Col>\n        <Col span={24} md={18}>\n          <Card style={{ borderRadius: 12 }} bodyStyle={{ padding: 30 }}>\n            <Outlet />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n", "import { Avatar, Card, Col, Flex, Row, Space, Typography } from \"antd\";\nimport { EnvironmentOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"@remix-run/react\";\nimport { Mail } from \"lucide-react\";\n\nconst { Text, Title } = Typography;\n\nexport default function Contact() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div\n        style={{\n          height: \"40vh\",\n          backgroundImage: `url(\"/image/banner.jpg\")`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center center\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      />\n      <div\n        style={{\n          paddingInline: \"3.5%\",\n          paddingBlock: 50,\n          maxWidth: 1100,\n          marginInline: \"auto\",\n        }}\n      >\n        <Card bordered={false} bodyStyle={{ padding: 40 }}>\n          <Title level={1} style={{ marginTop: 0, marginBottom: 30 }}>\n            {t(\"contact\")}\n          </Title>\n          <Flex vertical gap={20}>\n            <Flex gap={20} align=\"baseline\">\n              <div style={{ paddingTop: 6 }}>\n                <EnvironmentOutlined style={{ fontSize: 20 }} />\n              </div>\n              <Flex vertical gap={6}>\n                <Text style={{ fontSize: 18 }}>{t(\"address paragraph 1\")}</Text>\n                <Text style={{ fontSize: 18 }}>{t(\"address paragraph 2\")}</Text>\n              </Flex>\n            </Flex>\n            <Flex gap={20} align=\"baseline\">\n              <div style={{ paddingTop: 10 }}>\n                <Mail style={{ fontSize: 20 }} />\n              </div>\n              <Flex vertical gap={6}>\n                <Text style={{ fontSize: 18 }}>pasavit@ctrlg.gg</Text>\n                <Text style={{ fontSize: 18 }}>mintauka@ctrlg.gg</Text>\n              </Flex>\n            </Flex>\n            <Text style={{ fontSize: 16, marginTop: 20, marginBottom: 10 }}>\n              {t(\"contact paragraph 1\")}\n            </Text>\n            <Row gutter={15}>\n              <Col span={24} md={8}>\n                <Link to=\"https://www.facebook.com/ctrlg.platform?mibextid=LQQJ4d\">\n                  <Space size={10}>\n                    <Avatar src=\"/image/social/facebook.png\" size={30} />\n                    <Text style={{ fontSize: 18 }}>ctrlg.platform</Text>\n                  </Space>\n                </Link>\n              </Col>\n\n              <Col span={24} md={8}>\n                <Link to=\"https://youtube.com/@CTRLG.PLATFORM?si=OvpDc2Tyf7UaRviZ\">\n                  <Space size={10}>\n                    <Avatar src=\"/image/social/youtube.png\" size={30} />\n                    <Text style={{ fontSize: 18 }}>@ctrlg.platform</Text>\n                  </Space>\n                </Link>\n              </Col>\n              <Col span={24} md={8}>\n                <Link to=\"https://www.tiktok.com/@ctrlg.gg?_t=8go9chi62Fe&_r=1\">\n                  <Space size={10}>\n                    <Avatar\n                      src=\"/image/social/tiktok.svg\"\n                      size={30}\n                      style={{ backgroundColor: \"#000\", padding: 5 }}\n                    />\n                    <Text style={{ fontSize: 18 }}>@ctrlg.gg</Text>\n                  </Space>\n                </Link>\n              </Col>\n            </Row>\n          </Flex>\n        </Card>\n      </div>\n    </>\n  );\n}\n", "import { json, V2_MetaFunction, type LoaderFunction } from \"@remix-run/node\";\nimport { dummyGames, dummyParties } from \"~/components/common\";\nimport * as APIServer from \"~/api\";\nimport { Outlet } from \"@remix-run/react\";\nimport { getSessionFromRequest, isAuthenticated } from \"~/session.server\";\n\nlet myParty: any;\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  let games: any[] = dummyGames; // FIXME: remove this out;\n  let myParties: any[] = [];\n\n  try {\n    const gameRes = await APIServer.clientFromSession(session).request(\n      APIServer.getGamesWithRanksAndModes()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n    }\n\n    const isAuthened = await isAuthenticated(request);\n    if (isAuthened) {\n      const myPartiesRes = await APIServer.clientFromSession(session).request(\n        APIServer.getMyActiveParties()\n      );\n      if (myPartiesRes.data) {\n        myParties = myPartiesRes.data;\n        myParty = myParties[0];\n      }\n    }\n  } catch (e) {\n    // FIXME: remove this out\n    myParties = [...dummyParties].splice(0, 1);\n    games = dummyGames;\n  }\n\n  return json({\n    games,\n    myParties,\n    hasParty: myParties && myParties.length > 0,\n  });\n};\n\nexport { myParty };\n\n// export const meta: V2_MetaFunction = () => {\n//   return [\n//     { title: \"CTRL G\" },\n//     {\n//       name: \"description\",\n//       content: \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E15\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E08\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n//     },\n//     { charSet: \"utf-8\" },\n//     { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n//     { property: \"og:title\", content: \"\u0E0A\u0E27\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E21\u0E32\u0E40\u0E25\u0E48\u0E19 | Ctrlg.gg\" },\n//     {\n//       property: \"og:image\",\n//       content: `https://d2007awoau332v.cloudfront.net/assets/webboard.jpg`,\n//     },\n//     {\n//       property: \"og:image:width\",\n//       content: \"200\",\n//     },\n//     {\n//       property: \"og:image:height\",\n//       content: \"200\",\n//     },\n//     {\n//       property: \"og:description\",\n//       content: \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E15\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E08\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n//     },\n//   ];\n// };\n\nexport default function Parties() {\n  return <Outlet />;\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return redirect(\"/coming-soon\");\n};\n\nexport default function Rewards() {\n  return (\n    <div>\n      <h1>{\"this is rewards center page\"}</h1>\n    </div>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport { Link, useFetcher, useMatches, useNavigation } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Carousel, Flex, Image, Skeleton } from \"antd\";\nimport { BannerWithText, Loading, OverlayBg } from \"~/components/common\";\nimport {\n  TournamentSlider,\n  TournamentSliderItem,\n} from \"~/components/pages/Tournament\";\nimport { HomeBannerSliderItem } from \"~/components/pages/Tournament/HomeBannerSliderItem\";\n\nexport default function AppIndex() {\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const fetcher = useFetcher();\n  const navigation = useNavigation();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [featuredTournaments, setFeaturedTournaments] = useState<any>(null);\n  const [homeBanners, setHomeBanners] = useState<any>(null);\n  const bannerHeight = 330;\n\n  useEffect(() => {\n    fetcher.load(\"/resources/home-banners\");\n  }, []);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      fetcher.data.featuredTournaments &&\n      fetcher.data.homeBanners\n    ) {\n      setLoading(false);\n      setFeaturedTournaments(fetcher.data.featuredTournaments);\n      setHomeBanners(fetcher.data.homeBanners);\n    }\n  }, [fetcher]);\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Carousel\n        draggable={false}\n        className=\"banner-carousel center-mode\"\n        dots={false}\n        arrows\n        infinite\n        centerMode\n        waitForAnimate\n        centerPadding=\"10%\"\n        speed={180}\n        slidesToShow={3}\n        slidesToScroll={1}\n        style={{ height: bannerHeight, marginBottom: 30 }}\n        responsive={[\n          {\n            breakpoint: 768,\n            settings: {\n              draggable: true,\n              centerPadding: \"80px\",\n              slidesToShow: 1,\n            },\n          },\n        ]}\n      >\n        <div className=\"banner-card\">\n          <div>\n            <BannerWithText\n              message={t(\"webboard\").toUpperCase()}\n              image={`${cdnUrl}/banners/Banner-Webboard.jpg`}\n              // image={`/image/webboard1.jpg`}\n              link=\"/webboards\"\n              style={{ height: \"100%\" }}\n            />\n          </div>\n        </div>\n        <div className=\"banner-card\">\n          <div>\n            <BannerWithText\n              message={t(\"party matching\").toUpperCase()}\n              image={`${cdnUrl}/banners/Banner-Party.jpg`}\n              // image={`/image/teammatch1.jpg`}\n              link=\"/parties\"\n              style={{ height: \"100%\" }}\n            />\n          </div>\n        </div>\n        <div className=\"banner-card\">\n          <div>\n            <BannerWithText\n              message={t(\"tournaments\").toUpperCase()}\n              image={`${cdnUrl}/banners/Banner-Tournament.jpg`}\n              // image={`/image/tournament1.jpg`}\n              link=\"/tournaments\"\n              style={{ height: \"100%\" }}\n            />\n          </div>\n        </div>\n        <div className=\"banner-card\">\n          <div>\n            <BannerWithText\n              message={t(\"secret chamber\").toUpperCase()}\n              image={`${cdnUrl}/banners/Banner-Secret.jpg`}\n              link=\"/secret-chambers\"\n              style={{ height: \"100%\" }}\n            />\n          </div>\n        </div>\n        <div className=\"banner-card\">\n          <div>\n            <BannerWithText\n              message={t(\"reward center\").toUpperCase()}\n              image={`${cdnUrl}/banners/Banner-Reward.jpg`}\n              // image={`/image/reward.jpg`}\n              link=\"/rewards\"\n              style={{ height: \"100%\" }}\n            />\n          </div>\n        </div>\n        <div className=\"banner-card\">\n          <div>\n            <BannerWithText\n              message={t(\"play quiz\").toUpperCase()}\n              image={`${cdnUrl}/banners/Banner-Quiz.jpg`}\n              // image={`/image/teammatch1.jpg`}\n              link=\"/campaign\"\n              style={{ height: \"100%\" }}\n            />\n          </div>\n        </div>\n      </Carousel>\n      {loading ? (\n        <Skeleton active title={false} />\n      ) : (\n        <Flex vertical gap={40}>\n          {homeBanners ? (\n            <Carousel\n              arrows={true}\n              dotPosition=\"bottom\"\n              autoplay\n              autoplaySpeed={5000}\n              waitForAnimate\n              className=\"banner-carousel\"\n            >\n              {homeBanners.map((item: any, index: number) => (\n                <HomeBannerSliderItem key={`banner-${index}`} data={item} />\n              ))}\n            </Carousel>\n          ) : (\n            <Link\n              style={{\n                display: \"flex\",\n                borderRadius: 10,\n                overflow: \"hidden\",\n                marginBottom: 30,\n              }}\n              to=\"https://www.facebook.com/ctrlg.platform\"\n              target=\"_blank\"\n            >\n              <Image src={`/image/home-banner.jpg`} preview={false} />\n            </Link>\n          )}\n          <div style={{ borderRadius: 10, overflow: \"hidden\" }}>\n            {!featuredTournaments ? (\n              <TournamentSliderItem loading data={null} />\n            ) : (\n              <TournamentSlider data={featuredTournaments} />\n            )}\n          </div>\n        </Flex>\n      )}\n      {navigation.state === \"loading\" && (\n        <OverlayBg style={{ position: \"fixed\", zIndex: 100 }} opacity={0.7}>\n          <Loading />\n        </OverlayBg>\n      )}\n    </div>\n  );\n}\n", "// import { useTranslation } from \"react-i18next\";\nimport { Card, Image } from \"antd\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\n// const { useToken } = theme;\n\ninterface TournamentSliderItemProps {\n  data: any;\n  loading?: boolean;\n}\n\nexport function HomeBannerSliderItem(props: TournamentSliderItemProps) {\n  // const { t } = useTranslation();\n  const { data } = props;\n  // const { token } = useToken();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const navigate = useNavigate();\n  // const itemStyle = {\n  //   // margin: \"0 55px\",\n  //   position: \"relative\",\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   borderRadius: 0,\n  //   backgroundSize: \"cover\",\n  //   backgroundPosition: \"center\",\n  //   backgroundImage:\n  //     data && data.image && data.image !== \"-\"\n  //       ? `url(\"${cdnUrl}/${data.image}\")`\n  //       : undefined,\n  //   cursor: \"pointer\",\n  // } as any;\n  // const itemBodyStyle = {\n  //   display: \"flex\",\n  //   flex: \"auto\",\n  //   paddingBottom: 48,\n  //   alignItems: \"end\",\n  // } as any;\n  // const itemHeadStyle = {\n  //   position: \"relative\",\n  //   border: 0,\n  //   flex: \"0 0 auto\",\n  //   zIndex: 1,\n  // } as any;\n\n  const handleItemClicked = () => {\n    // navigate(`${data.url}`);\n    const isAbsoluteURL = /^https?:\\/\\//i.test(data.url);\n\n    if (isAbsoluteURL) {\n      window.open(data.url, \"_blank\");\n    } else {\n      navigate(data.url);\n    }\n  };\n\n  return (\n    <Image\n      preview={false}\n      src={`${cdnUrl}/${data.image}`}\n      onClick={handleItemClicked}\n      wrapperStyle={{ width: \"100%\", cursor: \"pointer\" }}\n    />\n  );\n\n  // return (\n  //   <Card\n  //     className=\"home-banner-slider-item\"\n  //     bordered={false}\n  //     onClick={handleItemClicked}\n  //     style={itemStyle}\n  //     bodyStyle={itemBodyStyle}\n  //     headStyle={itemHeadStyle}\n  //     // title={\n  //     //   <Tag\n  //     //     color={token.colorPrimary}\n  //     //     style={{ color: \"#201d1d\", fontWeight: 600 }}\n  //     //   >\n  //     //     {t(\"Home Banner\")}\n  //     //   </Tag>\n  //     // }\n  //   />\n  // );\n}\n", "import { json } from \"@remix-run/node\";\n\nexport const loader = async () => {\n  return json(\"The App is Healthy\", {\n    status: 200,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n", "import { Card, Flex, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Text, Title } = Typography;\n\nexport default function About() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div\n        style={{\n          height: \"40vh\",\n          backgroundImage: `url(\"/image/banner.jpg\")`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center center\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      />\n      <div\n        style={{\n          paddingInline: \"3.5%\",\n          paddingBlock: 50,\n          maxWidth: 1100,\n          marginInline: \"auto\",\n        }}\n      >\n        <Card bordered={false} bodyStyle={{ padding: 40 }}>\n          <Title level={1} style={{ marginTop: 0, marginBottom: 30 }}>\n            {t(\"about\")}\n          </Title>\n          <Flex vertical gap={20} style={{ fontSize: 18 }}>\n            <Text style={{ fontSize: \"inherit\" }}>\n              {t(\"about us paragraph 1\")}\n            </Text>\n            <Text style={{ fontSize: \"inherit\" }}>\n              {t(\"about us paragraph 2\")}\n            </Text>\n            <Text style={{ fontSize: \"inherit\" }}>\n              {t(\"about us paragraph 3\")}\n            </Text>\n            <Text style={{ fontSize: \"inherit\" }}>\n              {t(\"about us paragraph 4\")}\n            </Text>\n          </Flex>\n        </Card>\n      </div>\n    </>\n  );\n}\n", "export default function FAQs() {\n  return (\n    <div>\n      <h1>{\"this is FAQs page\"}</h1>\n    </div>\n  );\n}\n", "import { json, type LoaderFunction } from \"@remix-run/node\";\nimport { Outlet } from \"@remix-run/react\";\nimport * as APIServer from \"~/api\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  let rooms: any[] = [];\n  let games: any[] = [];\n  let tags: any[] = [];\n  let reactionOptions: any[] = [];\n  try {\n    const roomRes = await APIServer.clientFromSession().request(\n      APIServer.getWebboardRooms()\n    );\n    const gameRes = await APIServer.clientFromSession().request(\n      APIServer.getGames()\n    );\n    const tagRes = await APIServer.clientFromSession().request(\n      APIServer.getWebboardTags({ popular: true })\n    );\n    const reactionRes = await APIServer.clientFromSession().request(\n      APIServer.getReactions()\n    );\n    if (roomRes.data) {\n      rooms = roomRes.data;\n    }\n    if (gameRes.data) {\n      games = gameRes.data;\n    }\n    if (tagRes.data) {\n      tags = tagRes.data;\n    }\n    if (reactionRes.data) {\n      reactionOptions = reactionRes.data;\n    }\n  } catch (e) {\n    console.log(\"tag single error\", e);\n  }\n  return json({ rooms, games, reactionOptions, tags });\n};\n\nexport default function TagsLayout() {\n  return <Outlet />;\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Outlet,\n  useFetcher,\n  useLoaderData,\n  useRevalidator,\n} from \"@remix-run/react\";\nimport {\n  AuthenticityTokenProvider,\n  createAuthenticityToken,\n} from \"remix-utils\";\n\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { LayoutDashboard } from \"~/components/layouts\";\nimport { LoginForm } from \"~/components/common\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport { Modal } from \"antd\";\nimport { resetFetcher } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const me = session.get(\"me\");\n  const csrf = createAuthenticityToken(session);\n\n  return json({ csrf, me });\n};\n\nexport default function AppLayout() {\n  const { csrf, me } = useLoaderData();\n  const fetcher = useFetcher();\n  const revalidator = useRevalidator();\n  const [loginModal, setLoginModal] = useState<boolean>(false);\n  const [clickedId, setClickedId] = useState<string | undefined>(undefined);\n  const [isStickerDrop, setIsStickerDrop] = useState<boolean>(false);\n  const { scheme } = useContext(AppContext);\n\n  const handleDivClick = (event: any) => {\n    setClickedId(event.target.id);\n    setIsStickerDrop(\n      event.target?.className?.includes(\"campaign-sticker-drop\")\n    );\n  };\n\n  // const handleDivTouch = useCallback((event: any) => {\n  //   console.log(\"div touch\", event.target);\n  // }, []);\n\n  const handleLogout = useCallback(() => {\n    if (fetcher.state === \"idle\") {\n      fetcher.submit({}, { method: \"post\", action: \"/resources/logout\" });\n    }\n  }, [fetcher]);\n\n  const handleOpenLoginModal = useCallback(() => {\n    if (!me) {\n      setLoginModal(true);\n    }\n  }, [me]);\n\n  useEffect(() => {\n    if (me) {\n      setLoginModal(false);\n    }\n  }, [me]);\n\n  useEffect(() => {\n    if (fetcher && fetcher.data && revalidator.state === \"idle\") {\n      if (fetcher.data.logout) {\n        window.location.reload();\n      } else if (fetcher.data.me && fetcher.state === \"idle\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        logout: handleLogout,\n        user: me ? me : undefined,\n        openLoginModal: handleOpenLoginModal,\n        clickedId: clickedId,\n        isStickerDrop: isStickerDrop,\n      }}\n    >\n      <AuthenticityTokenProvider token={csrf}>\n        <div\n          onClick={handleDivClick}\n          onTouchStart={handleDivClick}\n          className={scheme === \"dark\" ? \"dark-theme\" : \"\"}\n        >\n          <LayoutDashboard>\n            <Outlet />\n            {!me && (\n              <Modal\n                closeIcon={false}\n                footer={null}\n                open={loginModal && !me}\n                onCancel={() => setLoginModal(false)}\n                width={420}\n                styles={{ body: { paddingBlock: 25, paddingInline: 10 } }}\n                modalRender={(modal) => modal}\n              >\n                <LoginForm\n                  fetcher={fetcher}\n                  loading={fetcher.state !== \"idle\"}\n                />\n              </Modal>\n            )}\n          </LayoutDashboard>\n        </div>\n      </AuthenticityTokenProvider>\n    </AuthContext.Provider>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-675QOGLW.js','imports':['/build/_shared/chunk-IDB3BDWM.js','/build/_shared/chunk-UPPG42YI.js','/build/_shared/chunk-HTXPUJYZ.js','/build/_shared/chunk-GAVVBTB4.js','/build/_shared/chunk-FFEYCVP6.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-37JT6R5L.js','imports':['/build/_shared/chunk-DMCGBCEK.js','/build/_shared/chunk-3YDOJKCM.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-CF33ONIU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/_app':{'id':'routes/_app','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app-2OMH5ESV.js','imports':['/build/_shared/chunk-RGETFDE6.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app._index':{'id':'routes/_app._index','parentId':'routes/_app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app._index-IKR77ZIF.js','imports':['/build/_shared/chunk-3DK26MTZ.js','/build/_shared/chunk-O2SDKC5O.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-YUNIXQN2.js','/build/_shared/chunk-B3LWZSUK.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.about':{'id':'routes/_app.about','parentId':'routes/_app','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.about-UWXKRC7G.js','imports':['/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.auth.google.callback':{'id':'routes/_app.auth.google.callback','parentId':'routes/_app','path':'auth/google/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.auth.google.callback-YWTGCHCC.js','imports':['/build/_shared/chunk-UQXDDOA5.js','/build/_shared/chunk-O2SDKC5O.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/_app.auth.line.callback':{'id':'routes/_app.auth.line.callback','parentId':'routes/_app','path':'auth/line/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.auth.line.callback-M3L2SU6W.js','imports':['/build/_shared/chunk-UQXDDOA5.js','/build/_shared/chunk-O2SDKC5O.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/_app.campaign':{'id':'routes/_app.campaign','parentId':'routes/_app','path':'campaign','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.campaign-ANGSPMSI.js','imports':['/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.campaign._index':{'id':'routes/_app.campaign._index','parentId':'routes/_app.campaign','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app.campaign._index-4UJHZG5J.js','imports':['/build/_shared/chunk-O2SDKC5O.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-JWZLYAAR.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.campaign.result':{'id':'routes/_app.campaign.result','parentId':'routes/_app.campaign','path':'result','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.campaign.result-37E7FYAJ.js','imports':['/build/_shared/chunk-DMCGBCEK.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-JWZLYAAR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.coming-soon':{'id':'routes/_app.coming-soon','parentId':'routes/_app','path':'coming-soon','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.coming-soon-IWNQLSCN.js','imports':['/build/_shared/chunk-JWZLYAAR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.contact':{'id':'routes/_app.contact','parentId':'routes/_app','path':'contact','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.contact-FV3VCXNC.js','imports':['/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.faqs':{'id':'routes/_app.faqs','parentId':'routes/_app','path':'faqs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.faqs-C66EV3IH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.feedback':{'id':'routes/_app.feedback','parentId':'routes/_app','path':'feedback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.feedback-C3JVORA7.js','imports':['/build/_shared/chunk-KD3NNI5X.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.health':{'id':'routes/_app.health','parentId':'routes/_app','path':'health','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.health-5TFTWT4F.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.parties':{'id':'routes/_app.parties','parentId':'routes/_app','path':'parties','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.parties-Q2MH3F24.js','imports':['/build/_shared/chunk-TKUYKEFQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.parties.$gameId':{'id':'routes/_app.parties.$gameId','parentId':'routes/_app.parties','path':':gameId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.parties.$gameId-KXMP6B6J.js','imports':['/build/_shared/chunk-OR6TXDR3.js','/build/_shared/chunk-64CVQ3LE.js','/build/_shared/chunk-O2SDKC5O.js','/build/_shared/chunk-5WX7JNC5.js','/build/_shared/chunk-6656VHVN.js','/build/_shared/chunk-JFV4VOHN.js','/build/_shared/chunk-3HAWV4PW.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-3YDOJKCM.js','/build/_shared/chunk-ZP5K5WKW.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.parties._index':{'id':'routes/_app.parties._index','parentId':'routes/_app.parties','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app.parties._index-SUYWLSM6.js','imports':['/build/_shared/chunk-O2SDKC5O.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.privacy-policies':{'id':'routes/_app.privacy-policies','parentId':'routes/_app','path':'privacy-policies','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.privacy-policies-C3NF74UB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.rewards':{'id':'routes/_app.rewards','parentId':'routes/_app','path':'rewards','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.rewards-JBKREQG3.js','imports':['/build/_shared/chunk-TKUYKEFQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.secret-chambers':{'id':'routes/_app.secret-chambers','parentId':'routes/_app','path':'secret-chambers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.secret-chambers-AVTVPZCT.js','imports':['/build/_shared/chunk-TKUYKEFQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings':{'id':'routes/_app.settings','parentId':'routes/_app','path':'settings','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.settings-FCFB5SL4.js','imports':['/build/_shared/chunk-N2TOCZNK.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings._index':{'id':'routes/_app.settings._index','parentId':'routes/_app.settings','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app.settings._index-TADG76QZ.js','imports':['/build/_shared/chunk-5YF5Q5NP.js','/build/_shared/chunk-64IMBVZI.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings.experiences':{'id':'routes/_app.settings.experiences','parentId':'routes/_app.settings','path':'experiences','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.settings.experiences-LICYUBTT.js','imports':['/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-KD3NNI5X.js','/build/_shared/chunk-5YF5Q5NP.js','/build/_shared/chunk-64IMBVZI.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings.my-achievement':{'id':'routes/_app.settings.my-achievement','parentId':'routes/_app.settings','path':'my-achievement','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.settings.my-achievement-K2YCFIRX.js','imports':['/build/_shared/chunk-ECVYUX7O.js','/build/_shared/chunk-KD3NNI5X.js','/build/_shared/chunk-5YF5Q5NP.js','/build/_shared/chunk-64IMBVZI.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings.my-games':{'id':'routes/_app.settings.my-games','parentId':'routes/_app.settings','path':'my-games','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.settings.my-games-ANJZ5O57.js','imports':['/build/_shared/chunk-OR6TXDR3.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-5YF5Q5NP.js','/build/_shared/chunk-64IMBVZI.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings.my-games-old':{'id':'routes/_app.settings.my-games-old','parentId':'routes/_app.settings','path':'my-games-old','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.settings.my-games-old-LYLDZPTQ.js','imports':['/build/_shared/chunk-6656VHVN.js','/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings.personal-details':{'id':'routes/_app.settings.personal-details','parentId':'routes/_app.settings','path':'personal-details','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.settings.personal-details-PMD7YMPY.js','imports':['/build/_shared/chunk-5YF5Q5NP.js','/build/_shared/chunk-64IMBVZI.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings.personal-detailsOriginal':{'id':'routes/_app.settings.personal-detailsOriginal','parentId':'routes/_app.settings','path':'personal-detailsOriginal','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.settings.personal-detailsOriginal-LL6KEEWB.js','imports':['/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.settings.webboard':{'id':'routes/_app.settings.webboard','parentId':'routes/_app.settings','path':'webboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.settings.webboard-2SQB5LSQ.js','imports':['/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tags':{'id':'routes/_app.tags','parentId':'routes/_app','path':'tags','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.tags-4GNAXCBP.js','imports':['/build/_shared/chunk-TKUYKEFQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tags.$tag':{'id':'routes/_app.tags.$tag','parentId':'routes/_app.tags','path':':tag','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.tags.$tag-P47KOADY.js','imports':['/build/_shared/chunk-KPSLXTRG.js','/build/_shared/chunk-5WX7JNC5.js','/build/_shared/chunk-5IANIR6E.js','/build/_shared/chunk-WSOOSU5J.js','/build/_shared/chunk-N5A7AEUL.js','/build/_shared/chunk-D5KO673L.js','/build/_shared/chunk-ZP5K5WKW.js','/build/_shared/chunk-JJYDDLYQ.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.teams.$uuid.join':{'id':'routes/_app.teams.$uuid.join','parentId':'routes/_app','path':'teams/:uuid/join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.teams.$uuid.join-5BRJYPUJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.terms-of-service':{'id':'routes/_app.terms-of-service','parentId':'routes/_app','path':'terms-of-service','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.terms-of-service-ECAPPF3F.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tournaments.$id':{'id':'routes/_app.tournaments.$id','parentId':'routes/_app','path':'tournaments/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.tournaments.$id-X2BXFA22.js','imports':['/build/_shared/chunk-KKNWOUET.js','/build/_shared/chunk-N2TOCZNK.js','/build/_shared/chunk-HJN2TGDW.js','/build/_shared/chunk-JFV4VOHN.js','/build/_shared/chunk-A5OSP4DA.js','/build/_shared/chunk-VMEWQXI4.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-C3CQI34N.js','/build/_shared/chunk-KD3NNI5X.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-6DQQZVHB.js','/build/_shared/chunk-YUNIXQN2.js','/build/_shared/chunk-B3LWZSUK.js','/build/_shared/chunk-CF33ONIU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tournaments.$id._index':{'id':'routes/_app.tournaments.$id._index','parentId':'routes/_app.tournaments.$id','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app.tournaments.$id._index-SU3JDJ3J.js','imports':['/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tournaments.$id.edit':{'id':'routes/_app.tournaments.$id.edit','parentId':'routes/_app.tournaments.$id','path':'edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.tournaments.$id.edit-7GU56Z7Y.js','imports':['/build/_shared/chunk-BLNU4UUY.js','/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tournaments.$id.schedule':{'id':'routes/_app.tournaments.$id.schedule','parentId':'routes/_app.tournaments.$id','path':'schedule','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.tournaments.$id.schedule-4B3OA2OZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tournaments.$id.teams':{'id':'routes/_app.tournaments.$id.teams','parentId':'routes/_app.tournaments.$id','path':'teams','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.tournaments.$id.teams-YDTJKUM2.js','imports':['/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tournaments.$id.webboard':{'id':'routes/_app.tournaments.$id.webboard','parentId':'routes/_app.tournaments.$id','path':'webboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.tournaments.$id.webboard-GIWUWYR5.js','imports':['/build/_shared/chunk-QXXYMUST.js','/build/_shared/chunk-3HAWV4PW.js','/build/_shared/chunk-PJTOFOWN.js','/build/_shared/chunk-3YDOJKCM.js','/build/_shared/chunk-D5KO673L.js','/build/_shared/chunk-ZP5K5WKW.js','/build/_shared/chunk-JJYDDLYQ.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tournaments._index':{'id':'routes/_app.tournaments._index','parentId':'routes/_app','path':'tournaments','index':true,'caseSensitive':undefined,'module':'/build/routes/_app.tournaments._index-TV73DWDQ.js','imports':['/build/_shared/chunk-3DK26MTZ.js','/build/_shared/chunk-O2SDKC5O.js','/build/_shared/chunk-N2TOCZNK.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-6DQQZVHB.js','/build/_shared/chunk-YUNIXQN2.js','/build/_shared/chunk-B3LWZSUK.js','/build/_shared/chunk-CF33ONIU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.tournaments.new':{'id':'routes/_app.tournaments.new','parentId':'routes/_app','path':'tournaments/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.tournaments.new-ESXVRKBV.js','imports':['/build/_shared/chunk-BLNU4UUY.js','/build/_shared/chunk-KD3NNI5X.js','/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid':{'id':'routes/_app.users.$uuid','parentId':'routes/_app','path':'users/:uuid','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid-GG7VAC2J.js','imports':['/build/_shared/chunk-KKNWOUET.js','/build/_shared/chunk-N2TOCZNK.js','/build/_shared/chunk-JFV4VOHN.js','/build/_shared/chunk-VMEWQXI4.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-KD3NNI5X.js','/build/_shared/chunk-ZP5K5WKW.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid._index':{'id':'routes/_app.users.$uuid._index','parentId':'routes/_app.users.$uuid','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid._index-Y3BJKLMF.js','imports':['/build/_shared/chunk-PDUDN3KR.js','/build/_shared/chunk-NZBABY6K.js','/build/_shared/chunk-64IMBVZI.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-SFSG4NV4.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid.joined-tournaments':{'id':'routes/_app.users.$uuid.joined-tournaments','parentId':'routes/_app.users.$uuid','path':'joined-tournaments','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid.joined-tournaments-N6ZA43M2.js','imports':['/build/_shared/chunk-6DQQZVHB.js','/build/_shared/chunk-YUNIXQN2.js','/build/_shared/chunk-B3LWZSUK.js','/build/_shared/chunk-CF33ONIU.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid.messages':{'id':'routes/_app.users.$uuid.messages','parentId':'routes/_app.users.$uuid','path':'messages','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid.messages-UNAEDZKE.js','imports':['/build/_shared/chunk-RGETFDE6.js','/build/_shared/chunk-JJYDDLYQ.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid.my-album.$id':{'id':'routes/_app.users.$uuid.my-album.$id','parentId':'routes/_app.users.$uuid','path':'my-album/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid.my-album.$id-23LYITUB.js','imports':['/build/_shared/chunk-GEQTK47T.js','/build/_shared/chunk-NZBABY6K.js','/build/_shared/chunk-ECVYUX7O.js','/build/_shared/chunk-64IMBVZI.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid.my-album._index':{'id':'routes/_app.users.$uuid.my-album._index','parentId':'routes/_app.users.$uuid','path':'my-album','index':true,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid.my-album._index-LWWKLYWB.js','imports':['/build/_shared/chunk-PDUDN3KR.js','/build/_shared/chunk-GEQTK47T.js','/build/_shared/chunk-NZBABY6K.js','/build/_shared/chunk-ECVYUX7O.js','/build/_shared/chunk-5YF5Q5NP.js','/build/_shared/chunk-64IMBVZI.js','/build/_shared/chunk-JJYDDLYQ.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid.my-conversations':{'id':'routes/_app.users.$uuid.my-conversations','parentId':'routes/_app.users.$uuid','path':'my-conversations','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid.my-conversations-IC5JKVJV.js','imports':['/build/_shared/chunk-RGETFDE6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid.my-conversations._index':{'id':'routes/_app.users.$uuid.my-conversations._index','parentId':'routes/_app.users.$uuid.my-conversations','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid.my-conversations._index-XYLWUXWS.js','imports':['/build/_shared/chunk-N5A7AEUL.js','/build/_shared/chunk-D5KO673L.js','/build/_shared/chunk-ZP5K5WKW.js','/build/_shared/chunk-JJYDDLYQ.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid.my-conversations.comments':{'id':'routes/_app.users.$uuid.my-conversations.comments','parentId':'routes/_app.users.$uuid.my-conversations','path':'comments','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid.my-conversations.comments-FWY76WX3.js','imports':['/build/_shared/chunk-N5A7AEUL.js','/build/_shared/chunk-D5KO673L.js','/build/_shared/chunk-ZP5K5WKW.js','/build/_shared/chunk-JJYDDLYQ.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.users.$uuid.my-tournaments':{'id':'routes/_app.users.$uuid.my-tournaments','parentId':'routes/_app.users.$uuid','path':'my-tournaments','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.users.$uuid.my-tournaments-UABYAGR4.js','imports':['/build/_shared/chunk-6DQQZVHB.js','/build/_shared/chunk-YUNIXQN2.js','/build/_shared/chunk-B3LWZSUK.js','/build/_shared/chunk-CF33ONIU.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.webboards':{'id':'routes/_app.webboards','parentId':'routes/_app','path':'webboards','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.webboards-SDMHEC34.js','imports':['/build/_shared/chunk-TKUYKEFQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.webboards.$id':{'id':'routes/_app.webboards.$id','parentId':'routes/_app.webboards','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.webboards.$id-6MLJZNUQ.js','imports':['/build/_shared/chunk-QVU6QP4I.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.webboards.$id._index':{'id':'routes/_app.webboards.$id._index','parentId':'routes/_app.webboards.$id','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app.webboards.$id._index-UXVX7MZB.js','imports':['/build/_shared/chunk-5WX7JNC5.js','/build/_shared/chunk-5IANIR6E.js','/build/_shared/chunk-WSOOSU5J.js','/build/_shared/chunk-QXXYMUST.js','/build/_shared/chunk-3HAWV4PW.js','/build/_shared/chunk-PJTOFOWN.js','/build/_shared/chunk-VMEWQXI4.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-C3CQI34N.js','/build/_shared/chunk-3YDOJKCM.js','/build/_shared/chunk-D5KO673L.js','/build/_shared/chunk-ZP5K5WKW.js','/build/_shared/chunk-JJYDDLYQ.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.webboards.$id.edit':{'id':'routes/_app.webboards.$id.edit','parentId':'routes/_app.webboards.$id','path':'edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.webboards.$id.edit-PV4QXWH3.js','imports':['/build/_shared/chunk-PWW2RPXV.js','/build/_shared/chunk-64CVQ3LE.js','/build/_shared/chunk-5IANIR6E.js','/build/_shared/chunk-WSOOSU5J.js','/build/_shared/chunk-A5OSP4DA.js','/build/_shared/chunk-PJTOFOWN.js','/build/_shared/chunk-VMEWQXI4.js','/build/_shared/chunk-KD3NNI5X.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-TKUYKEFQ.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.webboards._index':{'id':'routes/_app.webboards._index','parentId':'routes/_app.webboards','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_app.webboards._index-XRHTTUKZ.js','imports':['/build/_shared/chunk-KPSLXTRG.js','/build/_shared/chunk-O2SDKC5O.js','/build/_shared/chunk-5WX7JNC5.js','/build/_shared/chunk-WSOOSU5J.js','/build/_shared/chunk-GKESGK3R.js','/build/_shared/chunk-N5A7AEUL.js','/build/_shared/chunk-D5KO673L.js','/build/_shared/chunk-ZP5K5WKW.js','/build/_shared/chunk-JJYDDLYQ.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-B3LWZSUK.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_app.webboards.new':{'id':'routes/_app.webboards.new','parentId':'routes/_app.webboards','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app.webboards.new-2QFR6M2U.js','imports':['/build/_shared/chunk-PWW2RPXV.js','/build/_shared/chunk-64CVQ3LE.js','/build/_shared/chunk-5IANIR6E.js','/build/_shared/chunk-WSOOSU5J.js','/build/_shared/chunk-A5OSP4DA.js','/build/_shared/chunk-PJTOFOWN.js','/build/_shared/chunk-VMEWQXI4.js','/build/_shared/chunk-KD3NNI5X.js','/build/_shared/chunk-EKWFIVWG.js','/build/_shared/chunk-337STSEA.js','/build/_shared/chunk-Z5XIZAK5.js','/build/_shared/chunk-JN57S7X7.js','/build/_shared/chunk-3W3BLEBW.js','/build/_shared/chunk-SFSG4NV4.js','/build/_shared/chunk-QVU6QP4I.js','/build/_shared/chunk-7PTPQV33.js','/build/_shared/chunk-CTZTP5OE.js','/build/_shared/chunk-HA2KWBJU.js','/build/_shared/chunk-ONWVZSRO.js','/build/_shared/chunk-JWZLYAAR.js','/build/_shared/chunk-EA6MLCKC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.accept-buy-sell-agreement':{'id':'routes/resources.accept-buy-sell-agreement','parentId':'root','path':'resources/accept-buy-sell-agreement','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.accept-buy-sell-agreement-JULWXGUZ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.approve-party-request':{'id':'routes/resources.approve-party-request','parentId':'root','path':'resources/approve-party-request','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.approve-party-request-BNIWUYKW.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.boost-party':{'id':'routes/resources.boost-party','parentId':'root','path':'resources/boost-party','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.boost-party-NXB37DOE.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.comment-position':{'id':'routes/resources.comment-position','parentId':'root','path':'resources/comment-position','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.comment-position-HRC6KA7F.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-achievement':{'id':'routes/resources.create-achievement','parentId':'root','path':'resources/create-achievement','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-achievement-Z7P7OXKK.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-album':{'id':'routes/resources.create-album','parentId':'root','path':'resources/create-album','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-album-A3DY6DXE.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-comment':{'id':'routes/resources.create-comment','parentId':'root','path':'resources/create-comment','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-comment-I4ADNVKV.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-experience':{'id':'routes/resources.create-experience','parentId':'root','path':'resources/create-experience','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-experience-PVKD73BB.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-experience-title':{'id':'routes/resources.create-experience-title','parentId':'root','path':'resources/create-experience-title','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-experience-title-BPFPMCDX.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-party':{'id':'routes/resources.create-party','parentId':'root','path':'resources/create-party','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-party-7TA5U5UT.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-party-member':{'id':'routes/resources.create-party-member','parentId':'root','path':'resources/create-party-member','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-party-member-IJMXPDKZ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-party-request':{'id':'routes/resources.create-party-request','parentId':'root','path':'resources/create-party-request','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-party-request-ZAHPAOVL.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-user-in-game':{'id':'routes/resources.create-user-in-game','parentId':'root','path':'resources/create-user-in-game','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-user-in-game-MUUTGB54.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.create-webboard':{'id':'routes/resources.create-webboard','parentId':'root','path':'resources/create-webboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.create-webboard-NCR7I75V.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-achievement':{'id':'routes/resources.delete-achievement','parentId':'root','path':'resources/delete-achievement','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-achievement-YMH3GM7G.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-album':{'id':'routes/resources.delete-album','parentId':'root','path':'resources/delete-album','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-album-ZSHX4754.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-experience':{'id':'routes/resources.delete-experience','parentId':'root','path':'resources/delete-experience','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-experience-CZBSV6ZX.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-experience-title':{'id':'routes/resources.delete-experience-title','parentId':'root','path':'resources/delete-experience-title','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-experience-title-NWWRXGBD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-party-member':{'id':'routes/resources.delete-party-member','parentId':'root','path':'resources/delete-party-member','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-party-member-53IMUY7M.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-party-request':{'id':'routes/resources.delete-party-request','parentId':'root','path':'resources/delete-party-request','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-party-request-HKSMSX44.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-photo-album':{'id':'routes/resources.delete-photo-album','parentId':'root','path':'resources/delete-photo-album','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-photo-album-FBDSIMCQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-post':{'id':'routes/resources.delete-post','parentId':'root','path':'resources/delete-post','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-post-KLVCPTQ7.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-tournament':{'id':'routes/resources.delete-tournament','parentId':'root','path':'resources/delete-tournament','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-tournament-72UWXZPI.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.delete-user-in-game':{'id':'routes/resources.delete-user-in-game','parentId':'root','path':'resources/delete-user-in-game','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.delete-user-in-game-A662HVGY.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.edit-achievement':{'id':'routes/resources.edit-achievement','parentId':'root','path':'resources/edit-achievement','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.edit-achievement-DCSLCJFZ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.edit-achievement-title':{'id':'routes/resources.edit-achievement-title','parentId':'root','path':'resources/edit-achievement-title','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.edit-achievement-title-XEHCLZME.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.edit-album':{'id':'routes/resources.edit-album','parentId':'root','path':'resources/edit-album','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.edit-album-4KWUG7GF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.edit-experience':{'id':'routes/resources.edit-experience','parentId':'root','path':'resources/edit-experience','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.edit-experience-YHBLDVRE.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.edit-experience-title':{'id':'routes/resources.edit-experience-title','parentId':'root','path':'resources/edit-experience-title','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.edit-experience-title-LICVXPXV.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.edit-user-in-game':{'id':'routes/resources.edit-user-in-game','parentId':'root','path':'resources/edit-user-in-game','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.edit-user-in-game-VNNQS4N7.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.featured-tournaments':{'id':'routes/resources.featured-tournaments','parentId':'root','path':'resources/featured-tournaments','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.featured-tournaments-4TM7UFD4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.forgot-password':{'id':'routes/resources.forgot-password','parentId':'root','path':'resources/forgot-password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.forgot-password-LNLCA5PV.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.get-the-gift':{'id':'routes/resources.get-the-gift','parentId':'root','path':'resources/get-the-gift','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.get-the-gift-4KZ5GY5W.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.get-unread-notification':{'id':'routes/resources.get-unread-notification','parentId':'root','path':'resources/get-unread-notification','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.get-unread-notification-EZK3OPYO.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.home-banners':{'id':'routes/resources.home-banners','parentId':'root','path':'resources/home-banners','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.home-banners-JHMVQCUE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.leave-party':{'id':'routes/resources.leave-party','parentId':'root','path':'resources/leave-party','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.leave-party-KFKT3UGD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.login':{'id':'routes/resources.login','parentId':'root','path':'resources/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.login-RQW3EMUO.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.login-social':{'id':'routes/resources.login-social','parentId':'root','path':'resources/login-social','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.login-social-STVHDG6T.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.login-verify':{'id':'routes/resources.login-verify','parentId':'root','path':'resources/login-verify','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.login-verify-CJ3Z3IKD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.logout':{'id':'routes/resources.logout','parentId':'root','path':'resources/logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.logout-PK7VQXIU.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.no-frame':{'id':'routes/resources.no-frame','parentId':'root','path':'resources/no-frame','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.no-frame-3QVZVQSX.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.party':{'id':'routes/resources.party','parentId':'root','path':'resources/party','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.party-3JITOEII.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.party-chat':{'id':'routes/resources.party-chat','parentId':'root','path':'resources/party-chat','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.party-chat-LR62F5GY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.party-request':{'id':'routes/resources.party-request','parentId':'root','path':'resources/party-request','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.party-request-AAHOO3KN.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.party-requests':{'id':'routes/resources.party-requests','parentId':'root','path':'resources/party-requests','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.party-requests-XWDPNLNF.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.peopleWhoLiked':{'id':'routes/resources.peopleWhoLiked','parentId':'root','path':'resources/peopleWhoLiked','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.peopleWhoLiked-WCV2IJO6.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.poll-answer':{'id':'routes/resources.poll-answer','parentId':'root','path':'resources/poll-answer','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.poll-answer-K7X4CI5F.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.reaction-post':{'id':'routes/resources.reaction-post','parentId':'root','path':'resources/reaction-post','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.reaction-post-JYY6UYWS.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.reject-party-request':{'id':'routes/resources.reject-party-request','parentId':'root','path':'resources/reject-party-request','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.reject-party-request-OMHH64BG.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.report-post':{'id':'routes/resources.report-post','parentId':'root','path':'resources/report-post','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.report-post-7GXO6ARP.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.reset-fetcher':{'id':'routes/resources.reset-fetcher','parentId':'root','path':'resources/reset-fetcher','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.reset-fetcher-XPFABQNJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.searchUser':{'id':'routes/resources.searchUser','parentId':'root','path':'resources/searchUser','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.searchUser-HCDWG6RC.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.send-party-a-message':{'id':'routes/resources.send-party-a-message','parentId':'root','path':'resources/send-party-a-message','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.send-party-a-message-5VL3J2EU.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.sorting-albums':{'id':'routes/resources.sorting-albums','parentId':'root','path':'resources/sorting-albums','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.sorting-albums-HTX6T4CF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.sorting-my-achievement':{'id':'routes/resources.sorting-my-achievement','parentId':'root','path':'resources/sorting-my-achievement','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.sorting-my-achievement-DXXGCOAK.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.sorting-my-achievement-title':{'id':'routes/resources.sorting-my-achievement-title','parentId':'root','path':'resources/sorting-my-achievement-title','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.sorting-my-achievement-title-FE4JH52J.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.sorting-my-experience-title':{'id':'routes/resources.sorting-my-experience-title','parentId':'root','path':'resources/sorting-my-experience-title','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.sorting-my-experience-title-W7BKNVAK.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.sorting-my-games':{'id':'routes/resources.sorting-my-games','parentId':'root','path':'resources/sorting-my-games','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.sorting-my-games-PJGMX7T2.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.sorting-profile':{'id':'routes/resources.sorting-profile','parentId':'root','path':'resources/sorting-profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.sorting-profile-3B2XZXDK.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.submit-poll':{'id':'routes/resources.submit-poll','parentId':'root','path':'resources/submit-poll','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.submit-poll-KUK7LGHH.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.tags':{'id':'routes/resources.tags','parentId':'root','path':'resources/tags','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.tags-D5UBTPJP.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.update-comment':{'id':'routes/resources.update-comment','parentId':'root','path':'resources/update-comment','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.update-comment-BPURIXIY.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.update-party':{'id':'routes/resources.update-party','parentId':'root','path':'resources/update-party','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.update-party-I7KYSG34.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.update-party-member':{'id':'routes/resources.update-party-member','parentId':'root','path':'resources/update-party-member','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.update-party-member-JF7MIOML.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.upload':{'id':'routes/resources.upload','parentId':'root','path':'resources/upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.upload-J53IGAFD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.upload-album-paths':{'id':'routes/resources.upload-album-paths','parentId':'root','path':'resources/upload-album-paths','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.upload-album-paths-4TW63SRF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.upload.user-cover-image':{'id':'routes/resources.upload.user-cover-image','parentId':'routes/resources.upload','path':'user-cover-image','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.upload.user-cover-image-VXAI5BXE.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.upload.user-display-image':{'id':'routes/resources.upload.user-display-image','parentId':'routes/resources.upload','path':'user-display-image','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.upload.user-display-image-5Z5CTVD5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.uploadMultiple':{'id':'routes/resources.uploadMultiple','parentId':'root','path':'resources/uploadMultiple','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.uploadMultiple-OR6FWUOL.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources.user-prefs':{'id':'routes/resources.user-prefs','parentId':'root','path':'resources/user-prefs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/resources.user-prefs-4TT64NRC.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'3f4dea43','hmr':undefined,'url':'/build/manifest-3F4DEA43.js'};", "\nimport * as entryServer from \"/Users/dev/project/ctrl-g/ctrlg-app/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_app.users.$uuid.my-conversations.comments.tsx\";\nimport * as route2 from \"./routes/_app.users.$uuid.my-conversations._index.tsx\";\nimport * as route3 from \"./routes/_app.settings.personal-detailsOriginal.tsx\";\nimport * as route4 from \"./routes/resources.sorting-my-achievement-title.tsx\";\nimport * as route5 from \"./routes/resources.sorting-my-experience-title.tsx\";\nimport * as route6 from \"./routes/_app.users.$uuid.joined-tournaments.tsx\";\nimport * as route7 from \"./routes/resources.accept-buy-sell-agreement.tsx\";\nimport * as route8 from \"./routes/resources.upload.user-display-image.tsx\";\nimport * as route9 from \"./routes/_app.users.$uuid.my-conversations.tsx\";\nimport * as route10 from \"./routes/resources.create-experience-title.tsx\";\nimport * as route11 from \"./routes/resources.delete-experience-title.tsx\";\nimport * as route12 from \"./routes/resources.get-unread-notification.tsx\";\nimport * as route13 from \"./routes/resources.upload.user-cover-image.tsx\";\nimport * as route14 from \"./routes/_app.users.$uuid.my-album._index.tsx\";\nimport * as route15 from \"./routes/resources.edit-achievement-title.tsx\";\nimport * as route16 from \"./routes/resources.sorting-my-achievement.tsx\";\nimport * as route17 from \"./routes/_app.users.$uuid.my-tournaments.tsx\";\nimport * as route18 from \"./routes/resources.approve-party-request.tsx\";\nimport * as route19 from \"./routes/resources.edit-experience-title.tsx\";\nimport * as route20 from \"./routes/_app.settings.personal-details.tsx\";\nimport * as route21 from \"./routes/resources.create-party-request.tsx\";\nimport * as route22 from \"./routes/resources.delete-party-request.tsx\";\nimport * as route23 from \"./routes/resources.featured-tournaments.tsx\";\nimport * as route24 from \"./routes/resources.reject-party-request.tsx\";\nimport * as route25 from \"./routes/resources.send-party-a-message.tsx\";\nimport * as route26 from \"./routes/_app.tournaments.$id.schedule.tsx\";\nimport * as route27 from \"./routes/_app.tournaments.$id.webboard.tsx\";\nimport * as route28 from \"./routes/_app.users.$uuid.my-album.$id.tsx\";\nimport * as route29 from \"./routes/resources.create-party-member.tsx\";\nimport * as route30 from \"./routes/resources.create-user-in-game.tsx\";\nimport * as route31 from \"./routes/resources.delete-party-member.tsx\";\nimport * as route32 from \"./routes/resources.delete-user-in-game.tsx\";\nimport * as route33 from \"./routes/resources.update-party-member.tsx\";\nimport * as route34 from \"./routes/_app.settings.my-achievement.tsx\";\nimport * as route35 from \"./routes/resources.create-achievement.tsx\";\nimport * as route36 from \"./routes/resources.delete-achievement.tsx\";\nimport * as route37 from \"./routes/resources.delete-photo-album.tsx\";\nimport * as route38 from \"./routes/resources.upload-album-paths.tsx\";\nimport * as route39 from \"./routes/_app.tournaments.$id._index.tsx\";\nimport * as route40 from \"./routes/resources.create-experience.tsx\";\nimport * as route41 from \"./routes/resources.delete-experience.tsx\";\nimport * as route42 from \"./routes/resources.delete-tournament.tsx\";\nimport * as route43 from \"./routes/resources.edit-user-in-game.tsx\";\nimport * as route44 from \"./routes/_app.settings.my-games-old.tsx\";\nimport * as route45 from \"./routes/_app.tournaments.$id.teams.tsx\";\nimport * as route46 from \"./routes/resources.comment-position.tsx\";\nimport * as route47 from \"./routes/resources.edit-achievement.tsx\";\nimport * as route48 from \"./routes/resources.sorting-my-games.tsx\";\nimport * as route49 from \"./routes/_app.auth.google.callback.tsx\";\nimport * as route50 from \"./routes/_app.settings.experiences.tsx\";\nimport * as route51 from \"./routes/_app.tournaments.$id.edit.tsx\";\nimport * as route52 from \"./routes/_app.users.$uuid.messages.tsx\";\nimport * as route53 from \"./routes/_app.webboards.$id._index.tsx\";\nimport * as route54 from \"./routes/resources.create-webboard.tsx\";\nimport * as route55 from \"./routes/resources.edit-experience.tsx\";\nimport * as route56 from \"./routes/resources.forgot-password.tsx\";\nimport * as route57 from \"./routes/resources.sorting-profile.tsx\";\nimport * as route58 from \"./routes/resources.create-comment.tsx\";\nimport * as route59 from \"./routes/resources.party-requests.tsx\";\nimport * as route60 from \"./routes/resources.peopleWhoLiked.tsx\";\nimport * as route61 from \"./routes/resources.sorting-albums.tsx\";\nimport * as route62 from \"./routes/resources.update-comment.tsx\";\nimport * as route63 from \"./routes/resources.uploadMultiple.tsx\";\nimport * as route64 from \"./routes/_app.auth.line.callback.tsx\";\nimport * as route65 from \"./routes/_app.tournaments._index.tsx\";\nimport * as route66 from \"./routes/_app.users.$uuid._index.tsx\";\nimport * as route67 from \"./routes/_app.webboards.$id.edit.tsx\";\nimport * as route68 from \"./routes/resources.party-request.tsx\";\nimport * as route69 from \"./routes/resources.reaction-post.tsx\";\nimport * as route70 from \"./routes/resources.reset-fetcher.tsx\";\nimport * as route71 from \"./routes/_app.settings.my-games.tsx\";\nimport * as route72 from \"./routes/_app.settings.webboard.tsx\";\nimport * as route73 from \"./routes/resources.create-album.tsx\";\nimport * as route74 from \"./routes/resources.create-party.tsx\";\nimport * as route75 from \"./routes/resources.delete-album.tsx\";\nimport * as route76 from \"./routes/resources.get-the-gift.tsx\";\nimport * as route77 from \"./routes/resources.home-banners.tsx\";\nimport * as route78 from \"./routes/resources.login-social.tsx\";\nimport * as route79 from \"./routes/resources.login-verify.tsx\";\nimport * as route80 from \"./routes/resources.update-party.tsx\";\nimport * as route81 from \"./routes/_app.privacy-policies.tsx\";\nimport * as route82 from \"./routes/_app.teams.$uuid.join.tsx\";\nimport * as route83 from \"./routes/_app.terms-of-service.tsx\";\nimport * as route84 from \"./routes/_app.webboards._index.tsx\";\nimport * as route85 from \"./routes/resources.boost-party.tsx\";\nimport * as route86 from \"./routes/resources.delete-post.tsx\";\nimport * as route87 from \"./routes/resources.leave-party.tsx\";\nimport * as route88 from \"./routes/resources.poll-answer.tsx\";\nimport * as route89 from \"./routes/resources.report-post.tsx\";\nimport * as route90 from \"./routes/resources.submit-poll.tsx\";\nimport * as route91 from \"./routes/_app.campaign._index.tsx\";\nimport * as route92 from \"./routes/_app.campaign.result.tsx\";\nimport * as route93 from \"./routes/_app.parties.$gameId.tsx\";\nimport * as route94 from \"./routes/_app.secret-chambers.tsx\";\nimport * as route95 from \"./routes/_app.settings._index.tsx\";\nimport * as route96 from \"./routes/_app.tournaments.$id.tsx\";\nimport * as route97 from \"./routes/_app.tournaments.new.tsx\";\nimport * as route98 from \"./routes/resources.edit-album.tsx\";\nimport * as route99 from \"./routes/resources.party-chat.tsx\";\nimport * as route100 from \"./routes/resources.searchUser.tsx\";\nimport * as route101 from \"./routes/resources.user-prefs.tsx\";\nimport * as route102 from \"./routes/_app.parties._index.tsx\";\nimport * as route103 from \"./routes/_app.webboards.$id.tsx\";\nimport * as route104 from \"./routes/_app.webboards.new.tsx\";\nimport * as route105 from \"./routes/resources.no-frame.tsx\";\nimport * as route106 from \"./routes/_app.coming-soon.tsx\";\nimport * as route107 from \"./routes/_app.users.$uuid.tsx\";\nimport * as route108 from \"./routes/resources.logout.tsx\";\nimport * as route109 from \"./routes/resources.upload.tsx\";\nimport * as route110 from \"./routes/resources.login.tsx\";\nimport * as route111 from \"./routes/resources.party.tsx\";\nimport * as route112 from \"./routes/_app.tags.$tag.tsx\";\nimport * as route113 from \"./routes/_app.webboards.tsx\";\nimport * as route114 from \"./routes/resources.tags.tsx\";\nimport * as route115 from \"./routes/_app.campaign.tsx\";\nimport * as route116 from \"./routes/_app.feedback.tsx\";\nimport * as route117 from \"./routes/_app.settings.tsx\";\nimport * as route118 from \"./routes/_app.contact.tsx\";\nimport * as route119 from \"./routes/_app.parties.tsx\";\nimport * as route120 from \"./routes/_app.rewards.tsx\";\nimport * as route121 from \"./routes/_app._index.tsx\";\nimport * as route122 from \"./routes/_app.health.tsx\";\nimport * as route123 from \"./routes/_app.about.tsx\";\nimport * as route124 from \"./routes/_app.faqs.tsx\";\nimport * as route125 from \"./routes/_app.tags.tsx\";\nimport * as route126 from \"./routes/_app.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_app.users.$uuid.my-conversations.comments\": {\n      id: \"routes/_app.users.$uuid.my-conversations.comments\",\n      parentId: \"routes/_app.users.$uuid.my-conversations\",\n      path: \"comments\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_app.users.$uuid.my-conversations._index\": {\n      id: \"routes/_app.users.$uuid.my-conversations._index\",\n      parentId: \"routes/_app.users.$uuid.my-conversations\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_app.settings.personal-detailsOriginal\": {\n      id: \"routes/_app.settings.personal-detailsOriginal\",\n      parentId: \"routes/_app.settings\",\n      path: \"personal-detailsOriginal\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/resources.sorting-my-achievement-title\": {\n      id: \"routes/resources.sorting-my-achievement-title\",\n      parentId: \"root\",\n      path: \"resources/sorting-my-achievement-title\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/resources.sorting-my-experience-title\": {\n      id: \"routes/resources.sorting-my-experience-title\",\n      parentId: \"root\",\n      path: \"resources/sorting-my-experience-title\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/_app.users.$uuid.joined-tournaments\": {\n      id: \"routes/_app.users.$uuid.joined-tournaments\",\n      parentId: \"routes/_app.users.$uuid\",\n      path: \"joined-tournaments\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/resources.accept-buy-sell-agreement\": {\n      id: \"routes/resources.accept-buy-sell-agreement\",\n      parentId: \"root\",\n      path: \"resources/accept-buy-sell-agreement\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/resources.upload.user-display-image\": {\n      id: \"routes/resources.upload.user-display-image\",\n      parentId: \"routes/resources.upload\",\n      path: \"user-display-image\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/_app.users.$uuid.my-conversations\": {\n      id: \"routes/_app.users.$uuid.my-conversations\",\n      parentId: \"routes/_app.users.$uuid\",\n      path: \"my-conversations\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/resources.create-experience-title\": {\n      id: \"routes/resources.create-experience-title\",\n      parentId: \"root\",\n      path: \"resources/create-experience-title\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/resources.delete-experience-title\": {\n      id: \"routes/resources.delete-experience-title\",\n      parentId: \"root\",\n      path: \"resources/delete-experience-title\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/resources.get-unread-notification\": {\n      id: \"routes/resources.get-unread-notification\",\n      parentId: \"root\",\n      path: \"resources/get-unread-notification\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/resources.upload.user-cover-image\": {\n      id: \"routes/resources.upload.user-cover-image\",\n      parentId: \"routes/resources.upload\",\n      path: \"user-cover-image\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/_app.users.$uuid.my-album._index\": {\n      id: \"routes/_app.users.$uuid.my-album._index\",\n      parentId: \"routes/_app.users.$uuid\",\n      path: \"my-album\",\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/resources.edit-achievement-title\": {\n      id: \"routes/resources.edit-achievement-title\",\n      parentId: \"root\",\n      path: \"resources/edit-achievement-title\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/resources.sorting-my-achievement\": {\n      id: \"routes/resources.sorting-my-achievement\",\n      parentId: \"root\",\n      path: \"resources/sorting-my-achievement\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/_app.users.$uuid.my-tournaments\": {\n      id: \"routes/_app.users.$uuid.my-tournaments\",\n      parentId: \"routes/_app.users.$uuid\",\n      path: \"my-tournaments\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/resources.approve-party-request\": {\n      id: \"routes/resources.approve-party-request\",\n      parentId: \"root\",\n      path: \"resources/approve-party-request\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/resources.edit-experience-title\": {\n      id: \"routes/resources.edit-experience-title\",\n      parentId: \"root\",\n      path: \"resources/edit-experience-title\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/_app.settings.personal-details\": {\n      id: \"routes/_app.settings.personal-details\",\n      parentId: \"routes/_app.settings\",\n      path: \"personal-details\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/resources.create-party-request\": {\n      id: \"routes/resources.create-party-request\",\n      parentId: \"root\",\n      path: \"resources/create-party-request\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/resources.delete-party-request\": {\n      id: \"routes/resources.delete-party-request\",\n      parentId: \"root\",\n      path: \"resources/delete-party-request\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/resources.featured-tournaments\": {\n      id: \"routes/resources.featured-tournaments\",\n      parentId: \"root\",\n      path: \"resources/featured-tournaments\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/resources.reject-party-request\": {\n      id: \"routes/resources.reject-party-request\",\n      parentId: \"root\",\n      path: \"resources/reject-party-request\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/resources.send-party-a-message\": {\n      id: \"routes/resources.send-party-a-message\",\n      parentId: \"root\",\n      path: \"resources/send-party-a-message\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/_app.tournaments.$id.schedule\": {\n      id: \"routes/_app.tournaments.$id.schedule\",\n      parentId: \"routes/_app.tournaments.$id\",\n      path: \"schedule\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/_app.tournaments.$id.webboard\": {\n      id: \"routes/_app.tournaments.$id.webboard\",\n      parentId: \"routes/_app.tournaments.$id\",\n      path: \"webboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/_app.users.$uuid.my-album.$id\": {\n      id: \"routes/_app.users.$uuid.my-album.$id\",\n      parentId: \"routes/_app.users.$uuid\",\n      path: \"my-album/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/resources.create-party-member\": {\n      id: \"routes/resources.create-party-member\",\n      parentId: \"root\",\n      path: \"resources/create-party-member\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/resources.create-user-in-game\": {\n      id: \"routes/resources.create-user-in-game\",\n      parentId: \"root\",\n      path: \"resources/create-user-in-game\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/resources.delete-party-member\": {\n      id: \"routes/resources.delete-party-member\",\n      parentId: \"root\",\n      path: \"resources/delete-party-member\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/resources.delete-user-in-game\": {\n      id: \"routes/resources.delete-user-in-game\",\n      parentId: \"root\",\n      path: \"resources/delete-user-in-game\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route32\n    },\n  \"routes/resources.update-party-member\": {\n      id: \"routes/resources.update-party-member\",\n      parentId: \"root\",\n      path: \"resources/update-party-member\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route33\n    },\n  \"routes/_app.settings.my-achievement\": {\n      id: \"routes/_app.settings.my-achievement\",\n      parentId: \"routes/_app.settings\",\n      path: \"my-achievement\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route34\n    },\n  \"routes/resources.create-achievement\": {\n      id: \"routes/resources.create-achievement\",\n      parentId: \"root\",\n      path: \"resources/create-achievement\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route35\n    },\n  \"routes/resources.delete-achievement\": {\n      id: \"routes/resources.delete-achievement\",\n      parentId: \"root\",\n      path: \"resources/delete-achievement\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route36\n    },\n  \"routes/resources.delete-photo-album\": {\n      id: \"routes/resources.delete-photo-album\",\n      parentId: \"root\",\n      path: \"resources/delete-photo-album\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route37\n    },\n  \"routes/resources.upload-album-paths\": {\n      id: \"routes/resources.upload-album-paths\",\n      parentId: \"root\",\n      path: \"resources/upload-album-paths\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route38\n    },\n  \"routes/_app.tournaments.$id._index\": {\n      id: \"routes/_app.tournaments.$id._index\",\n      parentId: \"routes/_app.tournaments.$id\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route39\n    },\n  \"routes/resources.create-experience\": {\n      id: \"routes/resources.create-experience\",\n      parentId: \"root\",\n      path: \"resources/create-experience\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route40\n    },\n  \"routes/resources.delete-experience\": {\n      id: \"routes/resources.delete-experience\",\n      parentId: \"root\",\n      path: \"resources/delete-experience\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route41\n    },\n  \"routes/resources.delete-tournament\": {\n      id: \"routes/resources.delete-tournament\",\n      parentId: \"root\",\n      path: \"resources/delete-tournament\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route42\n    },\n  \"routes/resources.edit-user-in-game\": {\n      id: \"routes/resources.edit-user-in-game\",\n      parentId: \"root\",\n      path: \"resources/edit-user-in-game\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route43\n    },\n  \"routes/_app.settings.my-games-old\": {\n      id: \"routes/_app.settings.my-games-old\",\n      parentId: \"routes/_app.settings\",\n      path: \"my-games-old\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route44\n    },\n  \"routes/_app.tournaments.$id.teams\": {\n      id: \"routes/_app.tournaments.$id.teams\",\n      parentId: \"routes/_app.tournaments.$id\",\n      path: \"teams\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route45\n    },\n  \"routes/resources.comment-position\": {\n      id: \"routes/resources.comment-position\",\n      parentId: \"root\",\n      path: \"resources/comment-position\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route46\n    },\n  \"routes/resources.edit-achievement\": {\n      id: \"routes/resources.edit-achievement\",\n      parentId: \"root\",\n      path: \"resources/edit-achievement\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route47\n    },\n  \"routes/resources.sorting-my-games\": {\n      id: \"routes/resources.sorting-my-games\",\n      parentId: \"root\",\n      path: \"resources/sorting-my-games\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route48\n    },\n  \"routes/_app.auth.google.callback\": {\n      id: \"routes/_app.auth.google.callback\",\n      parentId: \"routes/_app\",\n      path: \"auth/google/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route49\n    },\n  \"routes/_app.settings.experiences\": {\n      id: \"routes/_app.settings.experiences\",\n      parentId: \"routes/_app.settings\",\n      path: \"experiences\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route50\n    },\n  \"routes/_app.tournaments.$id.edit\": {\n      id: \"routes/_app.tournaments.$id.edit\",\n      parentId: \"routes/_app.tournaments.$id\",\n      path: \"edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route51\n    },\n  \"routes/_app.users.$uuid.messages\": {\n      id: \"routes/_app.users.$uuid.messages\",\n      parentId: \"routes/_app.users.$uuid\",\n      path: \"messages\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route52\n    },\n  \"routes/_app.webboards.$id._index\": {\n      id: \"routes/_app.webboards.$id._index\",\n      parentId: \"routes/_app.webboards.$id\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route53\n    },\n  \"routes/resources.create-webboard\": {\n      id: \"routes/resources.create-webboard\",\n      parentId: \"root\",\n      path: \"resources/create-webboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route54\n    },\n  \"routes/resources.edit-experience\": {\n      id: \"routes/resources.edit-experience\",\n      parentId: \"root\",\n      path: \"resources/edit-experience\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route55\n    },\n  \"routes/resources.forgot-password\": {\n      id: \"routes/resources.forgot-password\",\n      parentId: \"root\",\n      path: \"resources/forgot-password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route56\n    },\n  \"routes/resources.sorting-profile\": {\n      id: \"routes/resources.sorting-profile\",\n      parentId: \"root\",\n      path: \"resources/sorting-profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route57\n    },\n  \"routes/resources.create-comment\": {\n      id: \"routes/resources.create-comment\",\n      parentId: \"root\",\n      path: \"resources/create-comment\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route58\n    },\n  \"routes/resources.party-requests\": {\n      id: \"routes/resources.party-requests\",\n      parentId: \"root\",\n      path: \"resources/party-requests\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route59\n    },\n  \"routes/resources.peopleWhoLiked\": {\n      id: \"routes/resources.peopleWhoLiked\",\n      parentId: \"root\",\n      path: \"resources/peopleWhoLiked\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route60\n    },\n  \"routes/resources.sorting-albums\": {\n      id: \"routes/resources.sorting-albums\",\n      parentId: \"root\",\n      path: \"resources/sorting-albums\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route61\n    },\n  \"routes/resources.update-comment\": {\n      id: \"routes/resources.update-comment\",\n      parentId: \"root\",\n      path: \"resources/update-comment\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route62\n    },\n  \"routes/resources.uploadMultiple\": {\n      id: \"routes/resources.uploadMultiple\",\n      parentId: \"root\",\n      path: \"resources/uploadMultiple\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route63\n    },\n  \"routes/_app.auth.line.callback\": {\n      id: \"routes/_app.auth.line.callback\",\n      parentId: \"routes/_app\",\n      path: \"auth/line/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route64\n    },\n  \"routes/_app.tournaments._index\": {\n      id: \"routes/_app.tournaments._index\",\n      parentId: \"routes/_app\",\n      path: \"tournaments\",\n      index: true,\n      caseSensitive: undefined,\n      module: route65\n    },\n  \"routes/_app.users.$uuid._index\": {\n      id: \"routes/_app.users.$uuid._index\",\n      parentId: \"routes/_app.users.$uuid\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route66\n    },\n  \"routes/_app.webboards.$id.edit\": {\n      id: \"routes/_app.webboards.$id.edit\",\n      parentId: \"routes/_app.webboards.$id\",\n      path: \"edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route67\n    },\n  \"routes/resources.party-request\": {\n      id: \"routes/resources.party-request\",\n      parentId: \"root\",\n      path: \"resources/party-request\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route68\n    },\n  \"routes/resources.reaction-post\": {\n      id: \"routes/resources.reaction-post\",\n      parentId: \"root\",\n      path: \"resources/reaction-post\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route69\n    },\n  \"routes/resources.reset-fetcher\": {\n      id: \"routes/resources.reset-fetcher\",\n      parentId: \"root\",\n      path: \"resources/reset-fetcher\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route70\n    },\n  \"routes/_app.settings.my-games\": {\n      id: \"routes/_app.settings.my-games\",\n      parentId: \"routes/_app.settings\",\n      path: \"my-games\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route71\n    },\n  \"routes/_app.settings.webboard\": {\n      id: \"routes/_app.settings.webboard\",\n      parentId: \"routes/_app.settings\",\n      path: \"webboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route72\n    },\n  \"routes/resources.create-album\": {\n      id: \"routes/resources.create-album\",\n      parentId: \"root\",\n      path: \"resources/create-album\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route73\n    },\n  \"routes/resources.create-party\": {\n      id: \"routes/resources.create-party\",\n      parentId: \"root\",\n      path: \"resources/create-party\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route74\n    },\n  \"routes/resources.delete-album\": {\n      id: \"routes/resources.delete-album\",\n      parentId: \"root\",\n      path: \"resources/delete-album\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route75\n    },\n  \"routes/resources.get-the-gift\": {\n      id: \"routes/resources.get-the-gift\",\n      parentId: \"root\",\n      path: \"resources/get-the-gift\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route76\n    },\n  \"routes/resources.home-banners\": {\n      id: \"routes/resources.home-banners\",\n      parentId: \"root\",\n      path: \"resources/home-banners\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route77\n    },\n  \"routes/resources.login-social\": {\n      id: \"routes/resources.login-social\",\n      parentId: \"root\",\n      path: \"resources/login-social\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route78\n    },\n  \"routes/resources.login-verify\": {\n      id: \"routes/resources.login-verify\",\n      parentId: \"root\",\n      path: \"resources/login-verify\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route79\n    },\n  \"routes/resources.update-party\": {\n      id: \"routes/resources.update-party\",\n      parentId: \"root\",\n      path: \"resources/update-party\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route80\n    },\n  \"routes/_app.privacy-policies\": {\n      id: \"routes/_app.privacy-policies\",\n      parentId: \"routes/_app\",\n      path: \"privacy-policies\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route81\n    },\n  \"routes/_app.teams.$uuid.join\": {\n      id: \"routes/_app.teams.$uuid.join\",\n      parentId: \"routes/_app\",\n      path: \"teams/:uuid/join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route82\n    },\n  \"routes/_app.terms-of-service\": {\n      id: \"routes/_app.terms-of-service\",\n      parentId: \"routes/_app\",\n      path: \"terms-of-service\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route83\n    },\n  \"routes/_app.webboards._index\": {\n      id: \"routes/_app.webboards._index\",\n      parentId: \"routes/_app.webboards\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route84\n    },\n  \"routes/resources.boost-party\": {\n      id: \"routes/resources.boost-party\",\n      parentId: \"root\",\n      path: \"resources/boost-party\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route85\n    },\n  \"routes/resources.delete-post\": {\n      id: \"routes/resources.delete-post\",\n      parentId: \"root\",\n      path: \"resources/delete-post\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route86\n    },\n  \"routes/resources.leave-party\": {\n      id: \"routes/resources.leave-party\",\n      parentId: \"root\",\n      path: \"resources/leave-party\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route87\n    },\n  \"routes/resources.poll-answer\": {\n      id: \"routes/resources.poll-answer\",\n      parentId: \"root\",\n      path: \"resources/poll-answer\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route88\n    },\n  \"routes/resources.report-post\": {\n      id: \"routes/resources.report-post\",\n      parentId: \"root\",\n      path: \"resources/report-post\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route89\n    },\n  \"routes/resources.submit-poll\": {\n      id: \"routes/resources.submit-poll\",\n      parentId: \"root\",\n      path: \"resources/submit-poll\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route90\n    },\n  \"routes/_app.campaign._index\": {\n      id: \"routes/_app.campaign._index\",\n      parentId: \"routes/_app.campaign\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route91\n    },\n  \"routes/_app.campaign.result\": {\n      id: \"routes/_app.campaign.result\",\n      parentId: \"routes/_app.campaign\",\n      path: \"result\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route92\n    },\n  \"routes/_app.parties.$gameId\": {\n      id: \"routes/_app.parties.$gameId\",\n      parentId: \"routes/_app.parties\",\n      path: \":gameId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route93\n    },\n  \"routes/_app.secret-chambers\": {\n      id: \"routes/_app.secret-chambers\",\n      parentId: \"routes/_app\",\n      path: \"secret-chambers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route94\n    },\n  \"routes/_app.settings._index\": {\n      id: \"routes/_app.settings._index\",\n      parentId: \"routes/_app.settings\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route95\n    },\n  \"routes/_app.tournaments.$id\": {\n      id: \"routes/_app.tournaments.$id\",\n      parentId: \"routes/_app\",\n      path: \"tournaments/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route96\n    },\n  \"routes/_app.tournaments.new\": {\n      id: \"routes/_app.tournaments.new\",\n      parentId: \"routes/_app\",\n      path: \"tournaments/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route97\n    },\n  \"routes/resources.edit-album\": {\n      id: \"routes/resources.edit-album\",\n      parentId: \"root\",\n      path: \"resources/edit-album\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route98\n    },\n  \"routes/resources.party-chat\": {\n      id: \"routes/resources.party-chat\",\n      parentId: \"root\",\n      path: \"resources/party-chat\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route99\n    },\n  \"routes/resources.searchUser\": {\n      id: \"routes/resources.searchUser\",\n      parentId: \"root\",\n      path: \"resources/searchUser\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route100\n    },\n  \"routes/resources.user-prefs\": {\n      id: \"routes/resources.user-prefs\",\n      parentId: \"root\",\n      path: \"resources/user-prefs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route101\n    },\n  \"routes/_app.parties._index\": {\n      id: \"routes/_app.parties._index\",\n      parentId: \"routes/_app.parties\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route102\n    },\n  \"routes/_app.webboards.$id\": {\n      id: \"routes/_app.webboards.$id\",\n      parentId: \"routes/_app.webboards\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route103\n    },\n  \"routes/_app.webboards.new\": {\n      id: \"routes/_app.webboards.new\",\n      parentId: \"routes/_app.webboards\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route104\n    },\n  \"routes/resources.no-frame\": {\n      id: \"routes/resources.no-frame\",\n      parentId: \"root\",\n      path: \"resources/no-frame\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route105\n    },\n  \"routes/_app.coming-soon\": {\n      id: \"routes/_app.coming-soon\",\n      parentId: \"routes/_app\",\n      path: \"coming-soon\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route106\n    },\n  \"routes/_app.users.$uuid\": {\n      id: \"routes/_app.users.$uuid\",\n      parentId: \"routes/_app\",\n      path: \"users/:uuid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route107\n    },\n  \"routes/resources.logout\": {\n      id: \"routes/resources.logout\",\n      parentId: \"root\",\n      path: \"resources/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route108\n    },\n  \"routes/resources.upload\": {\n      id: \"routes/resources.upload\",\n      parentId: \"root\",\n      path: \"resources/upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route109\n    },\n  \"routes/resources.login\": {\n      id: \"routes/resources.login\",\n      parentId: \"root\",\n      path: \"resources/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route110\n    },\n  \"routes/resources.party\": {\n      id: \"routes/resources.party\",\n      parentId: \"root\",\n      path: \"resources/party\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route111\n    },\n  \"routes/_app.tags.$tag\": {\n      id: \"routes/_app.tags.$tag\",\n      parentId: \"routes/_app.tags\",\n      path: \":tag\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route112\n    },\n  \"routes/_app.webboards\": {\n      id: \"routes/_app.webboards\",\n      parentId: \"routes/_app\",\n      path: \"webboards\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route113\n    },\n  \"routes/resources.tags\": {\n      id: \"routes/resources.tags\",\n      parentId: \"root\",\n      path: \"resources/tags\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route114\n    },\n  \"routes/_app.campaign\": {\n      id: \"routes/_app.campaign\",\n      parentId: \"routes/_app\",\n      path: \"campaign\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route115\n    },\n  \"routes/_app.feedback\": {\n      id: \"routes/_app.feedback\",\n      parentId: \"routes/_app\",\n      path: \"feedback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route116\n    },\n  \"routes/_app.settings\": {\n      id: \"routes/_app.settings\",\n      parentId: \"routes/_app\",\n      path: \"settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route117\n    },\n  \"routes/_app.contact\": {\n      id: \"routes/_app.contact\",\n      parentId: \"routes/_app\",\n      path: \"contact\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route118\n    },\n  \"routes/_app.parties\": {\n      id: \"routes/_app.parties\",\n      parentId: \"routes/_app\",\n      path: \"parties\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route119\n    },\n  \"routes/_app.rewards\": {\n      id: \"routes/_app.rewards\",\n      parentId: \"routes/_app\",\n      path: \"rewards\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route120\n    },\n  \"routes/_app._index\": {\n      id: \"routes/_app._index\",\n      parentId: \"routes/_app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route121\n    },\n  \"routes/_app.health\": {\n      id: \"routes/_app.health\",\n      parentId: \"routes/_app\",\n      path: \"health\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route122\n    },\n  \"routes/_app.about\": {\n      id: \"routes/_app.about\",\n      parentId: \"routes/_app\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route123\n    },\n  \"routes/_app.faqs\": {\n      id: \"routes/_app.faqs\",\n      parentId: \"routes/_app\",\n      path: \"faqs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route124\n    },\n  \"routes/_app.tags\": {\n      id: \"routes/_app.tags\",\n      parentId: \"routes/_app\",\n      path: \"tags\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route125\n    },\n  \"routes/_app\": {\n      id: \"routes/_app\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route126\n    }\n  };"],
  "mappings": "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",
  "names": ["module", "module", "module", "module", "module", "import_node", "common_default", "common_default", "import_node_path", "import_node", "Redis", "cookie", "maxAge", "isbot", "resolve", "cookie", "Backend", "import_react", "import_node", "import_react_i18next", "import_remix_i18next", "import_dayjs", "import_antd", "import_icons", "import_react", "React", "import_react", "React", "import_react", "React", "import_jsx_dev_runtime", "import_react", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "t", "import_react", "import_antd", "import_jsx_dev_runtime", "import_react_i18next", "import_antd", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "Text", "Title", "t", "import_antd", "import_jsx_dev_runtime", "Text", "import_react", "import_jsx_dev_runtime", "React", "Moveable", "import_react", "DndContext", "createContext", "dragDropManager", "undefined", "invariant", "condition", "format", "args", "isProduction", "undefined", "Error", "error", "argIndex", "replace", "name", "framesToPop", "process", "get", "obj", "path", "defaultValue", "split", "reduce", "a", "c", "without", "items", "item", "filter", "i", "isObject", "input", "xor", "itemsA", "itemsB", "map", "Map", "insertItem", "item", "set", "has", "get", "forEach", "result", "count", "key", "push", "intersection", "filter", "t", "indexOf", "INIT_COORDS", "BEGIN_DRAG", "PUBLISH_DRAG_SOURCE", "HOVER", "DROP", "END_DRAG", "setClientOffset", "clientOffset", "sourceClientOffset", "type", "INIT_COORDS", "payload", "ResetCoordinatesAction", "type", "INIT_COORDS", "payload", "clientOffset", "sourceClientOffset", "createBeginDrag", "manager", "sourceIds", "options", "publishSource", "getSourceClientOffset", "monitor", "getMonitor", "registry", "getRegistry", "dispatch", "setClientOffset", "verifyInvariants", "sourceId", "getDraggableSource", "Error", "verifyGetSourceClientOffsetIsFunction", "item", "getSource", "beginDrag", "verifyItemIsObject", "pinSource", "itemType", "getSourceType", "BEGIN_DRAG", "isSourcePublic", "invariant", "isDragging", "forEach", "isObject", "i", "length", "canDragSource", "createDrop", "manager", "options", "monitor", "getMonitor", "registry", "getRegistry", "verifyInvariants", "getDroppableTargets", "forEach", "targetId", "index", "dropResult", "determineDropResult", "action", "type", "DROP", "payload", "dispatch", "invariant", "isDragging", "didDrop", "target", "getTarget", "drop", "undefined", "verifyDropResultType", "getDropResult", "isObject", "targetIds", "getTargetIds", "filter", "canDropOnTarget", "reverse", "createEndDrag", "manager", "monitor", "getMonitor", "registry", "getRegistry", "verifyIsDragging", "sourceId", "getSourceId", "getSource", "endDrag", "unpinSource", "type", "END_DRAG", "invariant", "isDragging", "matchesType", "targetType", "draggedItemType", "Array", "isArray", "some", "t", "createHover", "manager", "targetIdsArg", "clientOffset", "verifyTargetIdsIsArray", "targetIds", "slice", "monitor", "getMonitor", "registry", "getRegistry", "draggedItemType", "getItemType", "removeNonMatchingTargetIds", "checkInvariants", "hoverAllTargets", "type", "HOVER", "payload", "invariant", "Array", "isArray", "isDragging", "didDrop", "i", "length", "targetId", "lastIndexOf", "target", "getTarget", "targetType", "getTargetType", "matchesType", "splice", "forEach", "hover", "createPublishDragSource", "manager", "getMonitor", "isDragging", "type", "PUBLISH_DRAG_SOURCE", "createDragDropActions", "manager", "beginDrag", "createBeginDrag", "publishDragSource", "createPublishDragSource", "hover", "createHover", "drop", "createDrop", "endDrag", "createEndDrag", "DragDropManagerImpl", "receiveBackend", "backend", "getMonitor", "monitor", "getBackend", "getRegistry", "registry", "getActions", "manager", "dispatch", "store", "bindActionCreator", "actionCreator", "args", "action", "apply", "actions", "createDragDropActions", "Object", "keys", "reduce", "boundActions", "key", "isSetUp", "handleRefCountChange", "shouldSetUp", "getState", "refCount", "setup", "teardown", "subscribe", "add", "a", "b", "x", "y", "subtract", "getSourceClientOffset", "state", "clientOffset", "initialClientOffset", "initialSourceClientOffset", "getDifferenceFromInitialOffset", "NONE", "ALL", "__IS_NONE__", "__IS_ALL__", "areDirty", "dirtyIds", "handlerIds", "intersection", "length", "DragDropMonitorImpl", "subscribeToStateChange", "listener", "options", "handlerIds", "invariant", "Array", "isArray", "prevStateId", "store", "getState", "stateId", "handleChange", "state", "currentStateId", "areDirty", "dirtyHandlerIds", "subscribe", "subscribeToOffsetChange", "previousState", "dragOffset", "nextState", "canDragSource", "sourceId", "source", "registry", "getSource", "isDragging", "canDrag", "canDropOnTarget", "targetId", "target", "getTarget", "didDrop", "targetType", "getTargetType", "draggedItemType", "getItemType", "matchesType", "canDrop", "Boolean", "isDraggingSource", "isSourcePublic", "sourceType", "getSourceType", "isOverTarget", "shallow", "targetIds", "getTargetIds", "length", "index", "indexOf", "dragOperation", "itemType", "getItem", "item", "getSourceId", "getDropResult", "dropResult", "getInitialClientOffset", "initialClientOffset", "getInitialSourceClientOffset", "initialSourceClientOffset", "getClientOffset", "clientOffset", "getSourceClientOffset", "getDifferenceFromInitialOffset", "scope", "global", "self", "BrowserMutationObserver", "MutationObserver", "WebKitMutationObserver", "makeRequestCallFromTimer", "callback", "timeoutHandle", "setTimeout", "handleTimer", "intervalHandle", "setInterval", "clearTimeout", "clearInterval", "makeRequestCallFromMutationObserver", "toggle", "observer", "node", "document", "createTextNode", "observe", "characterData", "data", "makeRequestCall", "AsapQueue", "enqueueTask", "task", "queue", "q", "requestFlush", "length", "flushing", "pendingErrors", "index", "capacity", "flush", "currentIndex", "call", "scan", "newLength", "registerPendingError", "err", "push", "requestErrorThrow", "makeRequestCall", "makeRequestCallFromTimer", "shift", "RawTask", "call", "task", "error", "onError", "release", "TaskFactory", "create", "task", "tasks", "freeTasks", "t", "length", "pop", "RawTask", "onError", "asapQueue", "AsapQueue", "taskFactory", "TaskFactory", "registerPendingError", "asap", "task", "enqueueTask", "create", "ADD_SOURCE", "ADD_TARGET", "REMOVE_SOURCE", "REMOVE_TARGET", "addSource", "sourceId", "type", "payload", "addTarget", "targetId", "removeSource", "removeTarget", "validateSourceContract", "source", "invariant", "canDrag", "beginDrag", "endDrag", "validateTargetContract", "target", "canDrop", "hover", "drop", "validateType", "type", "allowArray", "Array", "isArray", "forEach", "t", "HandlerRole", "SOURCE", "TARGET", "nextUniqueId", "getNextUniqueId", "getNextHandlerId", "role", "id", "getNextUniqueId", "toString", "HandlerRole", "SOURCE", "TARGET", "Error", "parseRoleFromHandlerId", "handlerId", "mapContainsValue", "map", "searchValue", "entries", "isDone", "done", "value", "next", "HandlerRegistryImpl", "addSource", "type", "source", "validateType", "validateSourceContract", "sourceId", "addHandler", "store", "dispatch", "addTarget", "target", "validateTargetContract", "targetId", "containsHandler", "handler", "dragSources", "dropTargets", "getSource", "includePinned", "invariant", "isSourceId", "pinnedSourceId", "pinnedSource", "get", "getTarget", "isTargetId", "getSourceType", "types", "getTargetType", "removeSource", "asap", "delete", "removeTarget", "pinSource", "unpinSource", "set", "Map", "strictEquality", "a", "b", "areCoordsEqual", "offsetA", "offsetB", "x", "y", "areArraysEqual", "isEqual", "length", "i", "reduce", "_state", "NONE", "action", "type", "HOVER", "ADD_SOURCE", "ADD_TARGET", "REMOVE_TARGET", "REMOVE_SOURCE", "BEGIN_DRAG", "PUBLISH_DRAG_SOURCE", "END_DRAG", "DROP", "ALL", "targetIds", "prevTargetIds", "payload", "result", "xor", "length", "areArraysEqual", "prevInnermostTargetId", "innermostTargetId", "push", "_defineProperty", "initialState", "initialSourceClientOffset", "initialClientOffset", "clientOffset", "reduce", "state", "action", "payload", "type", "INIT_COORDS", "BEGIN_DRAG", "sourceClientOffset", "HOVER", "areCoordsEqual", "_objectSpread", "END_DRAG", "DROP", "_defineProperty", "initialState", "itemType", "item", "sourceId", "targetIds", "dropResult", "didDrop", "isSourcePublic", "reduce", "state", "action", "payload", "type", "BEGIN_DRAG", "_objectSpread", "PUBLISH_DRAG_SOURCE", "HOVER", "REMOVE_TARGET", "indexOf", "targetId", "without", "DROP", "END_DRAG", "reduce", "state", "action", "type", "ADD_SOURCE", "ADD_TARGET", "REMOVE_SOURCE", "REMOVE_TARGET", "reduce", "state", "_defineProperty", "reduce", "state", "action", "dirtyHandlerIds", "type", "payload", "_objectSpread", "prevTargetIds", "get", "dragOffset", "refCount", "dragOperation", "stateId", "createDragDropManager", "backendFactory", "globalContext", "undefined", "backendOptions", "debugMode", "store", "makeStoreInstance", "monitor", "DragDropMonitorImpl", "HandlerRegistryImpl", "manager", "DragDropManagerImpl", "backend", "receiveBackend", "reduxDevTools", "window", "__REDUX_DEVTOOLS_EXTENSION__", "createStore", "reduce", "name", "instanceId", "import_react", "refCount", "INSTANCE_SYM", "Symbol", "for", "DndProvider", "memo", "children", "props", "manager", "isGlobalInstance", "getDndContextValue", "useEffect", "context", "getGlobalContext", "_jsx", "DndContext", "Provider", "value", "getDndContextValue", "props", "dragDropManager", "manager", "createSingletonDndContext", "backend", "context", "options", "debugMode", "isGlobalInstance", "getGlobalContext", "ctx", "INSTANCE_SYM", "createDragDropManager", "global", "window", "import_react", "DragPreviewImage", "memo", "connect", "src", "useEffect", "Image", "connected", "img", "onload", "import_react", "import_react", "useIsomorphicLayoutEffect", "window", "useLayoutEffect", "useEffect", "useCollector", "monitor", "collect", "onUpdate", "collected", "setCollected", "useState", "updateCollected", "useCallback", "nextValue", "equal", "useIsomorphicLayoutEffect", "useMonitorOutput", "monitor", "collect", "onCollect", "collected", "updateCollected", "useCollector", "useIsomorphicLayoutEffect", "handlerId", "getHandlerId", "subscribeToStateChange", "handlerIds", "useCollectedProps", "collector", "monitor", "connector", "useMonitorOutput", "reconnect", "import_react", "useOptionalFactory", "arg", "deps", "memoDeps", "push", "useMemo", "import_react", "useConnectDragSource", "connector", "useMemo", "hooks", "dragSource", "useConnectDragPreview", "dragPreview", "import_react", "isCallingCanDrag", "isCallingIsDragging", "DragSourceMonitorImpl", "receiveHandlerId", "sourceId", "getHandlerId", "canDrag", "invariant", "internalMonitor", "canDragSource", "isDragging", "isDraggingSource", "subscribeToStateChange", "listener", "options", "isOverTarget", "targetId", "getTargetIds", "isSourcePublic", "getSourceId", "subscribeToOffsetChange", "canDropOnTarget", "getItemType", "getItem", "getDropResult", "didDrop", "getInitialClientOffset", "getInitialSourceClientOffset", "getSourceClientOffset", "getClientOffset", "getDifferenceFromInitialOffset", "manager", "getMonitor", "isCallingCanDrop", "DropTargetMonitorImpl", "receiveHandlerId", "targetId", "getHandlerId", "subscribeToStateChange", "listener", "options", "internalMonitor", "canDrop", "invariant", "canDropOnTarget", "isOver", "isOverTarget", "getItemType", "getItem", "getDropResult", "didDrop", "getInitialClientOffset", "getInitialSourceClientOffset", "getSourceClientOffset", "getClientOffset", "getDifferenceFromInitialOffset", "manager", "getMonitor", "registerTarget", "type", "target", "manager", "registry", "getRegistry", "targetId", "addTarget", "removeTarget", "registerSource", "source", "sourceId", "addSource", "removeSource", "shallowEqual", "objA", "objB", "compare", "compareContext", "compareResult", "call", "keysA", "Object", "keys", "keysB", "length", "bHasOwnProperty", "prototype", "hasOwnProperty", "bind", "idx", "key", "valueA", "valueB", "isRef", "obj", "Object", "prototype", "hasOwnProperty", "call", "import_react", "throwIfCompositeComponentElement", "element", "type", "displayName", "name", "Error", "wrapHookToRecognizeElement", "hook", "elementOrNode", "options", "isValidElement", "node", "cloneWithRef", "wrapConnectorHooks", "hooks", "wrappedHooks", "Object", "keys", "forEach", "key", "endsWith", "wrappedHook", "setRef", "ref", "current", "newRef", "previousRef", "invariant", "cloneElement", "SourceConnector", "receiveHandlerId", "newHandlerId", "handlerId", "reconnect", "connectTarget", "dragSource", "dragSourceOptions", "dragSourceOptionsInternal", "options", "dragPreviewOptions", "dragPreviewOptionsInternal", "didChange", "reconnectDragSource", "reconnectDragPreview", "didHandlerIdChange", "didConnectedDragSourceChange", "didDragSourceOptionsChange", "disconnectDragSource", "lastConnectedHandlerId", "lastConnectedDragSource", "lastConnectedDragSourceOptions", "dragSourceUnsubscribe", "backend", "connectDragSource", "forceDidChange", "dragPreview", "didConnectedDragPreviewChange", "didDragPreviewOptionsChange", "disconnectDragPreview", "lastConnectedDragPreview", "lastConnectedDragPreviewOptions", "dragPreviewUnsubscribe", "connectDragPreview", "shallowEqual", "undefined", "dragPreviewNode", "dragPreviewRef", "dragSourceNode", "dragSourceRef", "current", "clearDragSource", "clearDragPreview", "hooks", "wrapConnectorHooks", "node", "isRef", "TargetConnector", "connectTarget", "dropTarget", "reconnect", "didChange", "didHandlerIdChange", "didDropTargetChange", "didOptionsChange", "disconnectDropTarget", "handlerId", "lastConnectedDropTarget", "lastConnectedHandlerId", "lastConnectedDropTargetOptions", "dropTargetOptions", "unsubscribeDropTarget", "backend", "connectDropTarget", "receiveHandlerId", "newHandlerId", "dropTargetOptionsInternal", "options", "shallowEqual", "undefined", "dropTargetNode", "dropTargetRef", "current", "clearDropTarget", "hooks", "wrapConnectorHooks", "node", "isRef", "import_react", "useDragDropManager", "dragDropManager", "useContext", "DndContext", "invariant", "useDragSourceConnector", "dragSourceOptions", "dragPreviewOptions", "manager", "useDragDropManager", "connector", "useMemo", "SourceConnector", "getBackend", "useIsomorphicLayoutEffect", "reconnect", "disconnectDragSource", "disconnectDragPreview", "import_react", "useDragSourceMonitor", "manager", "useDragDropManager", "useMemo", "DragSourceMonitorImpl", "import_react", "DragSourceImpl", "beginDrag", "spec", "monitor", "result", "item", "canDrag", "isDragging", "globalMonitor", "target", "getSourceId", "endDrag", "connector", "end", "getItem", "reconnect", "useDragSource", "spec", "monitor", "connector", "handler", "useMemo", "DragSourceImpl", "useEffect", "import_react", "useDragType", "spec", "useMemo", "result", "type", "invariant", "useRegisteredDragSource", "spec", "monitor", "connector", "manager", "useDragDropManager", "handler", "useDragSource", "itemType", "useDragType", "useIsomorphicLayoutEffect", "handlerId", "unregister", "registerSource", "receiveHandlerId", "useDrag", "specArg", "deps", "spec", "useOptionalFactory", "invariant", "begin", "monitor", "useDragSourceMonitor", "connector", "useDragSourceConnector", "options", "previewOptions", "useRegisteredDragSource", "useCollectedProps", "collect", "useConnectDragSource", "useConnectDragPreview", "import_react", "useDragLayer", "collect", "monitor", "useDragDropManager", "getMonitor", "collected", "updateCollected", "useCollector", "useEffect", "subscribeToOffsetChange", "subscribeToStateChange", "import_react", "useConnectDropTarget", "connector", "useMemo", "hooks", "dropTarget", "import_react", "useDropTargetConnector", "options", "manager", "useDragDropManager", "connector", "useMemo", "TargetConnector", "getBackend", "useIsomorphicLayoutEffect", "dropTargetOptions", "reconnect", "disconnectDropTarget", "import_react", "useDropTargetMonitor", "manager", "useDragDropManager", "useMemo", "DropTargetMonitorImpl", "import_react", "useAccept", "spec", "accept", "useMemo", "invariant", "Array", "isArray", "import_react", "DropTargetImpl", "canDrop", "spec", "monitor", "getItem", "hover", "drop", "useDropTarget", "spec", "monitor", "dropTarget", "useMemo", "DropTargetImpl", "useEffect", "useRegisteredDropTarget", "spec", "monitor", "connector", "manager", "useDragDropManager", "dropTarget", "useDropTarget", "accept", "useAccept", "useIsomorphicLayoutEffect", "handlerId", "unregister", "registerTarget", "receiveHandlerId", "map", "a", "toString", "join", "useDrop", "specArg", "deps", "spec", "useOptionalFactory", "monitor", "useDropTargetMonitor", "connector", "useDropTargetConnector", "options", "useRegisteredDropTarget", "useCollectedProps", "collect", "useConnectDropTarget", "import_jsx_dev_runtime", "i", "import_antd", "import_jsx_dev_runtime", "import_antd", "import_jsx_dev_runtime", "import_react", "import_antd", "import_base64_arraybuffer", "import_jsx_dev_runtime", "i", "resolve", "uuidv4", "import_react_i18next", "import_antd", "import_icons", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Title", "action", "t", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "t", "import_react", "import_antd", "import_react_i18next", "import_react", "import_jsx_dev_runtime", "Title", "t", "action", "modal", "import_antd", "import_icons", "import_react", "import_react_i18next", "import_react", "import_jsx_dev_runtime", "Text", "Title", "t", "values", "import_antd", "import_jsx_dev_runtime", "Title", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "t", "import_react", "import_dayjs", "import_antd", "import_icons", "import_lodash", "i", "dayjs", "k", "tournament", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "t", "dayjs", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "Text", "Title", "t", "modalProps", "modal", "import_antd", "import_jsx_dev_runtime", "useToken", "import_dayjs", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_jsx_dev_runtime", "useToken", "Text", "t", "dayjs", "OTPInput", "props", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "Text", "t", "import_react", "import_react_scroll", "import_antd", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "reactionOptions", "t", "import_antd", "import_react_i18next", "import_dayjs", "import_react", "import_react", "import_jsx_dev_runtime", "Text", "t", "a", "b", "dayjs", "import_react_i18next", "import_react", "import_antd", "import_icons", "import_antd", "import_icons", "import_react_i18next", "import_lucide_react", "import_jsx_dev_runtime", "Text", "t", "import_lucide_react", "import_jsx_dev_runtime", "Text", "Title", "t", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "useToken", "t", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "t", "a", "b", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "tournament", "t", "tags", "add", "remove", "import_react", "import_antd", "import_icons", "import_react", "import_react_i18next", "import_lodash", "import_lucide_react", "import_jsx_dev_runtime", "Text", "t", "v", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Title", "t", "webboard", "import_antd", "import_icons", "import_react_i18next", "import_jsx_dev_runtime", "reactionOptions", "t", "import_react", "import_lodash", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "reactionOptions", "a", "b", "import_react", "import_react_i18next", "import_antd", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "useToken", "t", "import_react", "import_dayjs", "import_jsx_dev_runtime", "useToken", "reactionOptions", "t", "dayjs", "import_react", "import_antd", "import_jsx_dev_runtime", "useToken", "reactionOptions", "import_dayjs", "import_react", "import_antd", "import_react_scroll", "import_react_i18next", "import_react", "import_jsx_dev_runtime", "useToken", "Text", "Title", "reactionOptions", "t", "dayjs", "import_react", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "Text", "Title", "t", "modalProps", "import_react", "import_jsx_dev_runtime", "useToken", "import_antd", "import_icons", "import_lodash", "import_jsx_dev_runtime", "i", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "t", "import_antd", "import_icons", "import_react", "import_react_i18next", "import_react", "import_jsx_dev_runtime", "useToken", "Text", "t", "a", "b", "import_antd", "import_react_i18next", "import_lucide_react", "import_jsx_dev_runtime", "Text", "t", "import_react", "import_antd", "import_jsx_dev_runtime", "import_antd", "import_jsx_dev_runtime", "Text", "import_jsx_dev_runtime", "import_antd", "import_lodash", "import_react", "import_jsx_dev_runtime", "Text", "useToken", "import_react", "import_antd", "import_jsx_dev_runtime", "p", "import_antd", "import_icons", "import_react_i18next", "import_lucide_react", "import_jsx_dev_runtime", "useToken", "Text", "t", "import_antd", "import_icons", "import_jsx_dev_runtime", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "Text", "Title", "t", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "t", "import_antd", "import_jsx_dev_runtime", "axios", "baseURL", "c", "refreshToken", "import_axios", "axios", "import_jsx_dev_runtime", "dayjs", "localizedFormat", "isToday", "utc", "cookie", "refreshToken", "jwt_decode", "t", "loader", "import_node", "import_react", "import_antd", "import_lodash", "import_react_i18next", "import_jsx_dev_runtime", "loader", "url", "me", "t", "v", "loader", "import_node", "import_react", "import_antd", "import_lodash", "import_react_i18next", "import_jsx_dev_runtime", "loader", "url", "me", "t", "v", "loader", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_node", "import_jsx_dev_runtime", "Text", "Title", "loader", "t", "action", "add", "remove", "action", "import_node", "action", "action", "import_node", "action", "loader", "import_node", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_antd", "import_icons", "import_dayjs", "import_jsx_dev_runtime", "dayjs", "import_react_i18next", "import_antd", "import_react", "import_jsx_dev_runtime", "Title", "t", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "t", "import_antd", "import_react_i18next", "import_dayjs", "import_jsx_dev_runtime", "useToken", "Text", "t", "dayjs", "import_dayjs", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_lodash", "import_react", "import_jsx_dev_runtime", "Text", "Title", "t", "i", "dayjs", "import_antd", "import_react_i18next", "import_dayjs", "import_react", "import_react", "import_jsx_dev_runtime", "Text", "Title", "useToken", "t", "dayjs", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_lodash", "import_jsx_dev_runtime", "useToken", "Text", "t", "import_antd", "import_icons", "import_react_i18next", "import_jsx_dev_runtime", "t", "import_react", "import_antd", "import_jsx_dev_runtime", "import_antd", "import_jsx_dev_runtime", "Title", "import_antd", "import_icons", "import_react_i18next", "import_lodash", "import_jsx_dev_runtime", "t", "import_react_i18next", "import_jsx_dev_runtime", "t", "import_antd", "import_lodash", "import_react_i18next", "import_jsx_dev_runtime", "useToken", "Text", "Title", "t", "import_antd", "import_jsx_dev_runtime", "import_react_i18next", "import_antd", "import_react", "import_react", "import_jsx_dev_runtime", "useToken", "Title", "t", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_jsx_dev_runtime", "Text", "Title", "t", "action", "import_antd", "import_icons", "import_react_i18next", "import_react", "import_jsx_dev_runtime", "Text", "Title", "useToken", "t", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_dayjs", "import_jsx_dev_runtime", "useToken", "Text", "Title", "t", "additionalFields", "dayjs", "import_jwt_decode", "import_jsx_dev_runtime", "loader", "jwt_decode", "t", "action", "import_node", "action", "action", "import_node", "action", "loader", "import_react_i18next", "import_react", "import_antd", "import_icons", "import_jsx_dev_runtime", "loader", "t", "action", "import_node", "action", "action", "import_node", "action", "loader", "import_node", "loader", "action", "import_node", "action", "loader", "import_node", "import_react", "import_antd", "import_lodash", "import_react_i18next", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "action", "t", "import_react", "import_core", "import_sortable", "import_core", "import_jsx_dev_runtime", "import_react", "import_antd", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "active", "React", "import_react", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "Text", "t", "import_lu", "import_lucide_react", "import_jsx_dev_runtime", "Text", "loader", "url", "me", "t", "v", "action", "import_node", "action", "action", "import_node", "action", "loader", "import_node", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jwt_decode", "import_jsx_dev_runtime", "loader", "jwt_decode", "t", "tournament", "action", "import_node", "action", "action", "import_node", "action", "action", "SettingsPersonalDetails", "loader", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_node", "import_lucide_react", "import_jsx_dev_runtime", "Text", "Title", "loader", "action", "modalProps", "SettingsPersonalDetails", "t", "i", "add", "remove", "_a", "action", "import_node", "action", "data", "action", "import_node", "action", "loader", "import_node", "loader", "action", "import_node", "action", "action", "import_node", "action", "import_react", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "useToken", "Title", "tournament", "t", "loader", "import_node", "import_react", "import_react_i18next", "import_react_scroll", "import_antd", "import_lodash", "import_jsx_dev_runtime", "loader", "webboard", "url", "reactionOptions", "tournament", "t", "v", "UserMyWebboards", "loader", "import_node", "import_react", "import_antd", "import_lodash", "import_react_i18next", "import_react", "import_antd", "import_react_i18next", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "modalProps", "t", "import_icons", "import_lu", "import_jsx_dev_runtime", "useToken", "Text", "Title", "t", "import_jsx_dev_runtime", "loader", "url", "me", "modalProps", "UserMyWebboards", "t", "v", "items", "_a", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "action", "loader", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_node", "import_react", "import_antd", "import_react_i18next", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_tb", "import_jsx_dev_runtime", "Text", "Title", "action", "t", "import_lucide_react", "import_jsx_dev_runtime", "Text", "Title", "modalProps", "t", "import_jsx_dev_runtime", "Text", "Title", "t", "import_react", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "Text", "Title", "action", "t", "import_lucide_react", "import_jsx_dev_runtime", "Title", "Text", "loader", "url", "action", "modalProps", "t", "a", "b", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "import_react", "import_react_i18next", "import_dayjs", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "useToken", "Text", "Title", "tournament", "t", "dayjs", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "action", "SettingsMyGames", "loader", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_node", "import_jsx_dev_runtime", "Text", "Title", "loader", "action", "modalProps", "SettingsMyGames", "t", "i", "add", "remove", "action", "loader", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_node", "import_lodash", "import_jsx_dev_runtime", "Title", "loader", "tournament", "action", "t", "teams", "remark", "loader", "import_node", "loader", "url", "action", "import_node", "action", "action", "import_node", "action", "ErrorBoundary", "action", "loader", "import_react", "import_antd", "import_node", "import_react", "import_remix_auth", "import_axios", "scope", "url", "axios", "refreshToken", "import_remix_auth_oauth2", "scope", "import_node", "cookieSecret", "cookieSecure", "maxAge", "getSession", "commitSession", "destroySession", "refreshToken", "import_jsx_dev_runtime", "loader", "action", "ErrorBoundary", "action", "loader", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_node", "import_react", "import_react_i18next", "import_antd", "import_react", "import_dayjs", "import_jsx_dev_runtime", "Text", "Title", "action", "t", "dayjs", "import_lodash", "import_react", "import_antd", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "modalProps", "t", "import_dayjs", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "t", "dayjs", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "useToken", "action", "t", "import_lucide_react", "import_jsx_dev_runtime", "Title", "Text", "loader", "url", "action", "modalProps", "t", "_a", "_b", "index", "action", "loader", "import_react", "import_react_i18next", "import_node", "import_antd", "import_jsx_dev_runtime", "loader", "action", "tournament", "t", "loader", "import_react", "import_node", "import_react_i18next", "import_lodash", "import_antd", "import_icons", "import_react", "import_antd", "import_jsx_dev_runtime", "useToken", "import_antd", "import_jsx_dev_runtime", "import_react", "import_antd", "import_react", "import_react_i18next", "import_jsx_dev_runtime", "Text", "useToken", "t", "import_react", "import_antd", "import_icons", "import_react_i18next", "import_antd", "import_react", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "useToken", "import_lodash", "import_lucide_react", "import_jsx_dev_runtime", "useToken", "t", "v", "InfiniteScroll", "import_react", "import_antd", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "Text", "useToken", "import_react", "import_antd", "import_jsx_dev_runtime", "Content", "Footer", "Header", "Text", "import_react", "import_react_i18next", "import_dayjs", "import_antd", "import_jsx_dev_runtime", "Text", "t", "dayjs", "import_jsx_dev_runtime", "loader", "me", "url", "t", "v", "loader", "import_node", "import_react", "import_react_i18next", "import_react_scroll", "import_antd", "import_lodash", "import_jsx_dev_runtime", "loader", "url", "me", "t", "webboard", "reactionOptions", "v", "action", "import_node", "action", "webboard", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "data", "action", "import_node", "action", "loader", "import_node", "loader", "url", "loader", "import_node", "loader", "url", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "import_base64_arraybuffer", "action", "ErrorBoundary", "action", "loader", "import_react", "import_antd", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "ErrorBoundary", "loader", "import_react", "import_node", "import_react_i18next", "import_lodash", "import_jwt_decode", "import_antd", "import_jsx_dev_runtime", "loader", "url", "jwt_decode", "t", "v", "items", "meta", "import_react", "import_react_i18next", "import_react", "import_antd", "import_react_i18next", "import_react", "import_antd", "import_react_i18next", "import_lu", "import_jsx_dev_runtime", "Text", "t", "import_lucide_react", "import_jsx_dev_runtime", "t", "import_react", "import_antd", "import_react_i18next", "import_lu", "import_jsx_dev_runtime", "Text", "t", "import_react", "import_antd", "import_react_i18next", "import_lucide_react", "import_jsx_dev_runtime", "useToken", "Text", "Title", "t", "import_react", "import_antd", "import_react_i18next", "import_dayjs", "import_lucide_react", "import_jsx_dev_runtime", "Text", "Title", "t", "index", "dayjs", "import_react", "import_antd", "import_react_i18next", "import_react", "import_antd", "import_jsx_dev_runtime", "Text", "import_fa", "import_lucide_react", "import_jsx_dev_runtime", "Text", "t", "import_jsx_dev_runtime", "meta", "t", "a", "b", "action", "loader", "import_node", "import_antd", "import_react", "import_jsx_dev_runtime", "loader", "action", "webboard", "loader", "import_node", "loader", "url", "action", "import_node", "action", "loader", "import_node", "action", "SettingsMyGames", "loader", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_node", "import_react", "import_antd", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_react", "import_react_i18next", "import_antd", "import_react", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "t", "import_jsx_dev_runtime", "Text", "Title", "useToken", "action", "t", "userGame", "m", "g", "modalProps", "gameId", "import_jsx_dev_runtime", "Text", "Title", "modalProps", "t", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "t", "import_lucide_react", "import_jsx_dev_runtime", "Title", "Text", "defaultGame", "loader", "url", "action", "modalProps", "SettingsMyGames", "t", "action", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_node", "import_jsx_dev_runtime", "Text", "Title", "action", "t", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "loader", "import_node", "loader", "loader", "import_node", "loader", "action", "import_node", "action", "action", "import_node", "action", "loader", "loader", "import_node", "loader", "t", "loader", "import_fs", "loader", "import_react", "import_react_i18next", "import_node", "import_antd", "import_lodash", "import_jsx_dev_runtime", "Text", "loader", "url", "me", "t", "reactionOptions", "v", "action", "import_node", "action", "action", "import_node", "action", "action", "import_node", "action", "loader", "import_node", "loader", "url", "action", "import_node", "action", "action", "import_node", "action", "action", "meta", "import_react", "import_node", "import_antd", "import_react_i18next", "import_react", "import_jsx_dev_runtime", "Text", "Title", "modalProps", "t", "isMobile", "import_antd", "import_react", "import_react_i18next", "import_jsx_dev_runtime", "Title", "t", "isMobile", "i", "l", "n", "e", "u", "s", "k", "B", "import_react", "import_react", "import_react", "import_react", "t", "a", "o", "p", "l", "m", "P", "x", "c", "import_react", "import_react", "u", "D", "g", "t", "o", "l", "i", "p", "v", "x", "S", "s", "E", "k", "w", "M", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Title", "t", "isMobile", "import_jsx_dev_runtime", "action", "campaignResult", "meta", "loader", "import_react", "import_node", "memoize", "fn", "result", "without", "items", "item", "filter", "i", "union", "itemsA", "itemsB", "set", "Set", "insertItem", "add", "forEach", "key", "push", "EnterLeaveCounter", "enter", "enteringNode", "previousLength", "entered", "length", "isNodeEntered", "node", "isNodeInDocument", "contains", "union", "filter", "leave", "leavingNode", "without", "reset", "NativeDragSource", "initializeExposedProperties", "Object", "keys", "config", "exposeProperties", "forEach", "property", "defineProperty", "item", "configurable", "enumerable", "get", "console", "warn", "loadDataTransfer", "dataTransfer", "newProperties", "propertyFn", "value", "matchesTypes", "defineProperties", "canDrag", "beginDrag", "isDragging", "monitor", "handle", "getSourceId", "endDrag", "URL", "FILE", "TEXT", "HTML", "getDataFromDataTransfer", "dataTransfer", "typesToTry", "defaultValue", "result", "reduce", "resultSoFar", "typeToTry", "getData", "nativeTypesConfig", "FILE", "exposeProperties", "files", "dataTransfer", "Array", "prototype", "slice", "call", "items", "matchesTypes", "HTML", "html", "getDataFromDataTransfer", "URL", "urls", "split", "TEXT", "text", "createNativeDragSource", "type", "dataTransfer", "config", "nativeTypesConfig", "Error", "result", "NativeDragSource", "loadDataTransfer", "matchNativeItemType", "dataTransferTypes", "Array", "prototype", "slice", "call", "types", "Object", "keys", "filter", "nativeItemType", "typeConfig", "matchesTypes", "some", "t", "indexOf", "isFirefox", "memoize", "test", "navigator", "userAgent", "isSafari", "Boolean", "window", "safari", "MonotonicInterpolant", "interpolate", "x", "xs", "ys", "c1s", "c2s", "c3s", "i", "length", "low", "high", "mid", "Math", "floor", "xHere", "max", "diff", "diffSq", "indexes", "push", "sort", "a", "b", "dys", "dxs", "ms", "dx", "dy", "m2", "mNext", "dxNext", "common", "m", "c1", "invDx", "ELEMENT_NODE", "getNodeClientOffset", "node", "el", "nodeType", "parentElement", "top", "left", "getBoundingClientRect", "x", "y", "getEventClientOffset", "e", "clientX", "clientY", "isImageNode", "document", "nodeName", "isFirefox", "documentElement", "contains", "getDragPreviewSize", "isImage", "dragPreview", "sourceWidth", "sourceHeight", "dragPreviewWidth", "width", "dragPreviewHeight", "height", "isSafari", "window", "devicePixelRatio", "getDragPreviewOffset", "sourceNode", "clientOffset", "anchorPoint", "offsetPoint", "dragPreviewNodeOffsetFromClient", "offsetFromDragPreview", "offsetWidth", "offsetHeight", "anchorX", "anchorY", "calculateYOffset", "MonotonicInterpolant", "interpolate", "calculateXOffset", "offsetX", "offsetY", "isManualOffsetX", "isManualOffsetY", "OptionsReader", "window", "globalContext", "document", "rootElement", "optionsArgs", "options", "ownerDocument", "_defineProperty", "HTML5BackendImpl", "profile", "sourcePreviewNodes", "size", "sourcePreviewNodeOptions", "sourceNodeOptions", "sourceNodes", "dragStartSourceIds", "length", "dropTargetIds", "dragEnterTargetIds", "dragOverTargetIds", "window", "options", "document", "rootElement", "setup", "root", "undefined", "__isReactDndBackendSetUp", "Error", "addEventListeners", "teardown", "removeEventListeners", "clearCurrentDragSourceNode", "asyncEndDragFrameId", "cancelAnimationFrame", "connectDragPreview", "sourceId", "node", "set", "delete", "connectDragSource", "handleDragStart", "e", "handleSelectStart", "setAttribute", "addEventListener", "removeEventListener", "connectDropTarget", "targetId", "handleDragEnter", "handleDragOver", "handleDrop", "target", "handleTopDragStart", "handleTopDragStartCapture", "handleTopDragEndCapture", "handleTopDragEnter", "handleTopDragEnterCapture", "handleTopDragLeaveCapture", "handleTopDragOver", "handleTopDragOverCapture", "handleTopDrop", "handleTopDropCapture", "getCurrentSourceNodeOptions", "monitor", "getSourceId", "get", "_objectSpread", "dropEffect", "altKeyPressed", "getCurrentDropEffect", "isDraggingNativeItem", "getCurrentSourcePreviewNodeOptions", "anchorX", "anchorY", "captureDraggingState", "itemType", "getItemType", "Object", "keys", "NativeTypes", "some", "key", "beginDragNativeItem", "type", "dataTransfer", "currentNativeSource", "createNativeDragSource", "currentNativeHandle", "registry", "addSource", "actions", "beginDrag", "setCurrentDragSourceNode", "currentDragSourceNode", "MOUSE_MOVE_TIMEOUT", "mouseMoveTimeoutTimer", "setTimeout", "endDragIfSourceWasRemovedFromDOM", "clearTimeout", "defaultPrevented", "unshift", "_e", "manager", "globalContext", "Map", "lastClientOffset", "hoverRafId", "getSourceClientOffset", "source", "getNodeClientOffset", "endDragNativeItem", "endDrag", "removeSource", "isNodeInDocument", "Boolean", "body", "contains", "isDragging", "cancelHover", "scheduleHover", "requestAnimationFrame", "hover", "clientOffset", "getEventClientOffset", "publishSource", "nativeType", "matchNativeItemType", "setDragImage", "sourceNode", "dragPreview", "offsetX", "offsetY", "dragPreviewOffset", "getDragPreviewOffset", "x", "y", "setData", "publishDragSource", "types", "hasAttribute", "preventDefault", "loadDataTransfer", "enterLeaveCounter", "enter", "altKey", "canDropOnTarget", "leave", "reset", "drop", "dragDrop", "tagName", "isContentEditable", "OptionsReader", "getActions", "getMonitor", "getRegistry", "EnterLeaveCounter", "HTML5Backend", "manager", "context", "options", "HTML5BackendImpl", "ListenerType", "mouse", "touch", "keyboard", "OptionsReader", "delay", "args", "scrollAngleRanges", "getDropTargetElementsAtPoint", "ignoreContextMenu", "enableHoverOutsideTarget", "enableKeyboardEvents", "enableMouseEvents", "enableTouchEvents", "touchSlop", "delayTouchStart", "delayMouseStart", "window", "context", "document", "rootElement", "distance", "x1", "y1", "x2", "y2", "Math", "sqrt", "pow", "abs", "inAngleRanges", "angleRanges", "angle", "atan2", "PI", "i", "length", "ar", "start", "end", "MouseButtons", "Left", "Right", "Center", "MouseButton", "eventShouldStartDrag", "e", "button", "undefined", "eventShouldEndDrag", "buttons", "isTouchEvent", "targetTouches", "ELEMENT_NODE", "getNodeClientOffset", "node", "el", "nodeType", "parentElement", "top", "left", "getBoundingClientRect", "x", "y", "getEventClientTouchOffset", "e", "lastTargetTouchFallback", "targetTouches", "length", "getEventClientOffset", "touches", "target", "isTouchEvent", "clientX", "clientY", "supportsPassive", "supported", "addEventListener", "Object", "defineProperty", "get", "eventNames", "ListenerType", "mouse", "start", "move", "end", "contextmenu", "touch", "keyboard", "keydown", "TouchBackendImpl", "profile", "sourceNodes", "size", "sourcePreviewNodes", "sourcePreviewNodeOptions", "targetNodes", "dragOverTargetIds", "length", "document", "options", "setup", "root", "rootElement", "invariant", "isSetUp", "addEventListener", "getTopMoveStartHandler", "handleTopMoveStartCapture", "handleTopMove", "handleTopMoveCapture", "handleTopMoveEndCapture", "enableMouseEvents", "ignoreContextMenu", "enableKeyboardEvents", "handleCancelOnEscape", "teardown", "_mouseClientOffset", "removeEventListener", "handleTopMoveStart", "uninstallSourceNodeRemovalObserver", "subject", "event", "handler", "capture", "supportsPassive", "passive", "listenerTypes", "forEach", "listenerType", "evt", "connectDragSource", "sourceId", "node", "handleMoveStart", "bind", "set", "delete", "connectDragPreview", "connectDropTarget", "targetId", "handleMove", "e", "monitor", "isDragging", "coords", "type", "x", "clientX", "y", "clientY", "touches", "droppedOn", "elementFromPoint", "undefined", "childMatch", "contains", "body", "delayTouchStart", "delayMouseStart", "handleTopMoveStartDelay", "installSourceNodeRemovalObserver", "draggedSourceNode", "draggedSourceNodeRemovalObserver", "MutationObserver", "parentElement", "resurrectSourceNode", "observe", "childList", "style", "display", "removeAttribute", "appendChild", "disconnect", "manager", "context", "getSourceClientOffset", "element", "get", "getNodeClientOffset", "eventShouldStartDrag", "moveStartSourceIds", "Array", "isArray", "unshift", "clientOffset", "getEventClientOffset", "isTouchEvent", "lastTargetTouchFallback", "targetTouches", "waitingForDelay", "delay", "timeout", "setTimeout", "_evt", "clearTimeout", "enableHoverOutsideTarget", "_isScrolling", "inAngleRanges", "scrollAngleRanges", "hasOwnProperty", "distance", "touchSlop", "actions", "beginDrag", "publishSource", "sourceNode", "getSourceId", "publishDragSource", "cancelable", "preventDefault", "dragOverTargetNodes", "map", "key", "filter", "elementsAtPoint", "getDropTargetElementsAtPoint", "elementsFromPoint", "elementsAtPointExtended", "nodeId", "currentNode", "push", "indexOf", "orderedDragOverTargetIds", "_getDropTargetId", "id", "index", "ids", "targetNode", "reverse", "hover", "keys", "next", "done", "value", "eventShouldEndDrag", "didDrop", "drop", "endDrag", "OptionsReader", "getActions", "getMonitor", "Map", "enableTouchEvents", "TouchBackend", "manager", "context", "options", "TouchBackendImpl", "s", "import_antd", "import_react_i18next", "import_react", "import_dayjs", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "Text", "Title", "t", "import_react_i18next", "import_antd", "import_icons", "import_jsx_dev_runtime", "Text", "t", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "t", "import_antd", "import_icons", "import_react_i18next", "import_jsx_dev_runtime", "t", "import_antd", "import_jsx_dev_runtime", "import_icons", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Text", "t", "modalProps", "boxes", "dayjs", "domtoimage", "import_jsx_dev_runtime", "loader", "campaignResult", "g", "s", "loader", "meta", "import_react", "import_react_i18next", "import_node", "import_antd", "import_icons", "import_react", "import_antd", "import_react_scroll", "import_dayjs", "import_react_i18next", "import_react", "import_jsx_dev_runtime", "React", "url", "useWebsocket", "import_jsx_dev_runtime", "Text", "useToken", "t", "dayjs", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "t", "m", "party", "import_dayjs", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_jsx_dev_runtime", "Text", "Countdown", "t", "dayjs", "import_antd", "import_react", "import_react_i18next", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "t", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "t", "import_dayjs", "import_jsx_dev_runtime", "Text", "Title", "t", "dayjs", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_antd", "import_jsx_dev_runtime", "useToken", "require", "import_react", "import_jsx_dev_runtime", "Text", "Title", "useToken", "t", "userGame", "m", "g", "modalProps", "gameId", "defaultMode", "mode", "import_react", "import_antd", "import_jsx_dev_runtime", "import_react", "import_antd", "import_jsx_dev_runtime", "useToken", "transformMembers", "import_antd", "import_icons", "import_react_i18next", "import_dayjs", "import_react", "import_jsx_dev_runtime", "t", "data", "dayjs", "import_react", "import_antd", "import_icons", "import_lodash", "import_react_i18next", "import_dayjs", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "useToken", "Countdown", "Text", "t", "dayjs", "v", "import_react", "import_antd", "import_icons", "import_react_i18next", "import_jsx_dev_runtime", "Text", "useToken", "t", "import_antd", "import_react", "import_jsx_dev_runtime", "m", "transformMembers", "import_react", "import_antd", "import_icons", "import_jsx_dev_runtime", "Text", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_jsx_dev_runtime", "Text", "Title", "t", "userGame", "import_antd", "import_react", "import_react_i18next", "import_jsx_dev_runtime", "Title", "t", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "Text", "Title", "t", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "Text", "Title", "t", "import_react_i18next", "import_antd", "import_jsx_dev_runtime", "Text", "Title", "t", "import_lucide_react", "import_jsx_dev_runtime", "Title", "useToken", "t", "modalProps", "import_lodash", "import_jsx_dev_runtime", "Text", "Title", "loader", "url", "meta", "t", "modalProps", "v", "Title", "Text", "loader", "import_node", "import_jsx_dev_runtime", "action", "loader", "import_react", "import_node", "import_react_i18next", "import_antd", "import_icons", "import_lucide_react", "import_jsx_dev_runtime", "Text", "Title", "loader", "action", "modalProps", "t", "action", "loader", "meta", "import_react", "import_node", "import_lodash", "import_antd", "import_icons", "import_react_i18next", "import_jwt_decode", "import_jsx_dev_runtime", "useToken", "Text", "Title", "loader", "jwt_decode", "action", "meta", "tournament", "t", "useToken", "deleteTournament", "Text", "modalProps", "modal", "teamModal", "Title", "action", "loader", "import_react", "import_react_i18next", "import_node", "import_antd", "import_jsx_dev_runtime", "Title", "loader", "action", "tournament", "t", "action", "import_node", "action", "loader", "import_node", "loader", "url", "loader", "import_node", "loader", "url", "action", "import_node", "action", "cookie", "meta", "import_react", "import_lodash", "import_jsx_dev_runtime", "meta", "WebboardSingle", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "me", "WebboardSingle", "webboard", "meta", "action", "loader", "import_node", "import_antd", "import_react", "import_react", "import_jsx_dev_runtime", "loader", "action", "webboard", "action", "import_node", "action", "import_react", "import_jsx_dev_runtime", "action", "loader", "import_react", "import_node", "import_antd", "import_react", "import_react_i18next", "import_antd", "import_icons", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "useToken", "t", "import_react_i18next", "import_antd", "import_icons", "import_jsx_dev_runtime", "t", "import_antd", "import_jsx_dev_runtime", "import_react", "import_react_i18next", "import_antd", "import_lucide_react", "import_jsx_dev_runtime", "Text", "Title", "useToken", "t", "a", "b", "import_react_i18next", "import_lodash", "import_jsx_dev_runtime", "loader", "url", "allLikeByUser", "defaultGame", "action", "t", "modalProps", "action", "import_node", "action", "action", "import_node", "import_lodash", "import_base64_arraybuffer", "action", "action", "import_node", "import_lodash", "action", "loader", "import_node", "loader", "url", "loader", "import_react", "import_react_i18next", "import_node", "import_antd", "import_lodash", "import_jsx_dev_runtime", "Title", "loader", "url", "reactionOptions", "t", "v", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "reactionOptions", "action", "import_node", "action", "meta", "import_antd", "import_react", "import_jsx_dev_runtime", "meta", "action", "import_node", "import_react", "import_antd", "import_icons", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "action", "t", "Settings", "loader", "import_react_i18next", "import_react", "import_antd", "import_lucide_react", "import_jsx_dev_runtime", "Title", "loader", "Settings", "t", "import_antd", "import_icons", "import_react_i18next", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "Text", "Title", "t", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "loader", "import_node", "import_jsx_dev_runtime", "import_react", "import_react_i18next", "import_antd", "import_antd", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "t", "loader", "import_node", "import_antd", "import_react_i18next", "import_jsx_dev_runtime", "Text", "Title", "t", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "reactionOptions", "loader", "import_react", "import_node", "import_remix_utils", "import_antd", "import_jsx_dev_runtime", "loader", "me"]
}
