{
  "version": 3,
  "sources": ["../../../app/routes/_app.webboards._index.tsx", "../../../app/components/pages/Webboard/WebboardIndexSlider.tsx"],
  "sourcesContent": ["import { useCallback, useContext, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigate,\n  useNavigation,\n  useRevalidator,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Affix, Col, Row, Skeleton, Typography, notification } from \"antd\";\nimport * as APIServer from \"~/api\";\nimport {\n  IndexFilter,\n  Loading,\n  Media,\n  OverlayBg,\n  Pagination,\n  TiltButton,\n} from \"~/components/common\";\nimport {\n  WebboardIndexHeader,\n  WebboardIndexSlider,\n  WebboardLists,\n  WebboardTags,\n} from \"~/components/pages/Webboard\";\nimport { debounce, isEmpty, isNil, omitBy } from \"lodash\";\nimport { convertToObjectWithArrays, resetFetcher } from \"~/utils/helper\";\nimport { AuthContext } from \"~/contexts\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nconst { Text } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let toQuerySearchParams = convertToObjectWithArrays(searchParams, [\n    \"rooms\",\n    \"games\",\n  ]);\n  let webboards: any;\n  let featuredWebboards: any[] = [];\n  const me = session.get(\"me\");\n  let webboardRes: any;\n  let featuredWebboardRes: any;\n\n  try {\n    if (me) {\n      webboardRes = await APIServer.clientFromSession(session).request(\n        APIServer.getWebboards(toQuerySearchParams)\n      );\n      featuredWebboardRes = await APIServer.clientFromSession(session).request(\n        APIServer.getWebboards({ featured: true })\n      );\n    } else {\n      webboardRes = await APIServer.clientFromSession().request(\n        APIServer.getWebboards(toQuerySearchParams)\n      );\n      featuredWebboardRes = await APIServer.clientFromSession().request(\n        APIServer.getWebboards({ featured: true })\n      );\n    }\n\n    if (webboardRes.data) {\n      webboards = webboardRes.data;\n    }\n    if (featuredWebboardRes.data) {\n      featuredWebboards = featuredWebboardRes.data;\n    }\n  } catch (e) {\n    console.log(\"webboards index error\", e);\n  }\n\n  return json(\n    { searchParams, featuredWebboards, webboards },\n    {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n\nexport default function WebboardIndex() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.webboards\");\n  const revalidator = useRevalidator();\n  const { searchParams, featuredWebboards, webboards } = useLoaderData();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const { games, rooms, reactionOptions, tags } = routeLoader;\n  const [api, contextHolder] = notification.useNotification();\n\n  const filters = [\n    {\n      type: \"tilt-button\",\n      name: \"rooms\",\n      title: t(\"select room\"),\n      options: rooms.map((room: any) => ({\n        label: t(room.nameEn),\n        value: room.id,\n      })),\n    },\n    {\n      type: \"avatar\",\n      name: \"games\",\n      title: t(\"select game\"),\n      options:\n        games.length > 0\n          ? games.map((game: any) => ({\n              label: game.name,\n              value: game.id,\n              image: game.iconUrl,\n            }))\n          : [],\n    },\n  ];\n\n  const handleFilter = useCallback(\n    (name: string, value: string | number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (searchParams && searchParams[name]) {\n        const values = searchParams[name].split(\",\");\n        const containedIndex = values.indexOf(`${value}`);\n        if (containedIndex > -1) {\n          values.splice(containedIndex, 1);\n        } else {\n          values.push(value.toString());\n        }\n        if (values.length) {\n          newSearchParams[name] = values.join(\",\");\n        } else {\n          delete newSearchParams[name];\n        }\n      } else {\n        newSearchParams[name] = `${value}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  const handleDebounceFilter = useMemo(\n    () => debounce(handleFilter, 300),\n    [handleFilter]\n  );\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-webboard\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <div style={{ paddingBlock: 30 }}>\n      {featuredWebboards && featuredWebboards.length > 0 && (\n        <WebboardIndexSlider data={featuredWebboards} />\n      )}\n      <div\n        style={{\n          paddingInline: \"3.5%\",\n          paddingBlock: 20,\n          maxWidth: 1440,\n          marginInline: \"auto\",\n        }}\n      >\n        <Row gutter={[30, 10]}>\n          <Col span={24} md={{ span: 6, order: 0 }}>\n            <Affix offsetTop={80}>\n              <div\n                className=\"hide-scrollbar\"\n                style={{\n                  maxHeight: \"calc(100vh - 60px)\",\n                  overflowY: \"auto\",\n                }}\n              >\n                <IndexFilter\n                  values={searchParams}\n                  onFilterClicked={handleDebounceFilter}\n                  filters={filters}\n                  mobileAppendChildren={\n                    <WebboardTags data={tags} fetcher={fetcher} mobileStyle />\n                  }\n                />\n              </div>\n            </Affix>\n          </Col>\n          <Col span={24} md={{ span: 6, order: 2 }}>\n            <Media greaterThan=\"sm\">\n              <Affix offsetTop={80}>\n                <div>\n                  <WebboardTags data={tags} fetcher={fetcher} />\n                </div>\n              </Affix>\n            </Media>\n          </Col>\n          <Col span={24} md={{ span: 12, order: 1 }}>\n            <WebboardIndexHeader\n              fetcher={fetcher}\n              searchParams={searchParams}\n              submit={submit}\n            >\n              <TiltButton\n                color=\"primary\"\n                onClick={() =>\n                  user ? navigate(\"/webboards/new\") : openLoginModal()\n                }\n              >\n                <Text>{t(\"new post\")}</Text>\n              </TiltButton>\n            </WebboardIndexHeader>\n            <div style={{ marginTop: 30 }}>\n              {navigation.state === \"loading\" &&\n              navigation.location.pathname === location.pathname ? (\n                <Skeleton active />\n              ) : (\n                <>\n                  <WebboardLists\n                    data={webboards.items}\n                    fetcher={fetcher}\n                    reactionOptions={reactionOptions}\n                  />\n                  <Pagination\n                    currentPage={webboards.page}\n                    totalPages={webboards.totalPages}\n                    onPageClicked={handleChangePage}\n                  />\n                </>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </div>\n      {contextHolder}\n      {navigation.state === \"loading\" && (\n        <OverlayBg style={{ position: \"fixed\", zIndex: 100 }} opacity={0.7}>\n          <Loading />\n        </OverlayBg>\n      )}\n    </div>\n  );\n}\n", "import { Link, useMatches } from \"@remix-run/react\";\nimport { Card, Col, Row, Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { Author, OverlayBg } from \"~/components/common\";\nconst { Title } = Typography;\n\ninterface WebboardIndexSliderProps {\n  data: any[];\n}\n\nexport function WebboardIndexSlider(props: WebboardIndexSliderProps) {\n  const { data } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n\n  return (\n    <Row\n      className=\"hide-scrollbar\"\n      style={{\n        position: \"relative\",\n        paddingBlock: 20,\n        paddingInline: \"3.5%\",\n        overflowX: \"auto\",\n      }}\n      gutter={10}\n      wrap={false}\n    >\n      {data.map((webboard: any) => (\n        <Col\n          span={12}\n          md={8}\n          lg={6}\n          xl={4}\n          xxl={4}\n          key={webboard.id}\n          style={{ position: \"relative\" }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n              paddingBottom: \"120%\",\n            }}\n          >\n            <Link to={`/webboards/${webboard.id}`}>\n              <Card\n                bordered={false}\n                style={{\n                  position: \"absolute\",\n                  display: \"flex\",\n                  top: 0,\n                  left: 0,\n                  height: \"100%\",\n                  width: \"100%\",\n                  borderRadius: 12,\n                  backgroundImage: `url(${\n                    webboard.thumbnailImage\n                      ? `${cdnUrl}/${webboard.thumbnailImage}`\n                      : \"/image/CTRLG-logo-banner.jpg\"\n                  })`,\n                  overflow: \"hidden\",\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center\",\n                }}\n                bodyStyle={{\n                  display: \"flex\",\n                  flex: \"auto\",\n                  paddingBottom: 20,\n                  alignItems: \"end\",\n                }}\n              >\n                <OverlayBg />\n                <Space\n                  direction=\"vertical\"\n                  size={10}\n                  style={{ position: \"relative\", color: \"#fff\" }}\n                >\n                  <Title\n                    level={3}\n                    className=\"text-with-ellipsis\"\n                    style={{ color: \"inherit\", margin: 0 }}\n                  >\n                    {webboard.title}\n                  </Title>\n                  <Author\n                    avatarSize={24}\n                    fontSize={14}\n                    displayImage={\n                      webboard.anonymous\n                        ? \"/image/avatar-anonymous.jpg\"\n                        : `${cdnUrl}/${webboard.author.displayImage}`\n                    }\n                  >\n                    {webboard.anonymous\n                      ? t(\"anonymous\")\n                      : webboard.author.displayName}\n                  </Author>\n                </Space>\n              </Card>\n            </Link>\n          </div>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
