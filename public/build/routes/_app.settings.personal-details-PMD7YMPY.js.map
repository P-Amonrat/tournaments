{
  "version": 3,
  "sources": ["../../../app/routes/_app.settings.personal-details.tsx"],
  "sourcesContent": ["import { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport {\n  Button,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Modal,\n  Result,\n  Row,\n  Space,\n  Typography,\n  notification,\n} from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { TextEditor, TiltButton } from \"~/components/common\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n  redirect,\n} from \"@remix-run/node\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { ArrowUpDown, Trash2 } from \"lucide-react\";\nconst { Text, Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  let personalDetails = [];\n  try {\n    const personalDetailsRes = await APIServer.clientFromSession(\n      session\n    ).request(APIServer.getPersonalDetails());\n    if (personalDetailsRes.data) {\n      personalDetails = personalDetailsRes.data;\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({ personalDetails });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = JSON.parse(entries.data);\n  const uuid = entries.uuid;\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n        return redirect(`/users/${uuid}`, {\n          headers: {\n            \"Set-Cookie\": await commitSession(session),\n          },\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n\n      break;\n    case \"sorting\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully sorted personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\n// Modal properties\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n};\n\nexport default function SettingsPersonalDetails() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { personalDetails } = useLoaderData();\n  const [textEditorLoading, setTextEditorLoading] = useState(true);\n  const [messageApi, contextHolder] = notification.useNotification();\n\n  const { scheme } = useContext(AppContext);\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  const [sortingModal, setSortingModal] = useState<boolean>(false);\n  const { user } = useContext(AuthContext);\n\n  // State to manage the list of personal details\n  const [personalDetailsList, setPersonalDetailsList] = useState(\n    personalDetails?.details?.length > 0\n      ? personalDetails.details.map((detail: any, index: number) => ({\n          title: detail.title,\n          detail: detail.detail,\n          id: index + 1,\n        }))\n      : [\n          {\n            id: 1,\n            title: \"\",\n            detail: \"\",\n          },\n        ]\n  );\n\n  const handleToggleSortingMode = () => {\n    setSortingModal(!sortingModal);\n  };\n\n  const onChangeSortItems = (items: any) => {\n    setPersonalDetailsList(items);\n  };\n\n  const onCloseSortingModal = () => {\n    setSortingModal(false);\n  };\n\n  const handleSubmitSorting = () => {\n    setSortingModal(false);\n    form.setFieldsValue({ personalDetails: personalDetailsList });\n    const newValues = { personalDetails: personalDetailsList };\n    submit(\n      {\n        data: JSON.stringify(newValues),\n        action: \"sorting\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  const handleRemove = (index: any) => {\n    setPersonalDetailsList((prevList: any) =>\n      prevList.filter((_: any, i: any) => i !== index)\n    );\n  };\n\n  const handlePersonalDetails = (values: any) => {\n    submit(\n      {\n        data: JSON.stringify(values),\n        uuid: user.uuid,\n        action: \"update\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Space size={10} style={{ marginBottom: 20 }}>\n        <Title level={2} style={{ margin: 0 }}>\n          {t(\"personal details\")}\n        </Title>\n        {personalDetails?.details?.length > 0 && (\n          <Button\n            type=\"text\"\n            style={{\n              marginTop: 2,\n              marginRight: 10,\n              fontWeight: 600,\n              textAlign: \"center\",\n            }}\n            onClick={handleToggleSortingMode}\n          >\n            <ArrowUpDown\n              style={{\n                color: \"#7C6FF6\",\n                fontSize: \"1.2em\",\n                marginRight: \"5px\",\n              }}\n            />\n            {t(\"sort order\")}\n          </Button>\n        )}\n      </Space>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"dynamic_form_complex\"\n        initialValues={{ personalDetails: personalDetailsList }}\n        onFinish={handlePersonalDetails}\n      >\n        <Form.List name=\"personalDetails\">\n          {(fields, { add, remove }) => (\n            <div\n              style={{\n                display: \"flex\",\n                rowGap: 16,\n                flexDirection: \"column\",\n              }}\n            >\n              {fields.map((field, index) => (\n                <div key={field.key}>\n                  <Space\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    <Text style={{ fontWeight: 600 }} className=\"required\">\n                      {t(\"title personal details\")}\n                    </Text>\n                    <div\n                      onClick={() => {\n                        handleRemove(index);\n                        remove(field.name); // Update the form state\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <Space style={{ color: \"#D61515\" }}>\n                        <Trash2 />\n                        <Text\n                          style={{\n                            fontWeight: 600,\n                            fontSize: \"inherit\",\n                            color: \"#D61515\",\n                          }}\n                        >\n                          {t(\"delete detail box\")}\n                        </Text>\n                      </Space>\n                    </div>\n                  </Space>\n\n                  <Form.Item\n                    name={[field.name, \"title\"]}\n                    rules={[\n                      () => ({\n                        validator(_, value) {\n                          if (!value || value === \"\") {\n                            const message = t(\n                              \"please input title personal detail\"\n                            );\n                            return Promise.reject(new Error(message));\n                          }\n                          if (value.length > 30) {\n                            const message = t(\n                              \"title must contain only 30 charaters\"\n                            );\n                            return Promise.reject(new Error(message));\n                          }\n                          return Promise.resolve();\n                        },\n                      }),\n                    ]}\n                  >\n                    <Input\n                      count={{\n                        show: true,\n                        max: 30,\n                      }}\n                    />\n                  </Form.Item>\n\n                  {!textEditorLoading ? (\n                    <>\n                      <Text\n                        style={{\n                          fontWeight: 600,\n                          fontSize: \"inherit\",\n                        }}\n                        className=\"required\"\n                      >\n                        {t(\"detail personal details\")}\n                      </Text>\n                      <Form.Item\n                        name={[field.name, \"detail\"]}\n                        rules={[\n                          { required: true, message: t(\"please input detail\") },\n                        ]}\n                      >\n                        <TextEditor\n                          id={`detail${index}`}\n                          initialValues={personalDetailsList[index]?.detail}\n                          fetcher={fetcher}\n                          onChange={(values) =>\n                            form.setFieldValue(\n                              `personalDetails[${index}].detail`,\n                              values\n                            )\n                          }\n                        />\n                      </Form.Item>\n                    </>\n                  ) : (\n                    <Result\n                      icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n                    />\n                  )}\n                </div>\n              ))}\n\n              <TiltButton\n                color={`${scheme}-base`}\n                onClick={() => {\n                  if (fields.length < 3) {\n                    add();\n                  } else {\n                    messageApi.open({\n                      type: \"error\",\n                      message: t(\"you can only add up to 3 personal details\"),\n                      duration: 5,\n                      placement: \"bottomRight\",\n                    });\n                  }\n                }}\n                style={{ marginTop: 20 }}\n              >\n                + {t(\"Add Item\")}\n              </TiltButton>\n            </div>\n          )}\n        </Form.List>\n\n        <TiltButton\n          color=\"primary\"\n          onClick={form.submit}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"save\")}\n        </TiltButton>\n      </Form>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingModal(false)}\n        open={sortingModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={personalDetailsList}\n            onChange={onChangeSortItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">\n                    {item.rankingGame?.name\n                      ? item.rankingGame.name\n                      : item.title}\n                  </TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onCloseSortingModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      {contextHolder}\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["_a"]
}
