{
  "version": 3,
  "sources": ["../../../app/routes/_app.settings.personal-detailsOriginal.tsx"],
  "sourcesContent": ["import { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { Form, Input, Result, Space, Typography } from \"antd\";\nimport { LoadingOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { TextEditor, TiltButton } from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n} from \"@remix-run/node\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nconst { Text, Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  let personalDetails: any[] = [];\n  try {\n    const personalDetailsRes = await APIServer.clientFromSession(\n      session\n    ).request(APIServer.getPersonalDetails());\n    if (personalDetailsRes.data) {\n      personalDetails = personalDetailsRes.data;\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({ personalDetails });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = JSON.parse(entries.data);\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        console.log(\"e\", e.response.data);\n\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\nexport default function SettingsPersonalDetails() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { personalDetails } = useLoaderData();\n  const [textEditorLoading, setTextEditorLoading] = useState<boolean>(true);\n  const { scheme } = useContext(AppContext);\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  // const action = personalDetails[0]?.title ? \"update\" : \"update\";\n  const action = \"update\";\n\n  const initialValues = personalDetails\n    ? { personalDetails: personalDetails.details }\n    : {\n        personalDetails: [\n          {\n            id: 1,\n            title: \"12312\",\n            description: \"\",\n            createdAt: \"2024-04-25T15:51:54.467Z\",\n          },\n        ],\n      };\n\n  const handlePersonalDetails = (values: any) => {\n    submit(\n      {\n        data: JSON.stringify(values),\n        action: action,\n      },\n      { method: \"post\" }\n    );\n  };\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Space size={10} direction=\"vertical\" style={{ marginBottom: 20 }}>\n        <Title level={2} style={{ margin: 0 }}>\n          {t(\"personal details\")}\n        </Title>\n      </Space>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"dynamic_form_complex\"\n        style={{\n          maxWidth: 600,\n        }}\n        autoComplete=\"off\"\n        initialValues={initialValues}\n        onFinish={handlePersonalDetails}\n      >\n        <Form.List name=\"personalDetails\">\n          {(fields, { add, remove }) => (\n            <div\n              style={{\n                display: \"flex\",\n                rowGap: 16,\n                flexDirection: \"column\",\n              }}\n            >\n              {fields.map((field, index: number) => (\n                // <Card\n                //   size=\"small\"\n                //   title={`Item ${field.name + 1}`}\n                //   key={field.key}\n                //   bordered={false}\n                //   extra={\n                // <CloseOutlined\n                //   onClick={() => {\n                //     remove(field.name);\n                //   }}\n                // />\n                //   }\n                // >\n                <div key={field.key}>\n                  <Form.Item\n                    label=\"id\"\n                    name={[\"id\"]}\n                    style={{ display: \"none\" }}\n                  />\n\n                  <Space\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    <Text\n                      style={{ fontWeight: 600, fontSize: \"inherit\" }}\n                      className=\"required\"\n                    >\n                      {t(\"title personal details\")}\n                    </Text>\n                    <div\n                      onClick={() => {\n                        remove(field.name);\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {index === 0 ? null : (\n                        <Space style={{ color: \"#D61515\" }}>\n                          <DeleteOutlined />\n                          <Text\n                            style={{\n                              fontWeight: 600,\n                              fontSize: \"inherit\",\n                              color: \"#D61515\",\n                            }}\n                          >\n                            {t(\"delete detail box\")}\n                          </Text>\n                        </Space>\n                      )}\n                    </div>\n                  </Space>\n                  <Form.Item\n                    key=\"title\"\n                    name={[field.name, \"title\"]} // Use the correct name path\n                    rules={[\n                      {\n                        required: true,\n                        message: t(\"please input title\"),\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  {!textEditorLoading ? (\n                    <>\n                      <Text\n                        style={{\n                          fontWeight: 600,\n                          fontSize: \"inherit\",\n                        }}\n                        className=\"required\"\n                      >\n                        {t(\"detail personal details\")}\n                      </Text>\n                      <Space\n                        size={10}\n                        direction=\"vertical\"\n                        style={{ display: \"flex\", marginTop: 10 }}\n                      >\n                        <Form.Item\n                          key=\"detail\"\n                          name={[field.name, \"detail\"]} // Use the correct name path\n                          rules={[\n                            {\n                              required: true,\n                              message: t(\"please input detail\"),\n                            },\n                          ]}\n                        >\n                          <TextEditor\n                            id=\"detail\"\n                            initialValues={\n                              initialValues?.personalDetails[index]?.detail\n                            }\n                            fetcher={fetcher}\n                            onChange={(values: any) =>\n                              form.setFieldValue(\"detail\", values)\n                            }\n                          />\n                        </Form.Item>\n                      </Space>\n                    </>\n                  ) : (\n                    <Result\n                      icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n                    />\n                  )}\n                </div>\n              ))}\n\n              <TiltButton\n                color={`${scheme}-base`}\n                onClick={() => add()}\n                style={{ marginTop: 20 }}\n              >\n                + {t(\"Add Item\")}\n              </TiltButton>\n            </div>\n          )}\n        </Form.List>\n\n        <Form.Item noStyle shouldUpdate>\n          {() => (\n            <Typography>\n              <pre>{JSON.stringify(form.getFieldsValue(), null, 2)}</pre>\n            </Typography>\n          )}\n        </Form.Item>\n      </Form>\n      <TiltButton\n        color=\"primary\"\n        onClick={form.submit}\n        style={{ marginTop: 20 }}\n      >\n        {t(\"save\")}\n      </TiltButton>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
