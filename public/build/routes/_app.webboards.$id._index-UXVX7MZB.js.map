{
  "version": 3,
  "sources": ["../../../app/routes/_app.webboards.$id._index.tsx"],
  "sourcesContent": ["import { json, type LoaderFunction } from \"@remix-run/node\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigate,\n  useNavigation,\n  useRevalidator,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Element, scroller } from \"react-scroll\";\nimport { Affix, Card, Col, notification, Row, Skeleton } from \"antd\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport {\n  BackButton,\n  IndexFilter,\n  KycWizard,\n  Media,\n  Pagination,\n} from \"~/components/common\";\nimport {\n  WebboardSingleCommentBox,\n  WebboardSingleComments,\n  WebboardSinglePost,\n  WebboardTags,\n} from \"~/components/pages/Webboard\";\nimport * as APIServer from \"~/api\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  const { id } = params;\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  const backToIndex = session.get(\"backToIndex\");\n  const me = session.get(\"me\");\n  let comments: any = null;\n  let commentRes: any;\n\n  if (id) {\n    try {\n      if (me) {\n        commentRes = await APIServer.clientFromSession(session).request(\n          APIServer.getCommentsFromWebboardId(id, searchParams)\n        );\n      } else {\n        commentRes = await APIServer.clientFromSession().request(\n          APIServer.getCommentsFromWebboardId(id, searchParams)\n        );\n      }\n\n      if (commentRes && commentRes.data) {\n        comments = commentRes.data;\n      }\n    } catch (e) {\n      console.log(\"webboard single comment error\", e);\n    }\n  }\n\n  await commitSession(session);\n  return json({ id, backToIndex, comments, searchParams });\n};\n\nexport default function WebboardSingle() {\n  const webboardRouteLoader = useRouteLoaderData(\"routes/_app.webboards\");\n  const routeLoader = useRouteLoaderData(\"routes/_app.webboards.$id\");\n  const { id, backToIndex, comments, searchParams } = useLoaderData();\n  const { t } = useTranslation();\n  const navigation = useNavigation();\n  const submit = useSubmit();\n  const navigate = useNavigate();\n  const fetcher = useFetcher();\n  const location = useLocation();\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n  const revalidator = useRevalidator();\n  const { webboard } = routeLoader;\n  const { games, rooms, reactionOptions, tags } = webboardRouteLoader;\n  const [api, contextHolder] = notification.useNotification();\n  const [quotedComment, setQuotedComment] = useState<any>(null);\n  const isBuySell =\n    webboard &&\n    webboard.postRooms.find((r: any) => r.room.nameEn === \"buy sell\");\n\n  const filters = [\n    {\n      type: \"tilt-button\",\n      name: \"rooms\",\n      title: t(\"select room\"),\n      options: rooms.map((room: any) => ({\n        label: t(room.nameEn),\n        value: room.id,\n      })),\n    },\n    {\n      type: \"avatar\",\n      name: \"games\",\n      title: t(\"select game\"),\n      options: games.map((game: any) => ({\n        label: game.name,\n        value: game.id,\n        image: game.iconUrl,\n      })),\n    },\n  ];\n\n  const navigateToIndex = (name: string, value: string | number) => {\n    navigate(`/webboards?${name}=${value}`);\n  };\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n\n      const searchParamsString = new URLSearchParams(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v))\n      ).toString();\n\n      const pathWithoutHash = `${location.pathname}?${searchParamsString}`;\n\n      // submit(\n      //   omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n      //   { method: \"get\", preventScrollReset: true }\n      // );\n\n      navigate(pathWithoutHash, { preventScrollReset: true });\n    },\n    [searchParams, submit]\n  );\n\n  const handleReplyComment = (comment: any) => {\n    setQuotedComment(comment);\n    scroller.scrollTo(\"comment-box\", {\n      duration: 1000,\n      delay: 100,\n      smooth: true,\n      offset: -80,\n    });\n  };\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (\n        fetcher.data.success &&\n        fetcher.data.success === \"create-comment\" &&\n        `${fetcher.data.webboardId}` === `${id}`\n      ) {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        setQuotedComment(null);\n        api.open({\n          message: t(\"Successfully commented\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, id, revalidator]);\n\n  useEffect(() => {\n    if (location.hash && location.hash.length > 0) {\n      let commentId: string = \"\";\n      commentId = location.hash.replace(\"#comment-\", \"comment-\");\n      if (commentId.length > 0) {\n        scroller.scrollTo(commentId, {\n          duration: 1000,\n          delay: 100,\n          smooth: true,\n          offset: -80,\n        });\n        // setTimeout(() => {\n        //   navigate(location.pathname, { preventScrollReset: true });\n        // }, 3000);\n      }\n    }\n  }, [location]);\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Row gutter={[30, 10]}>\n        <Col span={24} md={{ span: 6, order: 0 }}>\n          <Affix offsetTop={80}>\n            <div\n              className=\"hide-scrollbar\"\n              style={{\n                maxHeight: \"calc(100vh - 60px)\",\n                overflowY: \"auto\",\n              }}\n            >\n              <IndexFilter\n                // alwaysActive\n                onFilterClicked={navigateToIndex}\n                filters={filters}\n                mobileAppendChildren={\n                  <WebboardTags data={tags} fetcher={fetcher} mobileStyle />\n                }\n              />\n            </div>\n          </Affix>\n        </Col>\n        <Col span={24} md={{ span: 6, order: 2 }}>\n          <Media greaterThan=\"sm\">\n            <Affix offsetTop={80}>\n              <div>\n                <WebboardTags data={tags} fetcher={fetcher} />\n              </div>\n            </Affix>\n          </Media>\n        </Col>\n        <Col span={24} md={{ span: 12, order: 1 }}>\n          <BackButton\n            // navigateTo={backToIndex ? -2 : null}\n            navigateTo={backToIndex ? -2 : \"/webboards\"}\n            fallbackUrl=\"/webboards\"\n          />\n          <WebboardSinglePost\n            data={webboard}\n            fetcher={fetcher}\n            reactionOptions={reactionOptions}\n          />\n          {navigation.state === \"loading\" &&\n          navigation.location.pathname === location.pathname ? (\n            <Card>\n              <Skeleton active />\n            </Card>\n          ) : comments.items.length > 0 ? (\n            <WebboardSingleComments\n              data={comments.items}\n              fetcher={fetcher}\n              reactionOptions={reactionOptions}\n              onReplyComment={handleReplyComment}\n            />\n          ) : (\n            <></>\n          )}\n          {user && (\n            <Element name=\"comment-box\">\n              <Card\n                bordered={false}\n                style={{\n                  marginBottom: 20,\n                  borderRadius: 10,\n                  boxShadow:\n                    scheme === \"dark\"\n                      ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n                      : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n                }}\n              >\n                {!user.kycLevel && isBuySell ? (\n                  <KycWizard />\n                ) : (\n                  <WebboardSingleCommentBox\n                    disabled={revalidator.state !== \"idle\"}\n                    fetcher={fetcher}\n                    postId={id}\n                    refComment={quotedComment}\n                  />\n                )}\n              </Card>\n            </Element>\n          )}\n          {comments.totalPages > 1 && (\n            <Pagination\n              currentPage={comments.page}\n              totalPages={comments.totalPages}\n              onPageClicked={handleChangePage}\n            />\n          )}\n        </Col>\n      </Row>\n      {contextHolder}\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
