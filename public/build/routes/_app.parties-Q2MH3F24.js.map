{
  "version": 3,
  "sources": ["../../../app/routes/_app.parties.tsx"],
  "sourcesContent": ["import { json, V2_MetaFunction, type LoaderFunction } from \"@remix-run/node\";\nimport { dummyGames, dummyParties } from \"~/components/common\";\nimport * as APIServer from \"~/api\";\nimport { Outlet } from \"@remix-run/react\";\nimport { getSessionFromRequest, isAuthenticated } from \"~/session.server\";\n\nlet myParty: any;\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  let games: any[] = dummyGames; // FIXME: remove this out;\n  let myParties: any[] = [];\n\n  try {\n    const gameRes = await APIServer.clientFromSession(session).request(\n      APIServer.getGamesWithRanksAndModes()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n    }\n\n    const isAuthened = await isAuthenticated(request);\n    if (isAuthened) {\n      const myPartiesRes = await APIServer.clientFromSession(session).request(\n        APIServer.getMyActiveParties()\n      );\n      if (myPartiesRes.data) {\n        myParties = myPartiesRes.data;\n        myParty = myParties[0];\n      }\n    }\n  } catch (e) {\n    // FIXME: remove this out\n    myParties = [...dummyParties].splice(0, 1);\n    games = dummyGames;\n  }\n\n  return json({\n    games,\n    myParties,\n    hasParty: myParties && myParties.length > 0,\n  });\n};\n\nexport { myParty };\n\n// export const meta: V2_MetaFunction = () => {\n//   return [\n//     { title: \"CTRL G\" },\n//     {\n//       name: \"description\",\n//       content: \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E15\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E08\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n//     },\n//     { charSet: \"utf-8\" },\n//     { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n//     { property: \"og:title\", content: \"\u0E0A\u0E27\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E21\u0E32\u0E40\u0E25\u0E48\u0E19 | Ctrlg.gg\" },\n//     {\n//       property: \"og:image\",\n//       content: `https://d2007awoau332v.cloudfront.net/assets/webboard.jpg`,\n//     },\n//     {\n//       property: \"og:image:width\",\n//       content: \"200\",\n//     },\n//     {\n//       property: \"og:image:height\",\n//       content: \"200\",\n//     },\n//     {\n//       property: \"og:description\",\n//       content: \"\u0E2B\u0E32\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E19\u0E40\u0E25\u0E48\u0E19\u0E40\u0E01\u0E21\u0E44\u0E14\u0E49\u0E07\u0E48\u0E32\u0E22 \u0E46 \u0E15\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E23\u0E1A\u0E08\u0E1A\u0E17\u0E35\u0E48 CTRL G\",\n//     },\n//   ];\n// };\n\nexport default function Parties() {\n  return <Outlet />;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA,kBAA2D;AAI3D,qBAAuD;AAwE9C;AADM,SAAR,UAA2B;AAChC,SAAO,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,SAAQ;AACjB;",
  "names": []
}
