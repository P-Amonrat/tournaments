{
  "version": 3,
  "sources": ["../../../app/routes/_app.webboards.$id.edit.tsx"],
  "sourcesContent": ["import {\n  redirect,\n  type ActionFunction,\n  type LoaderFunction,\n  json,\n} from \"@remix-run/node\";\nimport { Affix, Col, Form, Row } from \"antd\";\nimport {\n  useFetcher,\n  useNavigation,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Media } from \"~/components/common\";\nimport { WebboardForm, WebboardTags } from \"~/components/pages/Webboard\";\nimport * as APIServer from \"~/api\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\n// import { parseAndConvert } from \"~/utils/helper\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  try {\n    return null;\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n  return null;\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  mustAuthenticated(request);\n  const { id } = params;\n  const session = await getSessionFromRequest(request);\n  const formData = await request.formData();\n  const data = formData.get(\"data\") as string;\n  const toSubmitData = JSON.parse(data);\n  let webboard: any = null;\n\n  if (id) {\n    try {\n      const webboardRes = await APIServer.clientFromSession(session).request(\n        APIServer.updateWebboard(id, toSubmitData)\n      );\n      if (webboardRes && webboardRes.data) {\n        webboard = webboardRes.data;\n      }\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: \"successfully update webboard\",\n      });\n    } catch (e: any) {\n      console.log(\"e\", e.response.data);\n\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: e.response.data.message,\n      });\n    }\n  }\n\n  if (webboard) {\n    session.flash(\"backToIndex\", true);\n    return redirect(`/webboards/${webboard.id}`, {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  } else {\n    return json(\n      { success: false },\n      {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      }\n    );\n  }\n};\n\nexport default function WebboardEdit() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.webboards.$id\");\n  const { webboard } = routeLoader;\n  const webboardRouteLoader = useRouteLoaderData(\"routes/_app.webboards\");\n  const { games, rooms, tags } = webboardRouteLoader;\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const [form] = Form.useForm();\n  const initialValues = {\n    ...webboard,\n    hasPoll: webboard.poll ? true : false,\n    roomIds: webboard.postRooms.map((postRoom: any) => postRoom.room.id),\n    gameIds: webboard.postGames.map((postGame: any) => postGame.game.id),\n    tags: webboard.postTags.map((postTag: any) => postTag.tag.name),\n  };\n  if (webboard.poll) {\n    initialValues.pollOptions = webboard.poll.options.map(\n      (option: any) => option.option\n    );\n  }\n  const navigation = useNavigation();\n  const navigationState = navigation.state;\n\n  const handleUpdateWebboard = (values: any) => {\n    const { roomIds, ...value } = values;\n    const newValues = {\n      ...value,\n      roomIds: values.roomIds ? values.roomIds : [6],\n    };\n    if (!newValues.hasPoll) {\n      delete newValues.pollOptions;\n    }\n    delete newValues.hasPoll;\n\n    submit(\n      {\n        data: JSON.stringify(newValues),\n      },\n      { method: \"put\" }\n    );\n  };\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Row gutter={[30, 10]}>\n        <Col span={24} md={{ span: 6, order: 1 }}>\n          <Media greaterThan=\"sm\">\n            <Affix offsetTop={80}>\n              <div>\n                <WebboardTags data={tags} fetcher={fetcher} />\n              </div>\n            </Affix>\n          </Media>\n        </Col>\n        <Col span={24} md={{ span: 18, order: 0 }}>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            onFinish={handleUpdateWebboard}\n            initialValues={initialValues}\n          >\n            <WebboardForm\n              editmode\n              fetcher={fetcher}\n              form={form}\n              games={games}\n              rooms={rooms}\n              tags={tags}\n              tournament={webboard.tournamentId}\n              navigationState={navigationState}\n            />\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kBAKO;AAWP,qBAIO;AAuHS;AAxDD,SAAR,eAAgC;AACrC,QAAM,cAAc,mBAAmB,2BAA2B;AAClE,QAAM,EAAE,SAAS,IAAI;AACrB,QAAM,sBAAsB,mBAAmB,uBAAuB;AACtE,QAAM,EAAE,OAAO,OAAO,KAAK,IAAI;AAC/B,QAAM,UAAU,WAAW;AAC3B,QAAM,SAAS,UAAU;AACzB,QAAM,CAAC,IAAI,IAAI,aAAK,QAAQ;AAC5B,QAAM,gBAAgB;AAAA,IACpB,GAAG;AAAA,IACH,SAAS,SAAS,OAAO,OAAO;AAAA,IAChC,SAAS,SAAS,UAAU,IAAI,CAAC,aAAkB,SAAS,KAAK,EAAE;AAAA,IACnE,SAAS,SAAS,UAAU,IAAI,CAAC,aAAkB,SAAS,KAAK,EAAE;AAAA,IACnE,MAAM,SAAS,SAAS,IAAI,CAAC,YAAiB,QAAQ,IAAI,IAAI;AAAA,EAChE;AACA,MAAI,SAAS,MAAM;AACjB,kBAAc,cAAc,SAAS,KAAK,QAAQ;AAAA,MAChD,CAAC,WAAgB,OAAO;AAAA,IAC1B;AAAA,EACF;AACA,QAAM,aAAa,cAAc;AACjC,QAAM,kBAAkB,WAAW;AAEnC,QAAM,uBAAuB,CAAC,WAAgB;AAC5C,UAAM,EAAE,SAAS,GAAG,MAAM,IAAI;AAC9B,UAAM,YAAY;AAAA,MAChB,GAAG;AAAA,MACH,SAAS,OAAO,UAAU,OAAO,UAAU,CAAC,CAAC;AAAA,IAC/C;AACA,QAAI,CAAC,UAAU,SAAS;AACtB,aAAO,UAAU;AAAA,IACnB;AACA,WAAO,UAAU;AAEjB;AAAA,MACE;AAAA,QACE,MAAM,KAAK,UAAU,SAAS;AAAA,MAChC;AAAA,MACA,EAAE,QAAQ,MAAM;AAAA,IAClB;AAAA,EACF;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,OAAO;AAAA,QACL,eAAe;AAAA,QACf,cAAc;AAAA,QACd,UAAU;AAAA,QACV,cAAc;AAAA,MAChB;AAAA,MAEA,6DAAC,eAAI,QAAQ,CAAC,IAAI,EAAE,GAClB;AAAA,2DAAC,eAAI,MAAM,IAAI,IAAI,EAAE,MAAM,GAAG,OAAO,EAAE,GACrC,6DAAC,SAAM,aAAY,MACjB,6DAAC,iBAAM,WAAW,IAChB,6DAAC,SACC,6DAAC,gBAAa,MAAM,MAAM,WAA1B;AAAA;AAAA;AAAA;AAAA,eAA4C,KAD9C;AAAA;AAAA;AAAA;AAAA,eAEA,KAHF;AAAA;AAAA;AAAA;AAAA,eAIA,KALF;AAAA;AAAA;AAAA;AAAA,eAMA,KAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QACA,mDAAC,eAAI,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI,OAAO,EAAE,GACtC;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA,QAAO;AAAA,YACP,UAAU;AAAA,YACV;AAAA,YAEA;AAAA,cAAC;AAAA;AAAA,gBACC,UAAQ;AAAA,gBACR;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,YAAY,SAAS;AAAA,gBACrB;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASA;AAAA;AAAA,UAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBA,KAjBF;AAAA;AAAA;AAAA;AAAA,eAkBA;AAAA,WA5BF;AAAA;AAAA;AAAA;AAAA,aA6BA;AAAA;AAAA,IArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsCA;AAEJ;",
  "names": []
}
