{
  "version": 3,
  "sources": ["../../../app/routes/_app.webboards.$id.tsx"],
  "sourcesContent": ["import {\n  json,\n  redirect,\n  type LoaderFunction,\n  type V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport * as APIServer from \"~/api\";\nimport { getSessionFromRequest } from \"~/session.server\";\n\nlet webboard: any = null;\nlet contentWithoutTags: string = \"\"; // Declare contentWithoutTags here\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  const { id } = params;\n  const me = session.get(\"me\");\n  let webboardRes: any;\n\n  if (id) {\n    try {\n      if (me) {\n        webboardRes = await APIServer.clientFromSession(session).request(\n          APIServer.getWebboard(id)\n        );\n      } else {\n        webboardRes = await APIServer.clientFromSession().request(\n          APIServer.getWebboard(id)\n        );\n      }\n      if (webboardRes && webboardRes.data) {\n        webboard = webboardRes.data;\n      }\n    } catch (e) {\n      console.log(\"webboards single error\", e);\n      return redirect(\"/webboards\");\n    }\n  }\n\n  return json({ webboard });\n};\n\nexport { webboard };\n\nexport default function WebboardSingle() {\n  const { webboard } = useLoaderData();\n  useEffect(() => {\n    // Create a temporary element when the component mounts\n    const tempElement = document.createElement(\"div\");\n    tempElement.innerHTML = webboard?.content || \"\";\n    contentWithoutTags = tempElement.textContent || \"\";\n  }, []); // Run only once after the component mounts\n\n  return <Outlet />;\n}\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\u0E41\u0E25\u0E01\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E04\u0E27\u0E32\u0E21\u0E23\u0E39\u0E49\u0E41\u0E25\u0E30\u0E02\u0E48\u0E32\u0E27\u0E2A\u0E32\u0E23\u0E08\u0E32\u0E01\u0E27\u0E07\u0E01\u0E32\u0E23\u0E40\u0E01\u0E21\u0E41\u0E25\u0E30\u0E27\u0E07\u0E01\u0E32\u0E23\u0E2D\u0E35\u0E2A\u0E1B\u0E2D\u0E23\u0E4C\u0E15\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    { property: \"og:title\", content: webboard?.title + \" | Ctrlg.gg\" },\n    {\n      property: \"og:image\",\n      content: webboard?.thumbnailImage\n        ? `https://d2007awoau332v.cloudfront.net/${webboard?.thumbnailImage}`\n        : \"https://d2007awoau332v.cloudfront.net/assets/webboard.jpg\",\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E1E\u0E39\u0E14\u0E04\u0E38\u0E22\u0E41\u0E25\u0E01\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E04\u0E27\u0E32\u0E21\u0E23\u0E39\u0E49\u0E41\u0E25\u0E30\u0E02\u0E48\u0E32\u0E27\u0E2A\u0E32\u0E23\u0E08\u0E32\u0E01\u0E27\u0E07\u0E01\u0E32\u0E23\u0E40\u0E01\u0E21\u0E41\u0E25\u0E30\u0E27\u0E07\u0E01\u0E32\u0E23\u0E2D\u0E35\u0E2A\u0E1B\u0E2D\u0E23\u0E4C\u0E15\",\n    },\n  ];\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,kBAKO;AAEP,IAAAA,gBAA0B;AAE1B,qBAAsC;AA6C7B;AA3CT,IAAI,WAAgB;AACpB,IAAI,qBAA6B;AAiClB,SAAR,iBAAkC;AACvC,QAAM,EAAE,UAAAC,UAAS,IAAI,cAAc;AACnC,+BAAU,MAAM;AAEd,UAAM,cAAc,SAAS,cAAc,KAAK;AAChD,gBAAY,aAAYA,aAAA,gBAAAA,UAAU,YAAW;AAC7C,yBAAqB,YAAY,eAAe;AAAA,EAClD,GAAG,CAAC,CAAC;AAEL,SAAO,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,SAAQ;AACjB;AAEO,IAAM,OAAwB,MAAM;AACzC,SAAO;AAAA,IACL,EAAE,OAAO,SAAS;AAAA,IAClB;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,EAAE,SAAS,QAAQ;AAAA,IACnB,EAAE,MAAM,YAAY,SAAS,uCAAuC;AAAA,IACpE,EAAE,UAAU,YAAY,UAAS,qCAAU,SAAQ,cAAc;AAAA,IACjE;AAAA,MACE,UAAU;AAAA,MACV,UAAS,qCAAU,kBACf,yCAAyC,qCAAU,mBACnD;AAAA,IACN;AAAA,IACA;AAAA,MACE,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,EACF;AACF;",
  "names": ["import_react", "webboard"]
}
