{
  "version": 3,
  "sources": ["../../../app/routes/_app.settings.my-achievement.tsx", "../../../app/components/pages/User/MyAchievementEntry.tsx", "../../../app/components/pages/User/MyArchievementEntryControl.tsx", "../../../app/components/pages/User/AchievementForm.tsx", "../../../app/components/pages/User/AchievementTitleForm.tsx"],
  "sourcesContent": ["import { useContext, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFetcher, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Modal,\n  Row,\n  Space,\n  Typography,\n  notification,\n} from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { TiltButton } from \"~/components/common\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport {\n  type LoaderFunction,\n  json,\n  type ActionFunction,\n  redirect,\n} from \"@remix-run/node\";\n\nimport * as APIServer from \"~/api\";\nimport {\n  commitSession,\n  getSessionFromRequest,\n  mustAuthenticated,\n} from \"~/session.server\";\nimport { MyAchievementEntry } from \"~/components/pages/User/MyAchievementEntry\";\nimport { AchievementForm } from \"~/components/pages/User/AchievementForm\";\nimport { AchievementTitleForm } from \"~/components/pages/User/AchievementTitleForm\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { ArrowUpDown, PenLine } from \"lucide-react\";\nconst { Title, Text } = Typography;\n\nlet defaultGame: any;\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let achievements = [];\n  let firstGameId = null;\n  let games: any[] = [];\n  try {\n    const achievementsRes = await APIServer.clientFromSession(session).request(\n      APIServer.getAchievement()\n    );\n    // if (achievementsRes.data) {\n    //   achievements = achievementsRes.data;\n    // }\n    if (achievementsRes.data) {\n      achievements = achievementsRes.data.map(\n        (achievement: any, index: number) => ({\n          ...achievement,\n          id: index + 1, // Generate unique id for each achievement\n        })\n      );\n    }\n\n    const gameRes = await APIServer.clientFromSession(session).request(\n      APIServer.getUserGameLists()\n    );\n    if (gameRes.data) {\n      games = gameRes.data;\n      defaultGame = games.find((game: any) => `${game.name}` === `VALORANT`);\n    }\n  } catch (e) {\n    console.log(\"user setting error\", e);\n  }\n\n  return json({\n    achievements,\n    firstGameId,\n    games,\n    defaultGame,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const entries = Object.fromEntries(formdata) as any;\n  const data = entries.data ? JSON.parse(entries.data) : null;\n  const uuid = entries.uuid;\n\n  switch (entries.action) {\n    case \"create\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.createPersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully created personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"update\":\n      try {\n        await APIServer.clientFromSession(session).request(\n          APIServer.updatePersonalDetails(data)\n        );\n        session.flash(\"flashMessage\", {\n          type: \"success\",\n          message: `successfully updated personal details`,\n        });\n      } catch (e: any) {\n        session.flash(\"flashMessage\", {\n          type: \"error\",\n          message:\n            e.errors && e.errors.length > 1\n              ? e.errors[0]\n              : e.response.data.message,\n        });\n      }\n      break;\n    case \"save-to-profile-index\":\n      session.flash(\"flashMessage\", {\n        type: \"success\",\n        message: `successfully saved to profile index`,\n      });\n      return redirect(`/users/${uuid}`, {\n        headers: {\n          \"Set-Cookie\": await commitSession(session),\n        },\n      });\n  }\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await commitSession(session),\n    },\n  });\n};\n\n// Modal properties\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n};\n\n// Main component\nexport default function SettingsMyGames() {\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  // const matches = useMatches();\n  // const { cdnUrl } = matches[0].data;\n  const { user } = useContext(AuthContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const { achievements } = useLoaderData();\n  const [achievementBrandTitleModal, setAchievementBrandTitleModal] =\n    useState(false);\n  const [achievementTournamentTitleModal, setAchievementTournamentTitleModal] =\n    useState(false);\n  const [achievementOthersTitleModal, setAchievementOthersTitleModal] =\n    useState(false);\n  const [achievementBrandModal, setAchievementBrandModal] = useState(false);\n  const [achievementTournamentModal, setAchievementTournamentModal] =\n    useState(false);\n  const [achievementOthersModal, setAchievementOthersModal] = useState(false);\n  const [achievementLists, setAchievementLists] = useState(achievements);\n  const [brandItems, setBrandItems] = useState<any>(\n    achievementLists.find((item: any) => item.type === \"brand\")\n  );\n  const [brandItemsLists, setBrandItemsLists] = useState<any[]>(\n    brandItems.userAchievements\n  );\n  const [tournamentItems, setTournamentItems] = useState<any>(\n    achievementLists.find((item: any) => item.type === \"tournament\")\n  );\n\n  const [tournamentItemsLists, setTournamentItemsLists] = useState<any[]>(\n    tournamentItems.userAchievements\n  );\n  const [othersItems, setOthersItems] = useState<any>(\n    achievementLists.find((item: any) => item.type === \"others\")\n  );\n  const [othersItemsLists, setOthersItemsLists] = useState<any[]>(\n    othersItems.userAchievements\n  );\n  const [sortingBrandModal, setSortingBrandModal] = useState<boolean>(false);\n  const [sortingTournamentModal, setSortingTournamentModal] =\n    useState<boolean>(false);\n\n  const [sortingOthersModal, setSortingOthersModal] = useState<boolean>(false);\n  const [sortingTypeModal, setSortingTypeModal] = useState<boolean>(false);\n  const containerRef = useRef(null);\n\n  const { scheme } = useContext(AppContext);\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  const [brandForm] = Form.useForm();\n  const [tournamentForm] = Form.useForm();\n  const [othersForm] = Form.useForm();\n\n  const [brandTitleForm] = Form.useForm();\n  const [tournamentTitleForm] = Form.useForm();\n  const [othersTitleForm] = Form.useForm();\n  const submit = useSubmit();\n\n  const handleSubmitToProfileIndex = () => {\n    submit(\n      {\n        uuid: user.uuid,\n        action: \"save-to-profile-index\",\n      },\n      { method: \"post\" }\n    );\n  };\n\n  const onChangeSortBrandtems = (items: any) => {\n    setBrandItemsLists(items);\n  };\n\n  const onChangeSortTournamenttems = (items: any) => {\n    setTournamentItemsLists(items);\n  };\n\n  const onChangeSortOtherstems = (items: any) => {\n    setOthersItemsLists(items);\n  };\n\n  const onChangeSortTypeItems = (items: any) => {\n    setAchievementLists(items);\n  };\n\n  const handleToggleBrandSortingMode = () => {\n    setSortingBrandModal(!sortingBrandModal);\n  };\n\n  const onClosesortingBrandModal = () => {\n    setSortingBrandModal(false);\n  };\n\n  const handleToggleTournamentSortingMode = () => {\n    setSortingTournamentModal(!sortingBrandModal);\n  };\n\n  const onClosesortingTournamentModal = () => {\n    setSortingTournamentModal(false);\n  };\n\n  const handleToggleOthersSortingMode = () => {\n    setSortingOthersModal(!sortingBrandModal);\n  };\n\n  const onClosesortingOthersModal = () => {\n    setSortingOthersModal(false);\n  };\n\n  const onClosesortingTypeModal = () => {\n    setSortingTypeModal(false);\n  };\n\n  const handleToggleTypeSortingMode = () => {\n    setSortingTypeModal(!sortingBrandModal);\n  };\n\n  const handleSubmitTypeSorting = () => {\n    setSortingTypeModal(false);\n    const itemsId = {\n      order: achievementLists.map((item: any, index: number) => item.type),\n    };\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"put\",\n        action: `/resources/sorting-my-achievement-title`,\n      }\n    );\n  };\n\n  const handleSubmitBrandSorting = () => {\n    setSortingBrandModal(false);\n    const itemsId = {\n      type: \"brand\",\n      userAchievementIds: brandItemsLists.map(\n        (item: any, index: number) => item.id\n      ),\n    };\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-my-achievement`,\n      }\n    );\n  };\n\n  const handleSubmitTournamentSorting = () => {\n    setSortingTournamentModal(false);\n    const itemsId = {\n      type: \"tournament\",\n      userAchievementIds: tournamentItemsLists.map(\n        (item: any, index: number) => item.id\n      ),\n    };\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-my-achievement`,\n      }\n    );\n  };\n\n  const handleSubmitOthersSorting = () => {\n    setSortingOthersModal(false);\n    const itemsId = {\n      type: \"others\",\n      userAchievementIds: othersItemsLists.map(\n        (item: any, index: number) => item.id\n      ),\n    };\n\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-my-achievement`,\n      }\n    );\n  };\n\n  useEffect(() => {\n    const container = containerRef.current as any;\n\n    if (container) {\n      // Array of the child divs\n      const divs = Array.from(container.children);\n\n      // Sort by a custom logic: in this example, based on a static order array\n      const orderMap = {\n        brand: brandItems.sortOrder,\n        tournament: tournamentItems.sortOrder,\n        others: othersItems.sortOrder,\n        // brand: 1,\n        // tournament: 2,\n        // others: 3,\n      } as any;\n\n      const sortedDivs = divs.sort(\n        (a: any, b: any) => orderMap[a.id] - orderMap[b.id]\n      );\n\n      // Re-append sorted divs\n      container.innerHTML = \"\"; // Clear existing elements\n      sortedDivs.forEach((div) => {\n        container.appendChild(div);\n      });\n    }\n  }, [brandItems.sortOrder, othersItems.sortOrder, tournamentItems.sortOrder]);\n\n  useEffect(() => {\n    setAchievementLists(\n      achievements && achievements.length ? achievements : []\n    );\n  }, [achievements]);\n\n  useEffect(() => {\n    setBrandItems(achievementLists.find((item: any) => item.type === \"brand\"));\n    setTournamentItems(\n      achievementLists.find((item: any) => item.type === \"tournament\")\n    );\n    setOthersItems(\n      achievementLists.find((item: any) => item.type === \"others\")\n    );\n    setBrandItemsLists(brandItems.userAchievements);\n    setOthersItemsLists(othersItems.userAchievements);\n    setTournamentItemsLists(tournamentItems.userAchievements);\n  }, [\n    achievementLists,\n    brandItems.userAchievements,\n    othersItems.userAchievements,\n    tournamentItems.userAchievements,\n  ]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n\n    if (fetcher.data.achievements) {\n      setAchievementLists(fetcher.data.achievements);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   setAchievementLists([...achievements]);\n  // }, [achievements]);\n\n  // useEffect(() => {\n  //   if (fetcher.data && fetcher.data.success) {\n  //     if (\n  //       fetcher.data.success &&\n  //       fetcher.data.success !== \"create-achievement-title\"\n  //     ) {\n  //       console.log(\"fetcher.data.success\", fetcher.data.success);\n  //       fetcher.load(`.?rankingGameId=2`);\n  //       messageApi.open({\n  //         type: \"success\",\n  //         message: t(`Successfully ${fetcher.data.action} achievement`),\n  //         duration: 5,\n  //         placement: \"bottomRight\",\n  //       });\n  //     }\n  //   }\n  // }, [fetcher.data]);\n  const photosStyle = {\n    position: \"relative\",\n    height: 150,\n    width: 120,\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    // cursor: \"pointer\",\n  } as any;\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <div>\n        <Space\n          size={10}\n          direction=\"horizontal\"\n          style={{\n            marginBottom: 20,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Title level={2}>{t(\"my achievement\")}</Title>\n        </Space>\n\n        <div ref={containerRef}>\n          <div id=\"brand\">\n            <Flex justify=\"space-between\">\n              <div>\n                <Text\n                  style={{\n                    fontWeight: 600,\n                    fontSize: \"inherit\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  {brandItems?.title}\n                </Text>\n                <Space\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setAchievementBrandTitleModal(true)}\n                >\n                  <PenLine style={{ color: \"#7C6FF6\" }} />\n                  <Text>{t(\"change\")}</Text>\n                </Space>\n              </div>\n              {brandItems?.userAchievements.length > 0 && (\n                <Text\n                  style={{\n                    marginRight: 10,\n                    marginTop: 0,\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={handleToggleBrandSortingMode}\n                >\n                  <Space>\n                    <ArrowUpDown\n                      style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }}\n                    />\n                    {t(\"sort order\")}\n                  </Space>\n                </Text>\n              )}\n            </Flex>\n            <Flex gap={20} align=\"flex-start\" style={{ overflow: \"auto\" }}>\n              <div>\n                <Card\n                  bordered={false}\n                  style={{\n                    ...photosStyle,\n                    backgroundColor: \"#EEEEEE\",\n                    textAlign: \"center\",\n                    justifyContent: \"center\",\n                    margin: \"15px 0\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setAchievementBrandModal(true)}\n                >\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      margin: 0,\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      msTransform: \"translate(-50%,-50%)\",\n                      transform: \"translate(-50%, -50%)\",\n                    }}\n                  >\n                    <Space size={5} style={{ color: \"black\" }}>\n                      <PlusOutlined />\n                      {t(\"add\")}\n                    </Space>\n                  </div>\n                </Card>\n              </div>\n              {brandItems?.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index}>\n                    <MyAchievementEntry\n                      data={achievement}\n                      fetcher={fetcher}\n                      isMyWebboard={true}\n                      type=\"brand\"\n                    />\n                  </div>\n                )\n              )}\n            </Flex>\n            <Divider style={{ marginBlock: 20 }} />\n          </div>\n          <div id=\"tournament\">\n            <Flex justify=\"space-between\">\n              <div>\n                <Text\n                  style={{\n                    fontWeight: 600,\n                    fontSize: \"inherit\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  {tournamentItems.title}\n                </Text>\n                <Space\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setAchievementTournamentTitleModal(true)}\n                >\n                  <PenLine style={{ color: \"#7C6FF6\" }} />\n                  <Text>{t(\"change\")}</Text>\n                </Space>\n              </div>\n              {tournamentItems?.userAchievements.length > 0 && (\n                <Text\n                  style={{\n                    marginRight: 10,\n                    marginTop: 0,\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={handleToggleTournamentSortingMode}\n                >\n                  <Space>\n                    <ArrowUpDown\n                      style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }}\n                    />\n                    {t(\"sort order\")}\n                  </Space>\n                </Text>\n              )}\n            </Flex>\n            <Flex gap={20} align=\"flex-start\" style={{ overflow: \"auto\" }}>\n              <div>\n                <Card\n                  bordered={false}\n                  style={{\n                    ...photosStyle,\n                    backgroundColor: \"#EEEEEE\",\n                    textAlign: \"center\",\n                    justifyContent: \"center\",\n                    margin: \"15px 0\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setAchievementTournamentModal(true)}\n                >\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      margin: 0,\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      msTransform: \"translate(-50%,-50%)\",\n                      transform: \"translate(-50%, -50%)\",\n                    }}\n                  >\n                    <Space size={5} style={{ color: \"black\" }}>\n                      <PlusOutlined />\n                      {t(\"add\")}\n                    </Space>\n                  </div>\n                </Card>\n              </div>\n              {tournamentItems.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index}>\n                    <MyAchievementEntry\n                      data={achievement}\n                      fetcher={fetcher}\n                      isMyWebboard={true}\n                      type=\"tournament\"\n                    />\n                  </div>\n                )\n              )}\n            </Flex>\n            <Divider style={{ marginBlock: 20 }} />\n          </div>\n          <div id=\"others\">\n            <Flex justify=\"space-between\">\n              <div>\n                <Text\n                  style={{\n                    fontWeight: 600,\n                    fontSize: \"inherit\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  {othersItems.title}\n                </Text>\n                <Space\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setAchievementOthersTitleModal(true)}\n                >\n                  <PenLine style={{ color: \"#7C6FF6\" }} />\n                  <Text>{t(\"change\")}</Text>\n                </Space>\n              </div>\n              {othersItems?.userAchievements.length > 0 && (\n                <Text\n                  style={{\n                    marginRight: 10,\n                    marginTop: 0,\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={handleToggleOthersSortingMode}\n                >\n                  <Space>\n                    <ArrowUpDown\n                      style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }}\n                    />\n                    {t(\"sort order\")}\n                  </Space>\n                </Text>\n              )}\n            </Flex>\n            <Flex gap={20} align=\"flex-start\" style={{ overflow: \"auto\" }}>\n              <div>\n                <Card\n                  bordered={false}\n                  style={{\n                    ...photosStyle,\n                    backgroundColor: \"#EEEEEE\",\n                    textAlign: \"center\",\n                    justifyContent: \"center\",\n                    margin: \"15px 0\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setAchievementOthersModal(true)}\n                >\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      margin: 0,\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      msTransform: \"translate(-50%,-50%)\",\n                      transform: \"translate(-50%, -50%)\",\n                    }}\n                  >\n                    <Space size={5} style={{ color: \"black\" }}>\n                      <PlusOutlined />\n                      {t(\"add\")}\n                    </Space>\n                  </div>\n                </Card>\n              </div>\n              {othersItems.userAchievements.map(\n                (achievement: any, index: number) => (\n                  <div key={index}>\n                    <MyAchievementEntry\n                      data={achievement}\n                      fetcher={fetcher}\n                      isMyWebboard={true}\n                      type=\"others\"\n                    />\n                  </div>\n                )\n              )}\n            </Flex>\n            <Divider style={{ marginBlock: 20 }} />\n          </div>\n        </div>\n        <Flex justify=\"space-between\" style={{ marginBottom: 10 }}>\n          <div>\n            <Text\n              style={{\n                fontWeight: 600,\n                fontSize: \"inherit\",\n                marginRight: \"10px\",\n              }}\n            >\n              {t(\"display order\")}\n            </Text>\n          </div>\n          <Text\n            style={{\n              marginRight: 10,\n              marginTop: 0,\n              fontWeight: 600,\n              textAlign: \"center\",\n              cursor: \"pointer\",\n            }}\n            onClick={handleToggleTypeSortingMode}\n          >\n            <Space>\n              <ArrowUpDown style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }} />\n              {t(\"sort order\")}\n            </Space>\n          </Text>\n        </Flex>\n        <Space direction=\"vertical\">\n          {achievementLists.map((achievement: any, index: number) => (\n            <div key={index}>\n              {index + 1}. {achievement.title}\n            </div>\n          ))}\n        </Space>\n        <TiltButton\n          color=\"primary\"\n          onClick={handleSubmitToProfileIndex}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"save\")}\n        </TiltButton>\n      </div>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementBrandModal(false)}\n        open={achievementBrandModal}\n      >\n        <AchievementForm\n          fetcher={fetcher}\n          form={brandForm}\n          action=\"create\"\n          type=\"brand\"\n          onCancel={() => setAchievementBrandModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementTournamentModal(false)}\n        open={achievementTournamentModal}\n      >\n        <AchievementForm\n          fetcher={fetcher}\n          form={tournamentForm}\n          action=\"create\"\n          type=\"tournament\"\n          onCancel={() => {\n            setAchievementTournamentModal(false);\n          }}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementOthersModal(false)}\n        open={achievementOthersModal}\n      >\n        <AchievementForm\n          fetcher={fetcher}\n          form={othersForm}\n          action=\"create\"\n          type=\"others\"\n          onCancel={() => setAchievementOthersModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementBrandTitleModal(false)}\n        open={achievementBrandTitleModal}\n      >\n        <AchievementTitleForm\n          fetcher={fetcher}\n          form={brandTitleForm}\n          action=\"update\"\n          type=\"brand\"\n          initialValues={brandItems}\n          onCancel={() => setAchievementBrandTitleModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementTournamentTitleModal(false)}\n        open={achievementTournamentTitleModal}\n      >\n        <AchievementTitleForm\n          fetcher={fetcher}\n          form={tournamentTitleForm}\n          action=\"update\"\n          type=\"tournament\"\n          initialValues={tournamentItems}\n          onCancel={() => setAchievementTournamentTitleModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setAchievementOthersTitleModal(false)}\n        open={achievementOthersTitleModal}\n      >\n        <AchievementTitleForm\n          fetcher={fetcher}\n          form={othersTitleForm}\n          action=\"update\"\n          type=\"others\"\n          initialValues={othersItems}\n          onCancel={() => setAchievementOthersTitleModal(false)}\n        />\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingBrandModal(false)}\n        open={sortingBrandModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={brandItemsLists}\n            onChange={onChangeSortBrandtems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onClosesortingBrandModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitBrandSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingTournamentModal(false)}\n        open={sortingTournamentModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={tournamentItemsLists}\n            onChange={onChangeSortTournamenttems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton\n                color=\"secondary\"\n                onClick={onClosesortingTournamentModal}\n              >\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton\n                color=\"primary\"\n                onClick={handleSubmitTournamentSorting}\n              >\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingOthersModal(false)}\n        open={sortingOthersModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={othersItemsLists}\n            onChange={onChangeSortOtherstems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onClosesortingOthersModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitOthersSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingTypeModal(false)}\n        open={sortingTypeModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={achievementLists}\n            onChange={onChangeSortTypeItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.title}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onClosesortingTypeModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitTypeSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      {contextHolder}\n    </div>\n  );\n}\n", "import { useContext, useEffect, useState } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport { Card, Typography } from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { useTranslation } from \"react-i18next\";\nimport { MyArchievementEntryControl } from \"./MyArchievementEntryControl\";\nconst { Text, Title } = Typography;\n\ninterface MyAchievementEntryProps {\n  data: any;\n  fetcher?: any;\n  type?: string;\n  isMyWebboard?: boolean;\n}\n\nexport function MyAchievementEntry(props: MyAchievementEntryProps) {\n  const { t } = useTranslation();\n  const { data, fetcher, type } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const isOwner = true;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n  const [screenSize, setScreenSize] = useState<string>(\"\"); // Initialize state variable to hold screen size\n\n  const photosStyle = {\n    position: \"relative\",\n    height: 150,\n    width: 120,\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundColor: \"rgba(233, 233, 233, 1)\",\n    // cursor: \"pointer\",\n  } as any;\n\n  useEffect(() => {\n    // Listen for changes in screen size and update state variable accordingly\n    const handleResize = () => {\n      if (window.innerWidth > 576) {\n        setScreenSize(\"greaterThanSM\");\n      } else {\n        setScreenSize(\"atSM\");\n      }\n    };\n\n    handleResize(); // Call once to set initial state\n\n    window.addEventListener(\"resize\", handleResize); // Add event listener for window resize\n\n    return () => {\n      // Cleanup: Remove event listener when component unmounts\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const gameCard = (\n    <Card\n      bordered={false}\n      style={{\n        ...photosStyle,\n        backgroundImage: `url(\"${cdnUrl}/${data.image}\")`,\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        margin: \"15px 0\",\n      }}\n    >\n      <div\n        style={{\n          marginLeft: \"30px\",\n          marginTop: \"-20px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <MyArchievementEntryControl\n          fetcher={fetcher}\n          id={data.id}\n          isOwner={isOwner}\n          isForumAdmin={isForumAdmin}\n          type={type}\n          initialValues={data}\n          postType=\"experience\"\n        />\n      </div>\n    </Card>\n  );\n\n  return <>{gameCard}</>;\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Input, Modal, Space, Typography, Select, Form } from \"antd\";\nimport { AlertOutlined, ExclamationCircleFilled } from \"@ant-design/icons\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { AchievementForm } from \"./AchievementForm\";\nimport { PenLine, Trash2 } from \"lucide-react\";\n\nconst { Text, Title } = Typography;\n\ninterface MyArchievementEntryControlProps {\n  fetcher?: any;\n  id: string;\n  ignoreShare?: boolean;\n  isOwner?: boolean;\n  isForumAdmin?: boolean;\n  onEditClicked?: () => void;\n  type?: string;\n  postType?: string;\n  initialValues?: any;\n}\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport function MyArchievementEntryControl(\n  props: MyArchievementEntryControlProps\n) {\n  const { fetcher, id, isOwner, isForumAdmin, postType, initialValues, type } =\n    props;\n  const { t } = useTranslation();\n  const [reason, setReason] = useState<string>(\"\");\n  const [modal, contextHolder] = Modal.useModal();\n  const [reportModal, setReportModal] = useState<boolean>(false);\n  const [gameInfoModal, setGameInfoModal] = useState(false);\n  const [form] = Form.useForm();\n\n  const { Option } = Select;\n\n  const handleOpenCreateExperienceModal = () => {\n    setGameInfoModal(true);\n  };\n\n  const handleLeaveParty = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure you want to delete this achievement?`)}`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id: initialValues.id },\n          {\n            method: \"post\",\n            action: `/resources/delete-achievement`,\n          }\n        );\n      },\n    });\n  }, [fetcher]);\n\n  const openReportModal = () => {\n    setReportModal(true);\n  };\n\n  const deletePost = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete this post`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id, type: postType },\n          {\n            method: \"delete\",\n            action: `/resources/delete-post`,\n          }\n        );\n      },\n    });\n  }, [fetcher, id, postType]);\n\n  const menus = [\n    {\n      label: (\n        <Space size={10} style={{ color: \"#f5222d\" }}>\n          <AlertOutlined />\n          {t(\"report\")}\n        </Space>\n      ),\n      onClick: openReportModal,\n    },\n  ] as any[];\n  if (isOwner || isForumAdmin) {\n    menus.push({\n      label: (\n        <Space size={10}>\n          <Trash2 />\n          {t(\"delete\")}\n        </Space>\n      ),\n      onClick: deletePost,\n    });\n  }\n  useEffect(() => {\n    setReason(\"\");\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success === `report-${postType ? postType : \"webboard\"}` &&\n      fetcher.state === \"idle\"\n    ) {\n      setReason(\"\");\n      setReportModal(false);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType]);\n\n  return (\n    <>\n      <Space size={5}>\n        {/* {!ignoreShare && (\n          <ShareDropDown copiedMessage=\"album url copied\" postUrl={albumUrl} />\n        )} */}\n        {isOwner && (\n          <>\n            <Text\n              style={{\n                fontSize: 18,\n                cursor: \"pointer\",\n                color: \"#ffff\",\n                backgroundColor: \"#000000\",\n                padding: \"0 5px\",\n                borderRadius: 5,\n              }}\n              onClick={handleOpenCreateExperienceModal}\n            >\n              <PenLine />\n            </Text>\n            <Text\n              style={{\n                fontSize: 18,\n                cursor: \"pointer\",\n                color: \"#ffff\",\n                backgroundColor: \"#f5222d\",\n                padding: \"0 5px\",\n                borderRadius: 5,\n              }}\n              onClick={handleLeaveParty}\n            >\n              <Trash2 />\n            </Text>\n          </>\n        )}\n      </Space>\n      <Modal\n        {...modalProps}\n        onCancel={() => setGameInfoModal(false)}\n        open={gameInfoModal}\n      >\n        <AchievementForm\n          fetcher={fetcher}\n          form={form}\n          action=\"update\"\n          type={type}\n          onCancel={() => setGameInfoModal(false)}\n          initialValues={initialValues}\n        />\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  notification,\n  Row,\n  Space,\n  Typography,\n  Card,\n  Image,\n} from \"antd\";\nimport { LoadingOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { FileUploader, TiltButton } from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nimport { flattenObject } from \"~/utils/helper\";\nimport { TbPhotoPlus } from \"react-icons/tb\";\nconst { Text, Title } = Typography;\n\ninterface AchievementFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  type?: string;\n  initialValues?: any;\n  onCancel: () => void;\n}\n\nexport function AchievementForm(props: AchievementFormProps) {\n  const { fetcher, form, initialValues, onCancel, action, type } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  // const { user } = useContext(AuthContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [previewImage, setPreviewImage] = useState<string | null>(\n    initialValues?.image\n  );\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const photosStyle = {\n    position: \"relative\",\n    height: 150,\n    width: 120,\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundColor: \"#EEEEEE\",\n  } as any;\n\n  const handleSubmit = (values: any) => {\n    const { isPrivate, ...rest } = values;\n    fetcher.submit(\n      {\n        data: JSON.stringify({\n          ...rest,\n          type: type,\n          id: initialValues?.id,\n        }),\n      },\n      action === \"create\"\n        ? {\n            method: \"post\",\n            action: `/resources/create-achievement`,\n          }\n        : {\n            method: \"put\",\n            action: `/resources/edit-achievement`,\n          }\n    );\n    setPreviewImage(null);\n    form.setFieldValue(\"image\", null);\n    form.resetFields();\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (initialValues && fetcher.data && fetcher.data.success) {\n      if (fetcher.data.success) {\n        form.setFieldsValue(flattenObject(initialValues));\n        setPreviewImage(initialValues?.image);\n      }\n    }\n  }, [initialValues, form]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"image\") {\n        form.setFieldValue(\"image\", fetcher.data.key);\n      }\n\n      setUploading(false);\n    }\n  }, [form, fetcher.data, fetcher.state]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={flattenObject(initialValues)}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {action === \"create\" ? t(\"add achievement\") : t(\"edit achievement\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          <Form.Item\n            key=\"image\"\n            name=\"image\"\n            style={{ margin: \"0px\", padding: \"0px\" }}\n            rules={[\n              {\n                required: true,\n                message: t(\"please input achievement image\"),\n              },\n            ]}\n          >\n            <Row>\n              <Col flex=\"auto\">\n                <Space direction=\"vertical\" size={5}>\n                  <Text style={{ fontWeight: 600 }}>\n                    {t(\"achievement image\")}\n                  </Text>\n                  {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n                    <Card\n                      bordered={false}\n                      style={{\n                        ...photosStyle,\n                        textAlign: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"15px 0\",\n                      }}\n                    >\n                      <LoadingOutlined\n                        style={{\n                          fontSize: 24,\n                          margin: \"40px auto\",\n                        }}\n                        spin\n                      />\n                    </Card>\n                  ) : (\n                    <div>\n                      {!form.getFieldValue(\"image\") && !initialValues && (\n                        <FileUploader\n                          fetcher={fetcher}\n                          fieldName={\"image\"}\n                          // maxUpload={5}\n                          onUploading={setUploading}\n                          onErrorFileTooLarge={handleFileTooLarge}\n                        >\n                          <Card\n                            bordered={false}\n                            style={{\n                              ...photosStyle,\n                              backgroundImage: `url(\"${cdnUrl}/${\n                                initialValues\n                                  ? previewImage\n                                  : form.getFieldValue(\"image\")\n                              }\")`,\n                              textAlign: \"center\",\n                              justifyContent: \"center\",\n                              margin: \"15px 0\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            {!form.getFieldValue(\"image\") && !previewImage && (\n                              <div\n                                style={{\n                                  textAlign: \"center\",\n                                  margin: 0,\n                                  position: \"absolute\",\n                                  top: \"50%\",\n                                  left: \"50%\",\n                                  msTransform: \"translate(-50%,-50%)\",\n                                  transform: \"translate(-50%, -50%)\",\n                                }}\n                              >\n                                <Space size={5} style={{ color: \"black\" }}>\n                                  <TbPhotoPlus />\n                                  {t(\"add\")}\n                                </Space>\n                              </div>\n                            )}\n                          </Card>\n                        </FileUploader>\n                      )}\n                      {(form.getFieldValue(\"image\") || initialValues) && (\n                        <Image\n                          style={{\n                            marginTop: \"15px\",\n                            position: \"relative\",\n                            height: 150,\n                            width: 120,\n                            borderRadius: 5,\n                            backgroundSize: \"cover\",\n                            backgroundPosition: \"center\",\n                            backgroundColor: \"#EEEEEE\",\n                          }}\n                          src={`${cdnUrl}/${\n                            initialValues\n                              ? previewImage\n                              : form.getFieldValue(\"image\")\n                          }`}\n                          preview={true}\n                        />\n                      )}\n                    </div>\n                  )}\n                </Space>\n              </Col>\n              {(form.getFieldValue(\"image\") || initialValues) && (\n                <Col flex=\"none\">\n                  <FileUploader\n                    fetcher={fetcher}\n                    fieldName={\"image\"}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                  >\n                    <Space size={5} style={{ cursor: \"pointer\" }}>\n                      <EditOutlined style={{ color: \"#8263ea\" }} />\n                      <Text>{t(\"change\")}</Text>\n                    </Space>\n                  </FileUploader>\n                </Col>\n              )}\n            </Row>\n          </Form.Item>\n          <Form.Item\n            key=\"name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input achievement name\"),\n              },\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"achievement name\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            key=\"url\"\n            name=\"url\"\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"achievement url\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {action === \"create\" ? t(\"create achievement\") : t(\"edit\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {contextHolder}\n    </div>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  notification,\n  Row,\n  Space,\n  Typography,\n} from \"antd\";\nimport { TiltButton } from \"~/components/common\";\nimport { flattenObject } from \"~/utils/helper\";\nconst { Text, Title } = Typography;\n\ninterface AchievementTitleFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  type?: string;\n  initialValues?: any;\n  onCancel: () => void;\n}\n\nexport function AchievementTitleForm(props: AchievementTitleFormProps) {\n  const { fetcher, form, initialValues, onCancel, action, type } = props;\n  const { t } = useTranslation();\n  // const { user } = useContext(AuthContext);\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n\n  const handleSubmit = (values: any) => {\n    const { isPrivate, ...rest } = values;\n    fetcher.submit(\n      {\n        data: JSON.stringify({\n          ...rest,\n          type: type,\n          id: initialValues?.id,\n        }),\n      },\n      {\n        method: \"put\",\n        action: `/resources/edit-achievement-title`,\n      }\n    );\n    form.resetFields();\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (initialValues) {\n      form.setFieldsValue(flattenObject(initialValues));\n    }\n  }, [initialValues, form, fetcher.data]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"image\") {\n        form.setFieldValue(\"image\", fetcher.data.key);\n      }\n\n      setUploading(false);\n    }\n  }, [form, fetcher.data, fetcher.state]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={flattenObject(initialValues)}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {action === \"create\"\n            ? t(\"add achievement title\")\n            : t(\"edit achievement title\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          <Form.Item\n            key=\"title\"\n            name=\"title\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input achievement title\"),\n              },\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"achievement title\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input />\n          </Form.Item>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {action === \"create\"\n                ? t(\"create achievement\")\n                : t(\"edit achievement\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {contextHolder}\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "import_jsx_dev_runtime", "Text", "Title", "import_jsx_dev_runtime", "Text", "Title", "import_react", "import_jsx_dev_runtime", "Text", "Title", "import_jsx_dev_runtime", "Title", "Text", "modalProps", "Title", "Text"]
}
