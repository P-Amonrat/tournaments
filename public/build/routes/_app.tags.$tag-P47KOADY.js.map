{
  "version": 3,
  "sources": ["../../../app/routes/_app.tags.$tag.tsx"],
  "sourcesContent": ["import { useCallback, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useNavigation,\n  useRevalidator,\n  useRouteLoaderData,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Affix, Col, Row, Skeleton, Typography, notification } from \"antd\";\nimport * as APIServer from \"~/api\";\nimport {\n  BackButton,\n  IndexFilter,\n  Media,\n  Pagination,\n} from \"~/components/common\";\nimport {\n  WebboardIndexHeader,\n  WebboardLists,\n  WebboardTags,\n} from \"~/components/pages/Webboard\";\nimport { debounce, isEmpty, isNil, omitBy } from \"lodash\";\nimport { convertToObjectWithArrays, resetFetcher } from \"~/utils/helper\";\nimport { getSessionFromRequest } from \"~/session.server\";\nconst { Title } = Typography;\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await getSessionFromRequest(request);\n  const { tag } = params;\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  const toQuerySearchParams = convertToObjectWithArrays(searchParams, [\n    \"rooms\",\n    \"games\",\n  ]);\n  let webboards: any;\n\n  try {\n    const webboardRes = await APIServer.clientFromSession(session).request(\n      APIServer.getWebboards({ ...toQuerySearchParams, tag: tag })\n    );\n    if (webboardRes.data) {\n      webboards = webboardRes.data;\n    }\n  } catch (e) {\n    console.log(\"webboards tag error\", e);\n  }\n  return json({ searchParams, tag, webboards });\n};\n\nexport default function TagSingle() {\n  const routeLoader = useRouteLoaderData(\"routes/_app.tags\");\n  const revalidator = useRevalidator();\n  const submit = useSubmit();\n  const navigation = useNavigation();\n  const fetcher = useFetcher();\n  const { searchParams, webboards } = useLoaderData();\n  const { games, rooms, reactionOptions, tags } = routeLoader;\n  const { t } = useTranslation();\n  const [api, contextHolder] = notification.useNotification();\n\n  const filters = [\n    {\n      type: \"tilt-button\",\n      name: \"rooms\",\n      title: t(\"select room\"),\n      options: rooms.map((room: any) => ({\n        label: room.name,\n        value: room.id,\n      })),\n    },\n    {\n      type: \"avatar\",\n      name: \"games\",\n      title: t(\"select game\"),\n      options: games.map((game: any) => ({\n        label: game.name,\n        value: game.id,\n        image: game.iconUrl,\n      })),\n    },\n  ];\n\n  const handleFilter = useCallback(\n    (name: string, value: string | number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (searchParams && searchParams[name]) {\n        const values = searchParams[name].split(\",\");\n        const containedIndex = values.indexOf(`${value}`);\n        if (containedIndex > -1) {\n          values.splice(containedIndex, 1);\n        } else {\n          values.push(value.toString());\n        }\n        if (values.length) {\n          newSearchParams[name] = values.join(\",\");\n        } else {\n          delete newSearchParams[name];\n        }\n      } else {\n        newSearchParams[name] = `${value}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  const handleDebounceFilter = useMemo(\n    () => debounce(handleFilter, 300),\n    [handleFilter]\n  );\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-webboard\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <div\n      style={{\n        paddingInline: \"3.5%\",\n        paddingBlock: 30,\n        maxWidth: 1440,\n        marginInline: \"auto\",\n      }}\n    >\n      <Row gutter={[30, 10]}>\n        <Col span={24} md={{ span: 6, order: 0 }}>\n          <Affix offsetTop={80}>\n            <div\n              className=\"hide-scrollbar\"\n              style={{\n                maxHeight: \"calc(100vh - 60px)\",\n                overflowY: \"auto\",\n              }}\n            >\n              <IndexFilter\n                values={searchParams}\n                onFilterClicked={handleDebounceFilter}\n                filters={filters}\n                mobileAppendChildren={\n                  <WebboardTags data={tags} fetcher={fetcher} mobileStyle />\n                }\n              />\n            </div>\n          </Affix>\n        </Col>\n        <Col span={24} md={{ span: 6, order: 2 }}>\n          <Media greaterThan=\"sm\">\n            <Affix offsetTop={80}>\n              <div>\n                <WebboardTags data={tags} fetcher={fetcher} />\n              </div>\n            </Affix>\n          </Media>\n        </Col>\n        <Col span={24} md={{ span: 12, order: 1 }}>\n          <BackButton />\n          <WebboardIndexHeader\n            fetcher={fetcher}\n            searchParams={searchParams}\n            submit={submit}\n          >\n            <Title\n              level={2}\n              style={{ fontStyle: \"italic\", margin: 0 }}\n            >{`#${webboards.tagName}`}</Title>\n          </WebboardIndexHeader>\n          <div style={{ marginTop: 30 }}>\n            {navigation.state !== \"idle\" ? (\n              <Skeleton active />\n            ) : (\n              <>\n                <WebboardLists\n                  data={webboards.items}\n                  fetcher={fetcher}\n                  reactionOptions={reactionOptions}\n                />\n                <Pagination\n                  currentPage={webboards.page}\n                  totalPages={webboards.totalPages}\n                  onPageClicked={handleChangePage}\n                />\n              </>\n            )}\n          </div>\n        </Col>\n      </Row>\n      {contextHolder}\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
