{
  "version": 3,
  "sources": ["../../../app/routes/_app.users.$uuid.my-album.$id.tsx", "../../../app/components/common/FileUploaderMultiple.tsx", "../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../node_modules/uuid/dist/esm-browser/native.js", "../../../node_modules/uuid/dist/esm-browser/v4.js", "../../../app/components/pages/User/AlbumSingle.tsx", "../../../app/components/pages/User/AlbumEntryControl.tsx"],
  "sourcesContent": ["import { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigation,\n  useNavigate,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { Button, Flex, Form, Modal, notification, Skeleton, Space } from \"antd\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as APIServer from \"~/api\";\nimport { dummyWebboards, TiltButton } from \"~/components/common\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { AlbumForm } from \"~/components/pages/User/AlbumForm\";\nimport { AuthContext } from \"~/contexts\";\nimport { AlbumSingle } from \"~/components/pages/User/AlbumSingle\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { uuid, id } = params;\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let singleAlbumRes: any;\n  let singleAlbum: any;\n  let singlePhotosAlbumRes: any;\n  let singlePhotosAlbum: any;\n  const me = session.get(\"me\");\n\n  try {\n    if (id !== undefined) {\n      if (me) {\n        singleAlbumRes = await APIServer.clientFromSession(session).request(\n          APIServer.getSingleAlbum(id)\n        );\n        singlePhotosAlbumRes = await APIServer.clientFromSession(\n          session\n        ).request(APIServer.getPhotosSingleAlbum(id, searchParams));\n      } else {\n        singleAlbumRes = await APIServer.clientFromSession().request(\n          APIServer.getSingleAlbum(id)\n        );\n        singlePhotosAlbumRes = await APIServer.clientFromSession().request(\n          APIServer.getPhotosSingleAlbum(id, searchParams)\n        );\n      }\n      if (singleAlbumRes.data) {\n        singleAlbum = singleAlbumRes.data;\n      }\n      if (singlePhotosAlbumRes.data) {\n        singlePhotosAlbum = singlePhotosAlbumRes.data;\n      }\n    }\n  } catch (e) {\n    singleAlbum = dummyWebboards; // FIXME: remove this out\n  }\n  return json({ searchParams, singleAlbum, singlePhotosAlbum, uuid });\n};\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport default function UserMyWebboards() {\n  const { searchParams, singleAlbum, singlePhotosAlbum, uuid } =\n    useLoaderData();\n  const revalidator = useRevalidator();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const navigate = useNavigate();\n  const { user } = useContext(AuthContext);\n  const [api, contextHolder] = notification.useNotification();\n  const [openCreateAlbumModal, setOpenCreateAlbumModal] = useState(false);\n  const [items, setItems] = useState<any>([...singlePhotosAlbum.items]);\n  const [form] = Form.useForm();\n  const isOwner = user && user.uuid === uuid;\n\n  const navigateToAlbums = () => {\n    navigate(`/users/${uuid}/my-album`);\n  };\n\n  const handleOpenCreateAlbumModal = () => {\n    setOpenCreateAlbumModal(true);\n  };\n\n  const handleLoadMore = useCallback(() => {\n    const newSearchParams = {\n      ...searchParams,\n      offset: singlePhotosAlbum.items.length,\n    };\n    const queryString = new URLSearchParams(\n      omitBy(newSearchParams, isNil)\n    ).toString();\n\n    fetcher.load(`.?${queryString}`);\n  }, [singlePhotosAlbum.items, searchParams]);\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-album\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  useEffect(() => {\n    setItems([...singlePhotosAlbum.items]);\n  }, [singlePhotosAlbum]);\n\n  useEffect(() => {\n    if (fetcher.data?.singlePhotosAlbum) {\n      setItems((items: any[]) => [\n        ...items,\n        ...fetcher.data?.singlePhotosAlbum.items,\n      ]);\n    }\n  }, [fetcher.data]);\n\n  return (\n    <>\n      {navigation.state === \"loading\" &&\n      navigation.location.pathname === location.pathname ? (\n        <Skeleton active />\n      ) : (\n        <>\n          <Space style={{ marginBottom: 10 }}>\n            <TiltButton color=\"primary\" onClick={navigateToAlbums}>\n              {t(\"back to albums\")}\n            </TiltButton>\n          </Space>\n          <Modal\n            {...modalProps}\n            onCancel={() => setOpenCreateAlbumModal(false)}\n            open={openCreateAlbumModal}\n          >\n            <AlbumForm\n              fetcher={fetcher}\n              form={form}\n              onCancel={() => setOpenCreateAlbumModal(false)}\n              action=\"create\"\n            />\n          </Modal>\n          <Flex vertical gap={20}>\n            <AlbumSingle\n              fetcher={fetcher}\n              key={singleAlbum.id}\n              data={singleAlbum}\n              photos={items}\n              isMyWebboard={true}\n              uuid={uuid}\n            />\n          </Flex>\n          {singlePhotosAlbum && items.length < singlePhotosAlbum.total && (\n            <div style={{ textAlign: \"center\", marginTop: 20 }}>\n              <Button onClick={handleLoadMore} size=\"large\">\n                {t(\"load more\")}\n              </Button>\n            </div>\n          )}\n        </>\n      )}\n      {contextHolder}\n    </>\n  );\n}\n", "import React, { useRef, useState } from \"react\";\nimport { Button, Skeleton, Space, Spin, Upload } from \"antd\";\nimport { encode } from \"base64-arraybuffer\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface FileUploaderProps {\n  children: React.ReactNode;\n\n  fetcher: any;\n  maxUpload: number;\n  fieldName: string;\n  fileType?: string;\n  maxFileSize?: number;\n  isSlip?: boolean;\n  disabled?: boolean;\n  isUploading?: boolean;\n  onErrorFileTooLarge?: () => void;\n  onUploading?: (uploading: boolean) => void;\n}\n\ntype ImageList = {\n  key: string;\n  name: string;\n  type: string;\n  size: number;\n  source: string;\n  base64: any;\n};\n\ntype Previews = {\n  key: string;\n  path: string;\n  name: string;\n  source: string;\n  isSuccess: boolean;\n};\n\nexport const FileUploaderMultiple: React.FC<FileUploaderProps> = (\n  props: FileUploaderProps\n) => {\n  const {\n    children,\n    disabled,\n    fetcher,\n    maxUpload,\n    fieldName,\n    fileType,\n    maxFileSize,\n    isSlip,\n    onErrorFileTooLarge,\n    onUploading,\n    isUploading,\n  } = props;\n  const limitFileSize = maxFileSize ? maxFileSize : 2000000;\n  const [imageList, setImageList] = useState<ImageList[]>([]);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const getUUIDs = (array: any) => {\n    return new Set(array.map((item: any) => item.uid));\n  };\n\n  const handleFileUpload = () => {\n    const fileList = fileInputRef.current?.files as any;\n\n    const fileReadPromises = [] as any;\n    const timestamp = Math.floor(Date.now() / 1000);\n    const uploadLength =\n      imageList.length > 0 ? maxUpload - imageList.length : maxUpload;\n\n    for (let i = 0; i < Math.min(fileList.length, uploadLength); i++) {\n      const fileItem = fileList[i];\n\n      if (onUploading) {\n        onUploading(true);\n      }\n      if (\n        (fileItem.size && fileItem.size > limitFileSize) ||\n        fileList.length <= 0\n      ) {\n        if (onErrorFileTooLarge) {\n          onErrorFileTooLarge();\n        }\n        if (onUploading) {\n          onUploading(false);\n        }\n        return;\n      }\n\n      const fileReadPromise = new Promise((resolve) => {\n        const reader = new FileReader();\n\n        // This event fires when the file has been read\n        reader.onload = (e: any) => {\n          fileItem.base64 = reader.result;\n          const key = `${timestamp}-${fileItem.name}`;\n          if (fileItem.base64) {\n            resolve({\n              key: key,\n              name: fileItem.name,\n              size: fileItem.size,\n              type: fileItem.type,\n              file: encode(fileItem.base64), // Assuming you have an encode function for base64 encoding\n              field: fieldName,\n              isSlip: isSlip,\n              previewImage: encode(fileItem.base64),\n              uuid: uuidv4(),\n            });\n          }\n        };\n        // Start reading the file\n        reader.readAsArrayBuffer(fileItem);\n      });\n      fileReadPromises.push(fileReadPromise);\n    }\n\n    Promise.all(fileReadPromises).then((images: any) => {\n      const updatedImageList = [...imageList];\n      console.log(\"image lis before\", updatedImageList);\n\n      console.log(\"images\", images);\n\n      setImageList([...images]);\n\n      const imageData = images.map((image: any) => ({\n        size: image.size,\n        type: image.type,\n        name: image.name,\n        uuid: image.uuid,\n      }));\n\n      const imageFileData = images.map((image: any) => ({\n        size: image.size,\n        type: image.type,\n        name: image.name,\n        uuid: image.uuid,\n        file: image.file,\n      }));\n\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n\n      const inputData = { images: imageData };\n      console.log(\"inputData\", inputData);\n\n      fetcher.submit(\n        {\n          inputData: JSON.stringify(inputData),\n          imageList: JSON.stringify(imageFileData),\n          field: fieldName,\n        },\n        {\n          method: \"put\",\n          action: \"/resources/uploadMultiple\",\n          encType: \"multipart/form-data\",\n        }\n      );\n    });\n  };\n\n  return (\n    <div>\n      <input\n        ref={fileInputRef}\n        onInput={handleFileUpload}\n        multiple\n        type=\"file\"\n        accept=\"image/*\"\n        style={{ display: \"none\" }}\n      />\n      {isUploading ? (\n        <Spin\n          tip=\"Uploading\"\n          size=\"large\"\n          style={{\n            color: \"#7C6FF6\",\n            backgroundColor: \"#7C6FF6\",\n            marginTop: \"95px\",\n          }}\n        >\n          <div className=\"content\" />\n        </Spin>\n      ) : (\n        <div onClick={() => fileInputRef.current?.click()}>{children}</div>\n      )}\n    </div>\n  );\n};\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport {\n  Card,\n  Col,\n  Flex,\n  Row,\n  theme,\n  Typography,\n  notification,\n  Space,\n  Spin,\n  Image,\n  Tooltip,\n  Button,\n  Modal,\n} from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { useTranslation } from \"react-i18next\";\nimport { AlbumEntryControl } from \"./AlbumEntryControl\";\nimport {\n  LockOutlined,\n  DeleteOutlined,\n  ExclamationCircleFilled,\n} from \"@ant-design/icons\";\nimport { LuHelpCircle, LuImagePlus } from \"react-icons/lu\";\nimport { FileUploaderMultiple } from \"~/components/common\";\nconst { useToken } = theme;\nconst { Text, Title } = Typography;\n\ninterface AlbumSingleProps {\n  data: any;\n  uuid: string;\n  photos: any;\n  fetcher?: any;\n  isMyWebboard?: boolean;\n}\n\nexport function AlbumSingle(props: AlbumSingleProps) {\n  const { data, uuid, photos, fetcher } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const isOwner = user && data && data.userId && data.userId === user.id;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [visible, setVisible] = useState<any>(false);\n  const [hoveredPhoto, setHoveredPhoto] = useState<string | null>(null);\n  const [modal, contextHolder2] = Modal.useModal();\n\n  const photosStyle = {\n    height: 200,\n    opacity: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  } as any;\n\n  const cardStyle = {\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\" ? \"none\" : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n    border: \"none\",\n  };\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleDelete = useCallback(\n    (photoId: string) => {\n      modal.confirm({\n        title: `${t(`are you sure you want to delete this photo?`)}`,\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        okType: \"danger\",\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          fetcher.submit(\n            { albumId: data.id, photoId: photoId },\n            {\n              method: \"post\",\n              action: `/resources/delete-photo-album`,\n            }\n          );\n        },\n      });\n    },\n    [fetcher]\n  );\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"paths\" && fetcher.data.imageKeyOnlyList) {\n        fetcher.submit(\n          {\n            paths: JSON.stringify({ paths: fetcher.data.imageKeyOnlyList }),\n            id: data.id,\n          },\n          {\n            method: \"put\",\n            action: \"/resources/upload-album-paths\",\n            encType: \"multipart/form-data\",\n          }\n        );\n      }\n      setUploading(false);\n    }\n  }, [fetcher.data]);\n\n  return (\n    <>\n      <Card style={cardStyle}>\n        <Flex gap={20} vertical>\n          <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n            <Title level={5}>\n              {data.isPrivate ? (\n                <LockOutlined\n                  style={{ color: \"#7C6FF6\", marginRight: \"5px\" }}\n                />\n              ) : (\n                \"\"\n              )}\n              {data.name}\n            </Title>\n            <AlbumEntryControl\n              fetcher={fetcher}\n              id={data.id}\n              userUuid={uuid}\n              isOwner={isOwner}\n              isForumAdmin={isForumAdmin}\n              initialValues={data}\n              postType=\"album\"\n            />\n          </Flex>\n          <Text>{data.description}</Text>\n          <Row gutter={[20, 20]} wrap>\n            {isOwner && (\n              <Col span={12} md={6}>\n                {uploading ? (\n                  <div\n                    style={{\n                      position: \"relative\",\n                      width: \"100%\",\n                      paddingBottom: \"60%\",\n                      borderRadius: 12,\n                      backgroundColor: token.colorBgLayout,\n                    }}\n                  >\n                    <Space\n                      direction=\"vertical\"\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        textAlign: \"center\",\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                      }}\n                    >\n                      <Spin size=\"large\" style={{ color: \"#7C6FF6\" }} />\n                      <Text style={{ color: \"#7C6FF6\", margin: 0 }}>\n                        {t(\"uploading\")}\n                      </Text>\n                    </Space>\n                  </div>\n                ) : (\n                  <FileUploaderMultiple\n                    fetcher={fetcher}\n                    fieldName={\"paths\"}\n                    maxUpload={5}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                  >\n                    <div\n                      style={{\n                        position: \"relative\",\n                        width: \"100%\",\n                        paddingBottom: \"60%\",\n                        borderRadius: 12,\n                        backgroundColor: token.colorBgLayout,\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      <Space\n                        direction=\"horizontal\"\n                        size={10}\n                        style={{\n                          position: \"absolute\",\n                          top: \"50%\",\n                          left: \"50%\",\n                          transform: \"translate(-50%, -50%)\",\n                        }}\n                      >\n                        <LuImagePlus style={{ fontSize: \"1.5em\" }} />\n                        <Title level={5} style={{ margin: 0 }}>\n                          {t(\"upload images in album\")}\n                        </Title>\n                      </Space>\n                    </div>\n                    <div style={{ position: \"absolute\", top: -10, right: 0 }}>\n                      <Tooltip\n                        placement=\"top\"\n                        arrow={false}\n                        title={`${t(\"recommended resolution\")} 1920x1080 px`}\n                      >\n                        <LuHelpCircle\n                          size={24}\n                          style={{ cursor: \"pointer\", color: \"#7a6fee\" }}\n                        />\n                      </Tooltip>\n                    </div>\n                  </FileUploaderMultiple>\n                )}\n              </Col>\n            )}\n            {uploading && photos.length === 0 ? (\n              <Col span={12} md={6}>\n                <Card\n                  bordered={false}\n                  style={{\n                    ...photosStyle,\n                  }}\n                />\n              </Col>\n            ) : (\n              false\n            )}\n            {photos.map((photo: any, index: number) => (\n              <Col\n                key={index}\n                span={12}\n                md={6}\n                onMouseEnter={() => setHoveredPhoto(photo.path)}\n                onMouseLeave={() => setHoveredPhoto(null)}\n              >\n                <div\n                  style={{\n                    width: \"100%\",\n                    paddingBottom: \"60%\",\n                    borderRadius: 12,\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                    backgroundImage: `url(\"${cdnUrl}/${photo.path}\")`,\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => setVisible(photo.path)}\n                >\n                  <Image\n                    style={{ display: \"none\" }}\n                    wrapperStyle={{ display: \"none\" }}\n                    src={`${cdnUrl}/${photo.path}`}\n                    preview={{\n                      visible: visible === photo.path,\n                      src: `${cdnUrl}/${photo.path}`,\n                      onVisibleChange: (value) => {\n                        setVisible(value);\n                      },\n                    }}\n                  />\n                  {hoveredPhoto === photo.path && isOwner && (\n                    // <Button\n                    //   type=\"primary\"\n                    //   shape=\"circle\"\n                    //   icon={<DeleteOutlined />}\n                    //   style={{\n                    // position: \"absolute\",\n                    // top: 10,\n                    // right: 10,\n                    //   }}\n                    //   onClick={(e) => {\n                    //     e.stopPropagation();\n                    //     handleDelete(photo.id);\n                    //   }}\n                    // />\n                    <Text\n                      style={{\n                        position: \"absolute\",\n                        top: 10,\n                        right: 15,\n                        fontSize: 18,\n                        cursor: \"pointer\",\n                        color: \"#ffff\",\n                        backgroundColor: \"#f5222d\",\n                        padding: \"0 5px\",\n                        borderRadius: 5,\n                      }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDelete(photo.id);\n                      }}\n                    >\n                      <DeleteOutlined />\n                    </Text>\n                  )}\n                </div>\n              </Col>\n            ))}\n          </Row>\n        </Flex>\n        {contextHolder}\n        {contextHolder2}\n      </Card>\n    </>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { Input, Modal, Space, Typography, Select, Form } from \"antd\";\nimport {\n  AlertOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  ExclamationCircleFilled,\n} from \"@ant-design/icons\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { AlbumForm } from \"./AlbumForm\";\n\nconst { Text, Title } = Typography;\n\ninterface AlbumEntryControlProps {\n  fetcher?: any;\n  id: string;\n  userUuid: string;\n  ignoreShare?: boolean;\n  isOwner?: boolean;\n  isForumAdmin?: boolean;\n  onEditClicked?: () => void;\n  postType?: string;\n  initialValues?: any;\n}\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport function AlbumEntryControl(props: AlbumEntryControlProps) {\n  const {\n    fetcher,\n    id,\n    userUuid,\n    ignoreShare,\n    isOwner,\n    isForumAdmin,\n    postType,\n    initialValues,\n  } = props;\n  const { t } = useTranslation();\n  const { baseUrl } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const [reason, setReason] = useState<string>(\"\");\n  const [modal, contextHolder] = Modal.useModal();\n  const [reportModal, setReportModal] = useState<boolean>(false);\n  const [openCreateAlbumModal, setOpenCreateAlbumModal] = useState(false);\n  const [form] = Form.useForm();\n\n  const albumUrl = `${baseUrl}/users/${userUuid}/my-album/${id}`;\n  const { Option } = Select;\n\n  const handleOpenCreateAlbumModal = () => {\n    setOpenCreateAlbumModal(true);\n  };\n\n  const openReportModal = () => {\n    setReportModal(true);\n  };\n\n  const closeReportModal = () => {\n    setReportModal(false);\n  };\n\n  const onReasonChanged = (e: any) => {\n    setReason(e.target.value);\n  };\n\n  const [selectedReason, setSelectedReason] = useState<string>(\"\");\n\n  const reasonOptions = [\n    { label: \" Inappropriate Content\", value: \"Inappropriate Content\" },\n    { label: \"Violence\", value: \"Violence\" },\n    { label: \"Harassment\", value: \"Harassment\" },\n    { label: \" False Information\", value: \"False Information\" },\n    { label: \"Spam\", value: \"Spam\" },\n    { label: \"Unauthorized Sales\", value: \"Unauthorized Sales\" },\n    { label: \"Others\", value: \"Others\" },\n  ];\n\n  const onReasonSelected = (value: string) => {\n    if (value !== \"Others\") {\n      setReason(value);\n    } else {\n      setReason(\"\");\n    }\n    setSelectedReason(value);\n  };\n\n  const reasonSelect = (\n    <Select\n      style={{ width: \"100%\" }}\n      onChange={onReasonSelected}\n      value={selectedReason ? selectedReason : undefined}\n      disabled={fetcher.state !== \"idle\"}\n      placeholder={t(\"select reason\")}\n      listHeight={300}\n    >\n      {reasonOptions.map((option) => (\n        <Option key={option.value} value={option.value}>\n          {option.label}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  const submitReport = useCallback(() => {\n    if (reason.length > 0) {\n      fetcher.submit(\n        { reason, id, type: postType },\n        {\n          method: \"post\",\n          action: `/resources/report-post`,\n        }\n      );\n    }\n  }, [fetcher, postType, reason]);\n\n  const handleDeleteAlbum = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure you want to delete this album?`)}`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id: initialValues.id, uuid: user.uuid },\n          {\n            method: \"post\",\n            action: `/resources/delete-album`,\n          }\n        );\n      },\n    });\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success === `report-${postType ? postType : \"webboard\"}` &&\n      fetcher.state === \"idle\"\n    ) {\n      setReason(\"\");\n      setReportModal(false);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType]);\n\n  return (\n    <>\n      <Space size={15}>\n        {!ignoreShare && (\n          <ShareDropDown\n            copiedMessage={t(\"album url copied\")}\n            postUrl={albumUrl}\n          />\n        )}\n        {isOwner && (\n          <>\n            <Text\n              style={{ fontSize: 18, cursor: \"pointer\" }}\n              onClick={handleOpenCreateAlbumModal}\n            >\n              <EditOutlined />\n            </Text>\n            <Text\n              style={{\n                fontSize: 18,\n                cursor: \"pointer\",\n                color: \"#ffff\",\n                backgroundColor: \"#f5222d\",\n                padding: \"0 5px\",\n                borderRadius: 5,\n              }}\n              onClick={handleDeleteAlbum}\n            >\n              <DeleteOutlined />\n            </Text>\n          </>\n        )}\n      </Space>\n      <Modal\n        {...modalProps}\n        onCancel={() => setOpenCreateAlbumModal(false)}\n        open={openCreateAlbumModal}\n      >\n        <AlbumForm\n          fetcher={fetcher}\n          form={form}\n          onCancel={() => setOpenCreateAlbumModal(false)}\n          initialValues={initialValues}\n          action=\"edit\"\n        />\n      </Modal>\n      <Modal\n        closeIcon={false}\n        footer={null}\n        open={reportModal}\n        onCancel={closeReportModal}\n      >\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          <Title level={4} style={{ margin: 0 }}>\n            {t(\"please input reason to report\")}\n          </Title>\n          {reasonSelect}\n          {selectedReason === \"Others\" && (\n            <Input.TextArea\n              rows={4}\n              onChange={onReasonChanged}\n              value={reason}\n              disabled={fetcher.state !== \"idle\"}\n            />\n          )}\n          <TiltButton\n            color=\"danger\"\n            onClick={submitReport}\n            disabled={!reason.length || fetcher.state !== \"idle\"}\n          >\n            {t(\"report\")}\n          </TiltButton>\n        </Space>\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Text", "Title", "import_jsx_dev_runtime", "modalProps", "items", "_a"]
}
