{
  "version": 3,
  "sources": ["../../../app/routes/_app.tournaments.$id.tsx", "../../../app/components/pages/Tournament/TournamentHero.tsx", "../../../app/components/pages/Tournament/TournamentInvitationAlert.tsx", "../../../app/components/pages/Tournament/TournamentSingleMenu.tsx", "../../../app/components/pages/Tournament/TournamentTeamForm.tsx", "../../../app/components/pages/Tournament/TournamentTeamMemberForm.tsx"],
  "sourcesContent": ["import { useCallback, useContext, useEffect, useState } from \"react\";\nimport type {\n  ActionFunction,\n  LoaderFunction,\n  V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Outlet,\n  useFetcher,\n  useLoaderData,\n  useRevalidator,\n} from \"@remix-run/react\";\nimport { toNumber } from \"lodash\";\nimport {\n  Avatar,\n  Card,\n  Col,\n  Divider,\n  Form,\n  Modal,\n  Row,\n  Space,\n  Typography,\n  notification,\n  theme,\n} from \"antd\";\nimport { ExclamationCircleFilled, EditOutlined } from \"@ant-design/icons\";\nimport { KycForm, TiltButton, TiltMenus } from \"~/components/common\";\nimport * as APIServer from \"~/api\";\nimport {\n  TournamentGrid,\n  TournamentHero,\n  TournamentInvitationAlert,\n  TournamentSingleMenu,\n  TournamentTeam,\n  TournamentTeamForm,\n  TournamentTeamMemberForm,\n} from \"~/components/pages/Tournament\";\nimport { AffixMenu } from \"~/components/layouts\";\nimport { useTranslation } from \"react-i18next\";\nimport { commitSession, getSessionFromRequest } from \"~/session.server\";\nimport { AuthContext } from \"~/contexts\";\nimport { joinTournaments, resetFetcher } from \"~/utils/helper\";\nimport jwt_decode from \"jwt-decode\";\nconst { useToken } = theme;\nconst { Text, Title } = Typography;\nlet tournament: any = null;\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { id } = params;\n  const session = await getSessionFromRequest(request);\n  const toJoinTeams = session.get(\"toJoinTeams\");\n  const accessToken = session.get(\"accessToken\");\n  let uuid = \"\" as string;\n  let getInviteAndHaveTeam = false;\n\n  // let tournament: any;\n  let relatedTournaments: any;\n  let myTeam: any;\n  let joinedTournaments: any[] = [];\n  let transformedJoinedTournaments: any[] = [];\n  try {\n    if (id !== undefined) {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getTournament(toNumber(id))\n      );\n\n      if (tournamentRes.data) {\n        tournament = tournamentRes.data;\n      }\n      const relatedTournamentsRes = await APIServer.clientFromSession().request(\n        APIServer.getTournamentsPaginate({ game: tournament.game.name })\n      );\n      if (relatedTournamentsRes.data) {\n        relatedTournaments = relatedTournamentsRes.data.data.slice(0, 5);\n      }\n      if (accessToken) {\n        const myTeamRes = await APIServer.clientFromSession(session).request(\n          APIServer.getMyTeamFromTournamentId(toNumber(id))\n        );\n        if (myTeamRes.data && Object.keys(myTeamRes.data).length > 0) {\n          myTeam = myTeamRes.data;\n        }\n      }\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n    return redirect(\"/tournaments\");\n  }\n\n  if (accessToken) {\n    const accessTokenDecoded: any = jwt_decode(accessToken);\n    uuid = accessTokenDecoded.sub;\n    try {\n      const tournamentRes = await APIServer.clientFromSession().request(\n        APIServer.getJoinedTournament(uuid)\n      );\n      if (tournamentRes.data) {\n        joinedTournaments = tournamentRes.data;\n      }\n\n      transformedJoinedTournaments = joinedTournaments.map((item) => {\n        return {\n          id: item.tournament.id,\n          name: item.tournament.name,\n          nameEn: item.tournament.nameEn,\n          discordUrl: item.tournament.discordUrl,\n          registrationStartDate: item.tournament.registrationStartDate,\n          registrationEndDate: item.tournament.registrationEndDate,\n          startDate: item.tournament.startDate,\n          endDate: item.tournament.endDate,\n          maxTeam: item.tournament.maxTeam,\n          playerCount: item.tournament.playerCount,\n          additionalPlayerCount: item.tournament.additionalPlayerCount,\n          type: item.tournament.type,\n          status: item.tournament.status,\n          finalRoundLocation: item.tournament.finalRoundLocation,\n          finalRoundLocationEn: item.tournament.finalRoundLocationEn,\n          prize: item.tournament.prize,\n          description: item.tournament.description,\n          descriptionEn: item.tournament.descriptionEn,\n          qualificationRules: item.tournament.qualificationRules,\n          qualificationRulesEn: item.tournament.qualificationRulesEn,\n          isOnline: item.tournament.isOnline,\n          bannerImageUrl: item.tournament.bannerImageUrl,\n          thumbnailImageUrl: item.tournament.thumbnailImageUrl,\n          remark: item.tournament.remark,\n          isKycRequired: item.tournament.isKycRequired,\n          isDiscordIdRequired: item.tournament.isDiscordIdRequired,\n          isEmailRequired: item.tournament.isEmailRequired,\n          isPhoneNumberRequired: item.tournament.isPhoneNumberRequired,\n          isIgnRequired: item.tournament.isIgnRequired,\n          requirementFields: item.tournament.requirementFields,\n          organizerId: item.tournament.organizerId,\n          gameId: item.tournament.gameId,\n          organizer: item.tournament.organizer,\n          game: item.tournament.game,\n          createdDate: item.tournament.createdDate,\n          updatedDate: item.tournament.updatedDate,\n        };\n      });\n      relatedTournaments = joinTournaments(\n        relatedTournaments,\n        transformedJoinedTournaments\n      );\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n  }\n\n  if (toJoinTeams && myTeam) {\n    getInviteAndHaveTeam = true;\n  }\n\n  return json({\n    id,\n    myTeam,\n    relatedTournaments,\n    toJoinTeams,\n    tournament,\n    getInviteAndHaveTeam,\n  });\n};\n\nexport { tournament };\n\nexport const action: ActionFunction = async ({ params, request }) => {\n  const session = await getSessionFromRequest(request);\n  const formdata = await request.formData();\n  const currentAction = formdata.get(\"action\");\n  const teamUuid = formdata.get(\"teamUuid\") as string;\n  const toJoinTeamUuid = formdata.get(\"toJoinTeamUuid\") as string;\n  const memberUuid = formdata.get(\"memberUuid\") as string;\n  const submitData = formdata.get(\"data\");\n  const tournamentId = formdata.get(\"tournamentId\");\n\n  let success: any = null;\n  let updatedTeam: any = null;\n  try {\n    const flashObject = {\n      type: \"success\",\n      message: `successfully ${currentAction}`,\n      updateUser: true,\n    } as any;\n    if (request.method === \"DELETE\") {\n      const deleteTeamRes = await APIServer.clientFromSession(session).request(\n        APIServer.deleteTeamMember(teamUuid, memberUuid)\n      );\n      if (deleteTeamRes.data) {\n        updatedTeam = deleteTeamRes.data;\n      }\n    } else {\n      if (teamUuid) {\n        if (submitData) {\n          await APIServer.clientFromSession(session).request(\n            currentAction === \"join-team\"\n              ? APIServer.createTeamMember(toJoinTeamUuid, submitData)\n              : currentAction === \"update-team-member\"\n              ? APIServer.updateTeamMember(teamUuid, submitData)\n              : APIServer.updateTeam(tournamentId, submitData)\n          );\n          session.unset(\"toJoinTeams\");\n          flashObject.updateUser = true;\n        } else {\n          await APIServer.clientFromSession(session).request(\n            currentAction === \"leave-team\"\n              ? APIServer.leaveTeam(teamUuid)\n              : currentAction === \"submit-team\"\n              ? APIServer.submitTeam(teamUuid)\n              : APIServer.deleteTeam(teamUuid)\n          );\n        }\n      } else if (submitData) {\n        await APIServer.clientFromSession(session).request(\n          currentAction === \"submit-kyc\"\n            ? APIServer.submitKyc(submitData)\n            : APIServer.createTeam(tournamentId, submitData)\n        );\n        flashObject.updateUser = true;\n      }\n    }\n    success = currentAction;\n    if (currentAction === \"unset-invite\") {\n      session.unset(\"toJoinTeams\");\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message: \"You are already in a team\",\n      });\n    } else {\n      session.flash(\"flashMessage\", flashObject);\n    }\n  } catch (e: any) {\n    if (currentAction !== \"submit-kyc\") {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message:\n          e.errors && e.errors.length > 1\n            ? e.errors[0]\n            : e.response.data.message,\n      });\n    } else {\n      session.flash(\"flashMessage\", {\n        type: \"error\",\n        message:\n          e.errors && e.errors.length > 1\n            ? e.errors[0]\n            : e.response.data.message.desc\n            ? e.response.data.message.desc\n            : e.response.data.error,\n      });\n    }\n  }\n  return json(\n    { success, team: updatedTeam },\n    {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    }\n  );\n};\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"CTRL G\" },\n    {\n      name: \"description\",\n      content: \"\u0E1E\u0E1A\u0E01\u0E31\u0E1A\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E2A\u0E38\u0E14\u0E21\u0E31\u0E19\u0E2A\u0E4C \u0E43\u0E04\u0E23 \u0E46 \u0E01\u0E47\u0E40\u0E1B\u0E47\u0E19\u0E44\u0E14\u0E49\u0E17\u0E31\u0E49\u0E07\u0E19\u0E31\u0E01\u0E41\u0E02\u0E48\u0E07\u0E41\u0E25\u0E30\u0E1C\u0E39\u0E49\u0E08\u0E31\u0E14\",\n    },\n    { charSet: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, user-scalable=no\" },\n    { property: \"og:title\", content: tournament?.name + \" | Ctrlg.gg\" },\n    {\n      property: \"og:image\",\n      content: tournament?.thumbnailImageUrl\n        ? `https://d2007awoau332v.cloudfront.net/${tournament?.thumbnailImageUrl}`\n        : \"https://d2007awoau332v.cloudfront.net/assets/root.jpg\",\n    },\n    {\n      property: \"og:image:width\",\n      content: \"200\",\n    },\n    {\n      property: \"og:image:height\",\n      content: \"200\",\n    },\n    {\n      property: \"og:description\",\n      content: \"\u0E1E\u0E1A\u0E01\u0E31\u0E1A\u0E17\u0E31\u0E27\u0E23\u0E4C\u0E19\u0E32\u0E40\u0E21\u0E19\u0E15\u0E4C\u0E2A\u0E38\u0E14\u0E21\u0E31\u0E19\u0E2A\u0E4C \u0E43\u0E04\u0E23 \u0E46 \u0E01\u0E47\u0E40\u0E1B\u0E47\u0E19\u0E44\u0E14\u0E49\u0E17\u0E31\u0E49\u0E07\u0E19\u0E31\u0E01\u0E41\u0E02\u0E48\u0E07\u0E41\u0E25\u0E30\u0E1C\u0E39\u0E49\u0E08\u0E31\u0E14\",\n    },\n  ];\n};\n\nexport default function TournamentSingle() {\n  const {\n    id,\n    myTeam,\n    relatedTournaments,\n    toJoinTeams,\n    tournament,\n    getInviteAndHaveTeam,\n  } = useLoaderData();\n  const { t } = useTranslation();\n  const { token } = useToken();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const isOrganizer = tournament.organizer.id === user?.id;\n  const { menus } = TournamentSingleMenu(isOrganizer);\n\n  const fetcher = useFetcher();\n  const revalidator = useRevalidator();\n  const [form] = Form.useForm();\n  const [modal, contextHolder] = Modal.useModal();\n  const [currentTeam, setCurrentTeam] = useState<any>(myTeam);\n  const [toUpdateTeamData, setToUpdateTeamData] = useState<any>(null);\n  const [kycModal, setKycModal] = useState<boolean>(false);\n  const [afterKycSuccess, setAfterKycSuccess] = useState<string>(\"\");\n  const [teamModal, setTeamModal] = useState<boolean>(false);\n  const [memberModal, setMemberModal] = useState<boolean>(false);\n  const [joinTeamModal, setJoinTeamModal] = useState<any>(false);\n  const [api, messageContextHolder] = notification.useNotification();\n\n  const deleteTournament = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete this tournamnet`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id },\n          {\n            method: \"delete\",\n            action: `/resources/delete-tournament`,\n          }\n        );\n      },\n    });\n  }, [fetcher, id]);\n\n  if (tournament.discordUrl) {\n    menus.push({\n      link: tournament.discordUrl,\n      label: (\n        <Space size={10}>\n          <Avatar src=\"/image/social/discord.png\" />\n          <Text>{t(\"Discord\")}</Text>\n        </Space>\n      ),\n    });\n  }\n  if (isOrganizer) {\n    menus.push({\n      link: \"edit\",\n      label: (\n        <Space size={5}>\n          <EditOutlined /> {t(\"edit\")}\n        </Space>\n      ),\n    });\n  }\n\n  const isTeamOwner = (team: any) => {\n    return team && team.createdById && user && user.id == team.createdById;\n  };\n  const isOwner = isTeamOwner(currentTeam);\n\n  let toJoinTeam: any = null;\n\n  if (!myTeam) {\n    if (toJoinTeams && toJoinTeams.length > 0) {\n      toJoinTeam = toJoinTeams.find((t: any) => t.tournamentId == id);\n      if (user && toJoinTeam && toJoinTeam.createdById == user.id) {\n        toJoinTeam = null;\n      }\n    }\n  }\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    style: { backgroundColor: \"transparent\" },\n    styles: { body: { backgroundColor: \"transparent\" } },\n    modalRender: (modal: any) => modal,\n  } as any;\n\n  const kycNeeded = (currentUser: any) => {\n    return (\n      tournament.isKycRequired &&\n      currentUser &&\n      (!currentUser.profile || !currentUser.isDopaVerified)\n    );\n  };\n\n  const handleTeamActionClicked = useCallback(\n    (action?: string) => {\n      if (!user) {\n        openLoginModal();\n        return;\n      }\n      if (kycNeeded(user)) {\n        setKycModal(true);\n        setAfterKycSuccess(\"team\");\n        return;\n      }\n      if (currentTeam && currentTeam.uuid) {\n        modal.confirm({\n          title: action\n            ? `${t(`are you sure to ${action} team`)}?`\n            : isOwner\n            ? `${t(`are you sure to submit team`)}?`\n            : `${t(`are you sure to leave team`)}?`,\n          icon: <ExclamationCircleFilled />,\n          okText: t(\"confirm\"),\n          okType: action === \"delete\" || isOwner ? \"primary\" : \"danger\",\n          cancelText: t(\"cancel\"),\n          maskClosable: true,\n          onOk() {\n            fetcher.submit(\n              {\n                action: `${\n                  action ? action : isOwner ? \"submit\" : \"leave\"\n                }-team`,\n                teamUuid: currentTeam.uuid,\n              },\n              { method: \"post\" }\n            );\n          },\n        });\n      } else {\n        setTeamModal(true);\n      }\n    },\n    [currentTeam, user]\n  );\n\n  const handleTeamEditClicked = useCallback(() => {\n    if (!user) {\n      openLoginModal();\n      return;\n    }\n    if (isTeamOwner(currentTeam)) {\n      setTeamModal(true);\n    } else {\n      setMemberModal(true);\n    }\n  }, [currentTeam, user]);\n\n  const handleJoinTeam = useCallback(() => {\n    if (toJoinTeam) {\n      if (kycNeeded(user)) {\n        setKycModal(true);\n        setAfterKycSuccess(\"join\");\n        return;\n      }\n      setJoinTeamModal(true);\n    }\n  }, [user]);\n\n  const handleRemoveTeamMember = (teamUuid: string, memberUuid: string) => {\n    fetcher.submit(\n      {\n        action: \"delete-team-member\",\n        teamUuid,\n        memberUuid,\n      },\n      { method: \"delete\" }\n    );\n  };\n\n  const handleMemberSubmitted = useCallback(\n    (values: any) => {\n      if (!user) {\n        openLoginModal();\n        return;\n      }\n      if (toUpdateTeamData) {\n        if (currentTeam && currentTeam.uuid) {\n          fetcher.submit(\n            {\n              action: \"update-team\",\n              data: JSON.stringify({\n                ...values,\n                ...toUpdateTeamData,\n              }),\n              teamUuid: currentTeam.uuid,\n              tournamentId: tournament.id,\n            },\n            { method: \"post\" }\n          );\n        } else {\n          fetcher.submit(\n            {\n              action: \"create-team\",\n              data: JSON.stringify({\n                ...values,\n                ...toUpdateTeamData,\n              }),\n              tournamentId: tournament.id,\n            },\n            { method: \"post\" }\n          );\n        }\n      } else if (toJoinTeam) {\n        fetcher.submit(\n          {\n            action: \"join-team\",\n            data: JSON.stringify(values),\n            teamUuid: toJoinTeam.uuid,\n            toJoinTeamUuid: toJoinTeam.uuid,\n          },\n          { method: \"post\" }\n        );\n      } else if (currentTeam && currentTeam.uuid) {\n        fetcher.submit(\n          {\n            action: \"update-team-member\",\n            data: JSON.stringify(values),\n            teamUuid: currentTeam.uuid,\n          },\n          { method: \"put\" }\n        );\n      }\n    },\n    [currentTeam, toUpdateTeamData, user]\n  );\n\n  // Auto popup join team modal\n  useEffect(() => {\n    if (toJoinTeam) {\n      if (!user) {\n        openLoginModal();\n        return;\n      }\n      if (kycNeeded(user)) {\n        setKycModal(true);\n        setAfterKycSuccess(\"join\");\n        return;\n      }\n      setJoinTeamModal(true);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    setCurrentTeam(myTeam);\n  }, [myTeam]);\n\n  useEffect(() => {\n    if (getInviteAndHaveTeam) {\n      fetcher.submit(\n        {\n          action: \"unset-invite\",\n        },\n        { method: \"patch\" }\n      );\n    }\n  }, [getInviteAndHaveTeam]);\n\n  useEffect(() => {\n    if (\n      fetcher.data &&\n      fetcher.data.success &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.team) {\n        setCurrentTeam(fetcher.data.team);\n      }\n      let joinModal = false;\n      let teamModal = false;\n      if (fetcher.data.success === \"submit-kyc\") {\n        if (afterKycSuccess === \"team\") {\n          teamModal = true;\n        } else if (afterKycSuccess === \"join\") {\n          joinModal = true;\n        }\n      }\n      setJoinTeamModal(joinModal);\n      setTeamModal(teamModal);\n      setMemberModal(false);\n      setKycModal(false);\n      revalidator.revalidate();\n      api.open({\n        message: t(`successfully ${fetcher.data.success}`),\n        type: \"success\",\n        duration: 5,\n        placement: \"bottomRight\",\n      });\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, afterKycSuccess, revalidator]);\n\n  const canEdit =\n    tournament.status === \"opening\" &&\n    (!currentTeam ||\n      (currentTeam && currentTeam.status === \"draft\") ||\n      currentTeam.status === \"rejected\");\n\n  return (\n    <>\n      {contextHolder}\n      <TournamentHero data={tournament} />\n      <div\n        style={{\n          paddingInline: \"3.5%\",\n          paddingTop: 0,\n          paddingBottom: 30,\n          maxWidth: 1440,\n          marginInline: \"auto\",\n        }}\n      >\n        {toJoinTeam && (\n          <TournamentInvitationAlert\n            data={toJoinTeam}\n            onClick={handleJoinTeam}\n          />\n        )}\n        <AffixMenu>\n          <Space>\n            <TiltMenus menus={menus} preventScrollReset />\n            {isOrganizer && (\n              <TiltButton color=\"danger\" onClick={deleteTournament}>\n                {t(\"delete\")}\n              </TiltButton>\n            )}\n          </Space>\n        </AffixMenu>\n        <Row gutter={[40, 40]}>\n          <Col span={24} md={{ span: 8, order: 1 }}>\n            <Space direction=\"vertical\" style={{ display: \"flex\" }}>\n              <TournamentTeam\n                data={currentTeam}\n                displayInviteLink={canEdit}\n                onDelete={() => handleTeamActionClicked(\"delete\")}\n                onSubmit={\n                  canEdit\n                    ? () =>\n                        handleTeamActionClicked(isOwner ? \"submit\" : \"leave\")\n                    : undefined\n                }\n                onRemoveTeamMember={\n                  canEdit && isTeamOwner(currentTeam)\n                    ? handleRemoveTeamMember\n                    : undefined\n                }\n                onEdit={canEdit ? handleTeamEditClicked : undefined}\n                additionalMembers={tournament.additionalPlayerCount}\n                minMembers={tournament.playerCount}\n                submitAction={\n                  currentTeam\n                    ? canEdit && isTeamOwner(currentTeam)\n                      ? \"submit\"\n                      : \"leave\"\n                    : \"create\"\n                }\n              />\n              {currentTeam && currentTeam.status === \"pending\" ? (\n                <Card\n                  bodyStyle={{ padding: 10, textAlign: \"center\" }}\n                  bordered={false}\n                  style={{\n                    borderRadius: 10,\n                    borderTopLeftRadius: 0,\n                    borderTopRightRadius: 0,\n                    backgroundColor: token.colorBgBase,\n                  }}\n                >\n                  <Title\n                    level={5}\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    {t(\"your team is waiting for approval\")}\n                  </Title>\n                </Card>\n              ) : currentTeam && currentTeam.status === \"rejected\" ? (\n                <Card\n                  bodyStyle={{ padding: 10, textAlign: \"center\" }}\n                  bordered={false}\n                  style={{\n                    borderRadius: 10,\n                    borderTopLeftRadius: 0,\n                    borderTopRightRadius: 0,\n                    backgroundColor: token.colorBgBase,\n                  }}\n                >\n                  <Space direction=\"vertical\">\n                    <Title\n                      level={4}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        color: \"#c73320\",\n                      }}\n                    >\n                      {t(\"your team has been rejected\")}\n                    </Title>\n                    <Title\n                      level={5}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      {t(currentTeam.remark)}\n                    </Title>\n                  </Space>\n                </Card>\n              ) : currentTeam && currentTeam.status === \"approved\" ? (\n                <Card\n                  bodyStyle={{ padding: 10, textAlign: \"center\" }}\n                  bordered={false}\n                  style={{\n                    borderRadius: 10,\n                    borderTopLeftRadius: 0,\n                    borderTopRightRadius: 0,\n                    backgroundColor: token.colorBgBase,\n                  }}\n                >\n                  <Title\n                    level={4}\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {t(\"your team has been approved\")}\n                  </Title>\n                </Card>\n              ) : currentTeam && currentTeam.status === \"pending\" ? (\n                <Card\n                  bodyStyle={{ padding: 10, textAlign: \"center\" }}\n                  bordered={false}\n                  style={{\n                    borderRadius: 10,\n                    borderTopLeftRadius: 0,\n                    borderTopRightRadius: 0,\n                    backgroundColor: token.colorBgBase,\n                  }}\n                >\n                  <Title\n                    level={4}\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {t(\"your team is waiting for approval\")}\n                  </Title>\n                </Card>\n              ) : null}\n            </Space>\n          </Col>\n          <Col span={24} md={{ span: 16, order: 0 }}>\n            <Outlet />\n          </Col>\n        </Row>\n        <Divider style={{ marginBlock: 40 }} />\n        <Title level={3} style={{ marginBottom: 30 }}>\n          {t(\"related tournaments\")}\n        </Title>\n        <TournamentGrid data={relatedTournaments} />\n        <Modal\n          {...modalProps}\n          onCancel={() => setKycModal(false)}\n          open={kycModal}\n        >\n          <KycForm\n            fetcher={fetcher}\n            form={form}\n            loading={fetcher.state !== \"idle\"}\n          />\n        </Modal>\n        <Modal\n          {...modalProps}\n          onCancel={() => setTeamModal(false)}\n          open={teamModal && !(memberModal || joinTeamModal)}\n          zIndex={1001}\n        >\n          <TournamentTeamForm\n            team={currentTeam}\n            form={form}\n            isSlipRequired={tournament.isSlipRequired}\n            onCancel={() => {\n              setTeamModal(false);\n              setToUpdateTeamData(null);\n            }}\n            onSubmit={(values: any) => {\n              setToUpdateTeamData({ ...values });\n              setMemberModal(true);\n              setTeamModal(false);\n            }}\n            submitLabel={t(\"next\")}\n          />\n        </Modal>\n        <Modal\n          {...modalProps}\n          onCancel={() => {\n            setMemberModal(false);\n            setJoinTeamModal(false);\n          }}\n          open={memberModal || joinTeamModal}\n          zIndex={1002}\n        >\n          <TournamentTeamMemberForm\n            currentTeam={currentTeam}\n            team={\n              joinTeamModal\n                ? toJoinTeam\n                : toUpdateTeamData\n                ? toUpdateTeamData\n                : currentTeam\n            }\n            onBack={\n              toUpdateTeamData\n                ? // eslint-disable-next-line no-sequences\n                  () => (setMemberModal(false), setTeamModal(true))\n                : undefined\n            }\n            isDiscordIdRequired={tournament.isDiscordIdRequired}\n            isEmailRequired={tournament.isEmailRequired}\n            isPhoneNumberRequired={tournament.isPhoneNumberRequired}\n            isIgnRequired={tournament.isIgnRequired}\n            additionalFields={tournament.requirementFields}\n            onSubmit={handleMemberSubmitted}\n            submitLabel={\n              currentTeam\n                ? t(\"save\")\n                : joinTeamModal\n                ? t(\"join\")\n                : t(\"create team\")\n            }\n          />\n        </Modal>\n        {messageContextHolder}\n      </div>\n    </>\n  );\n}\n", "import {\n  Avatar,\n  Card,\n  Col,\n  Row,\n  Skeleton,\n  Space,\n  theme,\n  Typography,\n} from \"antd\";\nimport { TournamentDate } from \".\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { Author } from \"~/components/common\";\nimport { renderData } from \"~/utils/helper\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface TournamentHeroProps {\n  data: any;\n  loading?: boolean;\n}\n\nexport function TournamentHero(props: TournamentHeroProps) {\n  const { token } = useToken();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const { locale } = useContext(AppContext);\n  const { data, loading } = props;\n  const cardStyle = {\n    position: \"relative\",\n    display: \"flex\",\n    height: 350,\n    flexDirection: \"column\",\n    borderRadius: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundImage:\n      data && data.bannerImageUrl\n        ? `url(\"${cdnUrl}/${data.bannerImageUrl}\")`\n        : undefined,\n  } as any;\n  const bodyStyle = {\n    display: \"flex\",\n    flex: \"auto\",\n    alignItems: \"end\",\n    width: \"100%\",\n    paddingInline: \"3.5%\",\n    maxWidth: 1440,\n    marginInline: \"auto\",\n    paddingBlock: 20,\n  } as any;\n  const overlayStyle = {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  } as any;\n\n  return (\n    <>\n      <Card bordered={false} style={cardStyle} bodyStyle={bodyStyle}>\n        <div style={overlayStyle} />\n        {loading ? (\n          <Skeleton active />\n        ) : (\n          <Space size={15} style={{ display: \"flex\", position: \"relative\" }}>\n            <Avatar\n              size={72}\n              src={data.game.iconUrl ? `${cdnUrl}/${data.game.iconUrl}` : \"\"}\n            >\n              {data.game.name}\n            </Avatar>\n            <Space direction=\"vertical\" size={5}>\n              <Title level={2} style={{ margin: 0, color: \"#fff\" }}>\n                {renderData(data, \"name\", locale)}\n              </Title>\n              <Row style={{ color: \"#fff\" }} gutter={[15, 10]} wrap>\n                <Col>\n                  <TournamentDate\n                    startDate={data.startDate}\n                    endDate={data.endDate}\n                  />\n                </Col>\n                <Col>\n                  <Author\n                    displayImage={\n                      data.organizer && data.organizer.displayImage\n                        ? `${cdnUrl}/${data.organizer.displayImage}`\n                        : undefined\n                    }\n                  >\n                    {data.organizer.displayName}\n                  </Author>\n                </Col>\n              </Row>\n            </Space>\n          </Space>\n        )}\n      </Card>\n      <div\n        style={{ paddingInline: \"3.5%\", maxWidth: 1440, marginInline: \"auto\" }}\n      >\n        <Card\n          bodyStyle={{ padding: \"10px 15px\" }}\n          bordered={false}\n          style={{\n            borderRadius: 10,\n            borderTopLeftRadius: 0,\n            borderTopRightRadius: 0,\n            backgroundColor: token.colorBgBase,\n          }}\n        >\n          <Space\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            wrap\n          >\n            <Space size={5}>\n              <Text>{t(\"opening registration\")}</Text>\n              <Text style={{ fontWeight: 600 }}>\n                {dayjs(data.registrationStartDate).format(\"DD MMM YYYY\")}\n              </Text>\n            </Space>\n            <Space size={5}>\n              <Text>{t(\"participants\")}</Text>\n              <Card\n                style={{ borderRadius: 6, backgroundColor: \"transparent\" }}\n                bodyStyle={{ padding: \"0 10px\" }}\n              >\n                <Space size={4}>\n                  <Text style={{ fontWeight: 600, fontSize: \"1.5em\" }}>\n                    {data.maxTeam.toLocaleString()}\n                  </Text>\n                  <Text style={{ fontSize: \"0.9em\" }}>{t(\"teams\")}</Text>\n                </Space>\n              </Card>\n            </Space>\n          </Space>\n        </Card>\n      </div>\n    </>\n  );\n}\n", "import { Button, Card, Space } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface TournamentInvitationAlertProps {\n  data: any;\n  onClick: (team: any) => void;\n}\n\nexport function TournamentInvitationAlert(\n  props: TournamentInvitationAlertProps\n) {\n  const { data, onClick } = props;\n  const { t } = useTranslation();\n\n  if (!data || data.length <= 0) {\n    return null;\n  }\n\n  return (\n    <Card\n      bodyStyle={{ padding: \"10px 15px\" }}\n      bordered={false}\n      style={{\n        backgroundColor: \"#7164f4\",\n        color: \"#fff\",\n        border: 0,\n        marginTop: 30,\n      }}\n    >\n      <Space style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Space size={5}>\n          <InfoCircleOutlined />\n          {`${t(\"tournament invitation to\")} \"${data.name}\"`}\n        </Space>\n        <Button\n          type=\"primary\"\n          size=\"middle\"\n          style={{ color: \"#000\", borderRadius: 4 }}\n          onClick={(e: any) => onClick(data)}\n        >\n          {t(\"join\")}\n        </Button>\n      </Space>\n    </Card>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\n// import { Space } from \"antd\";\n// import { EditOutlined } from \"@ant-design/icons\";\n\nexport const TournamentSingleMenu: any = (isOrganizer: boolean) => {\n  const { t } = useTranslation();\n  const menus = [\n    {\n      link: \".\",\n      level: 2,\n      label: <span>{t(\"detail_1\")}</span>,\n    },\n    {\n      link: \"schedule\",\n      label: <span>{t(\"tournament schedule\")}</span>,\n    },\n    {\n      link: \"teams\",\n      label: <span>{t(\"participants\")}</span>,\n    },\n    {\n      link: \"webboard\",\n      label: <span>{t(\"tournament board\")}</span>,\n    },\n  ];\n\n  // if (isOrganizer) {\n  //   menus.push({\n  //     link: \"edit\",\n  //     label: (\n  //       <Space size={5}>\n  //         <EditOutlined /> {t(\"edit\")}\n  //       </Space>\n  //     ),\n  //   });\n  // }\n  return { menus };\n};\n", "import {\n  Avatar,\n  Card,\n  Checkbox,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Result,\n  Row,\n  Space,\n  Typography,\n  notification,\n  theme,\n  Image,\n} from \"antd\";\nimport {\n  EditOutlined,\n  LoadingOutlined,\n  CameraOutlined,\n} from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useFetcher, useMatches } from \"@remix-run/react\";\nimport {\n  FileUploader,\n  ImageSelector,\n  OverlayBg,\n  TiltButton,\n} from \"~/components/common\";\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface TournamentTeamFormProps {\n  form?: any;\n  team?: any;\n  onCancel?: (e: any) => void | undefined;\n  isSlipRequired?: boolean;\n  onSubmit: (values: any) => void;\n  submitLabel: string;\n}\n\nconst randomNumber = Math.floor(Math.random() * 8) + 1;\n\nexport function TournamentTeamForm(props: TournamentTeamFormProps) {\n  const { form, isSlipRequired, onCancel, onSubmit, submitLabel, team } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [messageApi, contextHolder] = notification.useNotification();\n  const { t } = useTranslation();\n  const fetcher = useFetcher();\n  const { token } = useToken();\n  const displayImageField = \"logo\";\n  const [previewImage, setPreviewImage] = useState<string>();\n  const [isContactPerson, setIsContactPerson] = useState<boolean>(\n    team && team.isContactPerson ? team.isContactPerson : false\n  );\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [isSlip, setIsSlip] = useState<boolean>(false);\n  const [previewUploadImage, setPreviewUploadImage] = useState<any>();\n\n  const avatarStyle = {\n    position: \"absolute\",\n    left: \"1.5%\",\n    bottom: -30,\n    padding: 2,\n    border: `5px solid ${token.colorBgLayout}`,\n    borderRadius: \"50%\",\n    overflow: \"hidden\",\n  } as any;\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleContactPersonChange = (e: any) => {\n    setIsContactPerson(e.target.checked);\n  };\n\n  const handleSelectPresetImage = useCallback(\n    (image: any) => {\n      form.setFieldValue(displayImageField, image.key);\n      setPreviewImage(image.url);\n    },\n    [form]\n  );\n\n  const displayPresetImages = Array(8)\n    .fill(\"\")\n    .map(\n      (arg: string, index: number) =>\n        `${cdnUrl}/profile-teams/profile-team-${index + 1}.jpg`\n    );\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"slipImageUrl\") {\n        form.setFieldValue(\"slipImageUrl\", fetcher.data.key);\n        setIsSlip(fetcher.data.isSlip);\n        setPreviewUploadImage(fetcher.data.previewImage);\n      }\n      setUploading(false);\n    }\n  }, [form, fetcher.data]);\n\n  return (\n    <Form\n      form={form}\n      onFinish={onSubmit}\n      initialValues={team}\n      layout=\"vertical\"\n    >\n      <Title level={4} style={{ margin: 0 }}>\n        {t(team ? \"team info\" : \"create team\")}\n      </Title>\n      <Divider style={{ marginBlock: 15 }} />\n      <Space direction=\"vertical\" size={0} style={{ display: \"flex\" }}>\n        <Form.Item\n          key={displayImageField}\n          name={displayImageField}\n          initialValue={`profile-teams/profile-team-${randomNumber}.jpg`}\n          style={{ margin: \"0px\", marginBottom: \"25px\", padding: \"0px\" }}\n          rules={[\n            {\n              required: true,\n              message: t(\"please input team logo\"),\n            },\n          ]}\n        >\n          <Row style={{ marginBottom: 10 }}>\n            <Col flex=\"auto\">\n              <Space direction=\"vertical\" size={5}>\n                <Text style={{ fontWeight: 600 }}>{t(\"team logo\")}</Text>\n                {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n                  <Avatar size={75}>\n                    <LoadingOutlined style={{ fontSize: 24 }} spin />\n                  </Avatar>\n                ) : (\n                  <div style={{ marginTop: \"60px\", marginBottom: \"60px\" }}>\n                    <div style={avatarStyle} className=\"hover-show-parent\">\n                      <Avatar\n                        size={75}\n                        src={\n                          previewImage\n                            ? previewImage\n                            : team && team.logo\n                            ? `${cdnUrl}/${team.logo}`\n                            : `${cdnUrl}/profile-teams/profile-team-${randomNumber}.jpg`\n                        }\n                      />\n                      <ImageSelector\n                        title={t(\"select display image\")}\n                        fetcher={fetcher}\n                        fieldName={displayImageField}\n                        onSelect={handleSelectPresetImage}\n                        presetImages={displayPresetImages}\n                        presetRound\n                      >\n                        <OverlayBg\n                          className=\"hover-show-child\"\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          <CameraOutlined\n                            style={{ fontSize: 30, color: \"#fff\" }}\n                          />\n                        </OverlayBg>\n                      </ImageSelector>\n                    </div>\n                  </div>\n                )}\n              </Space>\n            </Col>\n            <Col flex=\"none\">\n              <ImageSelector\n                title={t(\"select display image\")}\n                fetcher={fetcher}\n                fieldName={displayImageField}\n                onSelect={handleSelectPresetImage}\n                presetImages={displayPresetImages}\n                presetRound\n              >\n                <Space size={5} style={{ cursor: \"pointer\" }}>\n                  <EditOutlined style={{ color: \"#8263ea\" }} />\n                  <Text>{t(\"change\")}</Text>\n                </Space>\n              </ImageSelector>\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item\n          key=\"name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: t(\"please input team name\"),\n            },\n          ]}\n          label={\n            <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n              {t(\"team name\")}\n            </Text>\n          }\n        >\n          <Input />\n        </Form.Item>\n        {isSlipRequired && (\n          <Space\n            direction=\"vertical\"\n            size={5}\n            style={{ display: \"flex\", marginBottom: 20 }}\n          >\n            <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n              <Col flex=\"auto\">\n                <Text\n                  className={isSlipRequired ? \"required\" : undefined}\n                  style={{ fontWeight: 600 }}\n                >\n                  {t(\"upload slip image\")}\n                </Text>\n              </Col>\n              <Col flex=\"none\">\n                <Form.Item\n                  key=\"slipImageUrl\"\n                  name=\"slipImageUrl\"\n                  rules={[\n                    {\n                      required: true,\n                      message: `${t(\"please upload slip image\")}`,\n                    },\n                  ]}\n                >\n                  <FileUploader\n                    fetcher={fetcher}\n                    fieldName={\"slipImageUrl\"}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                    isSlip={true}\n                  >\n                    <Space size={5} style={{ cursor: \"pointer\" }}>\n                      <EditOutlined style={{ color: \"#8263ea\" }} />\n                      <Text>{t(\"upload\")}</Text>\n                    </Space>\n                  </FileUploader>\n                </Form.Item>\n              </Col>\n            </Row>\n            {uploading ? (\n              <Result\n                icon={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n              />\n            ) : form && form.getFieldValue(\"slipImageUrl\") ? (\n              <Image\n                preview={false}\n                style={{ maxWidth: \"400px\" }}\n                alt=\"slip\"\n                src={\n                  !isSlip\n                    ? `${cdnUrl}/${form.getFieldValue(\"slipImageUrl\")}`\n                    : `data:image/png;base64,${previewUploadImage}`\n                }\n              />\n            ) : (\n              <></>\n            )}\n          </Space>\n        )}\n        <Form.Item\n          key=\"isContactPerson\"\n          name=\"isContactPerson\"\n          initialValue={false}\n          valuePropName=\"checked\"\n        >\n          <Checkbox onChange={handleContactPersonChange}>\n            <Text>{t(\"you are team contact person\")}</Text>\n          </Checkbox>\n        </Form.Item>\n        {isContactPerson === false && (\n          <Card>\n            <Title level={4} style={{ margin: 0 }}>\n              {t(\"contact person\")}\n            </Title>\n            <Divider style={{ marginBlock: 15 }} />\n            <Form.Item\n              key=\"contactName\"\n              name=\"contactName\"\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"contact person name\")}\n                </Text>\n              }\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please input contactName\")}`,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              key=\"contactEmail\"\n              name=\"contactEmail\"\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"contact person email\")}\n                </Text>\n              }\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please input email\")}`,\n                },\n              ]}\n            >\n              <Input type=\"email\" />\n            </Form.Item>\n            <Form.Item\n              key=\"contactPhoneNumber\"\n              name=\"contactPhoneNumber\"\n              label={\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"contact person phone\")}\n                </Text>\n              }\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please input phone number\")}`,\n                },\n              ]}\n            >\n              <Input type=\"tel\" />\n            </Form.Item>\n          </Card>\n        )}\n      </Space>\n      <Row gutter={15} style={{ marginTop: 20 }}>\n        <Col span={12}>\n          <TiltButton color=\"secondary\" onClick={onCancel}>\n            {t(\"cancel\")}\n          </TiltButton>\n        </Col>\n        <Col span={12}>\n          {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n            <TiltButton color=\"secondary\">\n              <LoadingOutlined style={{ fontSize: 24 }} spin />\n            </TiltButton>\n          ) : (\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {submitLabel}\n            </TiltButton>\n          )}\n        </Col>\n      </Row>\n      {contextHolder}\n    </Form>\n  );\n}\n", "import { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Card,\n  DatePicker,\n  Divider,\n  Form,\n  Input,\n  Space,\n  theme,\n  Typography,\n} from \"antd\";\nimport { ArrowLeftOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport { InlineAvatar, TiltButton } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nimport { useMatches } from \"@remix-run/react\";\nimport dayjs from \"dayjs\";\n\nconst { useToken } = theme;\nconst { Text, Title } = Typography;\n\ninterface TournamentTeamMemberFormProps {\n  currentTeam?: any;\n  loading?: boolean;\n  isDiscordIdRequired: boolean;\n  isEmailRequired: boolean;\n  isPhoneNumberRequired: boolean;\n  isIgnRequired: boolean;\n  additionalFields?: any;\n  onBack?: (e: any) => void | undefined;\n  team: any;\n  onSubmit: (values: any) => void;\n  submitLabel: string;\n}\n\nexport function TournamentTeamMemberForm(props: TournamentTeamMemberFormProps) {\n  const { t } = useTranslation();\n  const {\n    isDiscordIdRequired,\n    isEmailRequired,\n    isPhoneNumberRequired,\n    isIgnRequired,\n    additionalFields,\n    loading,\n    onBack,\n    onSubmit,\n    submitLabel,\n    team,\n    currentTeam,\n  } = props;\n  const [form] = Form.useForm();\n  const { token } = useToken();\n  const { user } = useContext(AuthContext);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  let userMemberData = null as any;\n  let initialData = null as any;\n  if (currentTeam) {\n    userMemberData = currentTeam.members.find(\n      (member: any) => member.userId === user.id\n    );\n    initialData = userMemberData;\n  }\n\n  // const handleSubmitForm = useCallback(\n  //   (values: any) => {\n  //     if (needSubmitKyc && values.acceptWhalletConsent) {\n  //       onSubmit(\"submit-kyc\", values);\n  //     } else if (!team.id) {\n  //       onSubmit(\"create-team\", { ...values, ...team });\n  //     } else if (myTeamMember) {\n  //       onSubmit(\"update-team-member\", { ...values, id: myTeamMember.id });\n  //     } else {\n  //       onSubmit(\"join-team\", { ...values, teamId: team.id });\n  //     }\n  //   },\n  //   [team]\n  // );\n\n  const handleSubmitForm = (values: any) => {\n    // Extract values from form fields\n    const { email, phoneNumber, discordId, ign, ...additionalFields } = values;\n\n    // Create customfields array with name and value pairs\n    const customFields = Object.entries(additionalFields).map(\n      ([name, value]) => ({\n        name,\n        value,\n      })\n    );\n\n    // Prepare the final data object to be submitted\n    const formData = {\n      email,\n      phoneNumber,\n      discordId,\n      ign,\n      customFields,\n    };\n\n    // Call the onSubmit function with the formatted data\n    onSubmit(formData);\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={handleSubmitForm}\n      initialValues={initialData ? initialData : null}\n      layout=\"vertical\"\n    >\n      {onBack && (\n        <Space\n          size={5}\n          style={{ cursor: \"pointer\", marginBottom: 20 }}\n          onClick={onBack}\n        >\n          <ArrowLeftOutlined />\n          <Text>{t(\"back to edit team\")}</Text>\n        </Space>\n      )}\n      <Title level={4} style={{ margin: 0 }}>\n        {t(\"player info\")}\n      </Title>\n      <Divider style={{ marginBlock: 15 }} />\n      <Title level={5}>Team Name</Title>\n      <Card\n        bordered={false}\n        style={{ backgroundColor: token.colorBgBase, marginBottom: 15 }}\n        bodyStyle={{ padding: 10 }}\n      >\n        <InlineAvatar\n          avatarUrl={`${cdnUrl}/${team?.logo}`}\n          title={team?.name}\n          subtitle={\n            team?.createdBy ? (\n              <Text>{`${t(\"by\")} ${team?.createdBy.username}`}</Text>\n            ) : null\n          }\n        />\n      </Card>\n      <Form.Item\n        name=\"email\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"email\")}\n          </Text>\n        }\n        initialValue={\n          user?.profile.profileEmail ? user.profile.profileEmail : null\n        }\n        rules={\n          submitLabel === \"Create Team\" ||\n          submitLabel === \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E35\u0E21\" ||\n          isEmailRequired\n            ? [\n                {\n                  required: true,\n                  message: `${t(\"please input email\")}`,\n                },\n              ]\n            : []\n        }\n      >\n        <Input type=\"email\" />\n      </Form.Item>\n      <Form.Item\n        name=\"phoneNumber\"\n        initialValue={\n          user?.profile.profilePhoneNumber\n            ? user.profile.profilePhoneNumber\n            : null\n        }\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"phone number\")}\n          </Text>\n        }\n        rules={\n          submitLabel === \"Create Team\" ||\n          submitLabel === \"\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E35\u0E21\" ||\n          isPhoneNumberRequired\n            ? [\n                {\n                  required: true,\n                  message: `${t(\"please input phone\")}`,\n                },\n              ]\n            : []\n        }\n      >\n        <Input type=\"tel\" />\n      </Form.Item>\n      <Form.Item\n        name=\"discordId\"\n        initialValue={user?.profile.discordId ? user.profile.discordId : null}\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"discord id\")}\n          </Text>\n        }\n        rules={\n          isDiscordIdRequired\n            ? [\n                {\n                  required: true,\n                  message: `${t(\"please input discord id\")}`,\n                },\n              ]\n            : []\n        }\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"ign\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"game username\")}\n          </Text>\n        }\n        rules={\n          isIgnRequired\n            ? [\n                {\n                  required: true,\n                  message: `${t(\"please input game username\")}`,\n                },\n              ]\n            : []\n        }\n      >\n        <Input />\n      </Form.Item>\n      {additionalFields &&\n        additionalFields.length > 0 &&\n        additionalFields.map((field: any, index: number) => (\n          <Form.Item\n            key={field.name}\n            name={field.name}\n            initialValue={\n              initialData\n                ? field.type === \"date\"\n                  ? dayjs(initialData.customFields[index]?.value)\n                  : initialData.customFields[index]?.value\n                  ? initialData.customFields[index]?.value\n                  : null\n                : null\n            }\n            rules={[\n              {\n                required: field.isRequired,\n                message: `${t(\"please input data\")}`,\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(field.name)}\n              </Text>\n            }\n          >\n            {field.type === \"date\" ? (\n              <DatePicker\n                showToday={false}\n                allowClear\n                placeholder=\"DD/MM/YYYY\"\n                format=\"DD/MM/YYYY\"\n                style={{ display: \"flex\" }}\n              />\n            ) : (\n              <Input />\n            )}\n          </Form.Item>\n        ))}\n      {loading ? (\n        <TiltButton color=\"secondary\">\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </TiltButton>\n      ) : (\n        <TiltButton\n          color=\"primary\"\n          onClick={() => form.submit()}\n          style={{ marginTop: 20 }}\n        >\n          {submitLabel}\n        </TiltButton>\n      )}\n    </Form>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,gBAA6D;AAM7D,kBAA+B;AAO/B,oBAAyB;;;ACDzB,mBAAkB;AAGlB,mBAA2B;AAmDvB;AAhDJ,IAAM,EAAE,MAAM,MAAM,IAAI;AACxB,IAAM,EAAE,SAAS,IAAI;AAOd,SAAS,eAAe,OAA4B;AACzD,QAAM,EAAE,MAAM,IAAI,SAAS;AAC3B,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAC9B,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,EAAE,OAAO,QAAI,yBAAW,UAAU;AACxC,QAAM,EAAE,MAAM,QAAQ,IAAI;AAC1B,QAAM,YAAY;AAAA,IAChB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,oBAAoB;AAAA,IACpB,iBACE,QAAQ,KAAK,iBACT,QAAQ,UAAU,KAAK,qBACvB;AAAA,EACR;AACA,QAAM,YAAY;AAAA,IAChB,SAAS;AAAA,IACT,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,eAAe;AAAA,IACf,UAAU;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,EAChB;AACA,QAAM,eAAe;AAAA,IACnB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,iBAAiB;AAAA,EACnB;AAEA,SACE,sFACE;AAAA,uDAAC,gBAAK,UAAU,OAAO,OAAO,WAAW,WACvC;AAAA,yDAAC,SAAI,OAAO,gBAAZ;AAAA;AAAA;AAAA;AAAA,aAA0B;AAAA,MACzB,UACC,mDAAC,oBAAS,QAAM,QAAhB;AAAA;AAAA;AAAA;AAAA,aAAiB,IAEjB,mDAAC,iBAAM,MAAM,IAAI,OAAO,EAAE,SAAS,QAAQ,UAAU,WAAW,GAC9D;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,MAAM;AAAA,YACN,KAAK,KAAK,KAAK,UAAU,GAAG,UAAU,KAAK,KAAK,YAAY;AAAA,YAE3D,eAAK,KAAK;AAAA;AAAA,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QACA,mDAAC,iBAAM,WAAU,YAAW,MAAM,GAChC;AAAA,6DAAC,SAAM,OAAO,GAAG,OAAO,EAAE,QAAQ,GAAG,OAAO,OAAO,GAChD,qBAAW,MAAM,QAAQ,MAAM,KADlC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,eAAI,OAAO,EAAE,OAAO,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,MAAI,MACnD;AAAA,+DAAC,eACC;AAAA,cAAC;AAAA;AAAA,gBACC,WAAW,KAAK;AAAA,gBAChB,SAAS,KAAK;AAAA;AAAA,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAGA,KAJF;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,YACA,mDAAC,eACC;AAAA,cAAC;AAAA;AAAA,gBACC,cACE,KAAK,aAAa,KAAK,UAAU,eAC7B,GAAG,UAAU,KAAK,UAAU,iBAC5B;AAAA,gBAGL,eAAK,UAAU;AAAA;AAAA,cAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAQA,KATF;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA,eAjBF;AAAA;AAAA;AAAA;AAAA,iBAkBA;AAAA,aAtBF;AAAA;AAAA;AAAA;AAAA,eAuBA;AAAA,WA9BF;AAAA;AAAA;AAAA;AAAA,aA+BA;AAAA,SApCJ;AAAA;AAAA;AAAA;AAAA,WAsCA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,EAAE,eAAe,QAAQ,UAAU,MAAM,cAAc,OAAO;AAAA,QAErE;AAAA,UAAC;AAAA;AAAA,YACC,WAAW,EAAE,SAAS,YAAY;AAAA,YAClC,UAAU;AAAA,YACV,OAAO;AAAA,cACL,cAAc;AAAA,cACd,qBAAqB;AAAA,cACrB,sBAAsB;AAAA,cACtB,iBAAiB,MAAM;AAAA,YACzB;AAAA,YAEA;AAAA,cAAC;AAAA;AAAA,gBACC,OAAO,EAAE,SAAS,QAAQ,gBAAgB,gBAAgB;AAAA,gBAC1D,MAAI;AAAA,gBAEJ;AAAA,qEAAC,iBAAM,MAAM,GACX;AAAA,uEAAC,QAAM,YAAE,sBAAsB,KAA/B;AAAA;AAAA;AAAA;AAAA,2BAAiC;AAAA,oBACjC,mDAAC,QAAK,OAAO,EAAE,YAAY,IAAI,GAC5B,2BAAAC,SAAM,KAAK,qBAAqB,EAAE,OAAO,aAAa,KADzD;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA,yBAKA;AAAA,kBACA,mDAAC,iBAAM,MAAM,GACX;AAAA,uEAAC,QAAM,YAAE,cAAc,KAAvB;AAAA;AAAA;AAAA;AAAA,2BAAyB;AAAA,oBACzB;AAAA,sBAAC;AAAA;AAAA,wBACC,OAAO,EAAE,cAAc,GAAG,iBAAiB,cAAc;AAAA,wBACzD,WAAW,EAAE,SAAS,SAAS;AAAA,wBAE/B,6DAAC,iBAAM,MAAM,GACX;AAAA,6EAAC,QAAK,OAAO,EAAE,YAAY,KAAK,UAAU,QAAQ,GAC/C,eAAK,QAAQ,eAAe,KAD/B;AAAA;AAAA;AAAA;AAAA,iCAEA;AAAA,0BACA,mDAAC,QAAK,OAAO,EAAE,UAAU,QAAQ,GAAI,YAAE,OAAO,KAA9C;AAAA;AAAA;AAAA;AAAA,iCAAgD;AAAA,6BAJlD;AAAA;AAAA;AAAA;AAAA,+BAKA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUA;AAAA,uBAZF;AAAA;AAAA;AAAA;AAAA,yBAaA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAwBA;AAAA;AAAA,UAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAmCA;AAAA;AAAA,MAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAuCA;AAAA,OA/EF;AAAA;AAAA;AAAA;AAAA,SAgFA;AAEJ;;;ACpHU,IAAAC,0BAAA;AAvBH,SAAS,0BACd,OACA;AACA,QAAM,EAAE,MAAM,QAAQ,IAAI;AAC1B,QAAM,EAAE,EAAE,IAAI,eAAe;AAE7B,MAAI,CAAC,QAAQ,KAAK,UAAU,GAAG;AAC7B,WAAO;AAAA,EACT;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,WAAW,EAAE,SAAS,YAAY;AAAA,MAClC,UAAU;AAAA,MACV,OAAO;AAAA,QACL,iBAAiB;AAAA,QACjB,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,WAAW;AAAA,MACb;AAAA,MAEA,8DAAC,iBAAM,OAAO,EAAE,SAAS,QAAQ,gBAAgB,gBAAgB,GAC/D;AAAA,4DAAC,iBAAM,MAAM,GACX;AAAA,8DAAC,gCAAD;AAAA;AAAA;AAAA;AAAA,iBAAoB;AAAA,UACnB,GAAG,EAAE,0BAA0B,MAAM,KAAK;AAAA,aAF7C;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,EAAE,OAAO,QAAQ,cAAc,EAAE;AAAA,YACxC,SAAS,CAAC,MAAW,QAAQ,IAAI;AAAA,YAEhC,YAAE,MAAM;AAAA;AAAA,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA;AAAA,IAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBA;AAEJ;;;ACpCa,IAAAC,0BAAA;AANN,IAAM,uBAA4B,CAAC,gBAAyB;AACjE,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,QAAQ;AAAA,IACZ;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO,oDAAC,UAAM,YAAE,UAAU,KAAnB;AAAA;AAAA;AAAA;AAAA,aAAqB;AAAA,IAC9B;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,oDAAC,UAAM,YAAE,qBAAqB,KAA9B;AAAA;AAAA;AAAA;AAAA,aAAgC;AAAA,IACzC;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,oDAAC,UAAM,YAAE,cAAc,KAAvB;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,IAClC;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,oDAAC,UAAM,YAAE,kBAAkB,KAA3B;AAAA;AAAA;AAAA;AAAA,aAA6B;AAAA,IACtC;AAAA,EACF;AAYA,SAAO,EAAE,MAAM;AACjB;;;ACfA,IAAAC,gBAAiD;AAgG3C,IAAAC,0BAAA;AAvFN,IAAM,EAAE,MAAAC,OAAM,OAAAC,OAAM,IAAI;AACxB,IAAM,EAAE,UAAAC,UAAS,IAAI;AAWrB,IAAM,eAAe,KAAK,MAAM,KAAK,OAAO,IAAI,CAAC,IAAI;AAE9C,SAAS,mBAAmB,OAAgC;AACjE,QAAM,EAAE,MAAM,gBAAgB,UAAU,UAAU,aAAa,KAAK,IAAI;AACxE,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAC9B,QAAM,CAAC,YAAY,aAAa,IAAI,qBAAa,gBAAgB;AACjE,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,MAAM,IAAIA,UAAS;AAC3B,QAAM,oBAAoB;AAC1B,QAAM,CAAC,cAAc,eAAe,QAAI,wBAAiB;AACzD,QAAM,CAAC,iBAAiB,kBAAkB,QAAI;AAAA,IAC5C,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB;AAAA,EACxD;AACA,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAkB,KAAK;AACzD,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAkB,KAAK;AACnD,QAAM,CAAC,oBAAoB,qBAAqB,QAAI,wBAAc;AAElE,QAAM,cAAc;AAAA,IAClB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ,aAAa,MAAM;AAAA,IAC3B,cAAc;AAAA,IACd,UAAU;AAAA,EACZ;AAEA,QAAM,qBAAqB,MAAM;AAC/B,eAAW,KAAK;AAAA,MACd,MAAM;AAAA,MACN,SAAS,EAAE,gDAAgD;AAAA,MAC3D,UAAU;AAAA,MACV,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AAEA,QAAM,4BAA4B,CAAC,MAAW;AAC5C,uBAAmB,EAAE,OAAO,OAAO;AAAA,EACrC;AAEA,QAAM,8BAA0B;AAAA,IAC9B,CAAC,UAAe;AACd,WAAK,cAAc,mBAAmB,MAAM,GAAG;AAC/C,sBAAgB,MAAM,GAAG;AAAA,IAC3B;AAAA,IACA,CAAC,IAAI;AAAA,EACP;AAEA,QAAM,sBAAsB,MAAM,CAAC,EAChC,KAAK,EAAE,EACP;AAAA,IACC,CAAC,KAAa,UACZ,GAAG,qCAAqC,QAAQ;AAAA,EACpD;AAEF,+BAAU,MAAM;AACd,QAAI,QAAQ,QAAQ,QAAQ,KAAK,SAAS,QAAQ,OAAO;AACvD,UAAI,QAAQ,KAAK,UAAU,gBAAgB;AACzC,aAAK,cAAc,gBAAgB,QAAQ,KAAK,GAAG;AACnD,kBAAU,QAAQ,KAAK,MAAM;AAC7B,8BAAsB,QAAQ,KAAK,YAAY;AAAA,MACjD;AACA,mBAAa,KAAK;AAAA,IACpB;AAAA,EACF,GAAG,CAAC,MAAM,QAAQ,IAAI,CAAC;AAEvB,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,UAAU;AAAA,MACV,eAAe;AAAA,MACf,QAAO;AAAA,MAEP;AAAA,4DAACD,QAAA,EAAM,OAAO,GAAG,OAAO,EAAE,QAAQ,EAAE,GACjC,YAAE,OAAO,cAAc,aAAa,KADvC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,mBAAQ,OAAO,EAAE,aAAa,GAAG,KAAlC;AAAA;AAAA;AAAA;AAAA,eAAqC;AAAA,QACrC,oDAAC,iBAAM,WAAU,YAAW,MAAM,GAAG,OAAO,EAAE,SAAS,OAAO,GAC5D;AAAA;AAAA,YAAC,aAAK;AAAA,YAAL;AAAA,cAEC,MAAM;AAAA,cACN,cAAc,8BAA8B;AAAA,cAC5C,OAAO,EAAE,QAAQ,OAAO,cAAc,QAAQ,SAAS,MAAM;AAAA,cAC7D,OAAO;AAAA,gBACL;AAAA,kBACE,UAAU;AAAA,kBACV,SAAS,EAAE,wBAAwB;AAAA,gBACrC;AAAA,cACF;AAAA,cAEA,8DAAC,eAAI,OAAO,EAAE,cAAc,GAAG,GAC7B;AAAA,oEAAC,eAAI,MAAK,QACR,8DAAC,iBAAM,WAAU,YAAW,MAAM,GAChC;AAAA,sEAACD,OAAA,EAAK,OAAO,EAAE,YAAY,IAAI,GAAI,YAAE,WAAW,KAAhD;AAAA;AAAA;AAAA;AAAA,yBAAkD;AAAA,kBACjD,WAAW,QAAQ,SAAS,QAAQ,UAAU,SAC7C,oDAAC,kBAAO,MAAM,IACZ,8DAAC,2BAAgB,OAAO,EAAE,UAAU,GAAG,GAAG,MAAI,QAA9C;AAAA;AAAA;AAAA;AAAA,yBAA+C,KADjD;AAAA;AAAA;AAAA;AAAA,yBAEA,IAEA,oDAAC,SAAI,OAAO,EAAE,WAAW,QAAQ,cAAc,OAAO,GACpD,8DAAC,SAAI,OAAO,aAAa,WAAU,qBACjC;AAAA;AAAA,sBAAC;AAAA;AAAA,wBACC,MAAM;AAAA,wBACN,KACE,eACI,eACA,QAAQ,KAAK,OACb,GAAG,UAAU,KAAK,SAClB,GAAG,qCAAqC;AAAA;AAAA,sBAPhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASA;AAAA,oBACA;AAAA,sBAAC;AAAA;AAAA,wBACC,OAAO,EAAE,sBAAsB;AAAA,wBAC/B;AAAA,wBACA,WAAW;AAAA,wBACX,UAAU;AAAA,wBACV,cAAc;AAAA,wBACd,aAAW;AAAA,wBAEX;AAAA,0BAAC;AAAA;AAAA,4BACC,WAAU;AAAA,4BACV,OAAO,EAAE,QAAQ,UAAU;AAAA,4BAE3B;AAAA,8BAAC;AAAA;AAAA,gCACC,OAAO,EAAE,UAAU,IAAI,OAAO,OAAO;AAAA;AAAA,8BADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEA;AAAA;AAAA,0BANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOA;AAAA;AAAA,sBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAgBA;AAAA,uBA3BF;AAAA;AAAA;AAAA;AAAA,yBA4BA,KA7BF;AAAA;AAAA;AAAA;AAAA,yBA8BA;AAAA,qBArCJ;AAAA;AAAA;AAAA;AAAA,uBAuCA,KAxCF;AAAA;AAAA;AAAA;AAAA,uBAyCA;AAAA,gBACA,oDAAC,eAAI,MAAK,QACR;AAAA,kBAAC;AAAA;AAAA,oBACC,OAAO,EAAE,sBAAsB;AAAA,oBAC/B;AAAA,oBACA,WAAW;AAAA,oBACX,UAAU;AAAA,oBACV,cAAc;AAAA,oBACd,aAAW;AAAA,oBAEX,8DAAC,iBAAM,MAAM,GAAG,OAAO,EAAE,QAAQ,UAAU,GACzC;AAAA,0EAAC,wBAAa,OAAO,EAAE,OAAO,UAAU,KAAxC;AAAA;AAAA;AAAA;AAAA,6BAA2C;AAAA,sBAC3C,oDAACA,OAAA,EAAM,YAAE,QAAQ,KAAjB;AAAA;AAAA;AAAA;AAAA,6BAAmB;AAAA,yBAFrB;AAAA;AAAA;AAAA;AAAA,2BAGA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAYA,KAbF;AAAA;AAAA;AAAA;AAAA,uBAcA;AAAA,mBAzDF;AAAA;AAAA;AAAA;AAAA,qBA0DA;AAAA;AAAA,YArEK;AAAA,YADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAuEA;AAAA,UACA;AAAA,YAAC,aAAK;AAAA,YAAL;AAAA,cAEC,MAAK;AAAA,cACL,OAAO;AAAA,gBACL;AAAA,kBACE,UAAU;AAAA,kBACV,SAAS,EAAE,wBAAwB;AAAA,gBACrC;AAAA,cACF;AAAA,cACA,OACE,oDAACA,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,WAAW,KADhB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAGF,8DAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,qBAAO;AAAA;AAAA,YAdH;AAAA,YADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAgBA;AAAA,UACC,kBACC;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,MAAM;AAAA,cACN,OAAO,EAAE,SAAS,QAAQ,cAAc,GAAG;AAAA,cAE3C;AAAA,oEAAC,eAAI,OAAO,EAAE,cAAc,IAAI,YAAY,WAAW,GACrD;AAAA,sEAAC,eAAI,MAAK,QACR;AAAA,oBAACA;AAAA,oBAAA;AAAA,sBACC,WAAW,iBAAiB,aAAa;AAAA,sBACzC,OAAO,EAAE,YAAY,IAAI;AAAA,sBAExB,YAAE,mBAAmB;AAAA;AAAA,oBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKA,KANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBACA,oDAAC,eAAI,MAAK,QACR;AAAA,oBAAC,aAAK;AAAA,oBAAL;AAAA,sBAEC,MAAK;AAAA,sBACL,OAAO;AAAA,wBACL;AAAA,0BACE,UAAU;AAAA,0BACV,SAAS,GAAG,EAAE,0BAA0B;AAAA,wBAC1C;AAAA,sBACF;AAAA,sBAEA;AAAA,wBAAC;AAAA;AAAA,0BACC;AAAA,0BACA,WAAW;AAAA,0BACX,aAAa;AAAA,0BACb,qBAAqB;AAAA,0BACrB,QAAQ;AAAA,0BAER,8DAAC,iBAAM,MAAM,GAAG,OAAO,EAAE,QAAQ,UAAU,GACzC;AAAA,gFAAC,wBAAa,OAAO,EAAE,OAAO,UAAU,KAAxC;AAAA;AAAA;AAAA;AAAA,mCAA2C;AAAA,4BAC3C,oDAACA,OAAA,EAAM,YAAE,QAAQ,KAAjB;AAAA;AAAA;AAAA;AAAA,mCAAmB;AAAA,+BAFrB;AAAA;AAAA;AAAA;AAAA,iCAGA;AAAA;AAAA,wBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAWA;AAAA;AAAA,oBApBI;AAAA,oBADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAsBA,KAvBF;AAAA;AAAA;AAAA;AAAA,yBAwBA;AAAA,qBAjCF;AAAA;AAAA;AAAA;AAAA,uBAkCA;AAAA,gBACC,YACC;AAAA,kBAAC;AAAA;AAAA,oBACC,MAAM,oDAAC,2BAAgB,OAAO,EAAE,UAAU,GAAG,GAAG,MAAI,QAA9C;AAAA;AAAA;AAAA;AAAA,2BAA+C;AAAA;AAAA,kBADvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEA,IACE,QAAQ,KAAK,cAAc,cAAc,IAC3C;AAAA,kBAAC;AAAA;AAAA,oBACC,SAAS;AAAA,oBACT,OAAO,EAAE,UAAU,QAAQ;AAAA,oBAC3B,KAAI;AAAA,oBACJ,KACE,CAAC,SACG,GAAG,UAAU,KAAK,cAAc,cAAc,MAC9C,yBAAyB;AAAA;AAAA,kBAPjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASA,IAEA;AAAA;AAAA;AAAA;AAAA,uBAAE;AAAA;AAAA;AAAA,YAxDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA0DA;AAAA,UAEF;AAAA,YAAC,aAAK;AAAA,YAAL;AAAA,cAEC,MAAK;AAAA,cACL,cAAc;AAAA,cACd,eAAc;AAAA,cAEd,8DAAC,oBAAS,UAAU,2BAClB,8DAACA,OAAA,EAAM,YAAE,6BAA6B,KAAtC;AAAA;AAAA;AAAA;AAAA,qBAAwC,KAD1C;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,YAPI;AAAA,YADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASA;AAAA,UACC,oBAAoB,SACnB,oDAAC,gBACC;AAAA,gEAACC,QAAA,EAAM,OAAO,GAAG,OAAO,EAAE,QAAQ,EAAE,GACjC,YAAE,gBAAgB,KADrB;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,oDAAC,mBAAQ,OAAO,EAAE,aAAa,GAAG,KAAlC;AAAA;AAAA;AAAA;AAAA,mBAAqC;AAAA,YACrC;AAAA,cAAC,aAAK;AAAA,cAAL;AAAA,gBAEC,MAAK;AAAA,gBACL,OACE,oDAACD,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,qBAAqB,KAD1B;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEF,OAAO;AAAA,kBACL;AAAA,oBACE,UAAU;AAAA,oBACV,SAAS,GAAG,EAAE,0BAA0B;AAAA,kBAC1C;AAAA,gBACF;AAAA,gBAEA,8DAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,uBAAO;AAAA;AAAA,cAdH;AAAA,cADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAgBA;AAAA,YACA;AAAA,cAAC,aAAK;AAAA,cAAL;AAAA,gBAEC,MAAK;AAAA,gBACL,OACE,oDAACA,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,sBAAsB,KAD3B;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEF,OAAO;AAAA,kBACL;AAAA,oBACE,UAAU;AAAA,oBACV,SAAS,GAAG,EAAE,oBAAoB;AAAA,kBACpC;AAAA,gBACF;AAAA,gBAEA,8DAAC,iBAAM,MAAK,WAAZ;AAAA;AAAA;AAAA;AAAA,uBAAoB;AAAA;AAAA,cAdhB;AAAA,cADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAgBA;AAAA,YACA;AAAA,cAAC,aAAK;AAAA,cAAL;AAAA,gBAEC,MAAK;AAAA,gBACL,OACE,oDAACA,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,sBAAsB,KAD3B;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEF,OAAO;AAAA,kBACL;AAAA,oBACE,UAAU;AAAA,oBACV,SAAS,GAAG,EAAE,2BAA2B;AAAA,kBAC3C;AAAA,gBACF;AAAA,gBAEA,8DAAC,iBAAM,MAAK,SAAZ;AAAA;AAAA;AAAA;AAAA,uBAAkB;AAAA;AAAA,cAdd;AAAA,cADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAgBA;AAAA,eAvDF;AAAA;AAAA;AAAA;AAAA,iBAwDA;AAAA,aA1NJ;AAAA;AAAA;AAAA;AAAA,eA4NA;AAAA,QACA,oDAAC,eAAI,QAAQ,IAAI,OAAO,EAAE,WAAW,GAAG,GACtC;AAAA,8DAAC,eAAI,MAAM,IACT,8DAAC,cAAW,OAAM,aAAY,SAAS,UACpC,YAAE,QAAQ,KADb;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,oDAAC,eAAI,MAAM,IACR,qBAAW,QAAQ,SAAS,QAAQ,UAAU,SAC7C,oDAAC,cAAW,OAAM,aAChB,8DAAC,2BAAgB,OAAO,EAAE,UAAU,GAAG,GAAG,MAAI,QAA9C;AAAA;AAAA;AAAA;AAAA,iBAA+C,KADjD;AAAA;AAAA;AAAA;AAAA,iBAEA,IAEA,oDAAC,cAAW,OAAM,WAAU,SAAS,MAAM,KAAK,OAAO,GACpD,yBADH;AAAA;AAAA;AAAA;AAAA,iBAEA,KARJ;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,aAhBF;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,QACC;AAAA;AAAA;AAAA,IAzPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0PA;AAEJ;;;AC5WA,IAAAG,gBAA2B;AAgB3B,IAAAC,gBAAkB;AAsGR,IAAAC,0BAAA;AApGV,IAAM,EAAE,UAAAC,UAAS,IAAI;AACrB,IAAM,EAAE,MAAAC,OAAM,OAAAC,OAAM,IAAI;AAgBjB,SAAS,yBAAyB,OAAsC;AAC7E,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,CAAC,IAAI,IAAI,aAAK,QAAQ;AAC5B,QAAM,EAAE,MAAM,IAAIF,UAAS;AAC3B,QAAM,EAAE,KAAK,QAAI,0BAAW,WAAW;AACvC,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAE9B,MAAI,iBAAiB;AACrB,MAAI,cAAc;AAClB,MAAI,aAAa;AACf,qBAAiB,YAAY,QAAQ;AAAA,MACnC,CAAC,WAAgB,OAAO,WAAW,KAAK;AAAA,IAC1C;AACA,kBAAc;AAAA,EAChB;AAiBA,QAAM,mBAAmB,CAAC,WAAgB;AAExC,UAAM,EAAE,OAAO,aAAa,WAAW,KAAK,GAAGG,kBAAiB,IAAI;AAGpE,UAAM,eAAe,OAAO,QAAQA,iBAAgB,EAAE;AAAA,MACpD,CAAC,CAAC,MAAM,KAAK,OAAO;AAAA,QAClB;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAGA,UAAM,WAAW;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAGA,aAAS,QAAQ;AAAA,EACnB;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,UAAU;AAAA,MACV,eAAe,cAAc,cAAc;AAAA,MAC3C,QAAO;AAAA,MAEN;AAAA,kBACC;AAAA,UAAC;AAAA;AAAA,YACC,MAAM;AAAA,YACN,OAAO,EAAE,QAAQ,WAAW,cAAc,GAAG;AAAA,YAC7C,SAAS;AAAA,YAET;AAAA,kEAAC,+BAAD;AAAA;AAAA;AAAA;AAAA,qBAAmB;AAAA,cACnB,oDAACF,OAAA,EAAM,YAAE,mBAAmB,KAA5B;AAAA;AAAA;AAAA;AAAA,qBAA8B;AAAA;AAAA;AAAA,UANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA;AAAA,QAEF,oDAACC,QAAA,EAAM,OAAO,GAAG,OAAO,EAAE,QAAQ,EAAE,GACjC,YAAE,aAAa,KADlB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,mBAAQ,OAAO,EAAE,aAAa,GAAG,KAAlC;AAAA;AAAA;AAAA;AAAA,eAAqC;AAAA,QACrC,oDAACA,QAAA,EAAM,OAAO,GAAG,yBAAjB;AAAA;AAAA;AAAA;AAAA,eAA0B;AAAA,QAC1B;AAAA,UAAC;AAAA;AAAA,YACC,UAAU;AAAA,YACV,OAAO,EAAE,iBAAiB,MAAM,aAAa,cAAc,GAAG;AAAA,YAC9D,WAAW,EAAE,SAAS,GAAG;AAAA,YAEzB;AAAA,cAAC;AAAA;AAAA,gBACC,WAAW,GAAG,UAAU,6BAAM;AAAA,gBAC9B,OAAO,6BAAM;AAAA,gBACb,WACE,6BAAM,aACJ,oDAACD,OAAA,EAAM,aAAG,EAAE,IAAI,KAAK,6BAAM,UAAU,cAArC;AAAA;AAAA;AAAA;AAAA,uBAAgD,IAC9C;AAAA;AAAA,cANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAQA;AAAA;AAAA,UAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcA;AAAA,QACA;AAAA,UAAC,aAAK;AAAA,UAAL;AAAA,YACC,MAAK;AAAA,YACL,OACE,oDAACA,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,OAAO,KADZ;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEF,eACE,6BAAM,QAAQ,gBAAe,KAAK,QAAQ,eAAe;AAAA,YAE3D,OACE,gBAAgB,iBAChB,gBAAgB,sDAChB,kBACI;AAAA,cACE;AAAA,gBACE,UAAU;AAAA,gBACV,SAAS,GAAG,EAAE,oBAAoB;AAAA,cACpC;AAAA,YACF,IACA,CAAC;AAAA,YAGP,8DAAC,iBAAM,MAAK,WAAZ;AAAA;AAAA;AAAA;AAAA,mBAAoB;AAAA;AAAA,UAvBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAwBA;AAAA,QACA;AAAA,UAAC,aAAK;AAAA,UAAL;AAAA,YACC,MAAK;AAAA,YACL,eACE,6BAAM,QAAQ,sBACV,KAAK,QAAQ,qBACb;AAAA,YAEN,OACE,oDAACA,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,cAAc,KADnB;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEF,OACE,gBAAgB,iBAChB,gBAAgB,sDAChB,wBACI;AAAA,cACE;AAAA,gBACE,UAAU;AAAA,gBACV,SAAS,GAAG,EAAE,oBAAoB;AAAA,cACpC;AAAA,YACF,IACA,CAAC;AAAA,YAGP,8DAAC,iBAAM,MAAK,SAAZ;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAAA;AAAA,UAzBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA0BA;AAAA,QACA;AAAA,UAAC,aAAK;AAAA,UAAL;AAAA,YACC,MAAK;AAAA,YACL,eAAc,6BAAM,QAAQ,aAAY,KAAK,QAAQ,YAAY;AAAA,YACjE,OACE,oDAACA,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,YAAY,KADjB;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEF,OACE,sBACI;AAAA,cACE;AAAA,gBACE,UAAU;AAAA,gBACV,SAAS,GAAG,EAAE,yBAAyB;AAAA,cACzC;AAAA,YACF,IACA,CAAC;AAAA,YAGP,8DAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,mBAAO;AAAA;AAAA,UAnBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoBA;AAAA,QACA;AAAA,UAAC,aAAK;AAAA,UAAL;AAAA,YACC,MAAK;AAAA,YACL,OACE,oDAACA,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,eAAe,KADpB;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEF,OACE,gBACI;AAAA,cACE;AAAA,gBACE,UAAU;AAAA,gBACV,SAAS,GAAG,EAAE,4BAA4B;AAAA,cAC5C;AAAA,YACF,IACA,CAAC;AAAA,YAGP,8DAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,mBAAO;AAAA;AAAA,UAlBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAmBA;AAAA,QACC,oBACC,iBAAiB,SAAS,KAC1B,iBAAiB,IAAI,CAAC,OAAY,UAAe;AA7OzD;AA8OU;AAAA,YAAC,aAAK;AAAA,YAAL;AAAA,cAEC,MAAM,MAAM;AAAA,cACZ,cACE,cACI,MAAM,SAAS,aACb,cAAAG,UAAM,iBAAY,aAAa,KAAK,MAA9B,mBAAiC,KAAK,MAC5C,iBAAY,aAAa,KAAK,MAA9B,mBAAiC,UACjC,iBAAY,aAAa,KAAK,MAA9B,mBAAiC,QACjC,OACF;AAAA,cAEN,OAAO;AAAA,gBACL;AAAA,kBACE,UAAU,MAAM;AAAA,kBAChB,SAAS,GAAG,EAAE,mBAAmB;AAAA,gBACnC;AAAA,cACF;AAAA,cACA,OACE,oDAACH,OAAA,EAAK,OAAO,EAAE,YAAY,KAAK,UAAU,UAAU,GACjD,YAAE,MAAM,IAAI,KADf;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAGD,gBAAM,SAAS,SACd;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAW;AAAA,kBACX,YAAU;AAAA,kBACV,aAAY;AAAA,kBACZ,QAAO;AAAA,kBACP,OAAO,EAAE,SAAS,OAAO;AAAA;AAAA,gBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAMA,IAEA,oDAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,qBAAO;AAAA;AAAA,YAhCJ,MAAM;AAAA,YADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAmCA;AAAA,SACD;AAAA,QACF,UACC,oDAAC,cAAW,OAAM,aAChB,8DAAC,2BAAgB,OAAO,EAAE,UAAU,GAAG,GAAG,MAAI,QAA9C;AAAA;AAAA;AAAA;AAAA,eAA+C,KADjD;AAAA;AAAA;AAAA;AAAA,eAEA,IAEA;AAAA,UAAC;AAAA;AAAA,YACC,OAAM;AAAA,YACN,SAAS,MAAM,KAAK,OAAO;AAAA,YAC3B,OAAO,EAAE,WAAW,GAAG;AAAA,YAEtB;AAAA;AAAA,UALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA;AAAA;AAAA;AAAA,IApLJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsLA;AAEJ;;;ALzPA,qBAAqD;AA4RzC,IAAAI,0BAAA;AAxRZ,IAAM,EAAE,UAAAC,UAAS,IAAI;AACrB,IAAM,EAAE,MAAAC,OAAM,OAAAC,OAAM,IAAI;AACxB,IAAI,aAAkB;AAwNf,IAAM,OAAwB,MAAM;AACzC,SAAO;AAAA,IACL,EAAE,OAAO,SAAS;AAAA,IAClB;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,EAAE,SAAS,QAAQ;AAAA,IACnB,EAAE,MAAM,YAAY,SAAS,uCAAuC;AAAA,IACpE,EAAE,UAAU,YAAY,UAAS,yCAAY,QAAO,cAAc;AAAA,IAClE;AAAA,MACE,UAAU;AAAA,MACV,UAAS,yCAAY,qBACjB,yCAAyC,yCAAY,sBACrD;AAAA,IACN;AAAA,IACA;AAAA,MACE,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAEe,SAAR,mBAAoC;AACzC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAAC;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,EAAE,MAAM,IAAIC,UAAS;AAC3B,QAAM,EAAE,MAAM,eAAe,QAAI,0BAAW,WAAW;AACvD,QAAM,cAAcD,YAAW,UAAU,QAAO,6BAAM;AACtD,QAAM,EAAE,MAAM,IAAI,qBAAqB,WAAW;AAElD,QAAM,UAAU,WAAW;AAC3B,QAAM,cAAc,eAAe;AACnC,QAAM,CAAC,IAAI,IAAI,aAAK,QAAQ;AAC5B,QAAM,CAAC,OAAO,aAAa,IAAI,cAAM,SAAS;AAC9C,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAc,MAAM;AAC1D,QAAM,CAAC,kBAAkB,mBAAmB,QAAI,wBAAc,IAAI;AAClE,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAkB,KAAK;AACvD,QAAM,CAAC,iBAAiB,kBAAkB,QAAI,wBAAiB,EAAE;AACjE,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAkB,KAAK;AACzD,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAkB,KAAK;AAC7D,QAAM,CAAC,eAAe,gBAAgB,QAAI,wBAAc,KAAK;AAC7D,QAAM,CAAC,KAAK,oBAAoB,IAAI,qBAAa,gBAAgB;AAEjE,QAAM,uBAAmB,2BAAY,MAAM;AACzC,UAAM,QAAQ;AAAA,MACZ,OAAO,GAAG,EAAE,wCAAwC;AAAA,MACpD,MAAM,oDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,MAC/B,QAAQ,EAAE,SAAS;AAAA,MACnB,QAAQ;AAAA,MACR,YAAY,EAAE,QAAQ;AAAA,MACtB,cAAc;AAAA,MACd,OAAO;AACL,gBAAQ;AAAA,UACN,EAAE,GAAG;AAAA,UACL;AAAA,YACE,QAAQ;AAAA,YACR,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,SAAS,EAAE,CAAC;AAEhB,MAAIA,YAAW,YAAY;AACzB,UAAM,KAAK;AAAA,MACT,MAAMA,YAAW;AAAA,MACjB,OACE,oDAAC,iBAAM,MAAM,IACX;AAAA,4DAAC,kBAAO,KAAI,+BAAZ;AAAA;AAAA;AAAA;AAAA,eAAwC;AAAA,QACxC,oDAACE,OAAA,EAAM,YAAE,SAAS,KAAlB;AAAA;AAAA;AAAA;AAAA,eAAoB;AAAA,WAFtB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,IAEJ,CAAC;AAAA,EACH;AACA,MAAI,aAAa;AACf,UAAM,KAAK;AAAA,MACT,MAAM;AAAA,MACN,OACE,oDAAC,iBAAM,MAAM,GACX;AAAA,4DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,eAAc;AAAA,QAAE;AAAA,QAAE,EAAE,MAAM;AAAA,WAD5B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,IAEJ,CAAC;AAAA,EACH;AAEA,QAAM,cAAc,CAAC,SAAc;AACjC,WAAO,QAAQ,KAAK,eAAe,QAAQ,KAAK,MAAM,KAAK;AAAA,EAC7D;AACA,QAAM,UAAU,YAAY,WAAW;AAEvC,MAAI,aAAkB;AAEtB,MAAI,CAAC,QAAQ;AACX,QAAI,eAAe,YAAY,SAAS,GAAG;AACzC,mBAAa,YAAY,KAAK,CAACC,OAAWA,GAAE,gBAAgB,EAAE;AAC9D,UAAI,QAAQ,cAAc,WAAW,eAAe,KAAK,IAAI;AAC3D,qBAAa;AAAA,MACf;AAAA,IACF;AAAA,EACF;AAEA,QAAM,aAAa;AAAA,IACjB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,OAAO,EAAE,iBAAiB,cAAc;AAAA,IACxC,QAAQ,EAAE,MAAM,EAAE,iBAAiB,cAAc,EAAE;AAAA,IACnD,aAAa,CAACC,WAAeA;AAAA,EAC/B;AAEA,QAAM,YAAY,CAAC,gBAAqB;AACtC,WACEJ,YAAW,iBACX,gBACC,CAAC,YAAY,WAAW,CAAC,YAAY;AAAA,EAE1C;AAEA,QAAM,8BAA0B;AAAA,IAC9B,CAAC,WAAoB;AACnB,UAAI,CAAC,MAAM;AACT,uBAAe;AACf;AAAA,MACF;AACA,UAAI,UAAU,IAAI,GAAG;AACnB,oBAAY,IAAI;AAChB,2BAAmB,MAAM;AACzB;AAAA,MACF;AACA,UAAI,eAAe,YAAY,MAAM;AACnC,cAAM,QAAQ;AAAA,UACZ,OAAO,SACH,GAAG,EAAE,mBAAmB,aAAa,OACrC,UACA,GAAG,EAAE,6BAA6B,OAClC,GAAG,EAAE,4BAA4B;AAAA,UACrC,MAAM,oDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,iBAAyB;AAAA,UAC/B,QAAQ,EAAE,SAAS;AAAA,UACnB,QAAQ,WAAW,YAAY,UAAU,YAAY;AAAA,UACrD,YAAY,EAAE,QAAQ;AAAA,UACtB,cAAc;AAAA,UACd,OAAO;AACL,oBAAQ;AAAA,cACN;AAAA,gBACE,QAAQ,GACN,SAAS,SAAS,UAAU,WAAW;AAAA,gBAEzC,UAAU,YAAY;AAAA,cACxB;AAAA,cACA,EAAE,QAAQ,OAAO;AAAA,YACnB;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH,OAAO;AACL,qBAAa,IAAI;AAAA,MACnB;AAAA,IACF;AAAA,IACA,CAAC,aAAa,IAAI;AAAA,EACpB;AAEA,QAAM,4BAAwB,2BAAY,MAAM;AAC9C,QAAI,CAAC,MAAM;AACT,qBAAe;AACf;AAAA,IACF;AACA,QAAI,YAAY,WAAW,GAAG;AAC5B,mBAAa,IAAI;AAAA,IACnB,OAAO;AACL,qBAAe,IAAI;AAAA,IACrB;AAAA,EACF,GAAG,CAAC,aAAa,IAAI,CAAC;AAEtB,QAAM,qBAAiB,2BAAY,MAAM;AACvC,QAAI,YAAY;AACd,UAAI,UAAU,IAAI,GAAG;AACnB,oBAAY,IAAI;AAChB,2BAAmB,MAAM;AACzB;AAAA,MACF;AACA,uBAAiB,IAAI;AAAA,IACvB;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AAET,QAAM,yBAAyB,CAAC,UAAkB,eAAuB;AACvE,YAAQ;AAAA,MACN;AAAA,QACE,QAAQ;AAAA,QACR;AAAA,QACA;AAAA,MACF;AAAA,MACA,EAAE,QAAQ,SAAS;AAAA,IACrB;AAAA,EACF;AAEA,QAAM,4BAAwB;AAAA,IAC5B,CAAC,WAAgB;AACf,UAAI,CAAC,MAAM;AACT,uBAAe;AACf;AAAA,MACF;AACA,UAAI,kBAAkB;AACpB,YAAI,eAAe,YAAY,MAAM;AACnC,kBAAQ;AAAA,YACN;AAAA,cACE,QAAQ;AAAA,cACR,MAAM,KAAK,UAAU;AAAA,gBACnB,GAAG;AAAA,gBACH,GAAG;AAAA,cACL,CAAC;AAAA,cACD,UAAU,YAAY;AAAA,cACtB,cAAcA,YAAW;AAAA,YAC3B;AAAA,YACA,EAAE,QAAQ,OAAO;AAAA,UACnB;AAAA,QACF,OAAO;AACL,kBAAQ;AAAA,YACN;AAAA,cACE,QAAQ;AAAA,cACR,MAAM,KAAK,UAAU;AAAA,gBACnB,GAAG;AAAA,gBACH,GAAG;AAAA,cACL,CAAC;AAAA,cACD,cAAcA,YAAW;AAAA,YAC3B;AAAA,YACA,EAAE,QAAQ,OAAO;AAAA,UACnB;AAAA,QACF;AAAA,MACF,WAAW,YAAY;AACrB,gBAAQ;AAAA,UACN;AAAA,YACE,QAAQ;AAAA,YACR,MAAM,KAAK,UAAU,MAAM;AAAA,YAC3B,UAAU,WAAW;AAAA,YACrB,gBAAgB,WAAW;AAAA,UAC7B;AAAA,UACA,EAAE,QAAQ,OAAO;AAAA,QACnB;AAAA,MACF,WAAW,eAAe,YAAY,MAAM;AAC1C,gBAAQ;AAAA,UACN;AAAA,YACE,QAAQ;AAAA,YACR,MAAM,KAAK,UAAU,MAAM;AAAA,YAC3B,UAAU,YAAY;AAAA,UACxB;AAAA,UACA,EAAE,QAAQ,MAAM;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAAA,IACA,CAAC,aAAa,kBAAkB,IAAI;AAAA,EACtC;AAGA,+BAAU,MAAM;AACd,QAAI,YAAY;AACd,UAAI,CAAC,MAAM;AACT,uBAAe;AACf;AAAA,MACF;AACA,UAAI,UAAU,IAAI,GAAG;AACnB,oBAAY,IAAI;AAChB,2BAAmB,MAAM;AACzB;AAAA,MACF;AACA,uBAAiB,IAAI;AAAA,IACvB;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AAET,+BAAU,MAAM;AACd,mBAAe,MAAM;AAAA,EACvB,GAAG,CAAC,MAAM,CAAC;AAEX,+BAAU,MAAM;AACd,QAAI,sBAAsB;AACxB,cAAQ;AAAA,QACN;AAAA,UACE,QAAQ;AAAA,QACV;AAAA,QACA,EAAE,QAAQ,QAAQ;AAAA,MACpB;AAAA,IACF;AAAA,EACF,GAAG,CAAC,oBAAoB,CAAC;AAEzB,+BAAU,MAAM;AACd,QACE,QAAQ,QACR,QAAQ,KAAK,WACb,QAAQ,UAAU,UAClB,YAAY,UAAU,QACtB;AACA,UAAI,QAAQ,KAAK,MAAM;AACrB,uBAAe,QAAQ,KAAK,IAAI;AAAA,MAClC;AACA,UAAI,YAAY;AAChB,UAAIK,aAAY;AAChB,UAAI,QAAQ,KAAK,YAAY,cAAc;AACzC,YAAI,oBAAoB,QAAQ;AAC9B,UAAAA,aAAY;AAAA,QACd,WAAW,oBAAoB,QAAQ;AACrC,sBAAY;AAAA,QACd;AAAA,MACF;AACA,uBAAiB,SAAS;AAC1B,mBAAaA,UAAS;AACtB,qBAAe,KAAK;AACpB,kBAAY,KAAK;AACjB,kBAAY,WAAW;AACvB,UAAI,KAAK;AAAA,QACP,SAAS,EAAE,gBAAgB,QAAQ,KAAK,SAAS;AAAA,QACjD,MAAM;AAAA,QACN,UAAU;AAAA,QACV,WAAW;AAAA,MACb,CAAC;AACD,mBAAa,OAAO;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,SAAS,iBAAiB,WAAW,CAAC;AAE1C,QAAM,UACJL,YAAW,WAAW,cACrB,CAAC,eACC,eAAe,YAAY,WAAW,WACvC,YAAY,WAAW;AAE3B,SACE,wFACG;AAAA;AAAA,IACD,oDAAC,kBAAe,MAAMA,eAAtB;AAAA;AAAA;AAAA;AAAA,WAAkC;AAAA,IAClC;AAAA,MAAC;AAAA;AAAA,QACC,OAAO;AAAA,UACL,eAAe;AAAA,UACf,YAAY;AAAA,UACZ,eAAe;AAAA,UACf,UAAU;AAAA,UACV,cAAc;AAAA,QAChB;AAAA,QAEC;AAAA,wBACC;AAAA,YAAC;AAAA;AAAA,cACC,MAAM;AAAA,cACN,SAAS;AAAA;AAAA,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGA;AAAA,UAEF,oDAAC,aACC,8DAAC,iBACC;AAAA,gEAAC,aAAU,OAAc,oBAAkB,QAA3C;AAAA;AAAA;AAAA;AAAA,mBAA4C;AAAA,YAC3C,eACC,oDAAC,cAAW,OAAM,UAAS,SAAS,kBACjC,YAAE,QAAQ,KADb;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eALJ;AAAA;AAAA;AAAA;AAAA,iBAOA,KARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,UACA,oDAAC,eAAI,QAAQ,CAAC,IAAI,EAAE,GAClB;AAAA,gEAAC,eAAI,MAAM,IAAI,IAAI,EAAE,MAAM,GAAG,OAAO,EAAE,GACrC,8DAAC,iBAAM,WAAU,YAAW,OAAO,EAAE,SAAS,OAAO,GACnD;AAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,MAAM;AAAA,kBACN,mBAAmB;AAAA,kBACnB,UAAU,MAAM,wBAAwB,QAAQ;AAAA,kBAChD,UACE,UACI,MACE,wBAAwB,UAAU,WAAW,OAAO,IACtD;AAAA,kBAEN,oBACE,WAAW,YAAY,WAAW,IAC9B,yBACA;AAAA,kBAEN,QAAQ,UAAU,wBAAwB;AAAA,kBAC1C,mBAAmBA,YAAW;AAAA,kBAC9B,YAAYA,YAAW;AAAA,kBACvB,cACE,cACI,WAAW,YAAY,WAAW,IAChC,WACA,UACF;AAAA;AAAA,gBAvBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAyBA;AAAA,cACC,eAAe,YAAY,WAAW,YACrC;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAW,EAAE,SAAS,IAAI,WAAW,SAAS;AAAA,kBAC9C,UAAU;AAAA,kBACV,OAAO;AAAA,oBACL,cAAc;AAAA,oBACd,qBAAqB;AAAA,oBACrB,sBAAsB;AAAA,oBACtB,iBAAiB,MAAM;AAAA,kBACzB;AAAA,kBAEA;AAAA,oBAACM;AAAA,oBAAA;AAAA,sBACC,OAAO;AAAA,sBACP,OAAO,EAAE,SAAS,QAAQ,gBAAgB,SAAS;AAAA,sBAElD,YAAE,mCAAmC;AAAA;AAAA,oBAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAgBA,IACE,eAAe,YAAY,WAAW,aACxC;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAW,EAAE,SAAS,IAAI,WAAW,SAAS;AAAA,kBAC9C,UAAU;AAAA,kBACV,OAAO;AAAA,oBACL,cAAc;AAAA,oBACd,qBAAqB;AAAA,oBACrB,sBAAsB;AAAA,oBACtB,iBAAiB,MAAM;AAAA,kBACzB;AAAA,kBAEA,8DAAC,iBAAM,WAAU,YACf;AAAA;AAAA,sBAACA;AAAA,sBAAA;AAAA,wBACC,OAAO;AAAA,wBACP,OAAO;AAAA,0BACL,SAAS;AAAA,0BACT,gBAAgB;AAAA,0BAChB,OAAO;AAAA,wBACT;AAAA,wBAEC,YAAE,6BAA6B;AAAA;AAAA,sBARlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASA;AAAA,oBACA;AAAA,sBAACA;AAAA,sBAAA;AAAA,wBACC,OAAO;AAAA,wBACP,OAAO;AAAA,0BACL,SAAS;AAAA,0BACT,gBAAgB;AAAA,wBAClB;AAAA,wBAEC,YAAE,YAAY,MAAM;AAAA;AAAA,sBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA;AAAA,uBAnBF;AAAA;AAAA;AAAA;AAAA,yBAoBA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA+BA,IACE,eAAe,YAAY,WAAW,aACxC;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAW,EAAE,SAAS,IAAI,WAAW,SAAS;AAAA,kBAC9C,UAAU;AAAA,kBACV,OAAO;AAAA,oBACL,cAAc;AAAA,oBACd,qBAAqB;AAAA,oBACrB,sBAAsB;AAAA,oBACtB,iBAAiB,MAAM;AAAA,kBACzB;AAAA,kBAEA;AAAA,oBAACA;AAAA,oBAAA;AAAA,sBACC,OAAO;AAAA,sBACP,OAAO;AAAA,wBACL,SAAS;AAAA,wBACT,gBAAgB;AAAA,sBAClB;AAAA,sBAEC,YAAE,6BAA6B;AAAA;AAAA,oBAPlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAmBA,IACE,eAAe,YAAY,WAAW,YACxC;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAW,EAAE,SAAS,IAAI,WAAW,SAAS;AAAA,kBAC9C,UAAU;AAAA,kBACV,OAAO;AAAA,oBACL,cAAc;AAAA,oBACd,qBAAqB;AAAA,oBACrB,sBAAsB;AAAA,oBACtB,iBAAiB,MAAM;AAAA,kBACzB;AAAA,kBAEA;AAAA,oBAACA;AAAA,oBAAA;AAAA,sBACC,OAAO;AAAA,sBACP,OAAO;AAAA,wBACL,SAAS;AAAA,wBACT,gBAAgB;AAAA,sBAClB;AAAA,sBAEC,YAAE,mCAAmC;AAAA;AAAA,oBAPxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAmBA,IACE;AAAA,iBAxHN;AAAA;AAAA;AAAA;AAAA,mBAyHA,KA1HF;AAAA;AAAA;AAAA;AAAA,mBA2HA;AAAA,YACA,oDAAC,eAAI,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI,OAAO,EAAE,GACtC,8DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,mBAAQ,KADV;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eA/HF;AAAA;AAAA;AAAA;AAAA,iBAgIA;AAAA,UACA,oDAAC,mBAAQ,OAAO,EAAE,aAAa,GAAG,KAAlC;AAAA;AAAA;AAAA;AAAA,iBAAqC;AAAA,UACrC,oDAACA,QAAA,EAAM,OAAO,GAAG,OAAO,EAAE,cAAc,GAAG,GACxC,YAAE,qBAAqB,KAD1B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,kBAAe,MAAM,sBAAtB;AAAA;AAAA;AAAA;AAAA,iBAA0C;AAAA,UAC1C;AAAA,YAAC;AAAA;AAAA,cACE,GAAG;AAAA,cACJ,UAAU,MAAM,YAAY,KAAK;AAAA,cACjC,MAAM;AAAA,cAEN;AAAA,gBAAC;AAAA;AAAA,kBACC;AAAA,kBACA;AAAA,kBACA,SAAS,QAAQ,UAAU;AAAA;AAAA,gBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAUA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACE,GAAG;AAAA,cACJ,UAAU,MAAM,aAAa,KAAK;AAAA,cAClC,MAAM,aAAa,EAAE,eAAe;AAAA,cACpC,QAAQ;AAAA,cAER;AAAA,gBAAC;AAAA;AAAA,kBACC,MAAM;AAAA,kBACN;AAAA,kBACA,gBAAgBN,YAAW;AAAA,kBAC3B,UAAU,MAAM;AACd,iCAAa,KAAK;AAClB,wCAAoB,IAAI;AAAA,kBAC1B;AAAA,kBACA,UAAU,CAAC,WAAgB;AACzB,wCAAoB,EAAE,GAAG,OAAO,CAAC;AACjC,mCAAe,IAAI;AACnB,iCAAa,KAAK;AAAA,kBACpB;AAAA,kBACA,aAAa,EAAE,MAAM;AAAA;AAAA,gBAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAcA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAqBA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACE,GAAG;AAAA,cACJ,UAAU,MAAM;AACd,+BAAe,KAAK;AACpB,iCAAiB,KAAK;AAAA,cACxB;AAAA,cACA,MAAM,eAAe;AAAA,cACrB,QAAQ;AAAA,cAER;AAAA,gBAAC;AAAA;AAAA,kBACC;AAAA,kBACA,MACE,gBACI,aACA,mBACA,mBACA;AAAA,kBAEN,QACE;AAAA;AAAA,oBAEI,OAAO,eAAe,KAAK,GAAG,aAAa,IAAI;AAAA,sBAC/C;AAAA,kBAEN,qBAAqBA,YAAW;AAAA,kBAChC,iBAAiBA,YAAW;AAAA,kBAC5B,uBAAuBA,YAAW;AAAA,kBAClC,eAAeA,YAAW;AAAA,kBAC1B,kBAAkBA,YAAW;AAAA,kBAC7B,UAAU;AAAA,kBACV,aACE,cACI,EAAE,MAAM,IACR,gBACA,EAAE,MAAM,IACR,EAAE,aAAa;AAAA;AAAA,gBA1BvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4BA;AAAA;AAAA,YArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAsCA;AAAA,UACC;AAAA;AAAA;AAAA,MAvOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAwOA;AAAA,OA3OF;AAAA;AAAA;AAAA;AAAA,SA4OA;AAEJ;",
  "names": ["import_react", "dayjs", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "Text", "Title", "useToken", "import_react", "import_dayjs", "import_jsx_dev_runtime", "useToken", "Text", "Title", "additionalFields", "dayjs", "import_jsx_dev_runtime", "useToken", "Text", "Title", "tournament", "useToken", "Text", "t", "modal", "teamModal", "Title"]
}
