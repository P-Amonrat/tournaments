{
  "version": 3,
  "sources": ["../../../app/routes/_app.users.$uuid.my-album._index.tsx"],
  "sourcesContent": ["import { json, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useNavigation,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport {\n  Card,\n  Col,\n  Divider,\n  Empty,\n  Form,\n  Modal,\n  notification,\n  Row,\n  Skeleton,\n  Space,\n  Typography,\n} from \"antd\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as APIServer from \"~/api\";\nimport { dummyWebboards, Pagination, TiltButton } from \"~/components/common\";\nimport { getSessionFromRequest } from \"~/session.server\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { AlbumForm } from \"~/components/pages/User/AlbumForm\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { SortableList } from \"~/components/pages/Sorting/SortableList\";\nimport { AlbumIndexEntry } from \"~/components/pages/User/AlbumIndexEntry\";\nimport { LuBook } from \"react-icons/lu\";\nimport { ArrowUpDown } from \"lucide-react\";\nconst { Text } = Typography;\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { uuid } = params;\n  const session = await getSessionFromRequest(request);\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  let albumRes: any;\n  let albums: any;\n  const me = session.get(\"me\");\n\n  try {\n    if (uuid !== undefined) {\n      if (me) {\n        albumRes = await APIServer.clientFromSession(session).request(\n          APIServer.getAlbum(uuid, searchParams)\n        );\n      } else {\n        albumRes = await APIServer.clientFromSession().request(\n          APIServer.getAlbum(uuid, searchParams)\n        );\n      }\n      if (albumRes.data) {\n        albums = albumRes.data;\n      }\n    }\n  } catch (e) {\n    albums = dummyWebboards; // FIXME: remove this out\n    console.log(\"my albums error\", e);\n  }\n  return json({ searchParams, albums, uuid });\n};\n\nconst modalProps = {\n  closeIcon: false,\n  footer: null,\n  modalRender: (modal: any) => modal,\n} as any;\n\nexport default function MyAlbums() {\n  const { searchParams, albums, uuid } = useLoaderData();\n  const revalidator = useRevalidator();\n  const fetcher = useFetcher();\n  const submit = useSubmit();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const [api, contextHolder] = notification.useNotification();\n  const [openCreateAlbumModal, setOpenCreateAlbumModal] = useState(false);\n  const [sortingModal, setSortingModal] = useState<boolean>(false);\n  const [albumsList, setAlbumsList] = useState<any>(albums.items);\n  const [form] = Form.useForm();\n  const isOwner = (user && user.uuid === uuid) || user?.userName === uuid;\n\n  const handleOpenCreateAlbumModal = () => {\n    setOpenCreateAlbumModal(true);\n  };\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  const handleToggleSortingMode = () => {\n    setSortingModal(!sortingModal);\n  };\n\n  const onChangeSortItems = (items: any) => {\n    setAlbumsList(items);\n  };\n\n  const onCloseSortingModal = () => {\n    setSortingModal(false);\n  };\n\n  const handleSubmitSorting = () => {\n    setSortingModal(false);\n    const itemsId = {\n      albumIds: albumsList.map((item: any, index: number) => item.id),\n    };\n    fetcher.submit(\n      {\n        data: JSON.stringify(itemsId),\n      },\n      {\n        method: \"post\",\n        action: `/resources/sorting-albums`,\n      }\n    );\n  };\n\n  useEffect(() => {\n    setAlbumsList(albums.items && albums.items.length ? albums.items : []);\n  }, [albums.items]);\n\n  useEffect(() => {\n    if (!fetcher.data || fetcher.state !== \"idle\") {\n      return;\n    }\n\n    if (fetcher.data.albums.items) {\n      setAlbumsList(fetcher.data.albums.items);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      revalidator.state === \"idle\"\n    ) {\n      if (fetcher.data.success && fetcher.data.success === \"delete-album\") {\n        revalidator.revalidate();\n        resetFetcher(fetcher);\n        api.open({\n          message: t(\"successfully deleted post\"),\n          type: \"success\",\n          duration: 5,\n          placement: \"bottomRight\",\n        });\n      }\n    }\n  }, [fetcher, revalidator]);\n\n  return (\n    <>\n      {navigation.state === \"loading\" &&\n      navigation.location.pathname === location.pathname ? (\n        <Skeleton active />\n      ) : (\n        <Card\n          style={{\n            borderRadius: 12,\n            boxShadow:\n              scheme === \"dark\"\n                ? \"0px 12px 10px -10px rgba(0, 0, 0, 0.6)\"\n                : \"0px 12px 10px -10px rgba(0, 0, 0, 0.2)\",\n            border: \"none\",\n          }}\n        >\n          <Row\n            justify=\"space-between\"\n            style={{ alignItems: \"center\" }}\n            gutter={[0, 10]}\n          >\n            <Col flex=\"auto\">\n              <Space\n                style={{\n                  fontWeight: 600,\n                  marginRight: \"10px\",\n                  fontSize: \"24px\",\n                }}\n              >\n                <LuBook style={{ color: \"#7C6FF6\" }} />\n                <Text style={{ fontSize: \"24px\", fontWeight: 600 }}>\n                  {t(\"my albums\")}\n                </Text>\n              </Space>\n            </Col>\n            {isOwner && (\n              <Col>\n                <Space size={15} align=\"center\">\n                  {albumsList.length > 0 && (\n                    <Space\n                      align=\"center\"\n                      onClick={handleToggleSortingMode}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <ArrowUpDown\n                        style={{ color: \"#7C6FF6\", fontSize: \"1.2em\" }}\n                      />\n                      {t(\"sort order\")}\n                    </Space>\n                  )}\n                  <TiltButton\n                    color=\"primary\"\n                    onClick={handleOpenCreateAlbumModal}\n                  >\n                    {t(\"create album\")}\n                  </TiltButton>\n                </Space>\n              </Col>\n            )}\n          </Row>\n          <Divider style={{ marginBlock: 10 }} />\n          <Modal\n            {...modalProps}\n            onCancel={() => setOpenCreateAlbumModal(false)}\n            open={openCreateAlbumModal}\n          >\n            <AlbumForm\n              fetcher={fetcher}\n              form={form}\n              onCancel={() => setOpenCreateAlbumModal(false)}\n              action=\"create\"\n            />\n          </Modal>\n          {albumsList && albumsList.length ? (\n            <Row gutter={[30, 30]}>\n              {albumsList.map((album: any, index: number) => (\n                <Col key={index} span={12} md={8}>\n                  <AlbumIndexEntry album={album} uuid={uuid} />\n                </Col>\n              ))}\n            </Row>\n          ) : (\n            <Empty description={<span>{t(\"no data\")}</span>} />\n          )}\n          <Pagination\n            currentPage={albums.page}\n            totalPages={albums.totalPages}\n            onPageClicked={handleChangePage}\n          />\n        </Card>\n      )}\n      <Modal\n        {...modalProps}\n        onCancel={() => setSortingModal(false)}\n        open={sortingModal}\n      >\n        <div\n          style={{\n            marginTop: \"15px\",\n          }}\n        >\n          <Text style={{ fontSize: \"24px\", fontWeight: \"600\" }}>\n            {t(\"sorting order\")}\n          </Text>\n          <Divider style={{ margin: 7 }} />\n          <SortableList\n            items={albumsList}\n            onChange={onChangeSortItems}\n            renderItem={(item: any, items: any[]) => (\n              <SortableList.Item id={item.id}>\n                <div style={{ position: \"relative\", margin: \"15px\" }}>\n                  <div style={{ position: \"absolute\", zIndex: 1000 }}>\n                    {<SortableList.DragHandle />}\n                  </div>\n                  <TiltButton color=\"gray\">{item.name}</TiltButton>\n                </div>\n              </SortableList.Item>\n            )}\n          />\n          <Row gutter={10} style={{ marginTop: 30 }}>\n            <Col span={12}>\n              <TiltButton color=\"secondary\" onClick={onCloseSortingModal}>\n                {t(\"cancel\")}\n              </TiltButton>\n            </Col>\n            <Col span={12}>\n              <TiltButton color=\"primary\" onClick={handleSubmitSorting}>\n                {t(\"save\")}\n              </TiltButton>\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react"]
}
