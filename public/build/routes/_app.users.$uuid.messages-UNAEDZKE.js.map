{
  "version": 3,
  "sources": ["../../../app/routes/_app.users.$uuid.messages.tsx", "../../../app/components/pages/User/UserNotificationEntry.tsx"],
  "sourcesContent": ["import { useCallback } from \"react\";\nimport { useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { redirect, type LoaderFunction } from \"@remix-run/node\";\nimport { useTranslation } from \"react-i18next\";\nimport { isEmpty, isNil, omitBy } from \"lodash\";\nimport { Card, Col, Empty, Flex, Row, Space } from \"antd\";\nimport { BellOutlined } from \"@ant-design/icons\";\nimport { Pagination, TiltMenus, dummyNotifications } from \"~/components/common\";\nimport { AffixMenu } from \"~/components/layouts\";\nimport { getSessionFromRequest, mustAuthenticated } from \"~/session.server\";\nimport * as APIServer from \"~/api\";\nimport { UserNotificationEntry } from \"~/components/pages/User/UserNotificationEntry\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  await mustAuthenticated(request);\n  const session = await getSessionFromRequest(request);\n  const me = session.get(\"me\");\n  const { uuid } = params;\n\n  if (\n    !me ||\n    !me.uuid ||\n    (`${me.uuid}` !== `${uuid}` && `${me?.userName}` !== `${uuid}`)\n  ) {\n    return redirect(\"/\");\n  }\n\n  const url = new URL(request.url) as any;\n  const searchParams = Object.fromEntries(url.searchParams);\n  // let unreadNotificationsCount = 0;\n  let notifications: any = null;\n  try {\n    // const resUnreadNoti = await APIServer.clientFromSession(session).request(\n    //   APIServer.getUnreadNotificationsCount()\n    // );\n    // if (resUnreadNoti.data) {\n    //   unreadNotificationsCount = resUnreadNoti.data.count;\n    // }\n    const notificationRes = await APIServer.clientFromSession(session).request(\n      APIServer.getNotifications(searchParams)\n    );\n    if (notificationRes.data) {\n      notifications = notificationRes.data;\n    }\n\n    await APIServer.clientFromSession(session).request(\n      APIServer.readAllNotifications()\n    );\n  } catch (e) {\n    notifications = dummyNotifications; // FIXME: remove this out\n    console.log(\"e\", e);\n  }\n  return {\n    notifications,\n    // unreadNotificationsCount,\n    searchParams,\n    uuid,\n  };\n};\n\nexport default function UserMessagesIndex() {\n  const { t } = useTranslation();\n  const { notifications, searchParams, uuid } = useLoaderData();\n  const submit = useSubmit();\n\n  const handleChangePage = useCallback(\n    (page: number) => {\n      const newSearchParams = { ...searchParams } as any;\n      if (page === 1) {\n        delete newSearchParams[\"page\"];\n      } else {\n        newSearchParams[\"page\"] = `${page}`;\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\" }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  return (\n    <Row gutter={[20, 0]}>\n      <Col span={24} md={6}>\n        <AffixMenu direction=\"vertical\" offsetTop={20}>\n          <Flex gap={20} vertical>\n            <TiltMenus\n              direction=\"vertical\"\n              menus={[\n                {\n                  link: `/users/${uuid}/messages`,\n                  level: 3,\n                  label: (\n                    <Space size={10}>\n                      {/* <Badge count={unreadNotificationsCount}> */}\n                      <BellOutlined />\n                      {/* </Badge> */}\n                      {t(\"all notifications\")}\n                    </Space>\n                  ),\n                },\n              ]}\n            />\n          </Flex>\n        </AffixMenu>\n      </Col>\n      <Col span={24} md={18}>\n        {notifications &&\n        notifications.items &&\n        notifications.items.length > 0 ? (\n          <>\n            <Flex vertical gap={20}>\n              {notifications.items.map((item: any) => (\n                <UserNotificationEntry data={item} key={item.id} />\n              ))}\n            </Flex>\n            {notifications.totalPages > 1 && (\n              <Pagination\n                currentPage={notifications.page}\n                totalPages={notifications.totalPages}\n                onPageClicked={handleChangePage}\n              />\n            )}\n          </>\n        ) : (\n          <Card>\n            <Empty description={t(\"no notifications\")} />\n          </Card>\n        )}\n      </Col>\n    </Row>\n  );\n}\n", "import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useMatches, useNavigate, useFetcher } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { Avatar, Card, Col, Flex, Skeleton, Row, Typography } from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\n\nconst { Text } = Typography;\n\ninterface UserNotificationEntryProps {\n  data: any;\n}\n\nexport const UserNotificationEntry: React.FC<UserNotificationEntryProps> = (\n  props: UserNotificationEntryProps\n) => {\n  const { data } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [diff, setDiff] = useState<any>(null);\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n  const navigate = useNavigate();\n  const fetcher = useFetcher();\n\n  let cardStyle = {\n    cursor: \"pointer\",\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  const getProperTimeDifference = (date: any) => {\n    if (!date) return null;\n\n    const diffMonths = dayjs().diff(dayjs(date), \"month\");\n    if (diffMonths >= 12) {\n      return { unit: \"year\", value: dayjs().diff(dayjs(date), \"year\") };\n    } else if (diffMonths >= 1) {\n      return { unit: \"month\", value: diffMonths };\n    } else {\n      const diffDays = dayjs().diff(dayjs(date), \"day\");\n      if (diffDays >= 1) {\n        return { unit: \"day\", value: diffDays };\n      } else {\n        const diffHours = dayjs().diff(dayjs(date), \"hour\");\n        if (diffHours >= 1) {\n          return { unit: \"hour\", value: diffHours };\n        } else {\n          const diffMinutes = dayjs().diff(dayjs(date), \"minute\");\n          if (diffMinutes >= 1) {\n            return { unit: \"minute\", value: diffMinutes };\n          } else {\n            const diffSeconds = dayjs().diff(dayjs(date), \"second\");\n            return { unit: \"second\", value: diffSeconds };\n          }\n        }\n      }\n    }\n  };\n\n  const navigateToEntry = useCallback(async () => {\n    if (data.relateType === \"party\") {\n      navigate(\"/parties\");\n    }\n\n    if (\n      data.relateType === \"webboard\" &&\n      data.metadata.postId &&\n      data.metadata.commentId\n    ) {\n      try {\n        fetcher.load(\n          `/resources/comment-position?postId=${data.metadata.postId}&commentId=${data.metadata.commentId}`\n        );\n      } catch (error) {\n        console.error(\"get comment position error\", error);\n        navigate(`/webboards/${data.metadata.postId}`);\n      }\n    }\n\n    if (\n      data.relateType === \"tournament\" &&\n      data.metadata.tournament &&\n      data.metadata.tournament.id &&\n      data.metadata.tournament.deleteAt\n    ) {\n      navigate(`/tournaments`);\n    } else if (\n      data.relateType === \"tournament\" &&\n      data.metadata.tournament &&\n      data.metadata.tournament.id\n    ) {\n      navigate(`/tournaments/${data.metadata.tournament.id}`);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.state !== \"loading\") {\n      const page = fetcher.data.page;\n      const postId = data.metadata.postId;\n      const commentId = data.metadata.commentId;\n\n      if (postId && commentId) {\n        navigate(`/webboards/${postId}?page=${page}#comment-${commentId}`);\n      }\n    }\n  }, [fetcher.data, fetcher.state, data, navigate]);\n\n  useEffect(() => {\n    if (data.createdAt) {\n      setDiff(getProperTimeDifference(data.createdAt));\n    }\n  }, [data]);\n\n  const getNotificationMessage = (\n    context: string,\n    metadata: any,\n    fromUserDisplayName: any\n  ) => {\n    if (context === \"commentPost\") {\n      return `${fromUserDisplayName ? fromUserDisplayName : \"\"} ${t(\n        \"notification:has commented on your post\"\n      )}`;\n    }\n\n    if (context === \"teamTournamentRemove\") {\n      return `${t(\"notification:Your team\")} ${metadata.team.name || \"\"} ${t(\n        \"notification:that has been approved to join\"\n      )} ${metadata.tournament.name || \"\"} ${t(\n        \"notification:tournament has been removed because\"\n      )} ${metadata.team.remark || \"\"}`;\n    }\n\n    if (context === \"commentReply\") {\n      return `${fromUserDisplayName ? fromUserDisplayName : \"\"} ${t(\n        \"notification:has replied to your comment\"\n      )}`;\n    }\n\n    if (context === \"partyRequest\") {\n      return `${fromUserDisplayName ? fromUserDisplayName : \"\"} ${t(\n        \"notification:has sent a request to join your party\"\n      )}`;\n    }\n\n    if (context === \"partyReady\") {\n      return `${t(\n        `notification:Your Party is ready! start gaming by adding friend's username`\n      )}`;\n    }\n\n    if (context === \"partyAccept\") {\n      return `${t(\"notification:Your request to join\")}  ${\n        metadata.partyName || \"\"\n      } ${t(\"notification:party has been accepted\")}`;\n    }\n\n    if (context === \"partyReject\") {\n      return `${t(\"notification:Your request to join\")}  ${\n        metadata.partyName || \"\"\n      } ${t(\"notification:party has been rejected\")}`;\n    }\n\n    if (context === \"teamTournamentApproval\") {\n      return `${t(\"notification:Your team\")} ${metadata.team.name || \"\"} ${t(\n        \"notification:has been approved to join\"\n      )} ${metadata.tournament.name || \"\"} ${t(\"notification:tournament\")}`;\n    }\n\n    if (context === \"teamTournamentRejection\") {\n      return `${t(\"notification:Your team\")} ${metadata.team.name || \"\"} ${t(\n        \"notification:request to join\"\n      )} ${metadata.tournament.name || \"\"} ${t(\n        \"notification:tournament has been rejected because\"\n      )} ${metadata.team.remark || \"\"}`;\n    }\n\n    if (context === \"orgTournamentApproval\") {\n      return `${t(\"notification:Your tournament\")}  ${metadata.name || \"\"} ${t(\n        \"notification:has been approved\"\n      )}`;\n    }\n\n    if (context === \"orgTournamentRejection\") {\n      return `${t(\"notification:Your tournament\")}  ${metadata.name || \"\"} ${t(\n        \"notification:has been rejected because\"\n      )} ${metadata.team.remark || \"\"}`;\n    }\n\n    return \"no data\";\n  };\n\n  return (\n    <Card\n      key={data.id}\n      style={cardStyle}\n      bodyStyle={{ padding: 15 }}\n      onClick={navigateToEntry}\n    >\n      <Row wrap={false} gutter={15} style={{ alignItems: \"flex-start\" }}>\n        <Col flex=\"none\">\n          <Avatar\n            size={50}\n            src={\n              data.fromUser && data.fromUser.displayImage\n                ? `${cdnUrl}/${data.fromUser.displayImage}`\n                : user.displayImage\n                ? `${cdnUrl}/${user.displayImage}`\n                : \"image/placeholder.png\"\n            }\n          />\n        </Col>\n        <Col flex=\"auto\">\n          <Flex vertical gap={5}>\n            <Flex justify=\"space-between\" align=\"flex-start\">\n              <Text>\n                {getNotificationMessage(\n                  data.context,\n                  data.metadata,\n                  data.fromUser?.displayName\n                )}\n              </Text>\n              <Flex>\n                {diff ? (\n                  <Text>{`${diff.value} ${t(`${diff.unit}s ago`)}`}</Text>\n                ) : (\n                  <Skeleton\n                    paragraph={{ width: 50, rows: 1, style: { margin: 0 } }}\n                    title={false}\n                    active\n                  />\n                )}\n              </Flex>\n            </Flex>\n          </Flex>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n"],
  "mappings": "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",
  "names": ["import_react", "dayjs", "import_jsx_dev_runtime"]
}
