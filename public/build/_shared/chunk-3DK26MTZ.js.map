{
  "version": 3,
  "sources": ["../../../app/components/pages/Tournament/TournamentSliderItem.tsx", "../../../app/components/pages/Tournament/TournamentSlider.tsx"],
  "sourcesContent": ["import { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Card,\n  Col,\n  Row,\n  Skeleton,\n  Space,\n  Tag,\n  theme,\n  Typography,\n} from \"antd\";\nimport { TournamentDate, TournamentReward } from \".\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Author } from \"~/components/common\";\nimport { renderData } from \"~/utils/helper\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\nconst { useToken } = theme;\nconst { Title } = Typography;\n\ninterface TournamentSliderItemProps {\n  data: any;\n  loading?: boolean;\n}\n\nexport function TournamentSliderItem(props: TournamentSliderItemProps) {\n  const { t } = useTranslation();\n  const { data, loading } = props;\n  const { token } = useToken();\n  const { locale } = useContext(AppContext);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const navigate = useNavigate();\n  const itemStyle = {\n    position: \"relative\",\n    display: \"flex\",\n    height: 400,\n    flexDirection: \"column\",\n    borderRadius: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundImage:\n      data && data.bannerImageUrl && data.bannerImageUrl !== \"-\"\n        ? `url(\"${cdnUrl}/${data.bannerImageUrl}\")`\n        : undefined,\n    cursor: \"pointer\",\n  } as any;\n  const itemBodyStyle = {\n    display: \"flex\",\n    flex: \"auto\",\n    paddingBottom: 48,\n    alignItems: \"end\",\n  } as any;\n  const itemHeadStyle = {\n    position: \"relative\",\n    border: 0,\n    flex: \"0 0 auto\",\n    zIndex: 1,\n  } as any;\n  const overlayStyle = {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n    background:\n      \"linear-gradient(0deg, rgba(0, 0, 0, 0.50) 0%, rgba(0, 0, 0, 0.50) 100%)\",\n  } as any;\n\n  const handleItemClicked = () => {\n    navigate(`/tournaments/${data.id}`);\n  };\n\n  return (\n    <Card\n      bordered={false}\n      onClick={handleItemClicked}\n      style={itemStyle}\n      bodyStyle={itemBodyStyle}\n      headStyle={itemHeadStyle}\n      title={\n        <Tag\n          color={token.colorPrimary}\n          style={{ color: \"#201d1d\", fontWeight: 600 }}\n        >\n          {t(\"featured tournament\")}\n        </Tag>\n      }\n    >\n      <div style={overlayStyle} />\n      {loading ? (\n        <Skeleton active />\n      ) : (\n        <Space\n          direction=\"vertical\"\n          size={10}\n          style={{ display: \"flex\", position: \"relative\" }}\n        >\n          {data.game && data.game.iconUrl && (\n            <Avatar\n              size={45}\n              src={\n                data.game.iconUrl && data.game.iconUrl !== \"-\"\n                  ? `${cdnUrl}/${data.game.iconUrl}`\n                  : \"\"\n              }\n            >\n              {data.game.name}\n            </Avatar>\n          )}\n          <Title level={2} style={{ margin: 0, color: \"#fff\" }}>\n            {renderData(data, \"name\", locale)}\n          </Title>\n          <Row style={{ color: \"#fff\" }} gutter={[15, 10]} wrap>\n            <Col>\n              <TournamentReward reward={data.prize[0]} />\n            </Col>\n            <Col>\n              <TournamentDate\n                startDate={data.startDate}\n                endDate={data.endDate}\n              />\n            </Col>\n            {data.organizer && data.organizer.displayName && (\n              <Col>\n                <Author\n                  displayImage={\n                    data.organizer && data.organizer.displayImage\n                      ? `${cdnUrl}/${data.organizer.displayImage}`\n                      : undefined\n                  }\n                >\n                  {data.organizer.displayName}\n                </Author>\n              </Col>\n            )}\n          </Row>\n        </Space>\n      )}\n    </Card>\n  );\n}\n", "import { Carousel } from \"antd\";\nimport { TournamentSliderItem } from \".\";\n\ninterface TournamentSliderProps {\n  data: any[];\n}\n\nexport function TournamentSlider(props: TournamentSliderProps) {\n  const { data } = props;\n\n  return (\n    <Carousel dots={{ className: \"left\" }} arrows={true}>\n      {data.map((item: any) => (\n        <TournamentSliderItem key={item.id} data={item} />\n      ))}\n    </Carousel>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
