{
  "version": 3,
  "sources": ["../../../app/components/common/FileUploader.tsx"],
  "sourcesContent": ["import React from \"react\";\nimport { Upload } from \"antd\";\nimport { encode } from \"base64-arraybuffer\";\n\ninterface FileUploaderProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  fetcher: any;\n  fieldName: string;\n  fileType?: string;\n  maxFileSize?: number;\n  isSlip?: boolean;\n  onErrorFileTooLarge?: () => void;\n  onUploading?: (uploading: boolean) => void;\n}\n\nexport const FileUploader: React.FC<FileUploaderProps> = (\n  props: FileUploaderProps\n) => {\n  const {\n    children,\n    disabled,\n    fetcher,\n    fieldName,\n    fileType,\n    maxFileSize,\n    isSlip,\n    onErrorFileTooLarge,\n    onUploading,\n  } = props;\n  const limitFileSize = maxFileSize ? maxFileSize : 2000000;\n\n  return (\n    <Upload\n      action=\"/resources/upload\"\n      accept={fileType ? fileType : \"image/*\"}\n      disabled={disabled}\n      maxCount={1}\n      beforeUpload={() => false}\n      onChange={(info: any) => {\n        const { fileList } = info;\n        const { name, size, type } = fileList[0];\n\n        if (onUploading) {\n          onUploading(true);\n        }\n        if ((size && size > limitFileSize) || fileList.length <= 0) {\n          if (onErrorFileTooLarge) {\n            onErrorFileTooLarge();\n          }\n          if (onUploading) {\n            onUploading(false);\n          }\n          return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e: any) => {\n          fileList[0].base64 = reader.result;\n\n          if (fileList[0].base64) {\n            fetcher.submit(\n              {\n                name,\n                size,\n                type,\n                file: encode(fileList[0].base64),\n                field: fieldName,\n                isSlip: isSlip,\n                previewImage: encode(fileList[0].base64),\n              },\n              {\n                method: \"put\",\n                action: \"/resources/upload\",\n                encType: \"multipart/form-data\",\n              }\n            );\n          }\n        };\n        reader.readAsArrayBuffer(fileList[0].originFileObj);\n      }}\n      showUploadList={false}\n      style={{ width: \"100%\" }}\n    >\n      {children}\n    </Upload>\n  );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAiCI;AAjBG,IAAM,eAA4C,CACvD,UACG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,gBAAgB,cAAc,cAAc;AAElD,SACE;AAAA,IAAC;AAAA;AAAA,MACC,QAAO;AAAA,MACP,QAAQ,WAAW,WAAW;AAAA,MAC9B;AAAA,MACA,UAAU;AAAA,MACV,cAAc,MAAM;AAAA,MACpB,UAAU,CAAC,SAAc;AACvB,cAAM,EAAE,SAAS,IAAI;AACrB,cAAM,EAAE,MAAM,MAAM,KAAK,IAAI,SAAS,CAAC;AAEvC,YAAI,aAAa;AACf,sBAAY,IAAI;AAAA,QAClB;AACA,YAAK,QAAQ,OAAO,iBAAkB,SAAS,UAAU,GAAG;AAC1D,cAAI,qBAAqB;AACvB,gCAAoB;AAAA,UACtB;AACA,cAAI,aAAa;AACf,wBAAY,KAAK;AAAA,UACnB;AACA;AAAA,QACF;AAEA,cAAM,SAAS,IAAI,WAAW;AAC9B,eAAO,SAAS,CAAC,MAAW;AAC1B,mBAAS,CAAC,EAAE,SAAS,OAAO;AAE5B,cAAI,SAAS,CAAC,EAAE,QAAQ;AACtB,oBAAQ;AAAA,cACN;AAAA,gBACE;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,MAAM,OAAO,SAAS,CAAC,EAAE,MAAM;AAAA,gBAC/B,OAAO;AAAA,gBACP;AAAA,gBACA,cAAc,OAAO,SAAS,CAAC,EAAE,MAAM;AAAA,cACzC;AAAA,cACA;AAAA,gBACE,QAAQ;AAAA,gBACR,QAAQ;AAAA,gBACR,SAAS;AAAA,cACX;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,eAAO,kBAAkB,SAAS,CAAC,EAAE,aAAa;AAAA,MACpD;AAAA,MACA,gBAAgB;AAAA,MAChB,OAAO,EAAE,OAAO,OAAO;AAAA,MAEtB;AAAA;AAAA,IAnDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoDA;AAEJ;",
  "names": []
}
