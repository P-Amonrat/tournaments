{
  "version": 3,
  "sources": ["../../../app/components/pages/Webboard/WebboardEntry.tsx", "../../../app/components/pages/Webboard/WebboardLists.tsx"],
  "sourcesContent": ["import { useContext } from \"react\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Card, Col, Divider, Flex, Image, Row, Typography } from \"antd\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport {\n  WebboardEntryAuthor,\n  WebboardEntryControl,\n  WebboardEntryMeta,\n  WebboardEntryTags,\n  WebboardReaction,\n} from \".\";\nimport { Poll } from \"~/components/common\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text } = Typography;\n\ninterface WebboardEntryProps {\n  data: any;\n  fetcher?: any;\n  reactionOptions?: any[];\n  isMyWebboard?: boolean;\n}\n\nexport function WebboardEntry(props: WebboardEntryProps) {\n  const { data, fetcher, reactionOptions, isMyWebboard } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const isOwner = user && data && data.author && data.authorId === user.id;\n  const isForumAdmin = user && user.roles.includes(\"forum_admin\");\n\n  const showThumbail =\n    data.thumbnailImage && data.thumbnailImage.length && !data.poll;\n  const cardStyle = {\n    borderRadius: 12,\n    // boxShadow:\n    //   scheme === \"dark\" ? \"none\" : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n    // border: \"none\",\n  };\n\n  const linkToSingle = (event: any) => {\n    event.stopPropagation();\n    navigate(`/webboards/${data.id}`);\n  };\n\n  console.log(\"data\", data);\n\n  return (\n    <Card style={cardStyle}>\n      <Flex gap={20} vertical>\n        <Flex justify=\"space-between\" align=\"flex-start\" wrap=\"wrap\">\n          <WebboardEntryAuthor\n            anonymous={data.anonymous}\n            isAdmin={data.author?.roles.includes(\"forum_admin\")}\n            createdAt={data.createdAt}\n            updatedAt={data.updatedAt}\n            displayName={data.author?.displayName}\n            displayImage={`${cdnUrl}/${data.author?.displayImage}`}\n            assetFrame={`${cdnUrl}/${data.author?.assetFrame}`}\n            userUuid={\n              data.author?.userName ? data.author.userName : data.author?.uuid\n            }\n            isVerified={data.author?.isDopaVerified}\n            role={data.author?.roles}\n          />\n          {!isMyWebboard && (\n            <WebboardEntryControl\n              fetcher={fetcher}\n              id={data.id}\n              isOwner={isOwner}\n              isForumAdmin={isForumAdmin}\n              postType=\"webboard\"\n            />\n          )}\n        </Flex>\n        <Row\n          gutter={[20, 20]}\n          wrap\n          style={{ cursor: \"pointer\" }}\n          onClick={linkToSingle}\n        >\n          {showThumbail && (\n            <Col flex=\"none\" span={24} md={{ span: 8, order: 1 }}>\n              <Image\n                src={`${cdnUrl}/${data.thumbnailImage}`}\n                wrapperStyle={{\n                  borderRadius: 8,\n                  overflow: \"hidden\",\n                }}\n                preview={false}\n              />\n            </Col>\n          )}\n          <Col\n            flex=\"auto\"\n            span={24}\n            md={showThumbail ? { span: 16, order: 0 } : 24}\n          >\n            <Flex vertical gap={20}>\n              <Text style={{ fontSize: \"1.2em\" }}>{data.title}</Text>\n              {data.poll && (\n                <div onClick={(event) => event.stopPropagation()}>\n                  <Poll\n                    data={data.poll}\n                    fetcher={fetcher}\n                    onClick={linkToSingle}\n                    fromIndex={true}\n                    webboardId={data.id}\n                  />\n                </div>\n              )}\n              {data.postTags && data.postTags.length > 0 && (\n                <WebboardEntryTags data={data.postTags} />\n              )}\n              <WebboardEntryMeta\n                rooms={data.postRooms}\n                games={data.postGames}\n              />\n            </Flex>\n          </Col>\n        </Row>\n      </Flex>\n      {!isMyWebboard && (\n        <>\n          <Divider style={{ marginBlock: 20 }} />\n          <WebboardReaction\n            data={data.postReactionCounts}\n            postId={data.id}\n            postType=\"webboard\"\n            fetcher={fetcher}\n            reactionOptions={reactionOptions}\n            userReaction={data.userPostReactions}\n          >\n            {(data.commentCounts || data.commentCounts === 0) && (\n              <Text style={{ cursor: \"pointer\" }} onClick={linkToSingle}>{`${\n                data.commentCounts\n              } ${t(\"comments\")}`}</Text>\n            )}\n          </WebboardReaction>\n        </>\n      )}\n    </Card>\n  );\n}\n", "import { Card, Flex, Result } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { WebboardEntry } from \"./WebboardEntry\";\n\ninterface WebboardListsProps {\n  data: any[];\n  fetcher?: any;\n  reactionOptions?: any[];\n  isMyWebboard?: boolean;\n}\n\nexport function WebboardLists(props: WebboardListsProps) {\n  const { data, fetcher, reactionOptions, isMyWebboard } = props;\n  const { t } = useTranslation();\n\n  if (data.length > 0) {\n    return (\n      <Flex vertical gap={16}>\n        {data.map((item: any) => (\n          <WebboardEntry\n            fetcher={fetcher}\n            key={item.id}\n            data={item}\n            reactionOptions={reactionOptions}\n            isMyWebboard={isMyWebboard}\n          />\n        ))}\n      </Flex>\n    );\n  } else {\n    return (\n      <Card style={{ borderRadius: 10 }}>\n        <Result icon={<InboxOutlined />} title={t(\"no webboard\")} />\n      </Card>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
