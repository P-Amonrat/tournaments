{
  "version": 3,
  "sources": ["../../../app/components/common/KycForm.tsx"],
  "sourcesContent": ["import { useContext, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nimport { AuthContext } from \"~/contexts\";\nimport dayjs from \"dayjs\";\nimport {\n  Checkbox,\n  DatePicker,\n  Divider,\n  Form,\n  Image,\n  Input,\n  Modal,\n  Space,\n  Typography,\n} from \"antd\";\nimport { InfoCircleOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport {\n  checkCitizenId,\n  hasStartEndEmptySpace,\n  validateBirthYear,\n} from \"~/utils/helper\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text, Title } = Typography;\n\ninterface KycFormProps {\n  loading?: boolean;\n  fetcher?: any;\n  form?: any;\n}\n\nexport function KycForm(props: KycFormProps) {\n  const { t } = useTranslation();\n  const { fetcher, form, loading } = props;\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [laserModal, setLaserModalModal] = useState<boolean>(false);\n\n  const handleSubmit = (values: any) => {\n    const { dateOfBirth, acceptWhalletConsent, ...value } = values;\n    const originalYear = dayjs(dateOfBirth).year();\n    const buddistYear = originalYear + 543;\n    const newDateOfBirth = dayjs(dateOfBirth).year(buddistYear);\n\n    if (!user) {\n      openLoginModal();\n      return;\n    }\n    fetcher.submit(\n      {\n        action: \"submit-kyc\",\n        data: JSON.stringify({\n          ...value,\n          birthday: dayjs(newDateOfBirth).format(\"YYYY-MM-DD\"),\n        }),\n      },\n      { method: \"post\" }\n    );\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={handleSubmit}\n      initialValues={user && user.profile}\n      layout=\"vertical\"\n    >\n      <Title level={4} style={{ margin: 0 }}>\n        {t(\"KYC info\")}\n      </Title>\n      <Divider style={{ marginBlock: 15 }} />\n      <Form.Item\n        name=\"firstName\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"first name\")}\n          </Text>\n        }\n        normalize={(value) => value.trim()}\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please input firstname\")}`,\n          },\n          {\n            pattern: /^[\u0E01-\u0E59 ]+$/,\n            message: `${t(\"invalid thai pattern\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              }\n              if (value.length) {\n                if (hasStartEndEmptySpace(value)) {\n                  return Promise.reject(\n                    new Error(`${t(\"first or last character can't be space\")}`)\n                  );\n                }\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"lastName\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"last name\")}\n          </Text>\n        }\n        colon={false}\n        normalize={(value) => value.trim()}\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please input lastname\")}`,\n          },\n          {\n            pattern: /^[\u0E01-\u0E59 ]+$/,\n            message: `${t(\"invalid thai pattern\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              }\n              if (value.length) {\n                if (hasStartEndEmptySpace(value)) {\n                  return Promise.reject(\n                    new Error(`${t(\"first or last character can't be space\")}`)\n                  );\n                }\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"dateOfBirth\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"date of birth\")}\n          </Text>\n        }\n        style={{ textAlign: \"left\" }}\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please select date of birth\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              } else {\n                if (!validateBirthYear) {\n                  return Promise.reject(\n                    new Error(`${t(\"you're underage, please check birthyear\")}`)\n                  );\n                }\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <DatePicker\n          name=\"dateOfBirth\"\n          disabledDate={(current) => current && current > dayjs().endOf(\"day\")}\n          showToday={false}\n          allowClear={false}\n          placeholder=\"DD/MM/YYYY\"\n          format=\"DD/MM/YYYY\"\n          style={{ display: \"flex\" }}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"idCard\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"citizen id\")}\n          </Text>\n        }\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please input citizen id\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              }\n              if (!checkCitizenId(value)) {\n                return Promise.reject(\n                  new Error(`${t(\"please input correct citizen id\")}`)\n                );\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <Input type=\"text\" maxLength={13} minLength={13} />\n      </Form.Item>\n      <Form.Item\n        name=\"idCardLaser\"\n        labelCol={{ span: 24 }}\n        label={\n          <Space size={10}>\n            <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n              {t(\"laser code\")}\n            </Text>\n            <InfoCircleOutlined\n              style={{ cursor: \"pointer\", color: \"#9052ee\" }}\n              onClick={() => setLaserModalModal(true)}\n            />\n          </Space>\n        }\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please input laser code\")}`,\n          },\n          () => ({\n            validator(_, value) {\n              if (!value) {\n                return Promise.resolve();\n              }\n              if (value.length) {\n                if (\n                  !value\n                    .substring(0, 2)\n                    .toLowerCase()\n                    .match(/^[a-z]+$/i)\n                ) {\n                  return Promise.reject(\n                    new Error(\n                      `\"${value.substring(0, 2)}\" ${t(\n                        \"first 2 characters must be alphabet\"\n                      )}`\n                    )\n                  );\n                }\n                if (\n                  !value\n                    .substring(2)\n                    .toLowerCase()\n                    .match(/^[0-9]+$/i)\n                ) {\n                  return Promise.reject(\n                    new Error(`${t(\"last 10 characters must be numbers\")}`)\n                  );\n                }\n                if (value.length < 12) {\n                  return Promise.reject(\n                    new Error(`${t(\"invalid laser idcard length\")}`)\n                  );\n                }\n                if (value.indexOf(\"-\") > -1) {\n                  return Promise.reject(new Error(`${t(\"please remove -\")}`));\n                }\n              }\n              return Promise.resolve();\n            },\n          }),\n        ]}\n      >\n        <Input maxLength={12} placeholder={`${t(\"please do not input '-'\")}`} />\n      </Form.Item>\n      <Form.Item\n        key=\"acceptWhalletConsent\"\n        name=\"acceptWhalletConsent\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            required: true,\n            message: `${t(\"please agree to this field\")}`,\n          },\n        ]}\n      >\n        <Checkbox>\n          <Text style={{ fontSize: \"0.9em\" }}>\n            {t(\"you agree to allow whallet to send KYC data to DOPA\")}\n          </Text>\n        </Checkbox>\n      </Form.Item>\n      <Modal\n        open={laserModal}\n        closable={false}\n        footer={false}\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n        onCancel={() => setLaserModalModal(false)}\n      >\n        <Image width={400} preview={false} src=\"/image/laser.png\" />\n      </Modal>\n      {loading ? (\n        <TiltButton color=\"secondary\">\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </TiltButton>\n      ) : (\n        <TiltButton\n          color=\"primary\"\n          onClick={() => form.submit()}\n          style={{ marginTop: 20 }}\n        >\n          {t(\"submit\")}\n        </TiltButton>\n      )}\n    </Form>\n  );\n}\n"],
  "mappings": "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",
  "names": ["dayjs"]
}
