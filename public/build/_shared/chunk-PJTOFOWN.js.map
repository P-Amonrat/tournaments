{
  "version": 3,
  "sources": ["../../../app/components/common/KycWizard.tsx", "../../../app/components/common/KycBenefits.tsx"],
  "sourcesContent": ["/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Avatar, Badge, Flex, Modal, Space, Typography } from \"antd\";\nimport {\n  CheckCircleFilled,\n  DoubleRightOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport { AuthContext } from \"~/contexts\";\n\nimport { TiltButton } from \"./TiltButton\";\nimport { KycForm } from \"./KycForm\";\nimport { useMatches } from \"@remix-run/react\";\nimport { KycBenefits } from \"./KycBenefits\";\nimport { Link } from \"lucide-react\";\nconst { Text, Title } = Typography;\n\ninterface KycWizardProps {\n  children?: any;\n}\n\nexport const KycWizard: React.FC<KycWizardProps> = (props: KycWizardProps) => {\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { children } = props;\n  const { user } = useContext(AuthContext);\n  const [modal, setModal] = useState<boolean>(false);\n  const [kycFormModal, setKycFormModal] = useState<boolean>(false);\n\n  const modalProps = {\n    closeIcon: false,\n    footer: null,\n    modalRender: (modal: any) => modal,\n    styles: {\n      body: { padding: \"20px 30px\", maxWidth: \"100%\", overflow: \"auto\" },\n    },\n  } as any;\n\n  const openModal = () => {\n    setModal(true);\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const openKycModal = () => {\n    setKycFormModal(true);\n  };\n\n  const closeKycModal = () => {\n    setKycFormModal(false);\n  };\n\n  const handleOpenKycModal = () => {\n    setKycFormModal(true);\n    setModal(false);\n  };\n\n  return (\n    <>\n      <Flex vertical align=\"center\" justify=\"center\" gap={10}>\n        <Title level={3} style={{ margin: 0, textAlign: \"center\" }}>\n          {t(\"verify identity\")}\n        </Title>\n        <Text>\n          {children\n            ? children\n            : t(\"start buy sell & anonymous after complete verification\")}\n        </Text>\n        <Space style={{ marginBlock: 15 }} size={20}>\n          <Avatar\n            size={50}\n            src={\n              user.displayImage\n                ? `${cdnUrl}/${user.displayImage}`\n                : \"image/placeholder.png\"\n            }\n          />\n          <DoubleRightOutlined style={{ fontSize: 20 }} />\n          <Badge\n            count={\n              <CheckCircleFilled style={{ fontSize: 24, color: \"#7a6fee\" }} />\n            }\n            offset={[-8, 52]}\n          >\n            <Avatar\n              size={65}\n              src={\n                user.displayImage\n                  ? `${cdnUrl}/${user.displayImage}`\n                  : \"image/placeholder.png\"\n              }\n            />\n          </Badge>\n        </Space>\n        <TiltButton\n          style={{ padding: \"15px 30px\" }}\n          onClick={openKycModal}\n          color=\"primary\"\n        >\n          {t(\"start verification\")}\n        </TiltButton>\n        <Flex\n          justify=\"flex-end\"\n          style={{ width: \"100%\", marginTop: 10, cursor: \"pointer\" }}\n          gap={5}\n          onClick={openModal}\n        >\n          <Text>{t(\"KYC benefits\")}</Text>\n          <Link style={{ color: \"#7a6fee\" }} />\n        </Flex>\n      </Flex>\n      <Modal {...modalProps} onCancel={closeModal} open={modal} width={800}>\n        <KycBenefits onVerifyKyc={handleOpenKycModal} />\n      </Modal>\n      <Modal {...modalProps} onCancel={closeKycModal} open={kycFormModal}>\n        <KycForm />\n      </Modal>\n    </>\n  );\n};\n", "import React, { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Avatar, Badge, Card, Col, Divider, Flex, Row, Typography } from \"antd\";\nimport { CheckCircleFilled, CheckCircleOutlined } from \"@ant-design/icons\";\nimport { AppContext, AuthContext } from \"~/contexts\";\n\nimport { TiltButton } from \"./TiltButton\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\n\ninterface KycBenefitsProps {\n  children?: any;\n  onVerifyKyc?: () => void;\n}\n\nexport const KycBenefits: React.FC<KycBenefitsProps> = (\n  props: KycBenefitsProps\n) => {\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { children, onVerifyKyc } = props;\n  const { user } = useContext(AuthContext);\n  const { scheme } = useContext(AppContext);\n\n  let cardStyle = {\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  const generalLists: any[] = [\n    t(\"can enter buy sell page\"),\n    t(\"create post with own profile\"),\n  ];\n\n  const kycLists: any[] = [\n    t(\"can create post and comment in buy sell room\"),\n    t(\"can create post and comment in anonymouse mode\"),\n    t(\"get verrified badge\"),\n  ];\n\n  return (\n    <Flex vertical gap={20}>\n      <Flex vertical gap={10}>\n        <Title level={3} style={{ margin: 0 }}>\n          {t(\"KYC benefits\")}\n        </Title>\n        <Text>\n          {children\n            ? children\n            : t(\"start buy sell & anonymous after complete verification\")}\n        </Text>\n      </Flex>\n      <Row wrap={false}>\n        <Col span={12} style={{ paddingTop: 75, paddingBottom: 25 }} order={0}>\n          <Card\n            bordered={false}\n            style={{ ...cardStyle, height: \"100%\" }}\n            bodyStyle={{ padding: 30 }}\n          >\n            <Flex vertical>\n              <Title level={3} style={{ margin: 0, textAlign: \"center\" }}>\n                {t(\"general user\")}\n              </Title>\n              <Divider />\n              {generalLists.map((item: any, index: number) => (\n                <div key={`general-${index}`}>\n                  <Flex gap={10} align=\"flex-start\">\n                    <CheckCircleOutlined\n                      style={{ fontSize: \"1.8em\", color: \"#7a6fee\" }}\n                    />\n                    <Text>{item}</Text>\n                  </Flex>\n                  <Divider />\n                </div>\n              ))}\n            </Flex>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <div style={{ position: \"relative\", textAlign: \"center\", zIndex: 1 }}>\n            <Badge\n              count={\n                <CheckCircleFilled style={{ fontSize: 30, color: \"#7a6fee\" }} />\n              }\n              offset={[-8, 76]}\n            >\n              <Avatar\n                size={90}\n                src={\n                  user.displayImage\n                    ? `${cdnUrl}/${user.displayImage}`\n                    : \"image/placeholder.png\"\n                }\n              />\n            </Badge>\n          </div>\n          <Card\n            bordered={false}\n            style={{\n              marginTop: -45,\n              backgroundColor: \"#cefb6a\",\n              ...cardStyle,\n            }}\n            bodyStyle={{ paddingBlock: 60, paddingInline: 30 }}\n          >\n            <Flex vertical>\n              <Title\n                level={3}\n                style={{ margin: 0, textAlign: \"center\", color: \"#231f20\" }}\n              >\n                {t(\"verified user\")}\n              </Title>\n              <Divider />\n              {kycLists.map((item: any, index: number) => (\n                <div key={`general-${index}`}>\n                  <Flex gap={10} align=\"flex-start\">\n                    <CheckCircleOutlined\n                      style={{ fontSize: \"1.8em\", color: \"#7a6fee\" }}\n                    />\n                    <Text style={{ color: \"#231f20\" }}>{item}</Text>\n                  </Flex>\n                  <Divider />\n                </div>\n              ))}\n              {onVerifyKyc && (\n                <TiltButton\n                  color=\"dark\"\n                  style={{ padding: \"15px 30px\" }}\n                  onClick={onVerifyKyc}\n                >\n                  {t(\"start verification\")}\n                </TiltButton>\n              )}\n            </Flex>\n          </Card>\n        </Col>\n      </Row>\n    </Flex>\n  );\n};\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "Text", "Title", "modal"]
}
