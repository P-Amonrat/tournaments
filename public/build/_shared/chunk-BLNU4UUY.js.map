{
  "version": 3,
  "sources": ["../../../app/components/pages/Tournament/TournamentForm.tsx"],
  "sourcesContent": ["import dayjs from \"dayjs\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  DatePicker,\n  Divider,\n  Form,\n  Image,\n  Input,\n  notification,\n  Result,\n  Row,\n  Select,\n  Space,\n  Switch,\n  Typography,\n} from \"antd\";\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport { FileUploader, TextEditor, TiltButton } from \"~/components/common\";\nimport { isArray } from \"lodash\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\n\ninterface TournamentFormProps {\n  fetcher: any;\n  form: any;\n  games: any;\n  initialAdditionalLength?: number;\n  prizeInitialAdditionalLength?: number;\n  loading?: boolean;\n  submitLabel: string;\n  edit?: boolean;\n}\n\nexport function TournamentForm(props: TournamentFormProps) {\n  const {\n    fetcher,\n    form,\n    games,\n    initialAdditionalLength,\n    prizeInitialAdditionalLength,\n    loading,\n    submitLabel,\n  } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [textEditorLoading, setTextEditorLoading] = useState<boolean>(true);\n  const [additionalFieldsLength, setAdditionalFieldsLength] = useState<number>(\n    initialAdditionalLength ? initialAdditionalLength : 0\n  );\n  const [prizeAdditionalFieldsLength, setPrizeAdditionalFieldsLength] =\n    useState<number>(\n      prizeInitialAdditionalLength ? prizeInitialAdditionalLength : 3\n    );\n\n  const gameOptions: any[] = [];\n  if (isArray(games) && games.length > 0) {\n    games.map((game: any) => {\n      gameOptions.push({\n        label: game.name,\n        value: game.id,\n      });\n    });\n  }\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleAddMoreFields = () => {\n    setAdditionalFieldsLength((previous) => 1 + previous);\n  };\n\n  const handleAddMorePrizeFields = () => {\n    setPrizeAdditionalFieldsLength((previous) => 1 + previous);\n  };\n\n  const valueZeroRemart = t(\"value must be higher than 0\");\n\n  const handleDeleteAdditionalField = useCallback(\n    (index: number) => {\n      if (\n        index != additionalFieldsLength - 1 &&\n        additionalFieldsLength - 1 > 0\n      ) {\n        Array(additionalFieldsLength - 1)\n          .fill(\"\")\n          .map((field, i) => {\n            if (i >= index) {\n              form.setFieldsValue({\n                [`additionalFields[${i}][\"isRequired\"]`]: form.getFieldValue(\n                  `additionalFields[${i + 1}][\"isRequired\"]`\n                ),\n                [`additionalFields[${i}][\"type\"]`]: form.getFieldValue(\n                  `additionalFields[${i + 1}][\"type\"]`\n                ),\n                [`additionalFields[${i}][\"name\"]`]: form.getFieldValue(\n                  `additionalFields[${i + 1}][\"name\"]`\n                ),\n                [`additionalFields[${i}][\"nameEn\"]`]: form.getFieldValue(\n                  `additionalFields[${i + 1}][\"nameEn\"]`\n                ),\n              });\n            }\n          });\n      }\n      form.resetFields([\n        `additionalFields[${additionalFieldsLength - 1}][\"isRequired\"]`,\n        `additionalFields[${additionalFieldsLength - 1}][\"type\"]`,\n        `additionalFields[${additionalFieldsLength - 1}][\"name\"]`,\n        `additionalFields[${additionalFieldsLength - 1}][\"nameEn\"]`,\n      ]);\n      setAdditionalFieldsLength((previous) => previous - 1);\n    },\n    [additionalFieldsLength, form]\n  );\n\n  const handleDeletePrizeAdditionalField = useCallback(\n    (index: number) => {\n      if (\n        index != prizeAdditionalFieldsLength - 1 &&\n        prizeAdditionalFieldsLength - 1 > 0\n      ) {\n        Array(prizeAdditionalFieldsLength - 1)\n          .fill(\"\")\n          .map((field, i) => {\n            if (i >= index) {\n              form.setFieldsValue({\n                [`prize[${i}]`]: form.getFieldValue(`prize[${i + 1}]`),\n              });\n            }\n          });\n      }\n      form.resetFields([`prize[${prizeAdditionalFieldsLength - 1}]`]);\n      setPrizeAdditionalFieldsLength((previous) => previous - 1);\n    },\n    [prizeAdditionalFieldsLength, form]\n  );\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"thumbnailImageUrl\") {\n        form.setFieldValue(\"thumbnailImageUrl\", fetcher.data.key);\n      }\n      if (fetcher.data.field === \"bannerImageUrl\") {\n        form.setFieldValue(\"bannerImageUrl\", fetcher.data.key);\n      }\n      setUploading(false);\n    }\n  }, [form, fetcher.data]);\n\n  useEffect(() => {\n    setTextEditorLoading(false);\n  }, []);\n\n  return (\n    <>\n      <Row gutter={20}>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"gameId\"\n            name=\"gameId\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please select game\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"game\")}\n              </Text>\n            }\n          >\n            <Select options={gameOptions} />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"type\"\n            name=\"type\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please select tournament type\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"tournament type\")}\n              </Text>\n            }\n          >\n            <Select\n              options={[\n                {\n                  label: t(\"single elimination\"),\n                  value: \"single_elimination\",\n                },\n              ]}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8} style={{ display: \"none\" }}>\n          <Form.Item\n            key=\"isOnline\"\n            name=\"isOnline\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is online\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item\n        key=\"name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: t(\"please input tournament name\"),\n          },\n        ]}\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"tournament name\")}\n          </Text>\n        }\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        key=\"nameEn\"\n        name=\"nameEn\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"tournament name (English)\")}\n          </Text>\n        }\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        key=\"discordUrl\"\n        name=\"discordUrl\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"discord url\")}\n          </Text>\n        }\n      >\n        <Input />\n      </Form.Item>\n      <Row gutter={20}>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isKycRequired\"\n            name=\"isKycRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is kyc required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isDiscordIdRequired\"\n            name=\"isDiscordIdRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is discordId required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isEmailRequired\"\n            name=\"isEmailRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is email required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isPhoneNumberRequired\"\n            name=\"isPhoneNumberRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is phone Number required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isIgnRequired\"\n            name=\"isIgnRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is ign required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"isSlipRequired\"\n            name=\"isSlipRequired\"\n            valuePropName=\"checked\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"is slip required\")}\n              </Text>\n            }\n          >\n            <Switch />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Divider />\n      <Space\n        direction=\"vertical\"\n        size={5}\n        style={{ display: \"flex\", marginBottom: 20 }}\n      >\n        <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n          <Col flex=\"auto\">\n            <Text className=\"required\" style={{ fontWeight: 600 }}>\n              {t(\"please upload thumnail image\")} ({t(\"recommended ratio\")} 2:1)\n            </Text>\n          </Col>\n          <Col flex=\"none\">\n            <Form.Item\n              key=\"thumbnailImageUrl\"\n              name=\"thumbnailImageUrl\"\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please upload thumnail image\")} ${t(\n                    \"recommended ratio\"\n                  )} 2:1`,\n                },\n              ]}\n            >\n              <FileUploader\n                fetcher={fetcher}\n                fieldName={\"thumbnailImageUrl\"}\n                onUploading={setUploading}\n                onErrorFileTooLarge={handleFileTooLarge}\n              >\n                <Space size={5} style={{ cursor: \"pointer\" }}>\n                  <EditOutlined style={{ color: \"#8263ea\" }} />\n                  <Text>{t(\"upload\")}</Text>\n                </Space>\n              </FileUploader>\n            </Form.Item>\n          </Col>\n        </Row>\n        {uploading ? (\n          <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n        ) : form && form.getFieldValue(\"thumbnailImageUrl\") ? (\n          <Image\n            preview={false}\n            style={{ maxWidth: 400 }}\n            src={`${cdnUrl}/${form.getFieldValue(\"thumbnailImageUrl\")}`}\n          />\n        ) : (\n          <></>\n        )}\n      </Space>\n      <Space\n        direction=\"vertical\"\n        size={5}\n        style={{ display: \"flex\", marginBottom: 20 }}\n      >\n        <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n          <Col flex=\"auto\">\n            <Text className=\"required\" style={{ fontWeight: 600 }}>\n              {t(\"please upload banner image\")} ({t(\"recommended ratio\")} 3:1)\n            </Text>\n          </Col>\n          <Col flex=\"none\">\n            <Form.Item\n              key=\"bannerImageUrl\"\n              name=\"bannerImageUrl\"\n              rules={[\n                {\n                  required: true,\n                  message: `${t(\"please upload banner image\")} ${t(\n                    \"recommended ratio\"\n                  )} 3:1`,\n                },\n              ]}\n            >\n              <FileUploader\n                fetcher={fetcher}\n                fieldName={\"bannerImageUrl\"}\n                onUploading={setUploading}\n                onErrorFileTooLarge={handleFileTooLarge}\n              >\n                <Space size={5} style={{ cursor: \"pointer\" }}>\n                  <EditOutlined style={{ color: \"#8263ea\" }} />\n                  <Text>{t(\"upload\")}</Text>\n                </Space>\n              </FileUploader>\n            </Form.Item>\n          </Col>\n        </Row>\n        {uploading ? (\n          <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n        ) : form && form.getFieldValue(\"bannerImageUrl\") ? (\n          <Image\n            preview={false}\n            style={{ maxWidth: 400 }}\n            src={`${cdnUrl}/${form.getFieldValue(\"bannerImageUrl\")}`}\n          />\n        ) : (\n          <></>\n        )}\n      </Space>\n      <Divider />\n      <Row gutter={20}>\n        <Col span={12}>\n          <Form.Item\n            name=\"registrationStartDate\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"registration start date\")}\n              </Text>\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"please select registration start date\")}`,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  } else {\n                    if (getFieldValue(\"registrationEndDate\")) {\n                      if (\n                        value.isBefore(\n                          dayjs(getFieldValue(\"registrationEndDate\"))\n                        )\n                      ) {\n                        return Promise.resolve();\n                      }\n                    } else {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"start date must be before end date\");\n                  }\n                },\n              }),\n            ]}\n          >\n            <DatePicker\n              name=\"registrationStartDate\"\n              showToday={false}\n              allowClear={false}\n              placeholder=\"DD/MM/YYYY\"\n              format=\"DD/MM/YYYY\"\n              style={{ display: \"flex\" }}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            name=\"registrationEndDate\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"registration end date\")}\n              </Text>\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"please select registration end date\")}`,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || !getFieldValue(\"registrationStartDate\")) {\n                    return Promise.resolve();\n                  }\n                  if (\n                    value.isAfter(dayjs(getFieldValue(\"registrationStartDate\")))\n                  ) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    \"end date must be after the start date\"\n                  );\n                },\n              }),\n            ]}\n          >\n            <DatePicker\n              name=\"registrationEndDate\"\n              showToday={false}\n              allowClear={false}\n              placeholder=\"DD/MM/YYYY\"\n              format=\"DD/MM/YYYY\"\n              style={{ display: \"flex\" }}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={20}>\n        <Col span={12}>\n          <Form.Item\n            name=\"startDate\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"start date\")}\n              </Text>\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"please select start date\")}`,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  } else {\n                    if (getFieldValue(\"endDate\")) {\n                      if (value.isBefore(dayjs(getFieldValue(\"endDate\")))) {\n                        return Promise.resolve();\n                      }\n                    } else {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      \"start date must be before end date and at least 2 days later than today\"\n                    );\n                  }\n                },\n              }),\n            ]}\n          >\n            <DatePicker\n              name=\"startDate\"\n              showToday={false}\n              allowClear={false}\n              placeholder=\"DD/MM/YYYY\"\n              format=\"DD/MM/YYYY\"\n              style={{ display: \"flex\" }}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            name=\"endDate\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"end date\")}\n              </Text>\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"please select end date\")}`,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || !getFieldValue(\"startDate\")) {\n                    return Promise.resolve();\n                  }\n                  if (value.isAfter(dayjs(getFieldValue(\"startDate\")))) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    \"end date must be after the start date\"\n                  );\n                },\n              }),\n            ]}\n          >\n            <DatePicker\n              name=\"endDate\"\n              showToday={false}\n              allowClear={false}\n              placeholder=\"DD/MM/YYYY\"\n              format=\"DD/MM/YYYY\"\n              style={{ display: \"flex\" }}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Divider />\n      <Row gutter={20}>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"maxTeam\"\n            name=\"maxTeam\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input max team\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"maximum team\")}\n              </Text>\n            }\n          >\n            <Select\n              options={[\n                {\n                  value: 8,\n                  label: \"8\",\n                },\n                {\n                  value: 16,\n                  label: \"16\",\n                },\n                {\n                  value: 32,\n                  label: \"32\",\n                },\n                {\n                  value: 64,\n                  label: \"64\",\n                },\n                {\n                  value: 128,\n                  label: \"128\",\n                },\n                {\n                  value: 256,\n                  label: \"256\",\n                },\n                {\n                  value: 512,\n                  label: \"512\",\n                },\n              ]}\n            />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"playerCount\"\n            name=\"playerCount\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input number of required player\"),\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"required players\")}\n              </Text>\n            }\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key=\"additionalPlayerCount\"\n            name=\"additionalPlayerCount\"\n            rules={[\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"additional player\")}\n              </Text>\n            }\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Divider />\n      <Form.Item\n        key=\"finalRoundLocation\"\n        name=\"finalRoundLocation\"\n        // rules={[\n        //   {\n        //     required: true,\n        //     message: t(\"final round location\"),\n        //   },\n        // ]}\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"final round location\")}\n          </Text>\n        }\n      >\n        <Input.TextArea rows={4} />\n      </Form.Item>\n      <Form.Item\n        key=\"finalRoundLocationEn\"\n        name=\"finalRoundLocationEn\"\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"final round location (English)\")}\n          </Text>\n        }\n      >\n        <Input.TextArea rows={4} />\n      </Form.Item>\n      <Divider />\n      <Form.Item\n        key=\"totalPrize\"\n        name=\"totalPrize\"\n        // rules={[\n        //   {\n        //     required: true,\n        //     message: t(\"please input tournament name\"),\n        //   },\n        // ]}\n        label={\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"total prize\")}\n          </Text>\n        }\n      >\n        <Input type=\"number\" />\n      </Form.Item>\n      <Row gutter={[20, 10]} style={{ marginTop: 15, marginBottom: 10 }}>\n        <Col flex=\"auto\">\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"prize additional fields\")}\n          </Text>\n        </Col>\n      </Row>\n      {prizeAdditionalFieldsLength > 0 && (\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          {Array(prizeAdditionalFieldsLength)\n            .fill(\"\")\n            .map((field, index: number) => (\n              <Row\n                key={index}\n                gutter={[10, 15]}\n                style={{ alignItems: \"center\" }}\n              >\n                <div style={{ marginLeft: \"6px\", marginRight: \"10px\" }}>\n                  {t(\"prizeNumber\")} {index + 1}\n                </div>\n                <Col flex=\"auto\">\n                  <Form.Item\n                    name={`prize[${index}]`}\n                    style={{ marginBottom: 0 }}\n                    rules={[\n                      {\n                        validator: async () => {\n                          if (prizeAdditionalFieldsLength > 10) {\n                            return Promise.reject(\n                              new Error(t(\"maximum 10 prizes\"))\n                            );\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Input placeholder={t(\"prize\")} />\n                  </Form.Item>\n                </Col>\n                <Col flex=\"none\">\n                  <Button\n                    danger\n                    icon={<DeleteOutlined />}\n                    onClick={() => handleDeletePrizeAdditionalField(index)}\n                  />\n                </Col>\n              </Row>\n            ))}\n        </Space>\n      )}\n      <Space style={{ marginTop: \"10px\" }}>\n        <Button\n          icon={<PlusOutlined />}\n          style={{\n            backgroundColor: \"#7a6fee\",\n            color: \"#fff\",\n          }}\n          onClick={handleAddMorePrizeFields}\n        >\n          {t(\"add more prize\")}\n        </Button>\n        {prizeAdditionalFieldsLength > 10 && (\n          <div style={{ color: \"red\" }}>{t(\"maximum 10 prizes\")}</div>\n        )}\n      </Space>\n      {/* <Row gutter={20}>\n        <Col span={24} md={8}>\n          <Form.Item\n            key={`prize[0]`}\n            name={`prize[0]`}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(`1st prize`)}\n              </Text>\n            }\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n          >\n            <Input type=\"number\" min=\"0\" />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key={`prize[1]`}\n            name={`prize[1]`}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(`2nd prize`)}\n              </Text>\n            }\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n          >\n            <Input type=\"number\" min=\"0\" />\n          </Form.Item>\n        </Col>\n        <Col span={24} md={8}>\n          <Form.Item\n            key={`prize[2]`}\n            name={`prize[2]`}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(`3rd prize`)}\n              </Text>\n            }\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.resolve();\n                  }\n                  if (value > 0) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(valueZeroRemart);\n                },\n              }),\n            ]}\n          >\n            <Input type=\"number\" min=\"0\" />\n          </Form.Item>\n        </Col>\n      </Row> */}\n      <Divider />\n      {!textEditorLoading ? (\n        <Space size={10} direction=\"vertical\" style={{ display: \"flex\" }}>\n          <Form.Item\n            key=\"description\"\n            name=\"description\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input description\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"description\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"description\"\n              initialValues={form.getFieldValue(\"description\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"description\", values)\n              }\n            />\n          </Form.Item>\n          <Form.Item\n            key=\"descriptionEn\"\n            name=\"descriptionEn\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"descriptionEn\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"descriptionEn\"\n              initialValues={form.getFieldValue(\"descriptionEn\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"descriptionEn\", values)\n              }\n            />\n          </Form.Item>\n        </Space>\n      ) : (\n        <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n      )}\n      <Divider />\n      {!textEditorLoading ? (\n        <Space size={10} direction=\"vertical\" style={{ display: \"flex\" }}>\n          <Form.Item\n            key=\"qualificationRules\"\n            name=\"qualificationRules\"\n            rules={[\n              {\n                required: true,\n                message: t(\"please input qualification rules\"),\n              },\n            ]}\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"qualification rules\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"qualificationRules\"\n              initialValues={form.getFieldValue(\"qualificationRules\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"qualificationRules\", values)\n              }\n            />\n          </Form.Item>\n          <Form.Item\n            key=\"qualificationRulesEn\"\n            name=\"qualificationRulesEn\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"qualification rules (English)\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"qualificationRulesEn\"\n              initialValues={form.getFieldValue(\"qualificationRulesEn\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"qualificationRulesEn\", values)\n              }\n            />\n          </Form.Item>\n          <Form.Item\n            key=\"bracketContent\"\n            name=\"bracketContent\"\n            label={\n              <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                {t(\"Upload bracket\")}\n              </Text>\n            }\n          >\n            <TextEditor\n              id=\"bracketContent\"\n              initialValues={form.getFieldValue(\"bracketContent\")}\n              fetcher={fetcher}\n              onChange={(values: any) =>\n                form.setFieldValue(\"bracketContent\", values)\n              }\n            />\n          </Form.Item>\n        </Space>\n      ) : (\n        <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n      )}\n      <Row gutter={20} justify=\"space-between\">\n        <Col>\n          <Space>\n            <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n              {t(\"create tournament post\")}\n            </Text>\n            <Form.Item\n              key=\"isTournamentPost\"\n              name=\"isTournamentPost\"\n              valuePropName=\"checked\"\n              style={{ marginTop: \"10px\" }}\n            >\n              <Switch defaultChecked />\n            </Form.Item>\n          </Space>\n        </Col>\n        <Col style={{ marginTop: \"14px\" }}>\n          <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n            {t(\"tournament Q&A post title can be edited on webboard\")}\n          </Text>\n        </Col>\n      </Row>\n      <Divider />\n      <Row gutter={[20, 10]} style={{ marginBottom: 20 }}>\n        <Col flex=\"auto\">\n          <Title level={4} style={{ margin: 0 }}>\n            {t(\"additional fields\")}\n          </Title>\n        </Col>\n        <Col flex=\"none\">\n          {/* <Button\n            icon={<PlusOutlined />}\n            style={{ backgroundColor: \"#7a6fee\", color: \"#fff\" }}\n            onClick={handleAddMoreFields}\n          >\n            {t(\"add more\")}\n          </Button> */}\n          <Space style={{ marginTop: \"10px\" }}>\n            <Button\n              icon={<PlusOutlined />}\n              style={{ backgroundColor: \"#7a6fee\", color: \"#fff\" }}\n              onClick={handleAddMoreFields}\n            >\n              {t(\"add more\")}\n            </Button>\n            {additionalFieldsLength > 10 && (\n              <div style={{ color: \"red\" }}>{t(\"maximum 10 fields\")}</div>\n            )}\n          </Space>\n        </Col>\n      </Row>\n      {additionalFieldsLength > 0 && (\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          {Array(additionalFieldsLength)\n            .fill(\"\")\n            .map((field, index: number) => (\n              <Row\n                key={index}\n                gutter={[10, 15]}\n                style={{ alignItems: \"center\" }}\n              >\n                <Col flex=\"none\">\n                  <Form.Item\n                    name={`requirementFields[${index}][\"isRequired\"]`}\n                    valuePropName=\"checked\"\n                    style={{ marginBottom: 0 }}\n                    rules={[\n                      {\n                        validator: async () => {\n                          if (additionalFieldsLength > 10) {\n                            return Promise.reject(\n                              new Error(t(\"maximum 10 fields\"))\n                            );\n                          }\n                        },\n                      },\n                    ]}\n                  >\n                    <Checkbox>{t(\"required\")}</Checkbox>\n                  </Form.Item>\n                </Col>\n                <Col flex=\"none\">\n                  <Form.Item\n                    name={`requirementFields[${index}][\"type\"]`}\n                    style={{ marginBottom: 0 }}\n                  >\n                    <Select\n                      style={{ width: 120 }}\n                      options={[\n                        {\n                          label: t(\"text input\"),\n                          value: \"text\",\n                        },\n                        {\n                          label: t(\"date picker\"),\n                          value: \"date\",\n                        },\n                      ]}\n                    />\n                  </Form.Item>\n                </Col>\n                <Col flex=\"auto\">\n                  <Form.Item\n                    name={`requirementFields[${index}][\"name\"]`}\n                    style={{ marginBottom: 0 }}\n                    rules={[\n                      {\n                        required: true,\n                        message: t(\"please input name\"),\n                      },\n                    ]}\n                  >\n                    <Input placeholder={t(\"name\")} />\n                  </Form.Item>\n                </Col>\n                <Col flex=\"auto\">\n                  <Form.Item\n                    name={`requirementFields[${index}][\"nameEn\"]`}\n                    style={{ marginBottom: 0 }}\n                  >\n                    <Input placeholder={t(\"name (English)\")} />\n                  </Form.Item>\n                </Col>\n                <Col flex=\"none\">\n                  <Button\n                    danger\n                    icon={<DeleteOutlined />}\n                    onClick={() => handleDeleteAdditionalField(index)}\n                  />\n                </Col>\n              </Row>\n            ))}\n        </Space>\n      )}\n      {contextHolder}\n      {loading ? (\n        <TiltButton color=\"secondary\" style={{ marginTop: 40 }}>\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </TiltButton>\n      ) : (\n        <TiltButton\n          color=\"primary\"\n          onClick={() => form.submit()}\n          style={{ marginTop: 40 }}\n        >\n          {submitLabel}\n        </TiltButton>\n      )}\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["dayjs"]
}
