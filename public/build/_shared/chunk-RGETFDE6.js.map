{
  "version": 3,
  "sources": ["../../../app/components/common/TiltMenus.tsx"],
  "sourcesContent": ["import { Link, useLocation } from \"@remix-run/react\";\nimport { Tooltip } from \"antd\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"~/contexts\";\n\ninterface TiltMenusProps {\n  menus: any[];\n  direction?: string;\n  position?: string;\n  activeFromQueryString?: boolean;\n  preventScrollReset?: boolean;\n  style?: React.CSSProperties;\n}\n\nexport const TiltMenus: React.FC<TiltMenusProps> = (props: TiltMenusProps) => {\n  const {\n    activeFromQueryString,\n    direction,\n    menus,\n    position,\n    preventScrollReset,\n    style,\n  } = props;\n  const { scheme } = useContext(AppContext);\n  const location = useLocation();\n\n  const renderLink = (menu: any) => {\n    return (\n      <Link\n        className={`tilt-menu-link${\n          activeFromQueryString ? \" query-string\" : \"\"\n        }${\n          (!activeFromQueryString &&\n            (location.pathname === menu.link ||\n              (menu.link !== \"/\" &&\n                location.pathname.indexOf(menu.link) > -1))) ||\n          (menu.link === \".\" &&\n            location.pathname.split(\"/\").filter((p: string) => p.length > 0)\n              .length === menu.level) ||\n          (activeFromQueryString &&\n            (location.search === menu.link.substring(1) ||\n              (location.search === \"?index\" && menu.link === \".\")))\n            ? \" active\"\n            : \"\"\n        }`}\n        to={menu.link}\n        preventScrollReset={preventScrollReset ? preventScrollReset : false}\n        target={menu.link.indexOf(\"http\") === 0 ? \"_blank\" : undefined}\n      >\n        {menu.label}\n      </Link>\n    );\n  };\n\n  return (\n    <ul\n      className={`tilt-menu${position ? ` ${position} ` : \"\"}${\n        direction ? ` ${direction} ` : \"\"\n      } ${scheme}`}\n      style={style}\n    >\n      {menus.map((menu: any, index: number) => (\n        <li key={index} className=\"tilt-menu-item\">\n          {menu.tooltip ? (\n            <Tooltip title={menu.tooltip} placement=\"bottom\" arrow={false}>\n              {renderLink(menu)}\n            </Tooltip>\n          ) : (\n            renderLink(menu)\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAEA,IAAAA,gBAA2B;AA0BrB;AAdC,IAAM,YAAsC,CAAC,UAA0B;AAC5E,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,EAAE,OAAO,QAAI,0BAAW,UAAU;AACxC,QAAM,WAAW,YAAY;AAE7B,QAAM,aAAa,CAAC,SAAc;AAChC,WACE;AAAA,MAAC;AAAA;AAAA,QACC,WAAW,iBACT,wBAAwB,kBAAkB,KAEzC,CAAC,0BACC,SAAS,aAAa,KAAK,QACzB,KAAK,SAAS,OACb,SAAS,SAAS,QAAQ,KAAK,IAAI,IAAI,OAC5C,KAAK,SAAS,OACb,SAAS,SAAS,MAAM,GAAG,EAAE,OAAO,CAAC,MAAc,EAAE,SAAS,CAAC,EAC5D,WAAW,KAAK,SACpB,0BACE,SAAS,WAAW,KAAK,KAAK,UAAU,CAAC,KACvC,SAAS,WAAW,YAAY,KAAK,SAAS,OAC/C,YACA;AAAA,QAEN,IAAI,KAAK;AAAA,QACT,oBAAoB,qBAAqB,qBAAqB;AAAA,QAC9D,QAAQ,KAAK,KAAK,QAAQ,MAAM,MAAM,IAAI,WAAW;AAAA,QAEpD,eAAK;AAAA;AAAA,MArBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsBA;AAAA,EAEJ;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,WAAW,YAAY,WAAW,IAAI,cAAc,KAClD,YAAY,IAAI,eAAe,MAC7B;AAAA,MACJ;AAAA,MAEC,gBAAM,IAAI,CAAC,MAAW,UACrB,mDAAC,QAAe,WAAU,kBACvB,eAAK,UACJ,mDAAC,mBAAQ,OAAO,KAAK,SAAS,WAAU,UAAS,OAAO,OACrD,qBAAW,IAAI,KADlB;AAAA;AAAA;AAAA;AAAA,aAEA,IAEA,WAAW,IAAI,KANV,OAAT;AAAA;AAAA;AAAA;AAAA,aAQA,CACD;AAAA;AAAA,IAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA;AAEJ;",
  "names": ["import_react"]
}
