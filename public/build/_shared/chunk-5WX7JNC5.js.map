{
  "version": 3,
  "sources": ["../../../app/components/common/IndexFilter.tsx"],
  "sourcesContent": ["import {\n  Avatar,\n  Card,\n  Divider,\n  Drawer,\n  Space,\n  theme,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { ControlOutlined } from \"@ant-design/icons\";\nimport { indexOf, isArray } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { Media, TiltButton } from \"~/components/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMatches } from \"@remix-run/react\";\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ninterface IndexFilterProps {\n  alwaysActive?: boolean;\n  filters: any[];\n  values?: any;\n  onFilterClicked: (name: string, value: string | number) => void;\n  mobileAppendChildren?: React.ReactNode;\n}\n\nexport function IndexFilter(props: IndexFilterProps) {\n  const {\n    alwaysActive,\n    filters,\n    onFilterClicked,\n    values,\n    mobileAppendChildren,\n  } = props;\n  const { token } = useToken();\n  const { t } = useTranslation();\n  const [mobileCollapsed, setMobileCollapsed] = useState<boolean>(false);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  let filteredValues = {} as any;\n  if (values) {\n    Object.keys(values).map((key: any) => {\n      filteredValues[key] = isArray(values[key])\n        ? values[key]\n        : values[key].split(\",\");\n    });\n  }\n\n  const isActive = (values: any, name: string, value: string | number) => {\n    return alwaysActive\n      ? true\n      : values &&\n          values[name] &&\n          values[name].length &&\n          indexOf(values[name], `${value}`) > -1;\n  };\n\n  const handleOpenCollapsed = () => {\n    setMobileCollapsed(true);\n  };\n\n  const handleCloseCollapsed = () => {\n    setMobileCollapsed(false);\n  };\n\n  const renderContent = () => {\n    return (\n      <Space direction=\"vertical\" size={10} style={{ display: \"flex\" }}>\n        <Title level={4}>{t(\"Filters\")}</Title>\n        {filters.map((filter: any) => (\n          <Space\n            key={filter.name}\n            size={10}\n            direction=\"vertical\"\n            style={{ display: \"flex\" }}\n          >\n            <Title level={5} style={{ marginTop: 0 }}>\n              {filter.title}\n            </Title>\n            <Space\n              wrap\n              size={5}\n              style={{\n                display: \"flex\",\n                paddingInline: filter.type === \"tilt-button\" ? 5 : 0,\n              }}\n            >\n              {filter.options.map((option: any) =>\n                filter.type === \"avatar\" ? (\n                  <Tooltip\n                    key={`${option.name}-${option.value}`}\n                    title={option.label}\n                    placement=\"bottom\"\n                    arrow={false}\n                  >\n                    <Avatar\n                      src={`${cdnUrl}/${option.image}`}\n                      size={60}\n                      onClick={() => onFilterClicked(filter.name, option.value)}\n                      style={\n                        isActive(filteredValues, filter.name, option.value)\n                          ? { opacity: 1, cursor: \"pointer\" }\n                          : {\n                              opacity: 0.5,\n                              filter: \"grayscale(100%)\",\n                              cursor: \"pointer\",\n                            }\n                      }\n                    />\n                  </Tooltip>\n                ) : (\n                  <TiltButton\n                    color={\n                      isActive(filteredValues, filter.name, option.value)\n                        ? \"primary\"\n                        : \"transparent\"\n                    }\n                    key={`${filter.name}-${option.value}`}\n                    onClick={() => onFilterClicked(filter.name, option.value)}\n                    style={{\n                      borderColor: token.colorBorder,\n                      fontStyle: \"italic\",\n                      fontWeight: 400,\n                      paddingBlock: 6,\n                    }}\n                  >\n                    <Space size={5}>\n                      {option.image ? (\n                        <Avatar src={option.image} size={20} shape=\"square\" />\n                      ) : (\n                        <></>\n                      )}\n                      <Text>{option.label}</Text>\n                    </Space>\n                  </TiltButton>\n                )\n              )}\n            </Space>\n            <Divider style={{ marginBlock: 15 }} />\n          </Space>\n        ))}\n      </Space>\n    );\n  };\n\n  return (\n    <>\n      <Media greaterThan=\"sm\">{renderContent()}</Media>\n      <Media at=\"sm\">\n        <Card bodyStyle={{ padding: 10, cursor: \"pointer\" }}>\n          <Space\n            onClick={handleOpenCollapsed}\n            size={10}\n            style={{ display: \"flex\", fontSize: 20 }}\n          >\n            <ControlOutlined />\n            <Text>{t(\"filter\")}</Text>\n          </Space>\n        </Card>\n        <Drawer\n          placement=\"left\"\n          closable={false}\n          onClose={handleCloseCollapsed}\n          open={mobileCollapsed}\n          width={250}\n          styles={{ body: { padding: \"30px 20px\" } }}\n        >\n          {renderContent()}\n          {mobileAppendChildren ? mobileAppendChildren : <></>}\n        </Drawer>\n      </Media>\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["values"]
}
