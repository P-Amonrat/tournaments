{
  "version": 3,
  "sources": ["../../../app/components/pages/Tournament/TournamentTeam.tsx"],
  "sourcesContent": ["import { useCallback, useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Card, Col, Input, Modal, Row, Space, Typography } from \"antd\";\nimport { EditOutlined, ExclamationCircleFilled } from \"@ant-design/icons\";\nimport {\n  InlineAvatar,\n  TiltButton,\n  ToCopyField,\n  UserAvatar,\n} from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nconst { Text, Title } = Typography;\n\ninterface TournamentTeamProps {\n  additionalMembers?: number;\n  data: any;\n  displayInviteLink?: boolean;\n  minMembers?: number;\n  onDelete?: () => void;\n  onEdit?: (e: any) => void;\n  onOrganizerAction?: (action: string, remark?: string) => void;\n  onRemoveTeamMember?: (teamUuid: string, memberUuid: string) => void;\n  onSubmit?: (e: any) => void;\n  style?: any;\n  submitAction?: string;\n}\n\nexport function TournamentTeam(props: TournamentTeamProps) {\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { t } = useTranslation();\n  const {\n    additionalMembers,\n    data,\n    displayInviteLink,\n    minMembers,\n    onDelete,\n    onEdit,\n    onOrganizerAction,\n    onRemoveTeamMember,\n    onSubmit,\n    style,\n    submitAction,\n  } = props;\n  const [remark, setRemark] = useState<string>(\"\");\n  const { baseUrl, scheme } = useContext(AppContext);\n  const navigate = useNavigate();\n  const minimumParticipants = minMembers ? minMembers : 5;\n  const [modal, contextHolder] = Modal.useModal();\n  const slots = Array(\n    additionalMembers\n      ? minimumParticipants + additionalMembers\n      : minimumParticipants\n  ).fill(\"\");\n  const requiredSlots = Array(minimumParticipants).fill(\"\");\n\n  const joinTeamUrl = data ? `${baseUrl}/teams/${data.uuid}/join` : \"\";\n  const members = data && data.members ? data.members : [];\n  const moreMembers = minimumParticipants - members.length;\n  let cardStyle = {\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n  };\n\n  if (style) {\n    cardStyle = { ...cardStyle, ...style };\n  }\n\n  const handleUserClicked = (uuid: string) => {\n    navigate(`/users/${uuid}`);\n  };\n\n  const handleRemarkChange = (e: any) => {\n    setRemark(e.target.value);\n  };\n\n  const handleOrganizerAction = useCallback(\n    (action: string) => {\n      if (onOrganizerAction) {\n        modal.confirm({\n          title: `${t(`are you sure to ${action} team`)}?`,\n          icon: <ExclamationCircleFilled />,\n          okText: t(\"confirm\"),\n          cancelText: t(\"cancel\"),\n          maskClosable: true,\n          onOk() {\n            onOrganizerAction(action, remark);\n            setRemark(\"\");\n          },\n        });\n      }\n    },\n    [remark]\n  );\n\n  const handleRemoveTeamMember = (teamUuid: string, memberUuid: string) => {\n    if (onRemoveTeamMember) {\n      modal.confirm({\n        title: `${t(`are you sure to delete team member`)}?`,\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        okType: \"danger\",\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          onRemoveTeamMember(teamUuid, memberUuid);\n        },\n      });\n    }\n  };\n\n  return (\n    <Card style={cardStyle} bordered={false}>\n      <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n        {data ? (\n          <>\n            <Row wrap={false}>\n              <Col flex=\"auto\">\n                <InlineAvatar\n                  avatarUrl={data.displayImage}\n                  title={data.name}\n                  subtitle={\n                    data.createdBy ? (\n                      <Text>{`${t(\"by\")} ${data.createdBy.username}`}</Text>\n                    ) : null\n                  }\n                />\n              </Col>\n              {onEdit && (\n                <Col flex=\"none\">\n                  <EditOutlined\n                    onClick={onEdit}\n                    style={{ cursor: \"pointer\", color: \"#8263ea\" }}\n                  />\n                </Col>\n              )}\n            </Row>\n            <Title level={5} style={{ fontSize: 14, margin: 0 }}>\n              {t(\"team members\")}\n            </Title>\n          </>\n        ) : (\n          <Title level={4} style={{ marginTop: 0 }}>\n            {t(\"my team\")}\n          </Title>\n        )}\n        <Space direction=\"vertical\" size={30} style={{ display: \"flex\" }}>\n          <Row gutter={[15, 15]} wrap justify=\"center\">\n            {slots.map((slot: any, index: number) => (\n              <Col key={`team-member-${index}`}>\n                {members[index] ? (\n                  <UserAvatar\n                    size={50}\n                    display={\n                      members[index].user.displayImage\n                        ? `${cdnUrl}/${members[index].user.displayImage}`\n                        : \"/image/user-placeholder.png\"\n                    }\n                    name={members[index].user.displayName}\n                    onClick={(e: any) =>\n                      handleUserClicked(\n                        data?.members[index]?.user?.userName\n                          ? data.members[index].user.userName\n                          : data.members[index].user.uuid\n                      )\n                    }\n                    onRemove={\n                      onRemoveTeamMember && index != 0\n                        ? (e: any) =>\n                            handleRemoveTeamMember(\n                              data.uuid,\n                              data.members[index].user.uuid\n                            )\n                        : undefined\n                    }\n                  />\n                ) : (\n                  <UserAvatar\n                    size={50}\n                    dashed={index > minimumParticipants - 1}\n                  />\n                )}\n              </Col>\n            ))}\n          </Row>\n          {slots.length - members.length > 0 && displayInviteLink && data && (\n            <Space\n              direction=\"vertical\"\n              size={10}\n              style={{ display: \"flex\", textAlign: \"center\" }}\n            >\n              {joinTeamUrl && <ToCopyField text={joinTeamUrl} />}\n              {requiredSlots.length - members.length <= 0 ? (\n                <Text>{t(\"Member limit reached\")}</Text>\n              ) : (\n                <Text>\n                  {t(\"you require\")} {moreMembers} {t(\"more member\")}\n                </Text>\n              )}\n            </Space>\n          )}\n          {!data && (\n            <Space\n              direction=\"vertical\"\n              size={10}\n              style={{ display: \"flex\", textAlign: \"center\" }}\n            >\n              <Text>{t(\"you are not in a team\")}</Text>\n            </Space>\n          )}\n          {onSubmit && (\n            <TiltButton\n              color={submitAction === \"leave\" ? \"danger\" : \"primary\"}\n              onClick={onSubmit}\n            >\n              {t(`${submitAction} team`)}\n            </TiltButton>\n          )}\n          {submitAction === \"submit\" && (\n            <TiltButton color=\"danger\" onClick={onDelete}>\n              {t(\"delete team\")}\n            </TiltButton>\n          )}\n        </Space>\n      </Space>\n      {onOrganizerAction && (\n        <Space\n          style={{ display: \"flex\", marginTop: 20 }}\n          direction=\"vertical\"\n          size={15}\n        >\n          {data.status === \"pending\" ? (\n            <Title level={5} style={{ fontSize: 14, margin: 0 }}>\n              {t(\"reject comment\")}\n            </Title>\n          ) : (\n            <div>\n              <Title\n                level={5}\n                // className=\"required\"\n                style={{ fontSize: 14, margin: 0 }}\n              >\n                {t(\"remove comment\")}\n              </Title>\n              <Text>{t(\"removed team members have to create a new team\")}</Text>\n            </div>\n          )}\n          <Input.TextArea\n            rows={4}\n            onChange={handleRemarkChange}\n            value={remark}\n          />\n          {data.status === \"pending\" ? (\n            <Row gutter={10}>\n              <Col span={24}>\n                <TiltButton\n                  color=\"danger\"\n                  onClick={() => handleOrganizerAction(\"reject\")}\n                >\n                  {t(\"reject team\")}\n                </TiltButton>\n              </Col>\n              {/* <Col span={12}>\n                <TiltButton\n                  color=\"primary\"\n                  onClick={() => handleOrganizerAction(\"approve\")}\n                >\n                  {t(\"approve team\")}\n                </TiltButton>\n              </Col> */}\n            </Row>\n          ) : (\n            <Row>\n              <Col span={24}>\n                <TiltButton\n                  color=\"danger\"\n                  onClick={() => handleOrganizerAction(\"remove\")}\n                >\n                  {t(\"remove team\")}\n                </TiltButton>\n              </Col>\n            </Row>\n          )}\n        </Space>\n      )}\n      {contextHolder}\n    </Card>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
