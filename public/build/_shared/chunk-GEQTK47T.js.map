{
  "version": 3,
  "sources": ["../../../app/components/pages/User/AlbumForm.tsx"],
  "sourcesContent": ["import { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Col,\n  Divider,\n  Flex,\n  Form,\n  Input,\n  notification,\n  Row,\n  Space,\n  Switch,\n  Typography,\n  Image,\n  Card,\n} from \"antd\";\nimport { EditOutlined, LoadingOutlined } from \"@ant-design/icons\";\n// import { AuthContext } from \"~/contexts\";\nimport { FileUploader, TiltButton } from \"~/components/common\";\nimport { useMatches } from \"@remix-run/react\";\nimport { TbPhotoPlus } from \"react-icons/tb\";\nconst { Text, Title } = Typography;\n// const { useToken } = theme;\n\ninterface AlbumFormProps {\n  fetcher: any;\n  form: any;\n  action: string;\n  initialValues?: any;\n  onCancel: () => void;\n}\n\nexport function AlbumForm(props: AlbumFormProps) {\n  const { fetcher, form, initialValues, onCancel, action } = props;\n  const { t } = useTranslation();\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const [messageApi, contextHolder] = notification.useNotification();\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [defaultValues, setDefaultValues] = useState<any>(initialValues);\n  const [previewCover, setPreviewCover] = useState<string | null>(\n    initialValues?.cover\n  );\n\n  const photosStyle = {\n    position: \"relative\",\n    height: 150,\n    width: 120,\n    borderRadius: 5,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundColor: \"#EEEEEE\",\n  } as any;\n\n  const handleFileTooLarge = () => {\n    messageApi.open({\n      type: \"error\",\n      message: t(\"file upload failed due to too large image size\"),\n      duration: 5,\n      placement: \"bottomRight\",\n    });\n  };\n\n  const handleSubmit = useCallback(\n    (values: any) => {\n      const { isPrivate, ...rest } = values;\n\n      fetcher.submit(\n        {\n          data: JSON.stringify({\n            ...rest,\n            isPrivate: isPrivate ? isPrivate : false,\n            id: defaultValues ? defaultValues.id : undefined,\n          }),\n        },\n        action === \"create\"\n          ? {\n              method: \"post\",\n              action: `/resources/create-album`,\n            }\n          : {\n              method: \"put\",\n              action: `/resources/edit-album`,\n            }\n      );\n      form.setFieldsValue(initialValues);\n      form.setFieldValue(\"cover\", null);\n      setPreviewCover(null);\n      form.resetFields();\n      onCancel();\n    },\n    [fetcher, form, onCancel]\n  );\n\n  useEffect(() => {\n    if (initialValues && fetcher.data && fetcher.data.success) {\n      if (fetcher.data.success) {\n        form.setFieldsValue(initialValues);\n        setPreviewCover(initialValues?.cover);\n      }\n    }\n  }, [initialValues, form, fetcher.data]);\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.field && fetcher.state) {\n      if (fetcher.data.field === \"cover\") {\n        form.setFieldValue(\"cover\", fetcher.data.key);\n        setPreviewCover(fetcher.data.key);\n      }\n\n      setUploading(false);\n    }\n  }, [form, fetcher.data, fetcher.state]);\n\n  return (\n    <div style={{ padding: 10 }}>\n      <Form\n        form={form}\n        initialValues={initialValues}\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Title level={4} style={{ margin: 0 }}>\n          {action === \"create\" ? t(\"create album\") : t(\"edit album\")}\n        </Title>\n        <Divider />\n        <Flex gap={15} vertical>\n          {/* <Row style={{ marginBottom: 10, alignItems: \"baseline\" }}>\n            <Col flex=\"auto\">\n              <Text className=\"required\" style={{ fontWeight: 600 }}>\n                {t(\"upload cover image\")} ({t(\"recommended resolution\")}{\" \"}\n                1920x1080 px)\n              </Text>\n            </Col>\n            <Col flex=\"none\">\n              <Form.Item\n                key=\"cover\"\n                name=\"cover\"\n                rules={[\n                  {\n                    required: true,\n                    message: `${t(\"upload cover image\")} ${t(\n                      \"recommended resolution\"\n                    )} 1920x1080 px`,\n                  },\n                ]}\n              >\n                <FileUploader\n                  fetcher={fetcher}\n                  fieldName={\"cover\"}\n                  onUploading={setUploading}\n                  onErrorFileTooLarge={handleFileTooLarge}\n                >\n                  <Space size={5} style={{ cursor: \"pointer\" }}>\n                    <EditOutlined style={{ color: \"#8263ea\" }} />\n                    <Text>{t(\"upload\")}</Text>\n                  </Space>\n                </FileUploader>\n              </Form.Item>\n            </Col>\n          </Row>\n          {uploading ? (\n            <Result icon={<LoadingOutlined style={{ fontSize: 24 }} spin />} />\n          ) : previewCover ? (\n            <Image\n              preview={false}\n              style={{ maxWidth: 400 }}\n              src={`${cdnUrl}/${previewCover}`}\n            />\n          ) : (\n            false\n          )} */}\n          <Form.Item\n            key=\"cover\"\n            name=\"cover\"\n            style={{ margin: \"0px\", padding: \"0px\" }}\n            rules={[\n              {\n                required: true,\n                message: `${t(\"upload cover image\")} ${t(\n                  \"recommended resolution\"\n                )} 1920x1080 px`,\n              },\n            ]}\n          >\n            <Row>\n              <Col flex=\"auto\">\n                <Space direction=\"vertical\" size={5}>\n                  <Text style={{ fontWeight: 600 }}>\n                    {t(\"upload cover image\")} ({t(\"recommended resolution\")}{\" \"}\n                    1920x1080 px)\n                  </Text>\n                  {fetcher && fetcher.state && fetcher.state !== \"idle\" ? (\n                    <Card\n                      bordered={false}\n                      style={{\n                        ...photosStyle,\n                        textAlign: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"15px 0\",\n                      }}\n                    >\n                      <LoadingOutlined\n                        style={{\n                          fontSize: 24,\n                          margin: \"40px auto\",\n                        }}\n                        spin\n                      />\n                    </Card>\n                  ) : (\n                    <div>\n                      {!form.getFieldValue(\"cover\") && !initialValues && (\n                        <FileUploader\n                          fetcher={fetcher}\n                          fieldName={\"cover\"}\n                          // maxUpload={5}\n                          onUploading={setUploading}\n                          onErrorFileTooLarge={handleFileTooLarge}\n                        >\n                          <Card\n                            bordered={false}\n                            style={{\n                              ...photosStyle,\n                              backgroundImage: `url(\"${cdnUrl}/${\n                                initialValues\n                                  ? previewCover\n                                  : form.getFieldValue(\"cover\")\n                              }\")`,\n                              textAlign: \"center\",\n                              justifyContent: \"center\",\n                              margin: \"15px 0\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            {!form.getFieldValue(\"cover\") && !previewCover && (\n                              <div\n                                style={{\n                                  textAlign: \"center\",\n                                  margin: 0,\n                                  position: \"absolute\",\n                                  top: \"50%\",\n                                  left: \"50%\",\n                                  msTransform: \"translate(-50%,-50%)\",\n                                  transform: \"translate(-50%, -50%)\",\n                                }}\n                              >\n                                <Space size={5} style={{ color: \"black\" }}>\n                                  <TbPhotoPlus />\n                                  {t(\"add\")}\n                                </Space>\n                              </div>\n                            )}\n                          </Card>\n                        </FileUploader>\n                      )}\n                      {(form.getFieldValue(\"cover\") || initialValues) && (\n                        <Image\n                          style={{\n                            marginTop: \"15px\",\n                            position: \"relative\",\n                            height: 150,\n                            width: 120,\n                            borderRadius: 5,\n                            backgroundSize: \"cover\",\n                            backgroundPosition: \"center\",\n                            backgroundColor: \"#EEEEEE\",\n                          }}\n                          src={`${cdnUrl}/${\n                            initialValues\n                              ? previewCover\n                              : form.getFieldValue(\"cover\")\n                          }`}\n                          preview={true}\n                        />\n                      )}\n                    </div>\n                  )}\n                </Space>\n              </Col>\n              {(form.getFieldValue(\"cover\") || initialValues) && (\n                <Col flex=\"none\">\n                  <FileUploader\n                    fetcher={fetcher}\n                    fieldName={\"cover\"}\n                    onUploading={setUploading}\n                    onErrorFileTooLarge={handleFileTooLarge}\n                  >\n                    <Space size={5} style={{ cursor: \"pointer\" }}>\n                      <EditOutlined style={{ color: \"#8263ea\" }} />\n                      <Text>{t(\"change\")}</Text>\n                    </Space>\n                  </FileUploader>\n                </Col>\n              )}\n            </Row>\n          </Form.Item>\n          <Form.Item\n            key=\"name\"\n            name=\"name\"\n            required={false}\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (!value || value === \"\") {\n                    const message = t(\"please input album name\");\n                    return Promise.reject(new Error(message));\n                  }\n                  if (value.length > 30) {\n                    const message = t(\n                      \"album name must contain only 30 charaters\"\n                    );\n                    return Promise.reject(new Error(message));\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            label={\n              <Space size={10}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"album name\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input\n              count={{\n                show: true,\n                max: 30,\n              }}\n            />\n          </Form.Item>\n          <Form.Item\n            key=\"description\"\n            name=\"description\"\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (value && value.length > 500) {\n                    const message = t(\n                      \"description must contain only 500 charaters\"\n                    );\n                    return Promise.reject(new Error(message));\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            label={\n              <Space size={5}>\n                <Text style={{ fontWeight: 600, fontSize: \"inherit\" }}>\n                  {t(\"description\")}\n                </Text>\n              </Space>\n            }\n          >\n            <Input.TextArea\n              placeholder={t(\"input description\")}\n              autoSize={{\n                minRows: 5,\n              }}\n              count={{\n                show: true,\n                max: 500,\n              }}\n            />\n          </Form.Item>\n          <Space size={10}>\n            <Form.Item\n              key=\"isPrivate\"\n              name=\"isPrivate\"\n              valuePropName=\"checked\"\n              noStyle\n            >\n              <Switch />\n            </Form.Item>\n            <Text>{t(\"private album\")}</Text>\n          </Space>\n        </Flex>\n        <Row gutter={10} style={{ marginTop: 30 }}>\n          <Col span={12}>\n            <TiltButton color=\"secondary\" onClick={onCancel}>\n              {t(\"cancel\")}\n            </TiltButton>\n          </Col>\n          <Col span={12}>\n            <TiltButton color=\"primary\" onClick={() => form.submit()}>\n              {action === \"create\" ? t(\"create album\") : t(\"edit album\")}\n            </TiltButton>\n          </Col>\n        </Row>\n      </Form>\n      {contextHolder}\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
