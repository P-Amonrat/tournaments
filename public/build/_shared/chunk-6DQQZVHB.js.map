{
  "version": 3,
  "sources": ["../../../app/components/pages/Tournament/TournamentEntry.tsx", "../../../app/components/pages/Tournament/TournamentEntryHeader.tsx", "../../../app/components/pages/Tournament/TournamentEntryLabel.tsx", "../../../app/components/pages/Tournament/TournamentGame.tsx", "../../../app/components/pages/Tournament/TournamentGrid.tsx"],
  "sourcesContent": ["import { useTranslation } from \"react-i18next\";\nimport { Card, Skeleton, Space, Typography } from \"antd\";\nimport { TournamentDate, TournamentEntryHeader, TournamentEntryLabel } from \".\";\nimport { Author, TiltButton } from \"~/components/common\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { useContext } from \"react\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { renderData } from \"~/utils/helper\";\n\nconst { Title } = Typography;\n\ninterface TournamentEntryProps {\n  data: any;\n  loading?: boolean;\n}\n\nexport function TournamentEntry(props: TournamentEntryProps) {\n  const { t } = useTranslation();\n  const { user } = useContext(AuthContext);\n  const { locale } = useContext(AppContext);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { data, loading } = props;\n  const navigate = useNavigate();\n  const itemHeadStyle = {\n    position: \"relative\",\n    width: \"100%\",\n    paddingBottom: \"50%\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundImage:\n      data && data.thumbnailImageUrl\n        ? `url(\"${cdnUrl}/${data.thumbnailImageUrl}\")`\n        : `url(\"/image/placeholder.png\")`, // change this to tournamet image,\n  } as any;\n\n  const handleClick = () => {\n    navigate(`/tournaments/${data.id}`);\n  };\n\n  if (loading) {\n    return (\n      <Card bordered={false} style={{ borderRadius: 10 }}>\n        <Skeleton active />\n      </Card>\n    );\n  }\n\n  return (\n    <Space\n      onClick={handleClick}\n      direction=\"vertical\"\n      size={0}\n      style={{ display: \"flex\", height: \"100%\", cursor: \"pointer\" }}\n    >\n      <Card\n        bordered={false}\n        style={{ borderRadius: 10, zIndex: 1 }}\n        headStyle={itemHeadStyle}\n        bodyStyle={{ padding: 15 }}\n        title={\n          <TournamentEntryHeader\n            game={data.game}\n            participants={data.maxTeam}\n            reward={data.totalPrize}\n          />\n        }\n      >\n        <Space direction=\"vertical\" size={3} style={{ display: \"flex\" }}>\n          <Title\n            level={5}\n            style={{\n              margin: 0,\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n            }}\n          >\n            {renderData(data, \"name\", locale)}\n          </Title>\n          <TournamentDate\n            startDate={data.startDate}\n            endDate={data.endDate}\n            size={13}\n          />\n          <Author\n            avatarSize={20}\n            fontSize={13}\n            displayImage={\n              data?.organizer?.displayImage\n                ? `${cdnUrl}/${data?.organizer?.displayImage}`\n                : undefined\n            }\n          >\n            {data?.organizer?.displayName\n              ? data?.organizer?.displayName\n              : user.displayName}\n          </Author>\n          {data.status === \"opening\" ? (\n            <TiltButton color=\"primary\" style={{ marginTop: 15 }}>\n              {t(\"attend\")}\n            </TiltButton>\n          ) : data.status === \"joined\" ? (\n            <TiltButton color=\"secondary\" style={{ marginTop: 15 }}>\n              {t(\"attended\")}\n            </TiltButton>\n          ) : (\n            <div style={{ height: 40, marginTop: 15 }} />\n          )}\n        </Space>\n      </Card>\n      <div style={{ paddingInline: 15 }}>\n        <TournamentEntryLabel\n          status={data.status}\n          startDate={data.registrationStartDate}\n          endDate={data.registrationEndDate}\n        />\n      </div>\n    </Space>\n  );\n}\n", "import { Space, Tag } from \"antd\";\nimport { TournamentGame, TournamentReward } from \".\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface TournamentEntryHeaderProps {\n  game: string;\n  participants: number;\n  reward: number;\n}\n\nexport function TournamentEntryHeader(props: TournamentEntryHeaderProps) {\n  const { t } = useTranslation();\n  const { game, participants, reward } = props;\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"10px 15px\",\n      }}\n    >\n      <Space\n        style={{\n          display: \"flex\",\n          flex: \"0 0 auto\",\n          justifyContent: \"space-between\",\n          alignItems: \"start\",\n        }}\n      >\n        <Tag color=\"#000\" bordered={false}>\n          {`${participants} ${t(\"teams\")}`}\n        </Tag>\n        <TournamentGame size={36} game={game} />\n      </Space>\n      <Space\n        style={{ display: \"flex\", flex: \"auto\", alignItems: \"end\" }}\n        size={0}\n      >\n        <TournamentReward reward={reward} />\n      </Space>\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { Card, Space, Typography, theme } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nconst { useToken } = theme;\nconst { Text } = Typography;\n\ninterface TournamentEntryLabelProps {\n  status: string;\n  startDate?: string;\n  endDate?: string;\n}\n\nexport function TournamentEntryLabel(props: TournamentEntryLabelProps) {\n  const { status, startDate, endDate } = props;\n  const { token } = useToken();\n  const { t } = useTranslation();\n  let label: React.ReactNode;\n\n  switch (status) {\n    case \"ongoing\":\n      label = <Text style={{ color: \"#000\" }}>{t(\"tournament ongoing\")}</Text>;\n      break;\n    case \"upcoming\":\n      label = (\n        <Space direction=\"horizontal\" size={5} wrap>\n          <Text>{t(\"opening registration\")}</Text>\n          {startDate && (\n            <Text style={{ fontWeight: 600 }}>\n              {dayjs(startDate).format(\"DD MMM YYYY\")}\n            </Text>\n          )}\n        </Space>\n      );\n      break;\n    case \"finished\":\n      label = <Text>{t(\"tournament finished\")}</Text>;\n      break;\n    default:\n      label = (\n        <Space direction=\"horizontal\" size={5} wrap>\n          <Text>{t(\"opening registration\")}</Text>\n          {startDate && (\n            <Text style={{ fontWeight: 600 }}>\n              {`${t(\"today\")} - ${dayjs(endDate).format(\"DD MMM YYYY\")}`}\n            </Text>\n          )}\n        </Space>\n      );\n      break;\n  }\n\n  return (\n    <Card\n      bodyStyle={{ padding: 10, textAlign: \"center\" }}\n      bordered={false}\n      style={{\n        borderRadius: 10,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0,\n        backgroundColor:\n          status === \"ongoing\" ? token.colorPrimary : token.colorBgBase,\n      }}\n    >\n      {label}\n    </Card>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Avatar } from \"antd\";\n\ninterface TournamentGameProps {\n  game: any;\n  size?: number;\n}\n\nexport function TournamentGame(props: TournamentGameProps) {\n  const { game, size } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  return (\n    <Avatar\n      size={size ? size : 45}\n      src={game.iconUrl ? `${cdnUrl}/${game.iconUrl}` : \"\"}\n    >\n      {game.name}\n    </Avatar>\n  );\n}\n", "import { Col, Row, Typography } from \"antd\";\nimport { TournamentEntry } from \".\";\nconst { Title } = Typography;\n\ninterface TournamentGridProps {\n  data: any[] | null;\n  loading?: boolean;\n  title?: string;\n}\n\nexport function TournamentGrid(props: TournamentGridProps) {\n  const { data, loading, title } = props;\n  const dummy = Array(8).fill(\"\");\n  const entries = loading ? dummy : data ? data : [];\n\n  return (\n    <>\n      {title && (\n        <Title level={4} style={{ marginTop: 0, marginBottom: 30 }}>\n          {title}\n        </Title>\n      )}\n      <Row gutter={[20, 20]}>\n        {entries.map((item: any, index: number) => (\n          <Col span={24} md={6} key={loading ? `dummy-${index}` : item.id}>\n            <TournamentEntry data={item} loading={loading} />\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAAA,gBAA2B;AAsCnB;AAlCR,IAAM,EAAE,MAAM,IAAI;AAOX,SAAS,gBAAgB,OAA6B;AAhB7D;AAiBE,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,EAAE,KAAK,QAAI,0BAAW,WAAW;AACvC,QAAM,EAAE,OAAO,QAAI,0BAAW,UAAU;AACxC,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAC9B,QAAM,EAAE,MAAM,QAAQ,IAAI;AAC1B,QAAM,WAAW,YAAY;AAC7B,QAAM,gBAAgB;AAAA,IACpB,UAAU;AAAA,IACV,OAAO;AAAA,IACP,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,oBAAoB;AAAA,IACpB,iBACE,QAAQ,KAAK,oBACT,QAAQ,UAAU,KAAK,wBACvB;AAAA;AAAA,EACR;AAEA,QAAM,cAAc,MAAM;AACxB,aAAS,gBAAgB,KAAK,IAAI;AAAA,EACpC;AAEA,MAAI,SAAS;AACX,WACE,mDAAC,gBAAK,UAAU,OAAO,OAAO,EAAE,cAAc,GAAG,GAC/C,6DAAC,oBAAS,QAAM,QAAhB;AAAA;AAAA;AAAA;AAAA,WAAiB,KADnB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,EAEJ;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,SAAS;AAAA,MACT,WAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO,EAAE,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,UAAU;AAAA,MAE5D;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,UAAU;AAAA,YACV,OAAO,EAAE,cAAc,IAAI,QAAQ,EAAE;AAAA,YACrC,WAAW;AAAA,YACX,WAAW,EAAE,SAAS,GAAG;AAAA,YACzB,OACE;AAAA,cAAC;AAAA;AAAA,gBACC,MAAM,KAAK;AAAA,gBACX,cAAc,KAAK;AAAA,gBACnB,QAAQ,KAAK;AAAA;AAAA,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIA;AAAA,YAGF,6DAAC,iBAAM,WAAU,YAAW,MAAM,GAAG,OAAO,EAAE,SAAS,OAAO,GAC5D;AAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,OAAO;AAAA,kBACP,OAAO;AAAA,oBACL,QAAQ;AAAA,oBACR,UAAU;AAAA,oBACV,cAAc;AAAA,oBACd,YAAY;AAAA,kBACd;AAAA,kBAEC,qBAAW,MAAM,QAAQ,MAAM;AAAA;AAAA,gBATlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAUA;AAAA,cACA;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAW,KAAK;AAAA,kBAChB,SAAS,KAAK;AAAA,kBACd,MAAM;AAAA;AAAA,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIA;AAAA,cACA;AAAA,gBAAC;AAAA;AAAA,kBACC,YAAY;AAAA,kBACZ,UAAU;AAAA,kBACV,gBACE,kCAAM,cAAN,mBAAiB,gBACb,GAAG,WAAU,kCAAM,cAAN,mBAAiB,iBAC9B;AAAA,kBAGL,8CAAM,cAAN,mBAAiB,gBACd,kCAAM,cAAN,mBAAiB,cACjB,KAAK;AAAA;AAAA,gBAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAYA;AAAA,cACC,KAAK,WAAW,YACf,mDAAC,cAAW,OAAM,WAAU,OAAO,EAAE,WAAW,GAAG,GAChD,YAAE,QAAQ,KADb;AAAA;AAAA;AAAA;AAAA,qBAEA,IACE,KAAK,WAAW,WAClB,mDAAC,cAAW,OAAM,aAAY,OAAO,EAAE,WAAW,GAAG,GAClD,YAAE,UAAU,KADf;AAAA;AAAA;AAAA;AAAA,qBAEA,IAEA,mDAAC,SAAI,OAAO,EAAE,QAAQ,IAAI,WAAW,GAAG,KAAxC;AAAA;AAAA;AAAA;AAAA,qBAA2C;AAAA,iBAvC/C;AAAA;AAAA;AAAA;AAAA,mBAyCA;AAAA;AAAA,UAtDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAuDA;AAAA,QACA,mDAAC,SAAI,OAAO,EAAE,eAAe,GAAG,GAC9B;AAAA,UAAC;AAAA;AAAA,YACC,QAAQ,KAAK;AAAA,YACb,WAAW,KAAK;AAAA,YAChB,SAAS,KAAK;AAAA;AAAA,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIA,KALF;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA;AAAA;AAAA,IApEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqEA;AAEJ;;;ACrFQ,IAAAC,0BAAA;AAzBD,SAAS,sBAAsB,OAAmC;AACvE,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,EAAE,MAAM,cAAc,OAAO,IAAI;AAEvC,SACE;AAAA,IAAC;AAAA;AAAA,MACC,OAAO;AAAA,QACL,UAAU;AAAA,QACV,KAAK;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,eAAe;AAAA,QACf,SAAS;AAAA,MACX;AAAA,MAEA;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,OAAO;AAAA,cACL,SAAS;AAAA,cACT,MAAM;AAAA,cACN,gBAAgB;AAAA,cAChB,YAAY;AAAA,YACd;AAAA,YAEA;AAAA,kEAAC,eAAI,OAAM,QAAO,UAAU,OACzB,aAAG,gBAAgB,EAAE,OAAO,OAD/B;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,oDAAC,kBAAe,MAAM,IAAI,QAA1B;AAAA;AAAA;AAAA;AAAA,qBAAsC;AAAA;AAAA;AAAA,UAXxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAYA;AAAA,QACA;AAAA,UAAC;AAAA;AAAA,YACC,OAAO,EAAE,SAAS,QAAQ,MAAM,QAAQ,YAAY,MAAM;AAAA,YAC1D,MAAM;AAAA,YAEN,8DAAC,oBAAiB,UAAlB;AAAA;AAAA;AAAA;AAAA,mBAAkC;AAAA;AAAA,UAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA;AAAA;AAAA,IA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BA;AAEJ;;;AC7CA,mBAAkB;AAkBJ,IAAAC,0BAAA;AAjBd,IAAM,EAAE,SAAS,IAAI;AACrB,IAAM,EAAE,KAAK,IAAI;AAQV,SAAS,qBAAqB,OAAkC;AACrE,QAAM,EAAE,QAAQ,WAAW,QAAQ,IAAI;AACvC,QAAM,EAAE,MAAM,IAAI,SAAS;AAC3B,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,MAAI;AAEJ,UAAQ,QAAQ;AAAA,IACd,KAAK;AACH,cAAQ,oDAAC,QAAK,OAAO,EAAE,OAAO,OAAO,GAAI,YAAE,oBAAoB,KAAvD;AAAA;AAAA;AAAA;AAAA,aAAyD;AACjE;AAAA,IACF,KAAK;AACH,cACE,oDAAC,iBAAM,WAAU,cAAa,MAAM,GAAG,MAAI,MACzC;AAAA,4DAAC,QAAM,YAAE,sBAAsB,KAA/B;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,QAChC,aACC,oDAAC,QAAK,OAAO,EAAE,YAAY,IAAI,GAC5B,2BAAAC,SAAM,SAAS,EAAE,OAAO,aAAa,KADxC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WALJ;AAAA;AAAA;AAAA;AAAA,aAOA;AAEF;AAAA,IACF,KAAK;AACH,cAAQ,oDAAC,QAAM,YAAE,qBAAqB,KAA9B;AAAA;AAAA;AAAA;AAAA,aAAgC;AACxC;AAAA,IACF;AACE,cACE,oDAAC,iBAAM,WAAU,cAAa,MAAM,GAAG,MAAI,MACzC;AAAA,4DAAC,QAAM,YAAE,sBAAsB,KAA/B;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,QAChC,aACC,oDAAC,QAAK,OAAO,EAAE,YAAY,IAAI,GAC5B,aAAG,EAAE,OAAO,WAAO,aAAAA,SAAM,OAAO,EAAE,OAAO,aAAa,OADzD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WALJ;AAAA;AAAA;AAAA;AAAA,aAOA;AAEF;AAAA,EACJ;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,WAAW,EAAE,SAAS,IAAI,WAAW,SAAS;AAAA,MAC9C,UAAU;AAAA,MACV,OAAO;AAAA,QACL,cAAc;AAAA,QACd,qBAAqB;AAAA,QACrB,sBAAsB;AAAA,QACtB,iBACE,WAAW,YAAY,MAAM,eAAe,MAAM;AAAA,MACtD;AAAA,MAEC;AAAA;AAAA,IAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA;AAEJ;;;ACrDI,IAAAC,0BAAA;AANG,SAAS,eAAe,OAA4B;AACzD,QAAM,EAAE,MAAM,KAAK,IAAI;AACvB,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAE9B,SACE;AAAA,IAAC;AAAA;AAAA,MACC,MAAM,OAAO,OAAO;AAAA,MACpB,KAAK,KAAK,UAAU,GAAG,UAAU,KAAK,YAAY;AAAA,MAEjD,eAAK;AAAA;AAAA,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAEJ;;;ACLI,IAAAC,0BAAA;AAdJ,IAAM,EAAE,OAAAC,OAAM,IAAI;AAQX,SAAS,eAAe,OAA4B;AACzD,QAAM,EAAE,MAAM,SAAS,MAAM,IAAI;AACjC,QAAM,QAAQ,MAAM,CAAC,EAAE,KAAK,EAAE;AAC9B,QAAM,UAAU,UAAU,QAAQ,OAAO,OAAO,CAAC;AAEjD,SACE,wFACG;AAAA,aACC,oDAACA,QAAA,EAAM,OAAO,GAAG,OAAO,EAAE,WAAW,GAAG,cAAc,GAAG,GACtD,mBADH;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEF,oDAAC,eAAI,QAAQ,CAAC,IAAI,EAAE,GACjB,kBAAQ,IAAI,CAAC,MAAW,UACvB,oDAAC,eAAI,MAAM,IAAI,IAAI,GACjB,8DAAC,mBAAgB,MAAM,MAAM,WAA7B;AAAA;AAAA;AAAA;AAAA,WAA+C,KADtB,UAAU,SAAS,UAAU,KAAK,IAA7D;AAAA;AAAA;AAAA;AAAA,WAEA,CACD,KALH;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OAZF;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ;",
  "names": ["import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "dayjs", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Title"]
}
