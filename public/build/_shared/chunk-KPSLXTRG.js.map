{
  "version": 3,
  "sources": ["../../../app/components/pages/Webboard/WebboardIndexHeader.tsx"],
  "sourcesContent": ["import { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  Card,\n  Col,\n  Divider,\n  Input,\n  Result,\n  Row,\n  Select,\n  Space,\n  Typography,\n} from \"antd\";\nimport {\n  CloseOutlined,\n  InboxOutlined,\n  LoadingOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport { AppContext } from \"~/contexts\";\nimport { Link } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { debounce, isEmpty, isNil, omitBy } from \"lodash\";\nimport { Search } from \"lucide-react\";\n\nconst { Text } = Typography;\n\ninterface WebboardIndexHeaderProps {\n  children: any;\n  fetcher: any;\n  searchParams: any;\n  submit: any;\n}\n\nexport function WebboardIndexHeader(props: WebboardIndexHeaderProps) {\n  const { children, fetcher, searchParams, submit } = props;\n  const [openSearch, setOpenSearch] = useState<boolean>(false);\n  const [tagOptions, setTagOptions] = useState<any>(null);\n  const { scheme } = useContext(AppContext);\n  const { t } = useTranslation();\n\n  const searchCardStyle = {\n    height: 54,\n    marginTop: 10,\n    borderRadius: 0,\n    boxShadow: \"none\",\n    overflow: \"visible\",\n    zIndex: 1,\n  };\n  const searchCardBodyStyle = {\n    padding: 5,\n    backgroundColor: \"inherit\",\n    borderRadius: 10,\n    boxShadow:\n      scheme === \"dark\"\n        ? \"0px 4px 15px -5px rgba(255,255,255,0.75)\"\n        : \"0px 4px 15px -5px rgba(0,0,0,0.75)\",\n\n    overflow: \"hidden\",\n  };\n\n  const handleOpenSearch = () => {\n    setOpenSearch(true);\n  };\n\n  const handleCloseSearch = () => {\n    setOpenSearch(false);\n    setTagOptions(null);\n  };\n\n  const handleSearch = useCallback(\n    (e: any) => {\n      const searchString = e.target.value;\n      let newSearchParams = { ...searchParams };\n      if (searchString.length > 0) {\n        if (searchString.indexOf(\"#\") > -1) {\n          if (searchString.length > 0) {\n            fetcher.submit(\n              { name: searchString },\n              { method: \"post\", action: \"/resources/tags\" }\n            );\n          }\n          if (newSearchParams.q) {\n            delete newSearchParams[\"q\"];\n            submit(\n              omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n              { method: \"get\", preventScrollReset: true }\n            );\n          }\n        } else {\n          setTagOptions(null);\n          newSearchParams.q = searchString;\n          submit(\n            omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n            { method: \"get\", preventScrollReset: true }\n          );\n        }\n      } else {\n        setTagOptions(null);\n        delete newSearchParams[\"q\"];\n        submit(\n          omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n          { method: \"get\", preventScrollReset: true }\n        );\n      }\n    },\n    [fetcher, searchParams, submit]\n  );\n\n  const handleSortChanged = useCallback(\n    (order: string) => {\n      let newSearchParams = { ...searchParams };\n      if (order.length > 0) {\n        newSearchParams.orderBy = order;\n      } else {\n        delete newSearchParams[\"orderBy\"];\n      }\n      submit(\n        omitBy(newSearchParams, (v) => isNil(v) && isEmpty(v)),\n        { method: \"get\", preventScrollReset: true }\n      );\n    },\n    [searchParams, submit]\n  );\n\n  const handleDebounceSearch = useMemo(\n    () => debounce(handleSearch, 500),\n    [handleSearch]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      fetcher.data.tags\n    ) {\n      setTagOptions(fetcher.data.tags);\n    }\n  }, [fetcher]);\n\n  return (\n    <>\n      <Row gutter={[15, 15]} wrap style={{ alignItems: \"center\" }}>\n        <Col flex=\"auto\">\n          <Space>{children}</Space>\n        </Col>\n        <Col flex=\"none\">\n          <Space size={20}>\n            <Text>\n              {openSearch ? (\n                <CloseOutlined\n                  style={{ fontSize: 20 }}\n                  onClick={handleCloseSearch}\n                />\n              ) : (\n                <Search style={{ fontSize: 20 }} onClick={handleOpenSearch} />\n              )}\n            </Text>\n            <Select\n              defaultValue={\n                searchParams && searchParams.orderBy ? searchParams.orderBy : \"\"\n              }\n              style={{ minWidth: 185 }}\n              onSelect={handleSortChanged}\n              options={[\n                { label: t(\"last update\"), value: \"\" },\n                { label: t(\"lastest post\"), value: \"post\" },\n                { label: t(\"most comments\"), value: \"comments\" },\n                { label: t(\"most reactions\"), value: \"reactions\" },\n              ]}\n            />\n          </Space>\n        </Col>\n      </Row>\n      {openSearch && (\n        <Card\n          bordered={false}\n          bodyStyle={searchCardBodyStyle}\n          style={searchCardStyle}\n        >\n          <Input\n            autoFocus\n            bordered={false}\n            prefix={\n              <Search\n                className=\"site-form-item-icon\"\n                style={{ fontSize: 20, paddingRight: 10 }}\n              />\n            }\n            defaultValue={searchParams && searchParams.q ? searchParams.q : \"\"}\n            onChange={handleDebounceSearch}\n          />\n          {tagOptions !== null && (\n            <div>\n              <Divider style={{ marginTop: 10, marginBottom: 0 }} />\n              <Space\n                direction=\"vertical\"\n                style={{ display: \"flex\", maxHeight: 400, overflow: \"auto\" }}\n                size={0}\n              >\n                {fetcher && fetcher.state === \"loading\" ? (\n                  <LoadingOutlined style={{ fontSize: 20 }} spin />\n                ) : tagOptions.length > 0 ? (\n                  tagOptions.map((tag: any) => (\n                    <Link\n                      className={`suggested-options ${scheme}`}\n                      key={tag.name}\n                      to={`/tags/${tag.id}`}\n                      style={{\n                        display: \"flex\",\n                        padding: 10,\n                        borderRadius: 6,\n                      }}\n                    >\n                      <Text>{`#${tag.name}`}</Text>\n                    </Link>\n                  ))\n                ) : (\n                  <Result\n                    icon={<InboxOutlined />}\n                    title={t(\"no participant\")}\n                  />\n                )}\n              </Space>\n            </div>\n          )}\n        </Card>\n      )}\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
