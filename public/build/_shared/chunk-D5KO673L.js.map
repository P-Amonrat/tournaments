{
  "version": 3,
  "sources": ["../../../app/components/pages/Webboard/WebboardEntryAuthor.tsx", "../../../app/components/pages/Webboard/WebboardEntryControl.tsx", "../../../app/components/pages/Webboard/WebboardEntryMeta.tsx", "../../../app/components/pages/Webboard/WebboardEntryTags.tsx", "../../../app/components/pages/Webboard/WebboardReaction.tsx", "../../../app/components/common/Poll.tsx", "../../../app/components/common/ReactionsBox.tsx"],
  "sourcesContent": ["import { Avatar, Image, Skeleton, Space, Tag, Tooltip, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport dayjs from \"dayjs\";\nimport { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Media } from \"~/components/common\";\nimport { useEffect, useState } from \"react\";\nconst { Text } = Typography;\n\ninterface WebboardEntryAuthorProps {\n  anonymous?: boolean;\n  userUuid?: string;\n  deletedAt?: string;\n  displayImage?: string;\n  assetFrame?: string;\n  displayName: string;\n  isAdmin?: boolean;\n  createdAt?: string;\n  updatedAt?: string;\n  isVerified: string;\n  role: any[];\n}\n\nexport function WebboardEntryAuthor(props: WebboardEntryAuthorProps) {\n  const {\n    anonymous,\n    deletedAt,\n    displayImage,\n    displayName,\n    isAdmin,\n    createdAt,\n    updatedAt,\n    userUuid,\n    isVerified,\n    role,\n    assetFrame,\n  } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [diff, setDiff] = useState<any>(null);\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  let roles = [];\n  if (role) {\n    roles = role.sort((a: any, b: any) => a.id - b.id);\n  }\n\n  const getProperTimeDifference = (date: any) => {\n    if (!date) return null;\n\n    const diffMonths = dayjs().diff(dayjs(date), \"month\");\n    if (diffMonths >= 12) {\n      return { unit: \"year\", value: dayjs().diff(dayjs(date), \"year\") };\n    } else if (diffMonths >= 1) {\n      return { unit: \"month\", value: diffMonths };\n    } else {\n      const diffDays = dayjs().diff(dayjs(date), \"day\");\n      if (diffDays >= 1) {\n        return { unit: \"day\", value: diffDays };\n      } else {\n        const diffHours = dayjs().diff(dayjs(date), \"hour\");\n        if (diffHours >= 1) {\n          return { unit: \"hour\", value: diffHours };\n        } else {\n          const diffMinutes = dayjs().diff(dayjs(date), \"minute\");\n          if (diffMinutes >= 1) {\n            return { unit: \"minute\", value: diffMinutes };\n          } else {\n            const diffSeconds = dayjs().diff(dayjs(date), \"second\");\n            return { unit: \"second\", value: diffSeconds };\n          }\n        }\n      }\n    }\n  };\n\n  const linkToUser = (e: any) => {\n    navigate(`/users/${userUuid}`);\n  };\n\n  useEffect(() => {\n    if (createdAt) {\n      setDiff(getProperTimeDifference(createdAt));\n    }\n  }, [createdAt]);\n\n  return (\n    <Space size={12}>\n      <div\n        style={{\n          padding: \"14.5px\",\n          backgroundImage: `url(${assetFrame})`,\n          // backgroundImage: `url(/image/Space.gif)`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      >\n        <Avatar\n          src={\n            displayImage && !anonymous\n              ? displayImage\n              : \"/image/avatar-anonymous.jpg\"\n          }\n          size={50}\n          onClick={userUuid && !anonymous ? linkToUser : undefined}\n          style={{ cursor: userUuid && !anonymous ? \"pointer\" : \"default\" }}\n        />\n      </div>\n      <Space direction=\"vertical\" size={0}>\n        <Space size={10}>\n          <Text\n            style={{\n              fontWeight: 600,\n              cursor: userUuid && !anonymous ? \"pointer\" : \"default\",\n            }}\n            onClick={userUuid && !anonymous ? linkToUser : undefined}\n          >\n            {anonymous ? t(\"anonymous\") : displayName}\n          </Text>\n          {isAdmin && !anonymous && (\n            <Tag\n              style={{ margin: 0, lineHeight: \"24px\", fontSize: 12 }}\n              color=\"#7063f4\"\n            >\n              {t(\"admin\")}\n            </Tag>\n          )}\n          {!anonymous && (\n            <>\n              {isVerified && roles && roles.length < 1 && (\n                <Tooltip placement=\"top\" arrow={false} title={t(\"verified\")}>\n                  <div>\n                    <Image\n                      width={25}\n                      src=\"/image/verifiedUser.png\"\n                      preview={false}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n              {roles && roles.length > 0 && (\n                <Tooltip placement=\"top\" arrow={false} title={t(roles[0].name)}>\n                  <div>\n                    <Image\n                      width={25}\n                      src={`${cdnUrl}/${roles[0].badgeImage}`}\n                      preview={false}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </>\n          )}\n        </Space>\n        {diff && (\n          <Space wrap={true}>\n            {diff ? (\n              <Text>{`${diff.value} ${t(`${diff.unit}s ago`)}`}</Text>\n            ) : (\n              <Skeleton\n                paragraph={{ width: 50, rows: 1, style: { margin: 0 } }}\n                title={false}\n                active\n              />\n            )}\n            {updatedAt && createdAt && updatedAt !== createdAt && (\n              <Media greaterThan=\"sm\">\n                <Space>\n                  <span>&#183;</span>\n                  <Text style={{ opacity: 0.6 }}>{`${t(\n                    deletedAt ? \"deleted at\" : \"edited at\"\n                  )} ${dayjs(deletedAt ? deletedAt : updatedAt).format(\n                    \"DD/MM/YYYY - HH:mm\"\n                  )}`}</Text>\n                </Space>\n              </Media>\n            )}\n          </Space>\n        )}\n      </Space>\n    </Space>\n  );\n}\n", "import { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { Dropdown, Input, Modal, Space, Typography, Select } from \"antd\";\nimport {\n  AlertOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  ExclamationCircleFilled,\n  MoreOutlined,\n} from \"@ant-design/icons\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { TiltButton } from \"~/components/common\";\nimport { AppContext } from \"~/contexts\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { ShareDropDown } from \"~/components/common/ShareDropDown\";\nimport { Ellipsis, PenLine, Trash2, TriangleAlert } from \"lucide-react\";\n\nconst { Text, Title } = Typography;\n\ninterface WebboardEntryControlProps {\n  fetcher?: any;\n  id: string;\n  ignoreShare?: boolean;\n  isOwner?: boolean;\n  isForumAdmin?: boolean;\n  onEditClicked?: () => void;\n  postType?: \"comment\" | \"webboard\";\n}\n\nexport function WebboardEntryControl(props: WebboardEntryControlProps) {\n  const {\n    fetcher,\n    id,\n    ignoreShare,\n    isOwner,\n    isForumAdmin,\n    onEditClicked,\n    postType,\n  } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { baseUrl } = useContext(AppContext);\n  const [reason, setReason] = useState<string>(\"\");\n  const [modal, contextHolder] = Modal.useModal();\n  const [reportModal, setReportModal] = useState<boolean>(false);\n  const postUrl = `${baseUrl}/webboards/${id}`;\n  const { Option } = Select;\n\n  const openReportModal = () => {\n    setReportModal(true);\n  };\n\n  const closeReportModal = () => {\n    setReportModal(false);\n  };\n\n  const handleEditClicked = () => {\n    if (onEditClicked) {\n      onEditClicked();\n    } else {\n      navigate(`/webboards/${id}/edit`);\n    }\n  };\n\n  const onReasonChanged = (e: any) => {\n    setReason(e.target.value);\n  };\n\n  const [selectedReason, setSelectedReason] = useState<string>(\"\");\n\n  const reasonOptions = [\n    { label: \" Inappropriate Content\", value: \"Inappropriate Content\" },\n    { label: \"Violence\", value: \"Violence\" },\n    { label: \"Harassment\", value: \"Harassment\" },\n    { label: \" False Information\", value: \"False Information\" },\n    { label: \"Spam\", value: \"Spam\" },\n    { label: \"Unauthorized Sales\", value: \"Unauthorized Sales\" },\n    { label: \"Others\", value: \"Others\" },\n  ];\n\n  const onReasonSelected = (value: string) => {\n    if (value !== \"Others\") {\n      setReason(value);\n    } else {\n      setReason(\"\");\n    }\n    setSelectedReason(value);\n  };\n\n  const reasonSelect = (\n    <Select\n      style={{ width: \"100%\" }}\n      onChange={onReasonSelected}\n      value={selectedReason ? selectedReason : undefined}\n      disabled={fetcher.state !== \"idle\"}\n      placeholder={t(\"select reason\")}\n      listHeight={300}\n    >\n      {reasonOptions.map((option) => (\n        <Option key={option.value} value={option.value}>\n          {option.label}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  const submitReport = useCallback(() => {\n    if (reason.length > 0) {\n      fetcher.submit(\n        { reason, id, type: postType },\n        {\n          method: \"post\",\n          action: `/resources/report-post`,\n        }\n      );\n    }\n  }, [fetcher, postType, reason]);\n\n  const deletePost = useCallback(() => {\n    modal.confirm({\n      title: `${t(`are you sure to delete this post`)}?`,\n      icon: <ExclamationCircleFilled />,\n      okText: t(\"confirm\"),\n      okType: \"danger\",\n      cancelText: t(\"cancel\"),\n      maskClosable: true,\n      onOk() {\n        fetcher.submit(\n          { id, type: postType },\n          {\n            method: \"delete\",\n            action: `/resources/delete-post`,\n          }\n        );\n      },\n    });\n  }, [fetcher, id, postType]);\n\n  const menus = [\n    {\n      label: (\n        <Space size={10} style={{ color: \"#f5222d\" }}>\n          <TriangleAlert />\n          {t(\"report\")}\n        </Space>\n      ),\n      onClick: openReportModal,\n    },\n  ] as any[];\n  if (isOwner || isForumAdmin) {\n    menus.push({\n      label: (\n        <Space size={10}>\n          <Trash2 />\n          {t(\"delete\")}\n        </Space>\n      ),\n      onClick: deletePost,\n    });\n  }\n  useEffect(() => {\n    setReason(\"\");\n  }, [id]);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.data.success === `report-${postType ? postType : \"webboard\"}` &&\n      fetcher.state === \"idle\"\n    ) {\n      setReason(\"\");\n      setReportModal(false);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType]);\n\n  return (\n    <>\n      <Space size={15}>\n        <Dropdown\n          arrow={false}\n          menu={{ items: menus }}\n          placement=\"bottomRight\"\n          trigger={[\"click\"]}\n        >\n          <Text style={{ fontSize: 18, cursor: \"pointer\" }}>\n            <Ellipsis />\n          </Text>\n        </Dropdown>\n        {!ignoreShare && <ShareDropDown postUrl={postUrl} />}\n        {isOwner && (\n          <Text\n            style={{ fontSize: 18, cursor: \"pointer\" }}\n            onClick={handleEditClicked}\n          >\n            <PenLine />\n          </Text>\n        )}\n      </Space>\n      <Modal\n        closeIcon={false}\n        footer={null}\n        open={reportModal}\n        onCancel={closeReportModal}\n      >\n        <Space direction=\"vertical\" size={20} style={{ display: \"flex\" }}>\n          <Title level={4} style={{ margin: 0 }}>\n            {t(\"please input reason to report\")}\n          </Title>\n          {reasonSelect}\n          {selectedReason === \"Others\" && (\n            <Input.TextArea\n              rows={4}\n              onChange={onReasonChanged}\n              value={reason}\n              disabled={fetcher.state !== \"idle\"}\n            />\n          )}\n          <TiltButton\n            color=\"danger\"\n            onClick={submitReport}\n            disabled={!reason.length || fetcher.state !== \"idle\"}\n          >\n            {t(\"report\")}\n          </TiltButton>\n        </Space>\n      </Modal>\n      {contextHolder}\n    </>\n  );\n}\n", "import { useMatches, useNavigate } from \"@remix-run/react\";\nimport { Avatar, Space, theme, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { TiltButton } from \"~/components/common\";\nconst { Text } = Typography;\nconst { useToken } = theme;\n\ninterface WebboardEntryMetaProps {\n  rooms: any[];\n  games: any[];\n}\n\nexport function WebboardEntryMeta(props: WebboardEntryMetaProps) {\n  const { games, rooms } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { token } = useToken();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const navigateToGame = (gameId: string | number) => {\n    navigate(`/webboards?games=${gameId}`);\n  };\n\n  const navigateToRoom = (roomId: string | number) => {\n    navigate(`/webboards?rooms=${roomId}`);\n  };\n\n  return (\n    <Space wrap size={[6, 4]} style={{ lineHeight: 1 }}>\n      {games.map(\n        (game: any) =>\n          game.game?.id && (\n            <Avatar\n              key={`game-${game.game.id}`}\n              style={{ cursor: \"pointer\" }}\n              src={`${cdnUrl}/${game.game.iconUrl}`}\n              size={36}\n              onClick={() => navigateToGame(game.game.id)}\n            />\n          )\n      )}\n      {rooms.map((room: any) =>\n        room.room?.id && room.room?.name ? (\n          <TiltButton\n            key={`room-${room.room.id}`}\n            color=\"transparent\"\n            onClick={() => navigateToRoom(room.room.id)}\n            style={{\n              padding: \"5px 10px\",\n              height: \"auto\",\n              borderColor: token.colorBorder,\n              fontStyle: \"italic\",\n              fontWeight: 400,\n            }}\n          >\n            <Text>{t(room.room.nameEn)}</Text>\n          </TiltButton>\n        ) : null\n      )}\n    </Space>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport { Space, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nconst { Text } = Typography;\n\ninterface WebboardEntryTagsProps {\n  data: any[];\n}\n\nexport function WebboardEntryTags(props: WebboardEntryTagsProps) {\n  const { data } = props;\n  const { t } = useTranslation();\n\n  return (\n    <Space wrap size={[10, 4]} style={{ lineHeight: 1 }}>\n      {data\n        .sort((a: any, b: any) => {\n          if (a.id > b.id) return -1;\n          if (a.id < b.id) return 1;\n          return 0;\n        })\n        .map((postTag: any) => (\n          <Link key={postTag.tag.name} to={`/tags/${postTag.tag.id}`}>\n            <Text style={{ color: \"#7a6fee\" }}>\n              {t(`#${postTag.tag.name}`)}\n            </Text>\n          </Link>\n        ))}\n    </Space>\n  );\n}\n", "import {\n  useCallback,\n  type ReactNode,\n  useEffect,\n  useState,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { debounce } from \"lodash\";\nimport { Avatar, Dropdown, Flex, Space, Tooltip, Typography } from \"antd\";\nimport { PlusOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport { ReactionsBox, TiltButton } from \"~/components/common\";\nimport { resetFetcher } from \"~/utils/helper\";\nimport { AppContext, AuthContext } from \"~/contexts\";\nimport { useMatches } from \"@remix-run/react\";\n\nconst { Text } = Typography;\n\ninterface WebboardReactionProps {\n  postId: string | number;\n  postType?: \"webboard\" | \"comment\";\n  data: any[];\n  children?: ReactNode;\n  fetcher?: any;\n  reactionOptions?: any[];\n  userReaction?: any[];\n}\n\nexport function WebboardReaction(props: WebboardReactionProps) {\n  const {\n    data,\n    children,\n    fetcher,\n    postId,\n    postType,\n    reactionOptions,\n    userReaction,\n  } = props;\n  const [currentReactions, setCurrentReactions] = useState<any[]>(\n    data\n      ? data.sort((a: any, b: any) => {\n          if (a.count > b.count) return -1;\n          if (a.count < b.count) return 1;\n          return 0;\n        })\n      : []\n  );\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n  const { scheme } = useContext(AppContext);\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [dropOpen, setDropOpen] = useState<boolean>(false);\n  const disabled = !user;\n\n  const hasMatchingReaction = useCallback(\n    (reactionId: number) => {\n      return userReaction?.some(\n        (reactionObj: any) => reactionObj.reactionId === reactionId\n      );\n    },\n    [userReaction]\n  );\n\n  const selectReaction = useCallback(\n    (reactionId: string | number) => {\n      fetcher.submit(\n        { id: postId, reactionId: reactionId, type: postType },\n        {\n          method: \"post\",\n          action: `/resources/reaction-post`,\n        }\n      );\n      setDropOpen(false);\n    },\n    [postId, postType]\n  );\n\n  const handleDebounceSelectReaction = useMemo(\n    () => debounce(selectReaction, 500),\n    [selectReaction]\n  );\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      fetcher.data.success &&\n      fetcher.data.success === `reaction-${postType ? postType : \"webboard\"}` &&\n      fetcher.data.postType &&\n      fetcher.data.postType === postType &&\n      fetcher.data.postId &&\n      `${fetcher.data.postId}` === `${postId}` &&\n      fetcher.data.reactions\n    ) {\n      setCurrentReactions([\n        ...fetcher.data.reactions.sort((a: any, b: any) => {\n          if (a.count > b.count) return -1;\n          if (a.count < b.count) return 1;\n          return 0;\n        }),\n      ]);\n      resetFetcher(fetcher);\n    }\n  }, [fetcher, postType, postId]);\n\n  const filteredReactions = currentReactions.filter((cr: any) => cr.count > 0);\n\n  return (\n    <Flex gap={20} justify=\"space-between\" align=\"center\" wrap=\"wrap\">\n      <Space size={5} wrap>\n        {filteredReactions &&\n          filteredReactions.length > 0 &&\n          filteredReactions.map((reaction: any) => (\n            <Tooltip\n              key={reaction.id}\n              title={reaction.reaction.name}\n              placement=\"top\"\n            >\n              <div>\n                {reaction.count !== 0 && (\n                  <TiltButton\n                    style={{\n                      padding: \"5px 10px\",\n                    }}\n                    onClick={\n                      !disabled\n                        ? () =>\n                            handleDebounceSelectReaction(reaction.reaction.id)\n                        : () => openLoginModal()\n                    }\n                    color={\n                      hasMatchingReaction(reaction.reactionId)\n                        ? \"secondary-brand\"\n                        : `${scheme}-base`\n                    }\n                  >\n                    <Space\n                      size={8}\n                      style={{\n                        fontSize: \"1.1em\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Avatar\n                        shape=\"square\"\n                        src={`${cdnUrl}/${reaction.reaction.image}`}\n                        size={20}\n                      />\n                      <Text\n                        style={{\n                          fontWeight: 400,\n                        }}\n                      >\n                        {reaction.count && reaction.count.toLocaleString()}\n                      </Text>\n                    </Space>\n                  </TiltButton>\n                )}\n              </div>\n            </Tooltip>\n          ))}\n        {reactionOptions && reactionOptions.length > 0 && (\n          <Dropdown\n            arrow\n            open={dropOpen}\n            onOpenChange={!disabled ? setDropOpen : () => openLoginModal()}\n            dropdownRender={(menus: ReactNode) => {\n              return (\n                <ReactionsBox\n                  data={reactionOptions}\n                  onReactionSelect={\n                    !disabled ? handleDebounceSelectReaction : openLoginModal\n                  }\n                />\n              );\n            }}\n            trigger={[\"click\"]}\n            placement=\"top\"\n          >\n            <div>\n              <TiltButton\n                color={`${scheme}-base`}\n                style={{\n                  padding: \"5px 10px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <Space size={2} style={{ fontSize: \"1.1em\" }}>\n                  <SmileOutlined />\n                  <PlusOutlined style={{ fontSize: \"0.8em\", strokeWidth: 2 }} />\n                </Space>\n              </TiltButton>\n            </div>\n          </Dropdown>\n        )}\n      </Space>\n      {children && children}\n    </Flex>\n  );\n}\n", "import {\n  Card,\n  Col,\n  Flex,\n  Modal,\n  Result,\n  Row,\n  Skeleton,\n  Space,\n  theme,\n  Typography,\n} from \"antd\";\nimport {\n  CheckCircleFilled,\n  ExclamationCircleFilled,\n  InboxOutlined,\n} from \"@ant-design/icons\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"~/contexts\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"@remix-run/react\";\nconst { useToken } = theme;\nconst { Text } = Typography;\n\ninterface PollProps {\n  onClick?: (e: any) => void;\n  data: any;\n  queryInitialAnswer?: boolean;\n  fetcher?: any;\n  fromIndex?: boolean;\n  webboardId?: boolean;\n}\n\nexport function Poll(props: PollProps) {\n  const { onClick, data, queryInitialAnswer, fetcher, fromIndex, webboardId } =\n    props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { token } = useToken();\n  const { user, openLoginModal } = useContext(AuthContext);\n  const [modal, contextHolder] = Modal.useModal();\n  const [poll, setPoll] = useState<any>(data);\n  const [loading, setLoading] = useState<boolean>(\n    user && queryInitialAnswer ? true : false\n  );\n  const [answered, setAnswered] = useState<any>(null);\n\n  const handleVote = useCallback(\n    (answerId: string | number) => {\n      modal.confirm({\n        title: (\n          <Space direction=\"vertical\" size={0}>\n            <Text>{`${t(\"are you to vote\")}?`}</Text>\n            <Text>{t(\"this action cannot be undone\")}</Text>\n          </Space>\n        ),\n        icon: <ExclamationCircleFilled />,\n        okText: t(\"confirm\"),\n        cancelText: t(\"cancel\"),\n        maskClosable: true,\n        onOk() {\n          fetcher.submit(\n            { id: data.id, answerId },\n            {\n              method: \"post\",\n              action: `/resources/submit-poll`,\n            }\n          );\n        },\n      });\n    },\n    [data, fetcher]\n  );\n\n  useEffect(() => {\n    if (user && queryInitialAnswer) {\n      setLoading(true);\n      fetcher.load(`/resources/poll-answer?id=${data.id}`);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (\n      fetcher &&\n      fetcher.data &&\n      fetcher.state === \"idle\" &&\n      fetcher.data.pollId &&\n      `${fetcher.data.pollId}` === `${data.id}`\n    ) {\n      setAnswered(fetcher.data.answer ? fetcher.data.answer : null);\n      if (fetcher.data.poll) {\n        setPoll(fetcher.data.poll);\n      }\n      setLoading(false);\n    }\n  }, [data, fetcher]);\n\n  return (\n    <Card\n      bordered={false}\n      style={{\n        backgroundColor: token.colorBgElevated,\n        borderRadius: 10,\n        // maskImage: `linear-gradient(to bottom, rgba(0,0,0,1), rgba(0,0,0,0.2))`,\n      }}\n    >\n      <Flex gap={10} vertical>\n        {loading ? (\n          <Skeleton active />\n        ) : poll.options && poll.options.length > 0 ? (\n          <>\n            {poll.options\n              .slice(0, fromIndex ? 4 : undefined)\n              .sort((a: any, b: any) => {\n                if (a.id < b.id) return -1;\n                if (a.id > b.id) return 1;\n                return 0;\n              })\n              .map((option: any) => (\n                <Row\n                  gutter={10}\n                  key={option.id}\n                  style={{ alignItems: \"center\" }}\n                  wrap={false}\n                >\n                  <Col flex=\"none\">\n                    {(option.userPollSelections &&\n                      option.userPollSelections[0]) ||\n                    `${option.id}` === `${answered}` ? (\n                      <CheckCircleFilled\n                        style={{ color: \"#7a6fee\", fontSize: 30 }}\n                      />\n                    ) : (\n                      <div\n                        style={{\n                          width: 30,\n                          height: 30,\n                          border: `2px solid ${token.colorBorder}`,\n                          borderRadius: \"50%\",\n                          cursor: answered ? \"default\" : \"pointer\",\n                        }}\n                        onClick={\n                          answered\n                            ? undefined\n                            : user\n                            ? onClick\n                              ? onClick\n                              : () => handleVote(option.id)\n                            : () => openLoginModal()\n                        }\n                      />\n                    )}\n                  </Col>\n                  <Col flex=\"auto\">\n                    <Card\n                      style={\n                        // answered &&\n                        // `${option.userPollSelections}` === `${answered}`\n                        //   ? { backgroundColor: \"#7a6fee\" }\n                        //   : undefined\n                        ((option.userPollSelections &&\n                          option.userPollSelections[0]) ||\n                          `${option.id}` === `${answered}`) && {\n                          backgroundColor: \"#7a6fee\",\n                        }\n                      }\n                      bodyStyle={{\n                        padding: 15,\n                      }}\n                    >\n                      <Text\n                        style={{\n                          display: \"block\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                          whiteSpace: \"nowrap\",\n                          color:\n                            (option.userPollSelections &&\n                              option.userPollSelections[0]) ||\n                            `${option.id}` === `${answered}`\n                              ? \"#fff\"\n                              : undefined,\n                        }}\n                      >\n                        {option.option}\n                      </Text>\n                    </Card>\n                  </Col>\n                  <Col\n                    flex=\"none\"\n                    style={{ minWidth: 40, textAlign: \"center\" }}\n                  >\n                    <Text style={{ fontSize: \"1.1em\" }}>{option.count}</Text>\n                  </Col>\n                </Row>\n              ))}\n            {poll.options.length > 4 && fromIndex === true && (\n              <Text\n                style={{ textAlign: \"center\", zIndex: 1000 }}\n                onClick={() => navigate(`/webboards/${webboardId}`)}\n              >\n                {t(\"and more options...\")}\n              </Text>\n            )}\n          </>\n        ) : (\n          <Result icon={<InboxOutlined />} title={t(\"no option\")} />\n        )}\n      </Flex>\n      {contextHolder}\n    </Card>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { Avatar, Card, Flex } from \"antd\";\n\ninterface ReactionsBoxProps {\n  data: any;\n  onReactionSelect: (option: number | string) => void;\n}\n\nexport function ReactionsBox(props: ReactionsBoxProps) {\n  const { data, onReactionSelect } = props;\n  const matches = useMatches();\n  const { cdnUrl } = matches[0].data;\n\n  return (\n    <Card\n      bordered={false}\n      bodyStyle={{\n        padding: 10,\n        width: 260,\n        maxHeight: 260,\n        overflow: \"auto\",\n      }}\n    >\n      <Flex gap={10} wrap=\"wrap\">\n        {data &&\n          data.length > 0 &&\n          data.map((option: any) => (\n            <Avatar\n              key={option.id}\n              shape=\"square\"\n              src={`${cdnUrl}/${option.image}`}\n              size={40}\n              onClick={() => onReactionSelect(option.id)}\n              style={{ cursor: \"pointer\" }}\n            />\n          ))}\n      </Flex>\n    </Card>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,mBAAkB;;;ACQlB,IAAAA,gBAA6D;AAyFrD;AAlFR,IAAM,EAAE,MAAM,MAAM,IAAI;AAYjB,SAAS,qBAAqB,OAAkC;AACrE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,WAAW,YAAY;AAC7B,QAAM,EAAE,QAAQ,QAAI,0BAAW,UAAU;AACzC,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAiB,EAAE;AAC/C,QAAM,CAAC,OAAO,aAAa,IAAI,cAAM,SAAS;AAC9C,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAkB,KAAK;AAC7D,QAAM,UAAU,GAAG,qBAAqB;AACxC,QAAM,EAAE,OAAO,IAAI;AAEnB,QAAM,kBAAkB,MAAM;AAC5B,mBAAe,IAAI;AAAA,EACrB;AAEA,QAAM,mBAAmB,MAAM;AAC7B,mBAAe,KAAK;AAAA,EACtB;AAEA,QAAM,oBAAoB,MAAM;AAC9B,QAAI,eAAe;AACjB,oBAAc;AAAA,IAChB,OAAO;AACL,eAAS,cAAc,SAAS;AAAA,IAClC;AAAA,EACF;AAEA,QAAM,kBAAkB,CAAC,MAAW;AAClC,cAAU,EAAE,OAAO,KAAK;AAAA,EAC1B;AAEA,QAAM,CAAC,gBAAgB,iBAAiB,QAAI,wBAAiB,EAAE;AAE/D,QAAM,gBAAgB;AAAA,IACpB,EAAE,OAAO,0BAA0B,OAAO,wBAAwB;AAAA,IAClE,EAAE,OAAO,YAAY,OAAO,WAAW;AAAA,IACvC,EAAE,OAAO,cAAc,OAAO,aAAa;AAAA,IAC3C,EAAE,OAAO,sBAAsB,OAAO,oBAAoB;AAAA,IAC1D,EAAE,OAAO,QAAQ,OAAO,OAAO;AAAA,IAC/B,EAAE,OAAO,sBAAsB,OAAO,qBAAqB;AAAA,IAC3D,EAAE,OAAO,UAAU,OAAO,SAAS;AAAA,EACrC;AAEA,QAAM,mBAAmB,CAAC,UAAkB;AAC1C,QAAI,UAAU,UAAU;AACtB,gBAAU,KAAK;AAAA,IACjB,OAAO;AACL,gBAAU,EAAE;AAAA,IACd;AACA,sBAAkB,KAAK;AAAA,EACzB;AAEA,QAAM,eACJ;AAAA,IAAC;AAAA;AAAA,MACC,OAAO,EAAE,OAAO,OAAO;AAAA,MACvB,UAAU;AAAA,MACV,OAAO,iBAAiB,iBAAiB;AAAA,MACzC,UAAU,QAAQ,UAAU;AAAA,MAC5B,aAAa,EAAE,eAAe;AAAA,MAC9B,YAAY;AAAA,MAEX,wBAAc,IAAI,CAAC,WAClB,mDAAC,UAA0B,OAAO,OAAO,OACtC,iBAAO,SADG,OAAO,OAApB;AAAA;AAAA;AAAA;AAAA,aAEA,CACD;AAAA;AAAA,IAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA;AAGF,QAAM,mBAAe,2BAAY,MAAM;AACrC,QAAI,OAAO,SAAS,GAAG;AACrB,cAAQ;AAAA,QACN,EAAE,QAAQ,IAAI,MAAM,SAAS;AAAA,QAC7B;AAAA,UACE,QAAQ;AAAA,UACR,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,IACF;AAAA,EACF,GAAG,CAAC,SAAS,UAAU,MAAM,CAAC;AAE9B,QAAM,iBAAa,2BAAY,MAAM;AACnC,UAAM,QAAQ;AAAA,MACZ,OAAO,GAAG,EAAE,kCAAkC;AAAA,MAC9C,MAAM,mDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,MAC/B,QAAQ,EAAE,SAAS;AAAA,MACnB,QAAQ;AAAA,MACR,YAAY,EAAE,QAAQ;AAAA,MACtB,cAAc;AAAA,MACd,OAAO;AACL,gBAAQ;AAAA,UACN,EAAE,IAAI,MAAM,SAAS;AAAA,UACrB;AAAA,YACE,QAAQ;AAAA,YACR,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,SAAS,IAAI,QAAQ,CAAC;AAE1B,QAAM,QAAQ;AAAA,IACZ;AAAA,MACE,OACE,mDAAC,iBAAM,MAAM,IAAI,OAAO,EAAE,OAAO,UAAU,GACzC;AAAA,2DAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,eAAe;AAAA,QACd,EAAE,QAAQ;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEF,SAAS;AAAA,IACX;AAAA,EACF;AACA,MAAI,WAAW,cAAc;AAC3B,UAAM,KAAK;AAAA,MACT,OACE,mDAAC,iBAAM,MAAM,IACX;AAAA,2DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,QACP,EAAE,QAAQ;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEF,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AACA,+BAAU,MAAM;AACd,cAAU,EAAE;AAAA,EACd,GAAG,CAAC,EAAE,CAAC;AAEP,+BAAU,MAAM;AACd,QACE,WACA,QAAQ,QACR,QAAQ,KAAK,YAAY,UAAU,WAAW,WAAW,gBACzD,QAAQ,UAAU,QAClB;AACA,gBAAU,EAAE;AACZ,qBAAe,KAAK;AACpB,mBAAa,OAAO;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,SAAS,QAAQ,CAAC;AAEtB,SACE,sFACE;AAAA,uDAAC,iBAAM,MAAM,IACX;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,OAAO;AAAA,UACP,MAAM,EAAE,OAAO,MAAM;AAAA,UACrB,WAAU;AAAA,UACV,SAAS,CAAC,OAAO;AAAA,UAEjB,6DAAC,QAAK,OAAO,EAAE,UAAU,IAAI,QAAQ,UAAU,GAC7C,6DAAC,cAAD;AAAA;AAAA;AAAA;AAAA,iBAAU,KADZ;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,QARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA;AAAA,MACC,CAAC,eAAe,mDAAC,iBAAc,WAAf;AAAA;AAAA;AAAA;AAAA,aAAiC;AAAA,MACjD,WACC;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,EAAE,UAAU,IAAI,QAAQ,UAAU;AAAA,UACzC,SAAS;AAAA,UAET,6DAAC,aAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA;AAAA,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,SAlBJ;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,UAAU;AAAA,QAEV,6DAAC,iBAAM,WAAU,YAAW,MAAM,IAAI,OAAO,EAAE,SAAS,OAAO,GAC7D;AAAA,6DAAC,SAAM,OAAO,GAAG,OAAO,EAAE,QAAQ,EAAE,GACjC,YAAE,+BAA+B,KADpC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACC;AAAA,UACA,mBAAmB,YAClB;AAAA,YAAC,cAAM;AAAA,YAAN;AAAA,cACC,MAAM;AAAA,cACN,UAAU;AAAA,cACV,OAAO;AAAA,cACP,UAAU,QAAQ,UAAU;AAAA;AAAA,YAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,UAEF;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,SAAS;AAAA,cACT,UAAU,CAAC,OAAO,UAAU,QAAQ,UAAU;AAAA,cAE7C,YAAE,QAAQ;AAAA;AAAA,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMA;AAAA,aAnBF;AAAA;AAAA;AAAA;AAAA,eAoBA;AAAA;AAAA,MA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2BA;AAAA,IACC;AAAA,OAlDH;AAAA;AAAA;AAAA;AAAA,SAmDA;AAEJ;;;ACtMY,IAAAC,0BAAA;AA7BZ,IAAM,EAAE,MAAAC,MAAK,IAAI;AACjB,IAAM,EAAE,SAAS,IAAI;AAOd,SAAS,kBAAkB,OAA+B;AAC/D,QAAM,EAAE,OAAO,MAAM,IAAI;AACzB,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAC9B,QAAM,EAAE,MAAM,IAAI,SAAS;AAC3B,QAAM,WAAW,YAAY;AAC7B,QAAM,EAAE,EAAE,IAAI,eAAe;AAE7B,QAAM,iBAAiB,CAAC,WAA4B;AAClD,aAAS,oBAAoB,QAAQ;AAAA,EACvC;AAEA,QAAM,iBAAiB,CAAC,WAA4B;AAClD,aAAS,oBAAoB,QAAQ;AAAA,EACvC;AAEA,SACE,oDAAC,iBAAM,MAAI,MAAC,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,EAAE,YAAY,EAAE,GAC9C;AAAA,UAAM;AAAA,MACL,CAAC,SAAW;AA/BpB;AAgCU,2BAAK,SAAL,mBAAW,OACT;AAAA,UAAC;AAAA;AAAA,YAEC,OAAO,EAAE,QAAQ,UAAU;AAAA,YAC3B,KAAK,GAAG,UAAU,KAAK,KAAK;AAAA,YAC5B,MAAM;AAAA,YACN,SAAS,MAAM,eAAe,KAAK,KAAK,EAAE;AAAA;AAAA,UAJrC,QAAQ,KAAK,KAAK;AAAA,UADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA;AAAA;AAAA,IAEN;AAAA,IACC,MAAM;AAAA,MAAI,CAAC,SAAW;AA1C7B;AA2CQ,2BAAK,SAAL,mBAAW,SAAM,UAAK,SAAL,mBAAW,QAC1B;AAAA,UAAC;AAAA;AAAA,YAEC,OAAM;AAAA,YACN,SAAS,MAAM,eAAe,KAAK,KAAK,EAAE;AAAA,YAC1C,OAAO;AAAA,cACL,SAAS;AAAA,cACT,QAAQ;AAAA,cACR,aAAa,MAAM;AAAA,cACnB,WAAW;AAAA,cACX,YAAY;AAAA,YACd;AAAA,YAEA,8DAACA,OAAA,EAAM,YAAE,KAAK,KAAK,MAAM,KAAzB;AAAA;AAAA;AAAA;AAAA,mBAA2B;AAAA;AAAA,UAXtB,QAAQ,KAAK,KAAK;AAAA,UADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAaA,IACE;AAAA;AAAA,IACN;AAAA,OA9BF;AAAA;AAAA;AAAA;AAAA,SA+BA;AAEJ;;;ACvCY,IAAAC,0BAAA;AApBZ,IAAM,EAAE,MAAAC,MAAK,IAAI;AAMV,SAAS,kBAAkB,OAA+B;AAC/D,QAAM,EAAE,KAAK,IAAI;AACjB,QAAM,EAAE,EAAE,IAAI,eAAe;AAE7B,SACE,oDAAC,iBAAM,MAAI,MAAC,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO,EAAE,YAAY,EAAE,GAC/C,eACE,KAAK,CAAC,GAAQ,MAAW;AACxB,QAAI,EAAE,KAAK,EAAE;AAAI,aAAO;AACxB,QAAI,EAAE,KAAK,EAAE;AAAI,aAAO;AACxB,WAAO;AAAA,EACT,CAAC,EACA,IAAI,CAAC,YACJ,oDAAC,QAA4B,IAAI,SAAS,QAAQ,IAAI,MACpD,8DAACA,OAAA,EAAK,OAAO,EAAE,OAAO,UAAU,GAC7B,YAAE,IAAI,QAAQ,IAAI,MAAM,KAD3B;AAAA;AAAA;AAAA;AAAA,SAEA,KAHS,QAAQ,IAAI,MAAvB;AAAA;AAAA;AAAA;AAAA,SAIA,CACD,KAbL;AAAA;AAAA;AAAA;AAAA,SAcA;AAEJ;;;AC9BA,IAAAC,gBAOO;AACP,oBAAyB;AAwIH,IAAAC,0BAAA;AAhItB,IAAM,EAAE,MAAAC,MAAK,IAAI;AAYV,SAAS,iBAAiB,OAA8B;AAC7D,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,CAAC,kBAAkB,mBAAmB,QAAI;AAAA,IAC9C,OACI,KAAK,KAAK,CAAC,GAAQ,MAAW;AAC5B,UAAI,EAAE,QAAQ,EAAE;AAAO,eAAO;AAC9B,UAAI,EAAE,QAAQ,EAAE;AAAO,eAAO;AAC9B,aAAO;AAAA,IACT,CAAC,IACD,CAAC;AAAA,EACP;AACA,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAC9B,QAAM,EAAE,OAAO,QAAI,0BAAW,UAAU;AACxC,QAAM,EAAE,MAAM,eAAe,QAAI,0BAAW,WAAW;AACvD,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAkB,KAAK;AACvD,QAAM,WAAW,CAAC;AAElB,QAAM,0BAAsB;AAAA,IAC1B,CAAC,eAAuB;AACtB,aAAO,6CAAc;AAAA,QACnB,CAAC,gBAAqB,YAAY,eAAe;AAAA;AAAA,IAErD;AAAA,IACA,CAAC,YAAY;AAAA,EACf;AAEA,QAAM,qBAAiB;AAAA,IACrB,CAAC,eAAgC;AAC/B,cAAQ;AAAA,QACN,EAAE,IAAI,QAAQ,YAAwB,MAAM,SAAS;AAAA,QACrD;AAAA,UACE,QAAQ;AAAA,UACR,QAAQ;AAAA,QACV;AAAA,MACF;AACA,kBAAY,KAAK;AAAA,IACnB;AAAA,IACA,CAAC,QAAQ,QAAQ;AAAA,EACnB;AAEA,QAAM,mCAA+B;AAAA,IACnC,UAAM,wBAAS,gBAAgB,GAAG;AAAA,IAClC,CAAC,cAAc;AAAA,EACjB;AAEA,+BAAU,MAAM;AACd,QACE,WACA,QAAQ,QACR,QAAQ,UAAU,UAClB,QAAQ,KAAK,WACb,QAAQ,KAAK,YAAY,YAAY,WAAW,WAAW,gBAC3D,QAAQ,KAAK,YACb,QAAQ,KAAK,aAAa,YAC1B,QAAQ,KAAK,UACb,GAAG,QAAQ,KAAK,aAAa,GAAG,YAChC,QAAQ,KAAK,WACb;AACA,0BAAoB;AAAA,QAClB,GAAG,QAAQ,KAAK,UAAU,KAAK,CAAC,GAAQ,MAAW;AACjD,cAAI,EAAE,QAAQ,EAAE;AAAO,mBAAO;AAC9B,cAAI,EAAE,QAAQ,EAAE;AAAO,mBAAO;AAC9B,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,CAAC;AACD,mBAAa,OAAO;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,SAAS,UAAU,MAAM,CAAC;AAE9B,QAAM,oBAAoB,iBAAiB,OAAO,CAAC,OAAY,GAAG,QAAQ,CAAC;AAE3E,SACE,oDAAC,gBAAK,KAAK,IAAI,SAAQ,iBAAgB,OAAM,UAAS,MAAK,QACzD;AAAA,wDAAC,iBAAM,MAAM,GAAG,MAAI,MACjB;AAAA,2BACC,kBAAkB,SAAS,KAC3B,kBAAkB,IAAI,CAAC,aACrB;AAAA,QAAC;AAAA;AAAA,UAEC,OAAO,SAAS,SAAS;AAAA,UACzB,WAAU;AAAA,UAEV,8DAAC,SACE,mBAAS,UAAU,KAClB;AAAA,YAAC;AAAA;AAAA,cACC,OAAO;AAAA,gBACL,SAAS;AAAA,cACX;AAAA,cACA,SACE,CAAC,WACG,MACE,6BAA6B,SAAS,SAAS,EAAE,IACnD,MAAM,eAAe;AAAA,cAE3B,OACE,oBAAoB,SAAS,UAAU,IACnC,oBACA,GAAG;AAAA,cAGT;AAAA,gBAAC;AAAA;AAAA,kBACC,MAAM;AAAA,kBACN,OAAO;AAAA,oBACL,UAAU;AAAA,oBACV,YAAY;AAAA,kBACd;AAAA,kBAEA;AAAA;AAAA,sBAAC;AAAA;AAAA,wBACC,OAAM;AAAA,wBACN,KAAK,GAAG,UAAU,SAAS,SAAS;AAAA,wBACpC,MAAM;AAAA;AAAA,sBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA;AAAA,oBACA;AAAA,sBAACA;AAAA,sBAAA;AAAA,wBACC,OAAO;AAAA,0BACL,YAAY;AAAA,wBACd;AAAA,wBAEC,mBAAS,SAAS,SAAS,MAAM,eAAe;AAAA;AAAA,sBALnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAmBA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAoCA,KAtCJ;AAAA;AAAA;AAAA;AAAA,iBAwCA;AAAA;AAAA,QA5CK,SAAS;AAAA,QADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA8CA,CACD;AAAA,MACF,mBAAmB,gBAAgB,SAAS,KAC3C;AAAA,QAAC;AAAA;AAAA,UACC,OAAK;AAAA,UACL,MAAM;AAAA,UACN,cAAc,CAAC,WAAW,cAAc,MAAM,eAAe;AAAA,UAC7D,gBAAgB,CAAC,UAAqB;AACpC,mBACE;AAAA,cAAC;AAAA;AAAA,gBACC,MAAM;AAAA,gBACN,kBACE,CAAC,WAAW,+BAA+B;AAAA;AAAA,cAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKA;AAAA,UAEJ;AAAA,UACA,SAAS,CAAC,OAAO;AAAA,UACjB,WAAU;AAAA,UAEV,8DAAC,SACC;AAAA,YAAC;AAAA;AAAA,cACC,OAAO,GAAG;AAAA,cACV,OAAO;AAAA,gBACL,SAAS;AAAA,gBACT,QAAQ;AAAA,cACV;AAAA,cAEA,8DAAC,iBAAM,MAAM,GAAG,OAAO,EAAE,UAAU,QAAQ,GACzC;AAAA,oEAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,uBAAe;AAAA,gBACf,oDAAC,wBAAa,OAAO,EAAE,UAAU,SAAS,aAAa,EAAE,KAAzD;AAAA;AAAA;AAAA;AAAA,uBAA4D;AAAA,mBAF9D;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWA,KAZF;AAAA;AAAA;AAAA;AAAA,iBAaA;AAAA;AAAA,QA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA+BA;AAAA,SApFJ;AAAA;AAAA;AAAA;AAAA,WAsFA;AAAA,IACC,YAAY;AAAA,OAxFf;AAAA;AAAA;AAAA;AAAA,SAyFA;AAEJ;;;ACvLA,IAAAC,gBAA6D;AAmCjD,IAAAC,0BAAA;AA/BZ,IAAM,EAAE,UAAAC,UAAS,IAAI;AACrB,IAAM,EAAE,MAAAC,MAAK,IAAI;AAWV,SAAS,KAAK,OAAkB;AACrC,QAAM,EAAE,SAAS,MAAM,oBAAoB,SAAS,WAAW,WAAW,IACxE;AACF,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,WAAW,YAAY;AAC7B,QAAM,EAAE,MAAM,IAAID,UAAS;AAC3B,QAAM,EAAE,MAAM,eAAe,QAAI,0BAAW,WAAW;AACvD,QAAM,CAAC,OAAO,aAAa,IAAI,cAAM,SAAS;AAC9C,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAc,IAAI;AAC1C,QAAM,CAAC,SAAS,UAAU,QAAI;AAAA,IAC5B,QAAQ,qBAAqB,OAAO;AAAA,EACtC;AACA,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAc,IAAI;AAElD,QAAM,iBAAa;AAAA,IACjB,CAAC,aAA8B;AAC7B,YAAM,QAAQ;AAAA,QACZ,OACE,oDAAC,iBAAM,WAAU,YAAW,MAAM,GAChC;AAAA,8DAACC,OAAA,EAAM,aAAG,EAAE,iBAAiB,QAA7B;AAAA;AAAA;AAAA;AAAA,iBAAkC;AAAA,UAClC,oDAACA,OAAA,EAAM,YAAE,8BAA8B,KAAvC;AAAA;AAAA;AAAA;AAAA,iBAAyC;AAAA,aAF3C;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEF,MAAM,oDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,eAAyB;AAAA,QAC/B,QAAQ,EAAE,SAAS;AAAA,QACnB,YAAY,EAAE,QAAQ;AAAA,QACtB,cAAc;AAAA,QACd,OAAO;AACL,kBAAQ;AAAA,YACN,EAAE,IAAI,KAAK,IAAI,SAAS;AAAA,YACxB;AAAA,cACE,QAAQ;AAAA,cACR,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IACA,CAAC,MAAM,OAAO;AAAA,EAChB;AAEA,+BAAU,MAAM;AACd,QAAI,QAAQ,oBAAoB;AAC9B,iBAAW,IAAI;AACf,cAAQ,KAAK,6BAA6B,KAAK,IAAI;AAAA,IACrD;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,+BAAU,MAAM;AACd,QACE,WACA,QAAQ,QACR,QAAQ,UAAU,UAClB,QAAQ,KAAK,UACb,GAAG,QAAQ,KAAK,aAAa,GAAG,KAAK,MACrC;AACA,kBAAY,QAAQ,KAAK,SAAS,QAAQ,KAAK,SAAS,IAAI;AAC5D,UAAI,QAAQ,KAAK,MAAM;AACrB,gBAAQ,QAAQ,KAAK,IAAI;AAAA,MAC3B;AACA,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF,GAAG,CAAC,MAAM,OAAO,CAAC;AAElB,SACE;AAAA,IAAC;AAAA;AAAA,MACC,UAAU;AAAA,MACV,OAAO;AAAA,QACL,iBAAiB,MAAM;AAAA,QACvB,cAAc;AAAA;AAAA,MAEhB;AAAA,MAEA;AAAA,4DAAC,gBAAK,KAAK,IAAI,UAAQ,MACpB,oBACC,oDAAC,oBAAS,QAAM,QAAhB;AAAA;AAAA;AAAA;AAAA,eAAiB,IACf,KAAK,WAAW,KAAK,QAAQ,SAAS,IACxC,wFACG;AAAA,eAAK,QACH,MAAM,GAAG,YAAY,IAAI,MAAS,EAClC,KAAK,CAAC,GAAQ,MAAW;AACxB,gBAAI,EAAE,KAAK,EAAE;AAAI,qBAAO;AACxB,gBAAI,EAAE,KAAK,EAAE;AAAI,qBAAO;AACxB,mBAAO;AAAA,UACT,CAAC,EACA,IAAI,CAAC,WACJ;AAAA,YAAC;AAAA;AAAA,cACC,QAAQ;AAAA,cAER,OAAO,EAAE,YAAY,SAAS;AAAA,cAC9B,MAAM;AAAA,cAEN;AAAA,oEAAC,eAAI,MAAK,QACN,iBAAO,sBACP,OAAO,mBAAmB,CAAC,KAC7B,GAAG,OAAO,SAAS,GAAG,aACpB;AAAA,kBAAC;AAAA;AAAA,oBACC,OAAO,EAAE,OAAO,WAAW,UAAU,GAAG;AAAA;AAAA,kBAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEA,IAEA;AAAA,kBAAC;AAAA;AAAA,oBACC,OAAO;AAAA,sBACL,OAAO;AAAA,sBACP,QAAQ;AAAA,sBACR,QAAQ,aAAa,MAAM;AAAA,sBAC3B,cAAc;AAAA,sBACd,QAAQ,WAAW,YAAY;AAAA,oBACjC;AAAA,oBACA,SACE,WACI,SACA,OACA,UACE,UACA,MAAM,WAAW,OAAO,EAAE,IAC5B,MAAM,eAAe;AAAA;AAAA,kBAf7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAiBA,KAzBJ;AAAA;AAAA;AAAA;AAAA,uBA2BA;AAAA,gBACA,oDAAC,eAAI,MAAK,QACR;AAAA,kBAAC;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKI,OAAO,sBACP,OAAO,mBAAmB,CAAC,KAC3B,GAAG,OAAO,SAAS,GAAG,eAAe;AAAA,wBACrC,iBAAiB;AAAA,sBACnB;AAAA;AAAA,oBAEF,WAAW;AAAA,sBACT,SAAS;AAAA,oBACX;AAAA,oBAEA;AAAA,sBAACA;AAAA,sBAAA;AAAA,wBACC,OAAO;AAAA,0BACL,SAAS;AAAA,0BACT,UAAU;AAAA,0BACV,cAAc;AAAA,0BACd,YAAY;AAAA,0BACZ,OACG,OAAO,sBACN,OAAO,mBAAmB,CAAC,KAC7B,GAAG,OAAO,SAAS,GAAG,aAClB,SACA;AAAA,wBACR;AAAA,wBAEC,iBAAO;AAAA;AAAA,sBAdV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAeA;AAAA;AAAA,kBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAgCA,KAjCF;AAAA;AAAA;AAAA;AAAA,uBAkCA;AAAA,gBACA;AAAA,kBAAC;AAAA;AAAA,oBACC,MAAK;AAAA,oBACL,OAAO,EAAE,UAAU,IAAI,WAAW,SAAS;AAAA,oBAE3C,8DAACA,OAAA,EAAK,OAAO,EAAE,UAAU,QAAQ,GAAI,iBAAO,SAA5C;AAAA;AAAA;AAAA;AAAA,2BAAkD;AAAA;AAAA,kBAJpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKA;AAAA;AAAA;AAAA,YAxEK,OAAO;AAAA,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA2EA,CACD;AAAA,UACF,KAAK,QAAQ,SAAS,KAAK,cAAc,QACxC;AAAA,YAACA;AAAA,YAAA;AAAA,cACC,OAAO,EAAE,WAAW,UAAU,QAAQ,IAAK;AAAA,cAC3C,SAAS,MAAM,SAAS,cAAc,YAAY;AAAA,cAEjD,YAAE,qBAAqB;AAAA;AAAA,YAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aA5FJ;AAAA;AAAA;AAAA;AAAA,eA8FA,IAEA,oDAAC,kBAAO,MAAM,oDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,eAAe,GAAI,OAAO,EAAE,WAAW,KAArD;AAAA;AAAA;AAAA;AAAA,eAAwD,KApG5D;AAAA;AAAA;AAAA;AAAA,eAsGA;AAAA,QACC;AAAA;AAAA;AAAA,IA/GH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgHA;AAEJ;;;ACzLY,IAAAC,0BAAA;AAnBL,SAAS,aAAa,OAA0B;AACrD,QAAM,EAAE,MAAM,iBAAiB,IAAI;AACnC,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAE9B,SACE;AAAA,IAAC;AAAA;AAAA,MACC,UAAU;AAAA,MACV,WAAW;AAAA,QACT,SAAS;AAAA,QACT,OAAO;AAAA,QACP,WAAW;AAAA,QACX,UAAU;AAAA,MACZ;AAAA,MAEA,8DAAC,gBAAK,KAAK,IAAI,MAAK,QACjB,kBACC,KAAK,SAAS,KACd,KAAK,IAAI,CAAC,WACR;AAAA,QAAC;AAAA;AAAA,UAEC,OAAM;AAAA,UACN,KAAK,GAAG,UAAU,OAAO;AAAA,UACzB,MAAM;AAAA,UACN,SAAS,MAAM,iBAAiB,OAAO,EAAE;AAAA,UACzC,OAAO,EAAE,QAAQ,UAAU;AAAA;AAAA,QALtB,OAAO;AAAA,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,CACD,KAZL;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA;AAAA,IAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBA;AAEJ;;;ANlCA,IAAAC,iBAAoC;AA2F5B,IAAAC,0BAAA;AA1FR,IAAM,EAAE,MAAAC,MAAK,IAAI;AAgBV,SAAS,oBAAoB,OAAiC;AACnE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,EAAE,EAAE,IAAI,eAAe;AAC7B,QAAM,WAAW,YAAY;AAC7B,QAAM,CAAC,MAAM,OAAO,QAAI,yBAAc,IAAI;AAC1C,QAAM,UAAU,WAAW;AAC3B,QAAM,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAC9B,MAAI,QAAQ,CAAC;AACb,MAAI,MAAM;AACR,YAAQ,KAAK,KAAK,CAAC,GAAQ,MAAW,EAAE,KAAK,EAAE,EAAE;AAAA,EACnD;AAEA,QAAM,0BAA0B,CAAC,SAAc;AAC7C,QAAI,CAAC;AAAM,aAAO;AAElB,UAAM,iBAAa,aAAAC,SAAM,EAAE,SAAK,aAAAA,SAAM,IAAI,GAAG,OAAO;AACpD,QAAI,cAAc,IAAI;AACpB,aAAO,EAAE,MAAM,QAAQ,WAAO,aAAAA,SAAM,EAAE,SAAK,aAAAA,SAAM,IAAI,GAAG,MAAM,EAAE;AAAA,IAClE,WAAW,cAAc,GAAG;AAC1B,aAAO,EAAE,MAAM,SAAS,OAAO,WAAW;AAAA,IAC5C,OAAO;AACL,YAAM,eAAW,aAAAA,SAAM,EAAE,SAAK,aAAAA,SAAM,IAAI,GAAG,KAAK;AAChD,UAAI,YAAY,GAAG;AACjB,eAAO,EAAE,MAAM,OAAO,OAAO,SAAS;AAAA,MACxC,OAAO;AACL,cAAM,gBAAY,aAAAA,SAAM,EAAE,SAAK,aAAAA,SAAM,IAAI,GAAG,MAAM;AAClD,YAAI,aAAa,GAAG;AAClB,iBAAO,EAAE,MAAM,QAAQ,OAAO,UAAU;AAAA,QAC1C,OAAO;AACL,gBAAM,kBAAc,aAAAA,SAAM,EAAE,SAAK,aAAAA,SAAM,IAAI,GAAG,QAAQ;AACtD,cAAI,eAAe,GAAG;AACpB,mBAAO,EAAE,MAAM,UAAU,OAAO,YAAY;AAAA,UAC9C,OAAO;AACL,kBAAM,kBAAc,aAAAA,SAAM,EAAE,SAAK,aAAAA,SAAM,IAAI,GAAG,QAAQ;AACtD,mBAAO,EAAE,MAAM,UAAU,OAAO,YAAY;AAAA,UAC9C;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,QAAM,aAAa,CAAC,MAAW;AAC7B,aAAS,UAAU,UAAU;AAAA,EAC/B;AAEA,gCAAU,MAAM;AACd,QAAI,WAAW;AACb,cAAQ,wBAAwB,SAAS,CAAC;AAAA,IAC5C;AAAA,EACF,GAAG,CAAC,SAAS,CAAC;AAEd,SACE,oDAAC,iBAAM,MAAM,IACX;AAAA;AAAA,MAAC;AAAA;AAAA,QACC,OAAO;AAAA,UACL,SAAS;AAAA,UACT,iBAAiB,OAAO;AAAA;AAAA,UAExB,gBAAgB;AAAA,UAChB,oBAAoB;AAAA,QACtB;AAAA,QAEA;AAAA,UAAC;AAAA;AAAA,YACC,KACE,gBAAgB,CAAC,YACb,eACA;AAAA,YAEN,MAAM;AAAA,YACN,SAAS,YAAY,CAAC,YAAY,aAAa;AAAA,YAC/C,OAAO,EAAE,QAAQ,YAAY,CAAC,YAAY,YAAY,UAAU;AAAA;AAAA,UARlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA;AAAA;AAAA,MAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmBA;AAAA,IACA,oDAAC,iBAAM,WAAU,YAAW,MAAM,GAChC;AAAA,0DAAC,iBAAM,MAAM,IACX;AAAA;AAAA,UAACD;AAAA,UAAA;AAAA,YACC,OAAO;AAAA,cACL,YAAY;AAAA,cACZ,QAAQ,YAAY,CAAC,YAAY,YAAY;AAAA,YAC/C;AAAA,YACA,SAAS,YAAY,CAAC,YAAY,aAAa;AAAA,YAE9C,sBAAY,EAAE,WAAW,IAAI;AAAA;AAAA,UAPhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA;AAAA,QACC,WAAW,CAAC,aACX;AAAA,UAAC;AAAA;AAAA,YACC,OAAO,EAAE,QAAQ,GAAG,YAAY,QAAQ,UAAU,GAAG;AAAA,YACrD,OAAM;AAAA,YAEL,YAAE,OAAO;AAAA;AAAA,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QAED,CAAC,aACA,wFACG;AAAA,wBAAc,SAAS,MAAM,SAAS,KACrC,oDAAC,mBAAQ,WAAU,OAAM,OAAO,OAAO,OAAO,EAAE,UAAU,GACxD,8DAAC,SACC;AAAA,YAAC;AAAA;AAAA,cACC,OAAO;AAAA,cACP,KAAI;AAAA,cACJ,SAAS;AAAA;AAAA,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIA,KALF;AAAA;AAAA;AAAA;AAAA,iBAMA,KAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UAED,SAAS,MAAM,SAAS,KACvB,oDAAC,mBAAQ,WAAU,OAAM,OAAO,OAAO,OAAO,EAAE,MAAM,CAAC,EAAE,IAAI,GAC3D,8DAAC,SACC;AAAA,YAAC;AAAA;AAAA,cACC,OAAO;AAAA,cACP,KAAK,GAAG,UAAU,MAAM,CAAC,EAAE;AAAA,cAC3B,SAAS;AAAA;AAAA,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIA,KALF;AAAA;AAAA;AAAA;AAAA,iBAMA,KAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,aArBJ;AAAA;AAAA;AAAA;AAAA,eAuBA;AAAA,WA1CJ;AAAA;AAAA;AAAA;AAAA,aA4CA;AAAA,MACC,QACC,oDAAC,iBAAM,MAAM,MACV;AAAA,eACC,oDAACA,OAAA,EAAM,aAAG,KAAK,SAAS,EAAE,GAAG,KAAK,WAAW,OAA7C;AAAA;AAAA;AAAA;AAAA,eAAiD,IAEjD;AAAA,UAAC;AAAA;AAAA,YACC,WAAW,EAAE,OAAO,IAAI,MAAM,GAAG,OAAO,EAAE,QAAQ,EAAE,EAAE;AAAA,YACtD,OAAO;AAAA,YACP,QAAM;AAAA;AAAA,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIA;AAAA,QAED,aAAa,aAAa,cAAc,aACvC,oDAAC,SAAM,aAAY,MACjB,8DAAC,iBACC;AAAA,8DAAC,UAAK,oBAAN;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA,UACZ,oDAACA,OAAA,EAAK,OAAO,EAAE,SAAS,IAAI,GAAI,aAAG;AAAA,YACjC,YAAY,eAAe;AAAA,UAC7B,SAAK,aAAAC,SAAM,YAAY,YAAY,SAAS,EAAE;AAAA,YAC5C;AAAA,UACF,OAJA;AAAA;AAAA;AAAA;AAAA,iBAII;AAAA,aANN;AAAA;AAAA;AAAA;AAAA,eAOA,KARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WApBJ;AAAA;AAAA;AAAA;AAAA,aAsBA;AAAA,SArEJ;AAAA;AAAA;AAAA;AAAA,WAuEA;AAAA,OA5FF;AAAA;AAAA;AAAA;AAAA,SA6FA;AAEJ;",
  "names": ["import_react", "import_jsx_dev_runtime", "Text", "import_jsx_dev_runtime", "Text", "import_react", "import_jsx_dev_runtime", "Text", "import_react", "import_jsx_dev_runtime", "useToken", "Text", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "Text", "dayjs"]
}
