{
  "version": 3,
  "sources": ["../../../app/utils/helper.tsx"],
  "sourcesContent": ["import dayjs from \"dayjs\";\nimport { isDate, isNumber } from \"lodash\";\n\nexport function renderData(data: any, key: string, locale: string) {\n  return locale === \"en\" && data[`${key}En`] ? data[`${key}En`] : data[key];\n}\n\nexport const resetFetcher = (fetcher: any) => {\n  fetcher.load(\"/resources/reset-fetcher\");\n};\n\nexport const isPermalink = (value: string) => {\n  return value.indexOf(\"http\") === 0;\n};\n\nexport const randomChance = (percentage: number) => {\n  const randomValue = Math.random();\n  const threshold = percentage / 100;\n  return randomValue < threshold;\n};\n\nexport const randomRarity = () => {\n  let output = \"NORMAL\";\n  const randomValue = Math.random() * 100;\n\n  if (randomValue < 80) {\n    output = \"NORMAL\";\n  } else if (randomValue < 99.65) {\n    output = \"RARE\";\n  } else if (randomValue < 99.95) {\n    output = \"SUPER_RARE\";\n  } else {\n    output = \"ULTRA_RARE\";\n  }\n  return output;\n};\n\nexport const getRandomInt = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n};\nexport const getProperTimeDifference = (date: any) => {\n  if (!date) return null;\n\n  const diffMonths = dayjs().diff(dayjs(date), \"month\");\n  if (diffMonths >= 12) {\n    return { unit: \"year\", value: dayjs().diff(dayjs(date), \"year\") };\n  } else if (diffMonths >= 1) {\n    return { unit: \"month\", value: diffMonths };\n  } else {\n    const diffDays = dayjs().diff(dayjs(date), \"day\");\n    if (diffDays >= 1) {\n      return { unit: \"day\", value: diffDays };\n    } else {\n      const diffHours = dayjs().diff(dayjs(date), \"hour\");\n      if (diffHours >= 1) {\n        return { unit: \"hour\", value: diffHours };\n      } else {\n        const diffMinutes = dayjs().diff(dayjs(date), \"minute\");\n        if (diffMinutes >= 1) {\n          return { unit: \"minute\", value: diffMinutes };\n        } else {\n          const diffSeconds = dayjs().diff(dayjs(date), \"second\");\n          return { unit: \"second\", value: diffSeconds };\n        }\n      }\n    }\n  }\n};\n\nexport const convertToObjectWithArrays = (data: any, arrayKeys?: string[]) => {\n  const isNumeric = (value: string | number) => isNumber(value);\n\n  return Object.entries(data).reduce((acc: any, [key, value]: any) => {\n    if (arrayKeys && arrayKeys.includes(key)) {\n      const values = value.split(\",\");\n      if (values.every(isNumeric)) {\n        acc[key] = values.map(Number);\n      } else {\n        acc[key] = values;\n      }\n    } else {\n      acc[key] = value;\n    }\n\n    return acc;\n  }, {});\n};\n\nexport function checkCitizenId(id: string) {\n  let i;\n  let sum;\n  if (id.length !== 13) {\n    return false;\n  }\n\n  if (id.substring(0, 1) === \"0\") {\n    return false;\n  }\n\n  for (i = 0, sum = 0; i < 12; i++) {\n    sum += parseFloat(id.charAt(i)) * (13 - i);\n  }\n\n  if ((11 - (sum % 11)) % 10 != parseFloat(id.charAt(12))) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isEmail(email: string) {\n  var re = /\\S+@\\S+\\.\\S+/;\n  return re.test(email);\n}\n\nexport function isPhone(phone: string) {\n  return phone.length == 10 && phone.substring(0, 1) == \"0\";\n}\n\nexport function hasStartEndEmptySpace(value: string) {\n  return value.charAt(0) === \" \" && value.charAt(value.length - 1) === \" \";\n}\n\nexport function validateBirthYear(value: any) {\n  return dayjs().year() - dayjs(value).year() >= 10;\n}\n\nexport function validatePassword(password: string, confirmPassword?: string) {\n  const hasUpperCase = password ? password.toLowerCase() !== password : false;\n  const hasLowerCase = password ? password.toUpperCase() !== password : false;\n  const hasNumber = password ? /\\d/.test(password) : false;\n  const hasSpecialCharacter = password\n    ? /[~`!@#$%\\_^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(password)\n    : false;\n  const hasLeast8 = password ? password.length >= 8 : false;\n  if (confirmPassword) {\n    const passwordMatch =\n      password && confirmPassword ? password === confirmPassword : false;\n    return {\n      hasUpperCase,\n      hasLowerCase,\n      hasNumber,\n      hasSpecialCharacter,\n      hasLeast8,\n      passwordMatch,\n      total:\n        hasUpperCase &&\n        hasLowerCase &&\n        hasNumber &&\n        hasSpecialCharacter &&\n        hasLeast8 &&\n        passwordMatch,\n    };\n  } else {\n    return {\n      hasUpperCase,\n      hasLowerCase,\n      hasNumber,\n      hasSpecialCharacter,\n      hasLeast8,\n      total:\n        hasUpperCase &&\n        hasLowerCase &&\n        hasNumber &&\n        hasSpecialCharacter &&\n        hasLeast8,\n    };\n  }\n}\n\nfunction isDateString(value: string) {\n  const datePattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3}Z)?$/;\n  return datePattern.test(value);\n}\n\nexport function flattenObject(obj: any, prefix: string[] = []) {\n  const flatObj: any = {};\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const isArray = Array.isArray(obj);\n      const newPrefix = isArray\n        ? [...prefix, `[${key}]`]\n        : prefix.length === 0\n        ? [key]\n        : [...prefix, `[\"${key}\"]`];\n\n      if (typeof obj[key] === \"object\" && obj[key] !== null) {\n        Object.assign(flatObj, flattenObject(obj[key], newPrefix));\n      } else {\n        // Convert date strings to dayjs objects\n        const flattenedKey = newPrefix.join(\"\");\n        if (typeof obj[key] === \"string\" && isDateString(obj[key])) {\n          flatObj[flattenedKey] = dayjs(obj[key]);\n        } else {\n          flatObj[flattenedKey] = obj[key];\n        }\n      }\n    }\n  }\n\n  return flatObj;\n}\n\nexport function unflattenObject(flattened: any) {\n  const result: any = {};\n\n  Object.keys(flattened).map((key: string) => {\n    if (flattened.hasOwnProperty(key)) {\n      const keys = key\n        .split(\"[\")\n        .map((k) => k.replace(/[\\]\"]/g, \"\").replace(/^\"/, \"\"));\n      let current = result;\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const subKey = keys[i];\n        if (!isNaN(parseInt(keys[i + 1]))) {\n          current[subKey] = current[subKey] || [];\n        } else {\n          current[subKey] = current[subKey] || {};\n        }\n        current = current[subKey];\n      }\n\n      current[keys[keys.length - 1]] = flattened[key];\n    }\n  });\n\n  return result;\n}\n\nexport function parseAndConvert(jsonObj: any) {\n  const parsedObject: any = {};\n\n  for (let key in jsonObj) {\n    const value = jsonObj[key] as any;\n\n    // If value is an array\n    // if (Array.isArray(value)) {\n    //   parsedObject[key] = value.map((item: any) => {\n    //     if (\n    //       typeof item === \"string\" &&\n    //       !isNaN(parseInt(item)) &&\n    //       !looksLikeDate(item)\n    //     ) {\n    //       return parseFloat(item);\n    //     }\n    //     return item;\n    //   });\n    // }\n\n    // if (Array.isArray(value)) {\n    //   parsedObject[key] = value.map((item: any) => {\n    //     if (\n    //       typeof item === \"string\" &&\n    //       !isNaN(parseInt(item)) &&\n    //       !isDate(item) &&\n    //       !isDateString(item)\n    //     ) {\n    //       return parseFloat(item);\n    //     }\n    //     return item;\n    //   });\n    // }\n    // If value is a string and can be parsed as a number\n    if (\n      typeof value === \"string\" &&\n      !isNaN(parseInt(value)) &&\n      !isDate(value) &&\n      !isDateString(value)\n    ) {\n      parsedObject[key] = parseFloat(value);\n    }\n    // All other cases\n    else {\n      parsedObject[key] = value;\n    }\n  }\n\n  return parsedObject;\n}\n\nexport function joinTournaments(allTournaments: any, joinedTournaments: any) {\n  // Loop through allTournaments\n  allTournaments.forEach((tournament: any) => {\n    // Check if the tournament id exists in joinedTournaments\n    const joinedTournament = joinedTournaments.find(\n      (joined: any) => joined.id === tournament.id\n    );\n    // If a matching tournament is found, change its status to 'joined'\n    if (joinedTournament && tournament.status === \"opening\") {\n      tournament.status = \"joined\";\n    }\n  });\n  // Return the modified allTournaments array\n  return allTournaments;\n}\n\nexport function adjustTranslateValues(\n  rootElement: HTMLElement,\n  originalWidth: number,\n  originalHeight: number,\n  targetWidth: number,\n  targetHeight: number\n) {\n  const processElement = (element: HTMLElement) => {\n    const style = element.style;\n\n    // Check if the element has a transform property\n    if (style.transform) {\n      // Find the translate part of the transform property\n      const translateRegex = /translate\\(([^,]+),\\s*([^)]+)\\)/;\n      const translateMatch = style.transform.match(translateRegex);\n      if (translateMatch) {\n        const translateX = parseFloat(translateMatch[1]);\n        const translateY = parseFloat(translateMatch[2]);\n\n        // Calculate the new translate values\n        const newTranslateX = (translateX / originalWidth) * targetWidth;\n        const newTranslateY = (translateY / originalHeight) * targetHeight; // Assuming Y doesn't change\n\n        // Replace the old translate values with the new ones\n        const newTranslate = `translate(${newTranslateX}px, ${newTranslateY}px)`;\n        style.transform = style.transform.replace(translateRegex, newTranslate);\n      }\n    }\n\n    // Process child elements\n    Array.from(element.children).forEach((child) =>\n      processElement(child as HTMLElement)\n    );\n  };\n\n  // Start processing from the root element\n  processElement(rootElement);\n}\n"],
  "mappings": "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",
  "names": ["dayjs"]
}
